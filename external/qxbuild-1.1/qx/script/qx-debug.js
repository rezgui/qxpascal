(function(){

if (!window.qx) window.qx = {};

qx.$$start = new Date();
  
if (!window.qxsettings) qxsettings = {};
var settings = {"qx.version":"1.1"};
for (var k in settings) qxsettings[k] = settings[k];

if (!window.qxvariants) qxvariants = {};
var variants = {"qx.aspects":"on","qx.debug":"on","qx.dynlocale":"off"};
for (var k in variants) qxvariants[k] = variants[k];

if (!qx.$$libraries) qx.$$libraries = {};
var libinfo = {"__out__":{"sourceUri":qxsettings["qx.path"] + "/script"},"qx":{"resourceUri":qxsettings["qx.path"] + "/resource","sourceUri":qxsettings["qx.path"] + "/script","version":"1.2-pre"}};
for (var k in libinfo) qx.$$libraries[k] = libinfo[k];

qx.$$resources = {};
qx.$$translations = {};
qx.$$locales = {};
qx.$$packageData = {};

qx.$$loader = {
  parts : {"boot":[0]},
  uris : [["__out__:qx-debug.js"]],
  urisBefore : [],
  packageHashes : {"0":"d53f7d2e81b5"},
  boot : "boot",
  closureParts : {},
  bootIsInline : true,
  
  decodeUris : function(compressedUris)
  {
    var libs = qx.$$libraries;
    var uris = [];
    for (var i=0; i<compressedUris.length; i++)
    {
      var uri = compressedUris[i].split(":");
      var euri;
      if (uri.length==2 && uri[0] in libs) {
        var prefix = libs[uri[0]].sourceUri;
        euri = prefix + "/" + uri[1];
      } else {
        euri = compressedUris[i];
      }
      
      uris.push(euri);
    }
    return uris;      
  }
};  

function loadScript(uri, callback) {
  var elem = document.createElement("script");
  elem.charset = "utf-8";
  elem.src = uri;
  elem.onreadystatechange = elem.onload = function()
  {
    if (!this.readyState || this.readyState == "loaded" || this.readyState == "complete")
    {
      elem.onreadystatechange = elem.onload = null;
      callback();
    }
  };
  var head = document.getElementsByTagName("head")[0];
  head.appendChild(elem);
}

var isWebkit = /AppleWebKit\/([^ ]+)/.test(navigator.userAgent);

function loadScriptList(list, callback) {
  if (list.length == 0) {
    callback();
    return;
  }
  loadScript(list.shift(), function() {
    if (isWebkit) {
      // force asynchronous load
      // Safari fails with an "maximum recursion depth exceeded" error if it is
      // called sync.      
      window.setTimeout(function() {
        loadScriptList(list, callback);
      }, 0);
    } else {
      loadScriptList(list, callback);
    }
  });
}

var fireContentLoadedEvent = function() {
  qx.$$domReady = true;
  document.removeEventListener('DOMContentLoaded', fireContentLoadedEvent, false);
};
if (document.addEventListener) {
  document.addEventListener('DOMContentLoaded', fireContentLoadedEvent, false);
}

qx.$$loader.importPackageData = function (dataMap) {
  if (dataMap["resources"]){
    var resMap = dataMap["resources"];
    for (var k in resMap) qx.$$resources[k] = resMap[k];
  }
  if (dataMap["locales"]){
    var locMap = dataMap["locales"];
    var qxlocs = qx.$$locales;
    for (var lang in locMap){
      if (!qxlocs[lang]) qxlocs[lang] = locMap[lang];
      else 
        for (var k in locMap[lang]) qxlocs[lang][k] = locMap[lang][k];
    }
  }
  if (dataMap["translations"]){
    var trMap   = dataMap["translations"];
    var qxtrans = qx.$$translations;
    for (var lang in trMap){
      if (!qxtrans[lang]) qxtrans[lang] = trMap[lang];
      else 
        for (var k in trMap[lang]) qxtrans[lang][k] = trMap[lang][k];
    }
  }
}

qx.$$loader.signalStartup = function () 
{
  qx.$$loader.scriptLoaded = true;
  if (window.qx && qx.event && qx.event.handler && qx.event.handler.Application) ;
}

qx.$$loader.init = function(){
  var l=qx.$$loader;
  if (l.urisBefore.length>0){
    loadScriptList(l.urisBefore, function(){return;});
  }
  var bootPackageHash=l.packageHashes[l.parts[l.boot][0]];
  if (l.bootIsInline){
    l.importPackageData(qx.$$packageData[bootPackageHash]);
    l.signalStartup();
  } else {
    loadScriptList(l.decodeUris(l.uris[l.parts[l.boot]]), function(){
      // Opera needs this extra time to parse the scripts
      window.setTimeout(function(){
        l.importPackageData(qx.$$packageData[bootPackageHash] || {});
        l.signalStartup();
      }, 0);
    });
  }
}
})();

qx.$$packageData['d53f7d2e81b5']={"locales":{"C":{"alternateQuotationEnd":"’","alternateQuotationStart":"‘","cldr_am":"AM","cldr_date_format_full":"EEEE, MMMM d, y","cldr_date_format_long":"MMMM d, y","cldr_date_format_medium":"MMM d, y","cldr_date_format_short":"M/d/yy","cldr_date_time_format_EEEd":"d EEE","cldr_date_time_format_Hm":"H:mm","cldr_date_time_format_Hms":"H:mm:ss","cldr_date_time_format_M":"L","cldr_date_time_format_MEd":"E, M/d","cldr_date_time_format_MMM":"LLL","cldr_date_time_format_MMMEd":"E, MMM d","cldr_date_time_format_MMMMEd":"E, MMMM d","cldr_date_time_format_MMMMd":"MMMM d","cldr_date_time_format_MMMd":"MMM d","cldr_date_time_format_Md":"M/d","cldr_date_time_format_d":"d","cldr_date_time_format_hm":"h:mm a","cldr_date_time_format_ms":"mm:ss","cldr_date_time_format_y":"y","cldr_date_time_format_yM":"M/yyyy","cldr_date_time_format_yMEd":"EEE, M/d/yyyy","cldr_date_time_format_yMMM":"MMM y","cldr_date_time_format_yMMMEd":"EEE, MMM d, y","cldr_date_time_format_yMMMM":"MMMM y","cldr_date_time_format_yQ":"Q yyyy","cldr_date_time_format_yQQQ":"QQQ y","cldr_day_format_abbreviated_fri":"Fri","cldr_day_format_abbreviated_mon":"Mon","cldr_day_format_abbreviated_sat":"Sat","cldr_day_format_abbreviated_sun":"Sun","cldr_day_format_abbreviated_thu":"Thu","cldr_day_format_abbreviated_tue":"Tue","cldr_day_format_abbreviated_wed":"Wed","cldr_day_format_narrow_fri":"F","cldr_day_format_narrow_mon":"M","cldr_day_format_narrow_sat":"S","cldr_day_format_narrow_sun":"S","cldr_day_format_narrow_thu":"T","cldr_day_format_narrow_tue":"T","cldr_day_format_narrow_wed":"W","cldr_day_format_wide_fri":"Friday","cldr_day_format_wide_mon":"Monday","cldr_day_format_wide_sat":"Saturday","cldr_day_format_wide_sun":"Sunday","cldr_day_format_wide_thu":"Thursday","cldr_day_format_wide_tue":"Tuesday","cldr_day_format_wide_wed":"Wednesday","cldr_day_stand-alone_abbreviated_fri":"Fri","cldr_day_stand-alone_abbreviated_mon":"Mon","cldr_day_stand-alone_abbreviated_sat":"Sat","cldr_day_stand-alone_abbreviated_sun":"Sun","cldr_day_stand-alone_abbreviated_thu":"Thu","cldr_day_stand-alone_abbreviated_tue":"Tue","cldr_day_stand-alone_abbreviated_wed":"Wed","cldr_day_stand-alone_narrow_fri":"F","cldr_day_stand-alone_narrow_mon":"M","cldr_day_stand-alone_narrow_sat":"S","cldr_day_stand-alone_narrow_sun":"S","cldr_day_stand-alone_narrow_thu":"T","cldr_day_stand-alone_narrow_tue":"T","cldr_day_stand-alone_narrow_wed":"W","cldr_day_stand-alone_wide_fri":"Friday","cldr_day_stand-alone_wide_mon":"Monday","cldr_day_stand-alone_wide_sat":"Saturday","cldr_day_stand-alone_wide_sun":"Sunday","cldr_day_stand-alone_wide_thu":"Thursday","cldr_day_stand-alone_wide_tue":"Tuesday","cldr_day_stand-alone_wide_wed":"Wednesday","cldr_month_format_abbreviated_1":"Jan","cldr_month_format_abbreviated_10":"Oct","cldr_month_format_abbreviated_11":"Nov","cldr_month_format_abbreviated_12":"Dec","cldr_month_format_abbreviated_2":"Feb","cldr_month_format_abbreviated_3":"Mar","cldr_month_format_abbreviated_4":"Apr","cldr_month_format_abbreviated_5":"May","cldr_month_format_abbreviated_6":"Jun","cldr_month_format_abbreviated_7":"Jul","cldr_month_format_abbreviated_8":"Aug","cldr_month_format_abbreviated_9":"Sep","cldr_month_format_wide_1":"January","cldr_month_format_wide_10":"October","cldr_month_format_wide_11":"November","cldr_month_format_wide_12":"December","cldr_month_format_wide_2":"February","cldr_month_format_wide_3":"March","cldr_month_format_wide_4":"April","cldr_month_format_wide_5":"May","cldr_month_format_wide_6":"June","cldr_month_format_wide_7":"July","cldr_month_format_wide_8":"August","cldr_month_format_wide_9":"September","cldr_month_stand-alone_narrow_1":"J","cldr_month_stand-alone_narrow_10":"O","cldr_month_stand-alone_narrow_11":"N","cldr_month_stand-alone_narrow_12":"D","cldr_month_stand-alone_narrow_2":"F","cldr_month_stand-alone_narrow_3":"M","cldr_month_stand-alone_narrow_4":"A","cldr_month_stand-alone_narrow_5":"M","cldr_month_stand-alone_narrow_6":"J","cldr_month_stand-alone_narrow_7":"J","cldr_month_stand-alone_narrow_8":"A","cldr_month_stand-alone_narrow_9":"S","cldr_number_decimal_separator":".","cldr_number_group_separator":",","cldr_number_percent_format":"#,##0%","cldr_pm":"PM","cldr_time_format_full":"h:mm:ss a zzzz","cldr_time_format_long":"h:mm:ss a z","cldr_time_format_medium":"h:mm:ss a","cldr_time_format_short":"h:mm a","quotationEnd":"”","quotationStart":"“"},"en":{"alternateQuotationEnd":"’","alternateQuotationStart":"‘","cldr_am":"AM","cldr_date_format_full":"EEEE, MMMM d, y","cldr_date_format_long":"MMMM d, y","cldr_date_format_medium":"MMM d, y","cldr_date_format_short":"M/d/yy","cldr_date_time_format_EEEd":"d EEE","cldr_date_time_format_Hm":"H:mm","cldr_date_time_format_Hms":"H:mm:ss","cldr_date_time_format_M":"L","cldr_date_time_format_MEd":"E, M/d","cldr_date_time_format_MMM":"LLL","cldr_date_time_format_MMMEd":"E, MMM d","cldr_date_time_format_MMMMEd":"E, MMMM d","cldr_date_time_format_MMMMd":"MMMM d","cldr_date_time_format_MMMd":"MMM d","cldr_date_time_format_Md":"M/d","cldr_date_time_format_d":"d","cldr_date_time_format_hm":"h:mm a","cldr_date_time_format_ms":"mm:ss","cldr_date_time_format_y":"y","cldr_date_time_format_yM":"M/yyyy","cldr_date_time_format_yMEd":"EEE, M/d/yyyy","cldr_date_time_format_yMMM":"MMM y","cldr_date_time_format_yMMMEd":"EEE, MMM d, y","cldr_date_time_format_yMMMM":"MMMM y","cldr_date_time_format_yQ":"Q yyyy","cldr_date_time_format_yQQQ":"QQQ y","cldr_day_format_abbreviated_fri":"Fri","cldr_day_format_abbreviated_mon":"Mon","cldr_day_format_abbreviated_sat":"Sat","cldr_day_format_abbreviated_sun":"Sun","cldr_day_format_abbreviated_thu":"Thu","cldr_day_format_abbreviated_tue":"Tue","cldr_day_format_abbreviated_wed":"Wed","cldr_day_format_narrow_fri":"F","cldr_day_format_narrow_mon":"M","cldr_day_format_narrow_sat":"S","cldr_day_format_narrow_sun":"S","cldr_day_format_narrow_thu":"T","cldr_day_format_narrow_tue":"T","cldr_day_format_narrow_wed":"W","cldr_day_format_wide_fri":"Friday","cldr_day_format_wide_mon":"Monday","cldr_day_format_wide_sat":"Saturday","cldr_day_format_wide_sun":"Sunday","cldr_day_format_wide_thu":"Thursday","cldr_day_format_wide_tue":"Tuesday","cldr_day_format_wide_wed":"Wednesday","cldr_day_stand-alone_abbreviated_fri":"Fri","cldr_day_stand-alone_abbreviated_mon":"Mon","cldr_day_stand-alone_abbreviated_sat":"Sat","cldr_day_stand-alone_abbreviated_sun":"Sun","cldr_day_stand-alone_abbreviated_thu":"Thu","cldr_day_stand-alone_abbreviated_tue":"Tue","cldr_day_stand-alone_abbreviated_wed":"Wed","cldr_day_stand-alone_narrow_fri":"F","cldr_day_stand-alone_narrow_mon":"M","cldr_day_stand-alone_narrow_sat":"S","cldr_day_stand-alone_narrow_sun":"S","cldr_day_stand-alone_narrow_thu":"T","cldr_day_stand-alone_narrow_tue":"T","cldr_day_stand-alone_narrow_wed":"W","cldr_day_stand-alone_wide_fri":"Friday","cldr_day_stand-alone_wide_mon":"Monday","cldr_day_stand-alone_wide_sat":"Saturday","cldr_day_stand-alone_wide_sun":"Sunday","cldr_day_stand-alone_wide_thu":"Thursday","cldr_day_stand-alone_wide_tue":"Tuesday","cldr_day_stand-alone_wide_wed":"Wednesday","cldr_month_format_abbreviated_1":"Jan","cldr_month_format_abbreviated_10":"Oct","cldr_month_format_abbreviated_11":"Nov","cldr_month_format_abbreviated_12":"Dec","cldr_month_format_abbreviated_2":"Feb","cldr_month_format_abbreviated_3":"Mar","cldr_month_format_abbreviated_4":"Apr","cldr_month_format_abbreviated_5":"May","cldr_month_format_abbreviated_6":"Jun","cldr_month_format_abbreviated_7":"Jul","cldr_month_format_abbreviated_8":"Aug","cldr_month_format_abbreviated_9":"Sep","cldr_month_format_wide_1":"January","cldr_month_format_wide_10":"October","cldr_month_format_wide_11":"November","cldr_month_format_wide_12":"December","cldr_month_format_wide_2":"February","cldr_month_format_wide_3":"March","cldr_month_format_wide_4":"April","cldr_month_format_wide_5":"May","cldr_month_format_wide_6":"June","cldr_month_format_wide_7":"July","cldr_month_format_wide_8":"August","cldr_month_format_wide_9":"September","cldr_month_stand-alone_narrow_1":"J","cldr_month_stand-alone_narrow_10":"O","cldr_month_stand-alone_narrow_11":"N","cldr_month_stand-alone_narrow_12":"D","cldr_month_stand-alone_narrow_2":"F","cldr_month_stand-alone_narrow_3":"M","cldr_month_stand-alone_narrow_4":"A","cldr_month_stand-alone_narrow_5":"M","cldr_month_stand-alone_narrow_6":"J","cldr_month_stand-alone_narrow_7":"J","cldr_month_stand-alone_narrow_8":"A","cldr_month_stand-alone_narrow_9":"S","cldr_number_decimal_separator":".","cldr_number_group_separator":",","cldr_number_percent_format":"#,##0%","cldr_pm":"PM","cldr_time_format_full":"h:mm:ss a zzzz","cldr_time_format_long":"h:mm:ss a z","cldr_time_format_medium":"h:mm:ss a","cldr_time_format_short":"h:mm a","quotationEnd":"”","quotationStart":"“"}},"resources":{"qx/decoration/Classic/arrows-combined.gif":[124,7,"gif","qx"],"qx/decoration/Classic/arrows/down-invert.gif":[7,4,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-38,0],"qx/decoration/Classic/arrows/down-small-invert.gif":[5,3,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-87,0],"qx/decoration/Classic/arrows/down-small.gif":[5,3,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-53,0],"qx/decoration/Classic/arrows/down.gif":[7,4,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-113,0],"qx/decoration/Classic/arrows/forward-invert.gif":[8,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-30,0],"qx/decoration/Classic/arrows/forward.gif":[8,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-18,0],"qx/decoration/Classic/arrows/left-invert.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-92,0],"qx/decoration/Classic/arrows/left-small-invert.gif":[3,5,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-58,0],"qx/decoration/Classic/arrows/left-small.gif":[3,5,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-15,0],"qx/decoration/Classic/arrows/left.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-120,0],"qx/decoration/Classic/arrows/next-invert.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-80,0],"qx/decoration/Classic/arrows/next.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-109,0],"qx/decoration/Classic/arrows/previous-invert.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-69,0],"qx/decoration/Classic/arrows/previous.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-65,0],"qx/decoration/Classic/arrows/rewind-invert.gif":[8,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-45,0],"qx/decoration/Classic/arrows/rewind.gif":[8,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-101,0],"qx/decoration/Classic/arrows/right-invert.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-61,0],"qx/decoration/Classic/arrows/right-small-invert.gif":[3,5,"gif","qx","qx/decoration/Classic/arrows-combined.gif",0,0],"qx/decoration/Classic/arrows/right-small.gif":[3,5,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-84,0],"qx/decoration/Classic/arrows/right.gif":[4,7,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-26,0],"qx/decoration/Classic/arrows/up-invert.gif":[7,4,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-73,0],"qx/decoration/Classic/arrows/up-small-invert.gif":[5,3,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-96,0],"qx/decoration/Classic/arrows/up-small.gif":[5,3,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-3,0],"qx/decoration/Classic/arrows/up.gif":[7,4,"gif","qx","qx/decoration/Classic/arrows-combined.gif",-8,0],"qx/decoration/Classic/checkbox-radiobutton-combined.png":[504,14,"png","qx"],"qx/decoration/Classic/colorselector-combined.gif":[46,11,"gif","qx"],"qx/decoration/Classic/colorselector/brightness-field.png":[19,256,"png","qx"],"qx/decoration/Classic/colorselector/brightness-handle.gif":[35,11,"gif","qx","qx/decoration/Classic/colorselector-combined.gif",-11,0],"qx/decoration/Classic/colorselector/huesaturation-field.jpg":[256,256,"jpeg","qx"],"qx/decoration/Classic/colorselector/huesaturation-handle.gif":[11,11,"gif","qx","qx/decoration/Classic/colorselector-combined.gif",0,0],"qx/decoration/Classic/cursors-combined.gif":[71,20,"gif","qx"],"qx/decoration/Classic/cursors/alias.gif":[19,15,"gif","qx","qx/decoration/Classic/cursors-combined.gif",-52,0],"qx/decoration/Classic/cursors/copy.gif":[19,15,"gif","qx","qx/decoration/Classic/cursors-combined.gif",-20,0],"qx/decoration/Classic/cursors/move.gif":[13,9,"gif","qx","qx/decoration/Classic/cursors-combined.gif",-39,0],"qx/decoration/Classic/cursors/nodrop.gif":[20,20,"gif","qx","qx/decoration/Classic/cursors-combined.gif",0,0],"qx/decoration/Classic/datechooser/last-month-invert.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/last-month.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/last-year-invert.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/last-year.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/next-month-invert.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/next-month.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/next-year-invert.png":[16,16,"png","qx"],"qx/decoration/Classic/datechooser/next-year.png":[16,16,"png","qx"],"qx/decoration/Classic/form/checkbox-checked-disabled.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-336,0],"qx/decoration/Classic/form/checkbox-checked-focused-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-28,0],"qx/decoration/Classic/form/checkbox-checked-focused.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-462,0],"qx/decoration/Classic/form/checkbox-checked-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-112,0],"qx/decoration/Classic/form/checkbox-checked-hovered.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-140,0],"qx/decoration/Classic/form/checkbox-checked-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-98,0],"qx/decoration/Classic/form/checkbox-checked-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-308,0],"qx/decoration/Classic/form/checkbox-checked-pressed.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",0,0],"qx/decoration/Classic/form/checkbox-checked.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-266,0],"qx/decoration/Classic/form/checkbox-disabled.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-84,0],"qx/decoration/Classic/form/checkbox-focused-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-476,0],"qx/decoration/Classic/form/checkbox-focused.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-392,0],"qx/decoration/Classic/form/checkbox-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-196,0],"qx/decoration/Classic/form/checkbox-hovered.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-154,0],"qx/decoration/Classic/form/checkbox-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-350,0],"qx/decoration/Classic/form/checkbox-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-448,0],"qx/decoration/Classic/form/checkbox-pressed.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-70,0],"qx/decoration/Classic/form/checkbox.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-490,0],"qx/decoration/Classic/form/radiobutton-checked-disabled.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-210,0],"qx/decoration/Classic/form/radiobutton-checked-focused-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-406,0],"qx/decoration/Classic/form/radiobutton-checked-focused.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-378,0],"qx/decoration/Classic/form/radiobutton-checked-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-252,0],"qx/decoration/Classic/form/radiobutton-checked-hovered.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-182,0],"qx/decoration/Classic/form/radiobutton-checked-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-294,0],"qx/decoration/Classic/form/radiobutton-checked-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-420,0],"qx/decoration/Classic/form/radiobutton-checked-pressed.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-56,0],"qx/decoration/Classic/form/radiobutton-checked.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-322,0],"qx/decoration/Classic/form/radiobutton-disabled.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-364,0],"qx/decoration/Classic/form/radiobutton-focused-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-434,0],"qx/decoration/Classic/form/radiobutton-focused.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-168,0],"qx/decoration/Classic/form/radiobutton-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-126,0],"qx/decoration/Classic/form/radiobutton-hovered.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-42,0],"qx/decoration/Classic/form/radiobutton-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-280,0],"qx/decoration/Classic/form/radiobutton-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-238,0],"qx/decoration/Classic/form/radiobutton-pressed.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-14,0],"qx/decoration/Classic/form/radiobutton.png":[14,14,"png","qx","qx/decoration/Classic/checkbox-radiobutton-combined.png",-224,0],"qx/decoration/Classic/menu-combined.gif":[64,7,"gif","qx"],"qx/decoration/Classic/menu/checkbox-invert.gif":[16,7,"gif","qx","qx/decoration/Classic/menu-combined.gif",-16,0],"qx/decoration/Classic/menu/checkbox.gif":[16,7,"gif","qx","qx/decoration/Classic/menu-combined.gif",-32,0],"qx/decoration/Classic/menu/radiobutton-invert.gif":[16,5,"gif","qx","qx/decoration/Classic/menu-combined.gif",0,0],"qx/decoration/Classic/menu/radiobutton.gif":[16,5,"gif","qx","qx/decoration/Classic/menu-combined.gif",-48,0],"qx/decoration/Classic/shadow-lr-combined.png":[30,382,"png","qx"],"qx/decoration/Classic/shadow-small-lr-combined.png":[10,136,"png","qx"],"qx/decoration/Classic/shadow-small-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Classic/shadow-tb-combined.png":[15,90,"png","qx"],"qx/decoration/Classic/shadow/shadow-b.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,-30],"qx/decoration/Classic/shadow/shadow-bl.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,0],"qx/decoration/Classic/shadow/shadow-br.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,-60],"qx/decoration/Classic/shadow/shadow-c.png":[40,382,"png","qx"],"qx/decoration/Classic/shadow/shadow-l.png":[15,382,"png","qx","qx/decoration/Classic/shadow-lr-combined.png",-15,0],"qx/decoration/Classic/shadow/shadow-r.png":[15,382,"png","qx","qx/decoration/Classic/shadow-lr-combined.png",0,0],"qx/decoration/Classic/shadow/shadow-small-b.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,-25],"qx/decoration/Classic/shadow/shadow-small-bl.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,-20],"qx/decoration/Classic/shadow/shadow-small-br.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,0],"qx/decoration/Classic/shadow/shadow-small-c.png":[40,136,"png","qx"],"qx/decoration/Classic/shadow/shadow-small-l.png":[5,136,"png","qx","qx/decoration/Classic/shadow-small-lr-combined.png",0,0],"qx/decoration/Classic/shadow/shadow-small-r.png":[5,136,"png","qx","qx/decoration/Classic/shadow-small-lr-combined.png",-5,0],"qx/decoration/Classic/shadow/shadow-small-t.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,-5],"qx/decoration/Classic/shadow/shadow-small-tl.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,-15],"qx/decoration/Classic/shadow/shadow-small-tr.png":[5,5,"png","qx","qx/decoration/Classic/shadow-small-tb-combined.png",0,-10],"qx/decoration/Classic/shadow/shadow-small.png":[114,146,"png","qx"],"qx/decoration/Classic/shadow/shadow-t.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,-75],"qx/decoration/Classic/shadow/shadow-tl.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,-45],"qx/decoration/Classic/shadow/shadow-tr.png":[15,15,"png","qx","qx/decoration/Classic/shadow-tb-combined.png",0,-15],"qx/decoration/Classic/shadow/shadow.png":[381,412,"png","qx"],"qx/decoration/Classic/splitpane/knob-horizontal.png":[4,15,"png","qx"],"qx/decoration/Classic/splitpane/knob-vertical.png":[15,4,"png","qx"],"qx/decoration/Classic/table-combined.png":[72,11,"png","qx"],"qx/decoration/Classic/table/ascending-invert.png":[10,10,"png","qx","qx/decoration/Classic/table-combined.png",-62,0],"qx/decoration/Classic/table/ascending.png":[10,10,"png","qx","qx/decoration/Classic/table-combined.png",-52,0],"qx/decoration/Classic/table/boolean-false.png":[11,11,"png","qx","qx/decoration/Classic/table-combined.png",-31,0],"qx/decoration/Classic/table/boolean-true.png":[11,11,"png","qx","qx/decoration/Classic/table-combined.png",-10,0],"qx/decoration/Classic/table/descending-invert.png":[10,10,"png","qx","qx/decoration/Classic/table-combined.png",-42,0],"qx/decoration/Classic/table/descending.png":[10,10,"png","qx","qx/decoration/Classic/table-combined.png",0,0],"qx/decoration/Classic/table/select-column-order.png":[10,9,"png","qx","qx/decoration/Classic/table-combined.png",-21,0],"qx/decoration/Classic/tree/minus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/tree/plus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/cross.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/cross_minus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/cross_plus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/end.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/end_minus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/end_plus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/line.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/only_minus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/only_plus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/start.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/start_minus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/treevirtual/start_plus.gif":[19,16,"gif","qx"],"qx/decoration/Classic/window-captionbar-buttons-combined.gif":[36,9,"gif","qx"],"qx/decoration/Classic/window/close.gif":[10,9,"gif","qx","qx/decoration/Classic/window-captionbar-buttons-combined.gif",0,0],"qx/decoration/Classic/window/maximize.gif":[9,9,"gif","qx","qx/decoration/Classic/window-captionbar-buttons-combined.gif",-10,0],"qx/decoration/Classic/window/minimize.gif":[9,9,"gif","qx","qx/decoration/Classic/window-captionbar-buttons-combined.gif",-19,0],"qx/decoration/Classic/window/restore.gif":[8,9,"gif","qx","qx/decoration/Classic/window-captionbar-buttons-combined.gif",-28,0],"qx/decoration/Modern/app-header.png":[110,20,"png","qx"],"qx/decoration/Modern/arrows-combined.png":[87,8,"png","qx"],"qx/decoration/Modern/arrows/down-invert.png":[8,5,"png","qx","qx/decoration/Modern/arrows-combined.png",-74,0],"qx/decoration/Modern/arrows/down-small-invert.png":[5,3,"png","qx","qx/decoration/Modern/arrows-combined.png",-69,0],"qx/decoration/Modern/arrows/down-small.png":[5,3,"png","qx","qx/decoration/Modern/arrows-combined.png",-49,0],"qx/decoration/Modern/arrows/down.png":[8,5,"png","qx","qx/decoration/Modern/arrows-combined.png",-20,0],"qx/decoration/Modern/arrows/forward.png":[10,8,"png","qx","qx/decoration/Modern/arrows-combined.png",-59,0],"qx/decoration/Modern/arrows/left-invert.png":[5,8,"png","qx","qx/decoration/Modern/arrows-combined.png",0,0],"qx/decoration/Modern/arrows/left.png":[5,8,"png","qx","qx/decoration/Modern/arrows-combined.png",-44,0],"qx/decoration/Modern/arrows/rewind.png":[10,8,"png","qx","qx/decoration/Modern/arrows-combined.png",-10,0],"qx/decoration/Modern/arrows/right-invert.png":[5,8,"png","qx","qx/decoration/Modern/arrows-combined.png",-5,0],"qx/decoration/Modern/arrows/right.png":[5,8,"png","qx","qx/decoration/Modern/arrows-combined.png",-54,0],"qx/decoration/Modern/arrows/up-invert.png":[8,5,"png","qx","qx/decoration/Modern/arrows-combined.png",-28,0],"qx/decoration/Modern/arrows/up-small.png":[5,3,"png","qx","qx/decoration/Modern/arrows-combined.png",-82,0],"qx/decoration/Modern/arrows/up.png":[8,5,"png","qx","qx/decoration/Modern/arrows-combined.png",-36,0],"qx/decoration/Modern/button-lr-combined.png":[72,52,"png","qx"],"qx/decoration/Modern/button-tb-combined.png":[4,216,"png","qx"],"qx/decoration/Modern/checkradio-combined.png":[504,14,"png","qx"],"qx/decoration/Modern/colorselector-combined.gif":[46,11,"gif","qx"],"qx/decoration/Modern/colorselector/brightness-field.png":[19,256,"png","qx"],"qx/decoration/Modern/colorselector/brightness-handle.gif":[35,11,"gif","qx","qx/decoration/Modern/colorselector-combined.gif",0,0],"qx/decoration/Modern/colorselector/huesaturation-field.jpg":[256,256,"jpeg","qx"],"qx/decoration/Modern/colorselector/huesaturation-handle.gif":[11,11,"gif","qx","qx/decoration/Modern/colorselector-combined.gif",-35,0],"qx/decoration/Modern/cursors-combined.gif":[71,20,"gif","qx"],"qx/decoration/Modern/cursors/alias.gif":[19,15,"gif","qx","qx/decoration/Modern/cursors-combined.gif",-52,0],"qx/decoration/Modern/cursors/copy.gif":[19,15,"gif","qx","qx/decoration/Modern/cursors-combined.gif",-33,0],"qx/decoration/Modern/cursors/move.gif":[13,9,"gif","qx","qx/decoration/Modern/cursors-combined.gif",-20,0],"qx/decoration/Modern/cursors/nodrop.gif":[20,20,"gif","qx","qx/decoration/Modern/cursors-combined.gif",0,0],"qx/decoration/Modern/form/button-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-72],"qx/decoration/Modern/form/button-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-204],"qx/decoration/Modern/form/button-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-188],"qx/decoration/Modern/form/button-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-checked-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-36],"qx/decoration/Modern/form/button-checked-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-84],"qx/decoration/Modern/form/button-checked-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-184],"qx/decoration/Modern/form/button-checked-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-checked-focused-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-156],"qx/decoration/Modern/form/button-checked-focused-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-208],"qx/decoration/Modern/form/button-checked-focused-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-160],"qx/decoration/Modern/form/button-checked-focused-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-checked-focused-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-40,0],"qx/decoration/Modern/form/button-checked-focused-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-32,0],"qx/decoration/Modern/form/button-checked-focused-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-28],"qx/decoration/Modern/form/button-checked-focused-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-24],"qx/decoration/Modern/form/button-checked-focused-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-48],"qx/decoration/Modern/form/button-checked-focused.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-checked-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-16,0],"qx/decoration/Modern/form/button-checked-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-60,0],"qx/decoration/Modern/form/button-checked-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-140],"qx/decoration/Modern/form/button-checked-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-56],"qx/decoration/Modern/form/button-checked-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-112],"qx/decoration/Modern/form/button-checked.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-disabled-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-40],"qx/decoration/Modern/form/button-disabled-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-136],"qx/decoration/Modern/form/button-disabled-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-16],"qx/decoration/Modern/form/button-disabled-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-disabled-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-68,0],"qx/decoration/Modern/form/button-disabled-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-4,0],"qx/decoration/Modern/form/button-disabled-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-116],"qx/decoration/Modern/form/button-disabled-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-168],"qx/decoration/Modern/form/button-disabled-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-60],"qx/decoration/Modern/form/button-disabled.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-focused-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-68],"qx/decoration/Modern/form/button-focused-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-144],"qx/decoration/Modern/form/button-focused-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-8],"qx/decoration/Modern/form/button-focused-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-focused-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-24,0],"qx/decoration/Modern/form/button-focused-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-44,0],"qx/decoration/Modern/form/button-focused-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-192],"qx/decoration/Modern/form/button-focused-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-148],"qx/decoration/Modern/form/button-focused-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-104],"qx/decoration/Modern/form/button-focused.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-hovered-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-108],"qx/decoration/Modern/form/button-hovered-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-32],"qx/decoration/Modern/form/button-hovered-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-128],"qx/decoration/Modern/form/button-hovered-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-hovered-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-20,0],"qx/decoration/Modern/form/button-hovered-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-48,0],"qx/decoration/Modern/form/button-hovered-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-44],"qx/decoration/Modern/form/button-hovered-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-76],"qx/decoration/Modern/form/button-hovered-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-88],"qx/decoration/Modern/form/button-hovered.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-56,0],"qx/decoration/Modern/form/button-preselected-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-124],"qx/decoration/Modern/form/button-preselected-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-176],"qx/decoration/Modern/form/button-preselected-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-200],"qx/decoration/Modern/form/button-preselected-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-preselected-focused-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,0],"qx/decoration/Modern/form/button-preselected-focused-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-4],"qx/decoration/Modern/form/button-preselected-focused-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-152],"qx/decoration/Modern/form/button-preselected-focused-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-preselected-focused-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-28,0],"qx/decoration/Modern/form/button-preselected-focused-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-36,0],"qx/decoration/Modern/form/button-preselected-focused-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-196],"qx/decoration/Modern/form/button-preselected-focused-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-164],"qx/decoration/Modern/form/button-preselected-focused-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-212],"qx/decoration/Modern/form/button-preselected-focused.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-preselected-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-8,0],"qx/decoration/Modern/form/button-preselected-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-64,0],"qx/decoration/Modern/form/button-preselected-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-96],"qx/decoration/Modern/form/button-preselected-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-80],"qx/decoration/Modern/form/button-preselected-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-132],"qx/decoration/Modern/form/button-preselected.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-pressed-b.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-12],"qx/decoration/Modern/form/button-pressed-bl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-52],"qx/decoration/Modern/form/button-pressed-br.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-20],"qx/decoration/Modern/form/button-pressed-c.png":[40,52,"png","qx"],"qx/decoration/Modern/form/button-pressed-l.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-52,0],"qx/decoration/Modern/form/button-pressed-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",-12,0],"qx/decoration/Modern/form/button-pressed-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-100],"qx/decoration/Modern/form/button-pressed-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-172],"qx/decoration/Modern/form/button-pressed-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-64],"qx/decoration/Modern/form/button-pressed.png":[80,60,"png","qx"],"qx/decoration/Modern/form/button-r.png":[4,52,"png","qx","qx/decoration/Modern/button-lr-combined.png",0,0],"qx/decoration/Modern/form/button-t.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-92],"qx/decoration/Modern/form/button-tl.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-120],"qx/decoration/Modern/form/button-tr.png":[4,4,"png","qx","qx/decoration/Modern/button-tb-combined.png",0,-180],"qx/decoration/Modern/form/button.png":[80,60,"png","qx"],"qx/decoration/Modern/form/checkbox-checked-disabled.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-126,0],"qx/decoration/Modern/form/checkbox-checked-focused-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-322,0],"qx/decoration/Modern/form/checkbox-checked-focused.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-294,0],"qx/decoration/Modern/form/checkbox-checked-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-364,0],"qx/decoration/Modern/form/checkbox-checked-hovered.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-490,0],"qx/decoration/Modern/form/checkbox-checked-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-224,0],"qx/decoration/Modern/form/checkbox-checked-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-378,0],"qx/decoration/Modern/form/checkbox-checked-pressed.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-84,0],"qx/decoration/Modern/form/checkbox-checked.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-182,0],"qx/decoration/Modern/form/checkbox-disabled.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-42,0],"qx/decoration/Modern/form/checkbox-focused-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-392,0],"qx/decoration/Modern/form/checkbox-focused.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-210,0],"qx/decoration/Modern/form/checkbox-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-14,0],"qx/decoration/Modern/form/checkbox-hovered.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-238,0],"qx/decoration/Modern/form/checkbox-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-462,0],"qx/decoration/Modern/form/checkbox-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-112,0],"qx/decoration/Modern/form/checkbox-pressed.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-448,0],"qx/decoration/Modern/form/checkbox.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-140,0],"qx/decoration/Modern/form/input-focused.png":[40,12,"png","qx"],"qx/decoration/Modern/form/input.png":[84,12,"png","qx"],"qx/decoration/Modern/form/radiobutton-checked-disabled.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-196,0],"qx/decoration/Modern/form/radiobutton-checked-focused-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-168,0],"qx/decoration/Modern/form/radiobutton-checked-focused.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-98,0],"qx/decoration/Modern/form/radiobutton-checked-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-308,0],"qx/decoration/Modern/form/radiobutton-checked-hovered.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-406,0],"qx/decoration/Modern/form/radiobutton-checked-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-28,0],"qx/decoration/Modern/form/radiobutton-checked-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-350,0],"qx/decoration/Modern/form/radiobutton-checked-pressed.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-266,0],"qx/decoration/Modern/form/radiobutton-checked.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-252,0],"qx/decoration/Modern/form/radiobutton-disabled.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-336,0],"qx/decoration/Modern/form/radiobutton-focused-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-476,0],"qx/decoration/Modern/form/radiobutton-focused.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-420,0],"qx/decoration/Modern/form/radiobutton-hovered-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-56,0],"qx/decoration/Modern/form/radiobutton-hovered.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",0,0],"qx/decoration/Modern/form/radiobutton-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-154,0],"qx/decoration/Modern/form/radiobutton-pressed-invalid.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-434,0],"qx/decoration/Modern/form/radiobutton-pressed.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-280,0],"qx/decoration/Modern/form/radiobutton.png":[14,14,"png","qx","qx/decoration/Modern/checkradio-combined.png",-70,0],"qx/decoration/Modern/form/tooltip-error-arrow.png":[11,14,"png","qx"],"qx/decoration/Modern/form/tooltip-error-b.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,-30],"qx/decoration/Modern/form/tooltip-error-bl.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,-24],"qx/decoration/Modern/form/tooltip-error-br.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,0],"qx/decoration/Modern/form/tooltip-error-c.png":[40,18,"png","qx"],"qx/decoration/Modern/form/tooltip-error-l.png":[6,18,"png","qx","qx/decoration/Modern/tooltip-error-lr-combined.png",-6,0],"qx/decoration/Modern/form/tooltip-error-r.png":[6,18,"png","qx","qx/decoration/Modern/tooltip-error-lr-combined.png",0,0],"qx/decoration/Modern/form/tooltip-error-t.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,-6],"qx/decoration/Modern/form/tooltip-error-tl.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,-18],"qx/decoration/Modern/form/tooltip-error-tr.png":[6,6,"png","qx","qx/decoration/Modern/tooltip-error-tb-combined.png",0,-12],"qx/decoration/Modern/form/tooltip-error.png":[127,30,"png","qx"],"qx/decoration/Modern/groupbox-lr-combined.png":[8,51,"png","qx"],"qx/decoration/Modern/groupbox-tb-combined.png":[4,24,"png","qx"],"qx/decoration/Modern/groupbox/groupbox-b.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,-12],"qx/decoration/Modern/groupbox/groupbox-bl.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,-16],"qx/decoration/Modern/groupbox/groupbox-br.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,-8],"qx/decoration/Modern/groupbox/groupbox-c.png":[40,51,"png","qx"],"qx/decoration/Modern/groupbox/groupbox-l.png":[4,51,"png","qx","qx/decoration/Modern/groupbox-lr-combined.png",-4,0],"qx/decoration/Modern/groupbox/groupbox-r.png":[4,51,"png","qx","qx/decoration/Modern/groupbox-lr-combined.png",0,0],"qx/decoration/Modern/groupbox/groupbox-t.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,-4],"qx/decoration/Modern/groupbox/groupbox-tl.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,0],"qx/decoration/Modern/groupbox/groupbox-tr.png":[4,4,"png","qx","qx/decoration/Modern/groupbox-tb-combined.png",0,-20],"qx/decoration/Modern/groupbox/groupbox.png":[255,59,"png","qx"],"qx/decoration/Modern/menu-background-combined.png":[80,49,"png","qx"],"qx/decoration/Modern/menu-checkradio-combined.gif":[64,7,"gif","qx"],"qx/decoration/Modern/menu/background.png":[40,49,"png","qx","qx/decoration/Modern/menu-background-combined.png",-40,0],"qx/decoration/Modern/menu/bar-background.png":[40,20,"png","qx","qx/decoration/Modern/menu-background-combined.png",0,0],"qx/decoration/Modern/menu/checkbox-invert.gif":[16,7,"gif","qx","qx/decoration/Modern/menu-checkradio-combined.gif",-16,0],"qx/decoration/Modern/menu/checkbox.gif":[16,7,"gif","qx","qx/decoration/Modern/menu-checkradio-combined.gif",-48,0],"qx/decoration/Modern/menu/radiobutton-invert.gif":[16,5,"gif","qx","qx/decoration/Modern/menu-checkradio-combined.gif",-32,0],"qx/decoration/Modern/menu/radiobutton.gif":[16,5,"gif","qx","qx/decoration/Modern/menu-checkradio-combined.gif",0,0],"qx/decoration/Modern/pane-lr-combined.png":[12,238,"png","qx"],"qx/decoration/Modern/pane-tb-combined.png":[6,36,"png","qx"],"qx/decoration/Modern/pane/pane-b.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,-30],"qx/decoration/Modern/pane/pane-bl.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,-18],"qx/decoration/Modern/pane/pane-br.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,-12],"qx/decoration/Modern/pane/pane-c.png":[40,238,"png","qx"],"qx/decoration/Modern/pane/pane-l.png":[6,238,"png","qx","qx/decoration/Modern/pane-lr-combined.png",0,0],"qx/decoration/Modern/pane/pane-r.png":[6,238,"png","qx","qx/decoration/Modern/pane-lr-combined.png",-6,0],"qx/decoration/Modern/pane/pane-t.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,0],"qx/decoration/Modern/pane/pane-tl.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,-24],"qx/decoration/Modern/pane/pane-tr.png":[6,6,"png","qx","qx/decoration/Modern/pane-tb-combined.png",0,-6],"qx/decoration/Modern/pane/pane.png":[185,250,"png","qx"],"qx/decoration/Modern/scrollbar-combined.png":[54,12,"png","qx"],"qx/decoration/Modern/scrollbar/scrollbar-bg-horizontal.png":[76,15,"png","qx"],"qx/decoration/Modern/scrollbar/scrollbar-bg-pressed-horizontal.png":[19,10,"png","qx"],"qx/decoration/Modern/scrollbar/scrollbar-bg-pressed-vertical.png":[10,19,"png","qx"],"qx/decoration/Modern/scrollbar/scrollbar-bg-vertical.png":[15,76,"png","qx"],"qx/decoration/Modern/scrollbar/scrollbar-button-bg-horizontal.png":[12,10,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-34,0],"qx/decoration/Modern/scrollbar/scrollbar-button-bg-vertical.png":[10,12,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-6,0],"qx/decoration/Modern/scrollbar/scrollbar-down.png":[6,4,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-28,0],"qx/decoration/Modern/scrollbar/scrollbar-left.png":[4,6,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-50,0],"qx/decoration/Modern/scrollbar/scrollbar-right.png":[4,6,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-46,0],"qx/decoration/Modern/scrollbar/scrollbar-up.png":[6,4,"png","qx","qx/decoration/Modern/scrollbar-combined.png",0,0],"qx/decoration/Modern/scrollbar/slider-knob-background.png":[12,10,"png","qx","qx/decoration/Modern/scrollbar-combined.png",-16,0],"qx/decoration/Modern/selection.png":[110,20,"png","qx"],"qx/decoration/Modern/shadow-lr-combined.png":[30,382,"png","qx"],"qx/decoration/Modern/shadow-small-lr-combined.png":[10,136,"png","qx"],"qx/decoration/Modern/shadow-small-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Modern/shadow-tb-combined.png":[15,90,"png","qx"],"qx/decoration/Modern/shadow/shadow-b.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,-30],"qx/decoration/Modern/shadow/shadow-bl.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,-15],"qx/decoration/Modern/shadow/shadow-br.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,-45],"qx/decoration/Modern/shadow/shadow-c.png":[40,382,"png","qx"],"qx/decoration/Modern/shadow/shadow-l.png":[15,382,"png","qx","qx/decoration/Modern/shadow-lr-combined.png",0,0],"qx/decoration/Modern/shadow/shadow-r.png":[15,382,"png","qx","qx/decoration/Modern/shadow-lr-combined.png",-15,0],"qx/decoration/Modern/shadow/shadow-small-b.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,-20],"qx/decoration/Modern/shadow/shadow-small-bl.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,-15],"qx/decoration/Modern/shadow/shadow-small-br.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,-10],"qx/decoration/Modern/shadow/shadow-small-c.png":[40,136,"png","qx"],"qx/decoration/Modern/shadow/shadow-small-l.png":[5,136,"png","qx","qx/decoration/Modern/shadow-small-lr-combined.png",0,0],"qx/decoration/Modern/shadow/shadow-small-r.png":[5,136,"png","qx","qx/decoration/Modern/shadow-small-lr-combined.png",-5,0],"qx/decoration/Modern/shadow/shadow-small-t.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,-5],"qx/decoration/Modern/shadow/shadow-small-tl.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,0],"qx/decoration/Modern/shadow/shadow-small-tr.png":[5,5,"png","qx","qx/decoration/Modern/shadow-small-tb-combined.png",0,-25],"qx/decoration/Modern/shadow/shadow-small.png":[114,146,"png","qx"],"qx/decoration/Modern/shadow/shadow-t.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,-60],"qx/decoration/Modern/shadow/shadow-tl.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,-75],"qx/decoration/Modern/shadow/shadow-tr.png":[15,15,"png","qx","qx/decoration/Modern/shadow-tb-combined.png",0,0],"qx/decoration/Modern/shadow/shadow.png":[381,412,"png","qx"],"qx/decoration/Modern/splitpane-knobs-combined.png":[8,9,"png","qx"],"qx/decoration/Modern/splitpane/knob-horizontal.png":[1,8,"png","qx","qx/decoration/Modern/splitpane-knobs-combined.png",0,-1],"qx/decoration/Modern/splitpane/knob-vertical.png":[8,1,"png","qx","qx/decoration/Modern/splitpane-knobs-combined.png",0,0],"qx/decoration/Modern/table-combined.png":[94,18,"png","qx"],"qx/decoration/Modern/table/ascending.png":[8,5,"png","qx","qx/decoration/Modern/table-combined.png",0,0],"qx/decoration/Modern/table/boolean-false.png":[14,14,"png","qx","qx/decoration/Modern/table-combined.png",-80,0],"qx/decoration/Modern/table/boolean-true.png":[14,14,"png","qx","qx/decoration/Modern/table-combined.png",-26,0],"qx/decoration/Modern/table/descending.png":[8,5,"png","qx","qx/decoration/Modern/table-combined.png",-18,0],"qx/decoration/Modern/table/header-cell.png":[40,18,"png","qx","qx/decoration/Modern/table-combined.png",-40,0],"qx/decoration/Modern/table/select-column-order.png":[10,9,"png","qx","qx/decoration/Modern/table-combined.png",-8,0],"qx/decoration/Modern/tabview-button-bottom-active-lr-combined.png":[10,14,"png","qx"],"qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Modern/tabview-button-bottom-inactive-b-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-bottom-inactive-lr-combined.png":[6,15,"png","qx"],"qx/decoration/Modern/tabview-button-bottom-inactive-t-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-left-active-lr-combined.png":[10,37,"png","qx"],"qx/decoration/Modern/tabview-button-left-active-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Modern/tabview-button-left-inactive-b-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-left-inactive-lr-combined.png":[6,39,"png","qx"],"qx/decoration/Modern/tabview-button-left-inactive-t-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-right-active-lr-combined.png":[10,37,"png","qx"],"qx/decoration/Modern/tabview-button-right-active-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Modern/tabview-button-right-inactive-b-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-right-inactive-lr-combined.png":[6,39,"png","qx"],"qx/decoration/Modern/tabview-button-right-inactive-t-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-top-active-lr-combined.png":[10,12,"png","qx"],"qx/decoration/Modern/tabview-button-top-active-tb-combined.png":[5,30,"png","qx"],"qx/decoration/Modern/tabview-button-top-inactive-b-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-button-top-inactive-lr-combined.png":[6,15,"png","qx"],"qx/decoration/Modern/tabview-button-top-inactive-t-combined.png":[3,9,"png","qx"],"qx/decoration/Modern/tabview-pane-lr-combined.png":[60,2,"png","qx"],"qx/decoration/Modern/tabview-pane-tb-combined.png":[30,180,"png","qx"],"qx/decoration/Modern/tabview/tab-button-bottom-active-b.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,-10],"qx/decoration/Modern/tabview/tab-button-bottom-active-bl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,-15],"qx/decoration/Modern/tabview/tab-button-bottom-active-br.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,-5],"qx/decoration/Modern/tabview/tab-button-bottom-active-c.png":[40,14,"png","qx"],"qx/decoration/Modern/tabview/tab-button-bottom-active-l.png":[5,14,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-bottom-active-r.png":[5,14,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-lr-combined.png",-5,0],"qx/decoration/Modern/tabview/tab-button-bottom-active-t.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,-20],"qx/decoration/Modern/tabview/tab-button-bottom-active-tl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,-25],"qx/decoration/Modern/tabview/tab-button-bottom-active-tr.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-bottom-active-tb-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-bottom-active.png":[49,24,"png","qx"],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-b.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-b-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-bl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-b-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-br.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-b-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-c.png":[40,15,"png","qx"],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-l.png":[3,15,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-lr-combined.png",-3,0],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-r.png":[3,15,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-t.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-t-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-tl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-t-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-bottom-inactive-tr.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-bottom-inactive-t-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-bottom-inactive.png":[45,21,"png","qx"],"qx/decoration/Modern/tabview/tab-button-left-active-b.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,-5],"qx/decoration/Modern/tabview/tab-button-left-active-bl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-left-active-br.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,-25],"qx/decoration/Modern/tabview/tab-button-left-active-c.png":[40,37,"png","qx"],"qx/decoration/Modern/tabview/tab-button-left-active-l.png":[5,37,"png","qx","qx/decoration/Modern/tabview-button-left-active-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-left-active-r.png":[5,37,"png","qx","qx/decoration/Modern/tabview-button-left-active-lr-combined.png",-5,0],"qx/decoration/Modern/tabview/tab-button-left-active-t.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,-15],"qx/decoration/Modern/tabview/tab-button-left-active-tl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,-10],"qx/decoration/Modern/tabview/tab-button-left-active-tr.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-left-active-tb-combined.png",0,-20],"qx/decoration/Modern/tabview/tab-button-left-active.png":[22,47,"png","qx"],"qx/decoration/Modern/tabview/tab-button-left-inactive-b.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-b-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-left-inactive-bl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-b-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-left-inactive-br.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-b-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-left-inactive-c.png":[40,39,"png","qx"],"qx/decoration/Modern/tabview/tab-button-left-inactive-l.png":[3,39,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-lr-combined.png",-3,0],"qx/decoration/Modern/tabview/tab-button-left-inactive-r.png":[3,39,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-left-inactive-t.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-t-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-left-inactive-tl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-t-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-left-inactive-tr.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-left-inactive-t-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-left-inactive.png":[20,45,"png","qx"],"qx/decoration/Modern/tabview/tab-button-right-active-b.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,-25],"qx/decoration/Modern/tabview/tab-button-right-active-bl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-right-active-br.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,-20],"qx/decoration/Modern/tabview/tab-button-right-active-c.png":[40,37,"png","qx"],"qx/decoration/Modern/tabview/tab-button-right-active-l.png":[5,37,"png","qx","qx/decoration/Modern/tabview-button-right-active-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-right-active-r.png":[5,37,"png","qx","qx/decoration/Modern/tabview-button-right-active-lr-combined.png",-5,0],"qx/decoration/Modern/tabview/tab-button-right-active-t.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,-5],"qx/decoration/Modern/tabview/tab-button-right-active-tl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,-15],"qx/decoration/Modern/tabview/tab-button-right-active-tr.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-right-active-tb-combined.png",0,-10],"qx/decoration/Modern/tabview/tab-button-right-active.png":[22,47,"png","qx"],"qx/decoration/Modern/tabview/tab-button-right-inactive-b.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-b-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-right-inactive-bl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-b-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-right-inactive-br.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-b-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-right-inactive-c.png":[40,39,"png","qx"],"qx/decoration/Modern/tabview/tab-button-right-inactive-l.png":[3,39,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-right-inactive-r.png":[3,39,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-lr-combined.png",-3,0],"qx/decoration/Modern/tabview/tab-button-right-inactive-t.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-t-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-right-inactive-tl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-t-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-right-inactive-tr.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-right-inactive-t-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-right-inactive.png":[20,45,"png","qx"],"qx/decoration/Modern/tabview/tab-button-top-active-b.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,-20],"qx/decoration/Modern/tabview/tab-button-top-active-bl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,-15],"qx/decoration/Modern/tabview/tab-button-top-active-br.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,-10],"qx/decoration/Modern/tabview/tab-button-top-active-c.png":[40,14,"png","qx"],"qx/decoration/Modern/tabview/tab-button-top-active-l.png":[5,12,"png","qx","qx/decoration/Modern/tabview-button-top-active-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-top-active-r.png":[5,12,"png","qx","qx/decoration/Modern/tabview-button-top-active-lr-combined.png",-5,0],"qx/decoration/Modern/tabview/tab-button-top-active-t.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-top-active-tl.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,-25],"qx/decoration/Modern/tabview/tab-button-top-active-tr.png":[5,5,"png","qx","qx/decoration/Modern/tabview-button-top-active-tb-combined.png",0,-5],"qx/decoration/Modern/tabview/tab-button-top-active.png":[48,22,"png","qx"],"qx/decoration/Modern/tabview/tab-button-top-inactive-b.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-b-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-top-inactive-bl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-b-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-top-inactive-br.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-b-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-top-inactive-c.png":[40,15,"png","qx"],"qx/decoration/Modern/tabview/tab-button-top-inactive-l.png":[3,15,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-top-inactive-r.png":[3,15,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-lr-combined.png",-3,0],"qx/decoration/Modern/tabview/tab-button-top-inactive-t.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-t-combined.png",0,-3],"qx/decoration/Modern/tabview/tab-button-top-inactive-tl.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-t-combined.png",0,0],"qx/decoration/Modern/tabview/tab-button-top-inactive-tr.png":[3,3,"png","qx","qx/decoration/Modern/tabview-button-top-inactive-t-combined.png",0,-6],"qx/decoration/Modern/tabview/tab-button-top-inactive.png":[45,21,"png","qx"],"qx/decoration/Modern/tabview/tabview-pane-b.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,-60],"qx/decoration/Modern/tabview/tabview-pane-bl.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,0],"qx/decoration/Modern/tabview/tabview-pane-br.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,-120],"qx/decoration/Modern/tabview/tabview-pane-c.png":[40,120,"png","qx"],"qx/decoration/Modern/tabview/tabview-pane-l.png":[30,2,"png","qx","qx/decoration/Modern/tabview-pane-lr-combined.png",0,0],"qx/decoration/Modern/tabview/tabview-pane-r.png":[30,2,"png","qx","qx/decoration/Modern/tabview-pane-lr-combined.png",-30,0],"qx/decoration/Modern/tabview/tabview-pane-t.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,-150],"qx/decoration/Modern/tabview/tabview-pane-tl.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,-30],"qx/decoration/Modern/tabview/tabview-pane-tr.png":[30,30,"png","qx","qx/decoration/Modern/tabview-pane-tb-combined.png",0,-90],"qx/decoration/Modern/tabview/tabview-pane.png":[185,250,"png","qx"],"qx/decoration/Modern/toolbar-combined.png":[80,130,"png","qx"],"qx/decoration/Modern/toolbar/toolbar-gradient-blue.png":[40,130,"png","qx","qx/decoration/Modern/toolbar-combined.png",-40,0],"qx/decoration/Modern/toolbar/toolbar-gradient.png":[40,130,"png","qx","qx/decoration/Modern/toolbar-combined.png",0,0],"qx/decoration/Modern/toolbar/toolbar-handle-knob.gif":[1,8,"gif","qx"],"qx/decoration/Modern/toolbar/toolbar-part.gif":[7,1,"gif","qx"],"qx/decoration/Modern/tooltip-error-lr-combined.png":[12,18,"png","qx"],"qx/decoration/Modern/tooltip-error-tb-combined.png":[6,36,"png","qx"],"qx/decoration/Modern/tree-combined.png":[32,8,"png","qx"],"qx/decoration/Modern/tree/closed-selected.png":[8,8,"png","qx","qx/decoration/Modern/tree-combined.png",-24,0],"qx/decoration/Modern/tree/closed.png":[8,8,"png","qx","qx/decoration/Modern/tree-combined.png",-16,0],"qx/decoration/Modern/tree/open-selected.png":[8,8,"png","qx","qx/decoration/Modern/tree-combined.png",-8,0],"qx/decoration/Modern/tree/open.png":[8,8,"png","qx","qx/decoration/Modern/tree-combined.png",0,0],"qx/decoration/Modern/window-captionbar-buttons-combined.png":[108,9,"png","qx"],"qx/decoration/Modern/window-captionbar-lr-active-combined.png":[12,9,"png","qx"],"qx/decoration/Modern/window-captionbar-lr-inactive-combined.png":[12,9,"png","qx"],"qx/decoration/Modern/window-captionbar-tb-active-combined.png":[6,36,"png","qx"],"qx/decoration/Modern/window-captionbar-tb-inactive-combined.png":[6,36,"png","qx"],"qx/decoration/Modern/window-statusbar-lr-combined.png":[8,7,"png","qx"],"qx/decoration/Modern/window-statusbar-tb-combined.png":[4,24,"png","qx"],"qx/decoration/Modern/window/captionbar-active-b.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,-18],"qx/decoration/Modern/window/captionbar-active-bl.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,-24],"qx/decoration/Modern/window/captionbar-active-br.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,-12],"qx/decoration/Modern/window/captionbar-active-c.png":[40,9,"png","qx"],"qx/decoration/Modern/window/captionbar-active-l.png":[6,9,"png","qx","qx/decoration/Modern/window-captionbar-lr-active-combined.png",-6,0],"qx/decoration/Modern/window/captionbar-active-r.png":[6,9,"png","qx","qx/decoration/Modern/window-captionbar-lr-active-combined.png",0,0],"qx/decoration/Modern/window/captionbar-active-t.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,-6],"qx/decoration/Modern/window/captionbar-active-tl.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,0],"qx/decoration/Modern/window/captionbar-active-tr.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-active-combined.png",0,-30],"qx/decoration/Modern/window/captionbar-active.png":[69,21,"png","qx"],"qx/decoration/Modern/window/captionbar-inactive-b.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,-24],"qx/decoration/Modern/window/captionbar-inactive-bl.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,-6],"qx/decoration/Modern/window/captionbar-inactive-br.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,-30],"qx/decoration/Modern/window/captionbar-inactive-c.png":[40,9,"png","qx"],"qx/decoration/Modern/window/captionbar-inactive-l.png":[6,9,"png","qx","qx/decoration/Modern/window-captionbar-lr-inactive-combined.png",0,0],"qx/decoration/Modern/window/captionbar-inactive-r.png":[6,9,"png","qx","qx/decoration/Modern/window-captionbar-lr-inactive-combined.png",-6,0],"qx/decoration/Modern/window/captionbar-inactive-t.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,0],"qx/decoration/Modern/window/captionbar-inactive-tl.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,-12],"qx/decoration/Modern/window/captionbar-inactive-tr.png":[6,6,"png","qx","qx/decoration/Modern/window-captionbar-tb-inactive-combined.png",0,-18],"qx/decoration/Modern/window/captionbar-inactive.png":[69,21,"png","qx"],"qx/decoration/Modern/window/close-active-hovered.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-27,0],"qx/decoration/Modern/window/close-active.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-9,0],"qx/decoration/Modern/window/close-inactive.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-90,0],"qx/decoration/Modern/window/maximize-active-hovered.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-18,0],"qx/decoration/Modern/window/maximize-active.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-81,0],"qx/decoration/Modern/window/maximize-inactive.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-54,0],"qx/decoration/Modern/window/minimize-active-hovered.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-63,0],"qx/decoration/Modern/window/minimize-active.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-72,0],"qx/decoration/Modern/window/minimize-inactive.png":[9,9,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-36,0],"qx/decoration/Modern/window/restore-active-hovered.png":[9,8,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",0,0],"qx/decoration/Modern/window/restore-active.png":[9,8,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-99,0],"qx/decoration/Modern/window/restore-inactive.png":[9,8,"png","qx","qx/decoration/Modern/window-captionbar-buttons-combined.png",-45,0],"qx/decoration/Modern/window/statusbar-b.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,-16],"qx/decoration/Modern/window/statusbar-bl.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,-20],"qx/decoration/Modern/window/statusbar-br.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,-4],"qx/decoration/Modern/window/statusbar-c.png":[40,7,"png","qx"],"qx/decoration/Modern/window/statusbar-l.png":[4,7,"png","qx","qx/decoration/Modern/window-statusbar-lr-combined.png",-4,0],"qx/decoration/Modern/window/statusbar-r.png":[4,7,"png","qx","qx/decoration/Modern/window-statusbar-lr-combined.png",0,0],"qx/decoration/Modern/window/statusbar-t.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,0],"qx/decoration/Modern/window/statusbar-tl.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,-8],"qx/decoration/Modern/window/statusbar-tr.png":[4,4,"png","qx","qx/decoration/Modern/window-statusbar-tb-combined.png",0,-12],"qx/decoration/Modern/window/statusbar.png":[369,15,"png","qx"],"qx/icon/Oxygen/16/actions/dialog-cancel.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/actions/dialog-ok.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/actions/view-refresh.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/actions/window-close.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/apps/office-calendar.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/mimetypes/text-plain.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/places/folder-open.png":[16,16,"png","qx"],"qx/icon/Oxygen/16/places/folder.png":[16,16,"png","qx"],"qx/icon/Tango/16/actions/dialog-cancel.png":[16,16,"png","qx"],"qx/icon/Tango/16/actions/dialog-ok.png":[16,16,"png","qx"],"qx/icon/Tango/16/actions/view-refresh.png":[16,16,"png","qx"],"qx/icon/Tango/16/actions/window-close.png":[16,16,"png","qx"],"qx/icon/Tango/16/apps/office-calendar.png":[16,16,"png","qx"],"qx/icon/Tango/16/apps/utilities-color-chooser.png":[16,16,"png","qx"],"qx/icon/Tango/16/mimetypes/office-document.png":[16,16,"png","qx"],"qx/icon/Tango/16/places/folder-open.png":[16,16,"png","qx"],"qx/icon/Tango/16/places/folder.png":[16,16,"png","qx"],"qx/icon/Tango/22/mimetypes/office-document.png":[22,22,"png","qx"],"qx/icon/Tango/22/places/folder-open.png":[22,22,"png","qx"],"qx/icon/Tango/22/places/folder.png":[22,22,"png","qx"],"qx/icon/Tango/32/mimetypes/office-document.png":[32,32,"png","qx"],"qx/icon/Tango/32/places/folder-open.png":[32,32,"png","qx"],"qx/icon/Tango/32/places/folder.png":[32,32,"png","qx"],"qx/static/blank.gif":[1,1,"gif","qx"],"qx/static/blank.html":"qx"},"translations":{"C":{},"en":{}}};
if(!window.qx){window.qx={};
}qx.Bootstrap={genericToString:function(){return "[Class "+this.classname+"]";
},createNamespace:function(name,object){var splits=name.split(".");
var parent=window;
var part=splits[0];

for(var i=0,len=splits.length-1;i<len;i++,part=splits[i]){if(!parent[part]){parent=parent[part]={};
}else{parent=parent[part];
}}parent[part]=object;
return part;
},setDisplayName:function(fcn,classname,name){fcn.displayName=classname+"."+name+"()";
},setDisplayNames:function(functionMap,classname){for(var name in functionMap){var value=functionMap[name];

if(value instanceof Function){value.displayName=classname+"."+name+"()";
}}},define:function(name,config){if(!config){var config={statics:{}};
}var clazz;
var proto=null;
qx.Bootstrap.setDisplayNames(config.statics,name);

if(config.members||config.extend){qx.Bootstrap.setDisplayNames(config.members,name+".prototype");
clazz=config.construct||new Function;

if(config.extend){this.extendClass(clazz,clazz,config.extend,name,basename);
}var statics=config.statics||{};
for(var i=0,keys=qx.Bootstrap.getKeys(statics),l=keys.length;i<l;i++){var key=keys[i];
clazz[key]=statics[key];
}proto=clazz.prototype;
var members=config.members||{};
for(var i=0,keys=qx.Bootstrap.getKeys(members),l=keys.length;i<l;i++){var key=keys[i];
proto[key]=members[key];
}}else{clazz=config.statics||{};
}var basename=this.createNamespace(name,clazz);
clazz.name=clazz.classname=name;
clazz.basename=basename;
clazz.$$type="Class";
if(!clazz.hasOwnProperty("toString")){clazz.toString=this.genericToString;
}if(config.defer){config.defer(clazz,proto);
}qx.Bootstrap.$$registry[name]=config.statics;
return clazz;
}};
qx.Bootstrap.define("qx.Bootstrap",{statics:{LOADSTART:qx.$$start||new Date(),createNamespace:qx.Bootstrap.createNamespace,define:qx.Bootstrap.define,setDisplayName:qx.Bootstrap.setDisplayName,setDisplayNames:qx.Bootstrap.setDisplayNames,genericToString:qx.Bootstrap.genericToString,extendClass:function(clazz,construct,superClass,name,basename){var superproto=superClass.prototype;
var helper=new Function;
helper.prototype=superproto;
var proto=new helper;
clazz.prototype=proto;
proto.name=proto.classname=name;
proto.basename=basename;
construct.base=clazz.superclass=superClass;
construct.self=clazz.constructor=proto.constructor=clazz;
},getByName:function(name){return qx.Bootstrap.$$registry[name];
},$$registry:{},objectGetLength:({"count":function(map){return map.__count__;
},"default":function(map){var length=0;

for(var key in map){length++;
}return length;
}})[(({}).__count__==0)?"count":"default"],objectMergeWith:function(target,source,overwrite){if(overwrite===undefined){overwrite=true;
}
for(var key in source){if(overwrite||target[key]===undefined){target[key]=source[key];
}}return target;
},__shadowedKeys:["isPrototypeOf","hasOwnProperty","toLocaleString","toString","valueOf","constructor"],getKeys:({"ES5":Object.keys,"BROKEN_IE":function(map){var arr=[];

for(var key in map){arr.push(key);
}var shadowedKeys=qx.Bootstrap.__shadowedKeys;
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var i=0,a=shadowedKeys,l=a.length;i<l;i++){if(hasOwnProperty.call(map,a[i])){arr.push(a[i]);
}}return arr;
},"default":function(map){var arr=[];

for(var key in map){arr.push(key);
}return arr;
}})[typeof (Object.keys)==
"function"?"ES5":
(function(){for(var key in {toString:1}){return key;
}})()!=="toString"?"BROKEN_IE":"default"],getKeysAsString:function(map){var keys=qx.Bootstrap.getKeys(map);

if(keys.length==0){return "";
}return '"'+keys.join('\", "')+'"';
},__classToTypeMap:{"[object String]":"String","[object Array]":"Array","[object Object]":"Object","[object RegExp]":"RegExp","[object Number]":"Number","[object Boolean]":"Boolean","[object Date]":"Date","[object Function]":"Function","[object Error]":"Error"},bind:function(func,self,varargs){var fixedArgs=Array.prototype.slice.call(arguments,2,arguments.length);
return function(){var args=Array.prototype.slice.call(arguments,0,arguments.length);
return func.apply(self,fixedArgs.concat(args));
};
},firstUp:function(str){return str.charAt(0).toUpperCase()+str.substr(1);
},firstLow:function(str){return str.charAt(0).toLowerCase()+str.substr(1);
},getClass:function(value){var classString=Object.prototype.toString.call(value);
return (qx.Bootstrap.__classToTypeMap[classString]||classString.slice(8,-1));
},isString:function(value){return (value!==null&&(typeof value==="string"||qx.Bootstrap.getClass(value)=="String"||value instanceof String||(!!value&&!!value.$$isString)));
},isArray:function(value){return (value!==null&&(value instanceof Array||(value&&qx.data&&qx.data.IListData&&qx.Bootstrap.hasInterface(value.constructor,qx.data.IListData))||qx.Bootstrap.getClass(value)=="Array"||(!!value&&!!value.$$isArray)));
},isObject:function(value){return (value!==undefined&&value!==null&&qx.Bootstrap.getClass(value)=="Object");
},isFunction:function(value){return qx.Bootstrap.getClass(value)=="Function";
},classIsDefined:function(name){return qx.Bootstrap.getByName(name)!==undefined;
},getPropertyDefinition:function(clazz,name){while(clazz){if(clazz.$$properties&&clazz.$$properties[name]){return clazz.$$properties[name];
}clazz=clazz.superclass;
}return null;
},hasProperty:function(clazz,name){return !!qx.Bootstrap.getPropertyDefinition(clazz,name);
},getEventType:function(clazz,name){var clazz=clazz.constructor;

while(clazz.superclass){if(clazz.$$events&&clazz.$$events[name]!==undefined){return clazz.$$events[name];
}clazz=clazz.superclass;
}return null;
},supportsEvent:function(clazz,name){return !!qx.Bootstrap.getEventType(clazz,name);
},getByInterface:function(clazz,iface){var list,i,l;

while(clazz){if(clazz.$$implements){list=clazz.$$flatImplements;

for(i=0,l=list.length;i<l;i++){if(list[i]===iface){return clazz;
}}}clazz=clazz.superclass;
}return null;
},hasInterface:function(clazz,iface){return !!qx.Bootstrap.getByInterface(clazz,iface);
},getMixins:function(clazz){var list=[];

while(clazz){if(clazz.$$includes){list.push.apply(list,clazz.$$flatIncludes);
}clazz=clazz.superclass;
}return list;
},$$logs:[],debug:function(object,message){qx.Bootstrap.$$logs.push(["debug",arguments]);
},info:function(object,message){qx.Bootstrap.$$logs.push(["info",arguments]);
},warn:function(object,message){qx.Bootstrap.$$logs.push(["warn",arguments]);
},error:function(object,message){qx.Bootstrap.$$logs.push(["error",arguments]);
},trace:function(object){}}});
qx.Bootstrap.define("qx.core.Setting",{statics:{__settings:{},define:function(key,defaultValue){if(defaultValue===undefined){throw new Error('Default value of setting "'+key+'" must be defined!');
}
if(!this.__settings[key]){this.__settings[key]={};
}else if(this.__settings[key].defaultValue!==undefined){throw new Error('Setting "'+key+'" is already defined!');
}this.__settings[key].defaultValue=defaultValue;
},get:function(key){var cache=this.__settings[key];

if(cache===undefined){throw new Error('Setting "'+key+'" is not defined.');
}
if(cache.value!==undefined){return cache.value;
}return cache.defaultValue;
},set:function(key,value){if((key.split(".")).length<2){throw new Error('Malformed settings key "'+key+'". Must be following the schema "namespace.key".');
}
if(!this.__settings[key]){this.__settings[key]={};
}this.__settings[key].value=value;
},__init:function(){if(window.qxsettings){for(var key in window.qxsettings){this.set(key,window.qxsettings[key]);
}window.qxsettings=undefined;

try{delete window.qxsettings;
}catch(ex){}this.__loadUrlSettings();
}},__loadUrlSettings:function(){if(this.get("qx.allowUrlSettings")!=true){return;
}var urlSettings=document.location.search.slice(1).split("&");

for(var i=0;i<urlSettings.length;i++){var setting=urlSettings[i].split(":");

if(setting.length!=3||setting[0]!="qxsetting"){continue;
}this.set(setting[1],decodeURIComponent(setting[2]));
}}},defer:function(statics){statics.define("qx.allowUrlSettings",false);
statics.define("qx.allowUrlVariants",false);
statics.define("qx.propertyDebugLevel",0);
statics.__init();
}});
qx.Bootstrap.define("qx.Interface",{statics:{define:function(name,config){if(config){if(config.extend&&!(config.extend instanceof Array)){config.extend=[config.extend];
}{this.__validateConfig(name,config);
};
var iface=config.statics?config.statics:{};
if(config.extend){iface.$$extends=config.extend;
}
if(config.properties){iface.$$properties=config.properties;
}
if(config.members){iface.$$members=config.members;
}
if(config.events){iface.$$events=config.events;
}}else{var iface={};
}iface.$$type="Interface";
iface.name=name;
iface.toString=this.genericToString;
iface.basename=qx.Bootstrap.createNamespace(name,iface);
qx.Interface.$$registry[name]=iface;
return iface;
},getByName:function(name){return this.$$registry[name];
},isDefined:function(name){return this.getByName(name)!==undefined;
},getTotalNumber:function(){return qx.Bootstrap.objectGetLength(this.$$registry);
},flatten:function(ifaces){if(!ifaces){return [];
}var list=ifaces.concat();

for(var i=0,l=ifaces.length;i<l;i++){if(ifaces[i].$$extends){list.push.apply(list,this.flatten(ifaces[i].$$extends));
}}return list;
},__assertMembers:function(object,clazz,iface,wrap){var members=iface.$$members;

if(members){for(var key in members){if(qx.Bootstrap.isFunction(members[key])){var isPropertyMethod=this.__isPropertyMethod(clazz,key);
var hasMemberFunction=isPropertyMethod||qx.Bootstrap.isFunction(object[key]);

if(!hasMemberFunction){throw new Error('Implementation of method "'+key+'" is missing in class "'+clazz.classname+'" required by interface "'+iface.name+'"');
}var shouldWrapFunction=wrap===true&&!isPropertyMethod&&!qx.Bootstrap.hasInterface(clazz,iface);

if(shouldWrapFunction){object[key]=this.__wrapInterfaceMember(iface,object[key],key,members[key]);
}}else{if(typeof object[key]===undefined){if(typeof object[key]!=="function"){throw new Error('Implementation of member "'+key+'" is missing in class "'+clazz.classname+'" required by interface "'+iface.name+'"');
}}}}}},__isPropertyMethod:function(clazz,methodName){var match=methodName.match(/^(is|toggle|get|set|reset)(.*)$/);

if(!match){return false;
}var propertyName=qx.Bootstrap.firstLow(match[2]);
var isPropertyMethod=qx.Bootstrap.getPropertyDefinition(clazz,propertyName);

if(!isPropertyMethod){return false;
}var isBoolean=match[0]=="is"||match[0]=="toggle";

if(isBoolean){return qx.Bootstrap.getPropertyDefinition(clazz,propertyName).check=="Boolean";
}return true;
},__assertProperties:function(clazz,iface){if(iface.$$properties){for(var key in iface.$$properties){if(!qx.Bootstrap.getPropertyDefinition(clazz,key)){throw new Error('The property "'+key+'" is not supported by Class "'+clazz.classname+'"!');
}}}},__assertEvents:function(clazz,iface){if(iface.$$events){for(var key in iface.$$events){if(!qx.Bootstrap.supportsEvent(clazz,key)){throw new Error('The event "'+key+'" is not supported by Class "'+clazz.classname+'"!');
}}}},assertObject:function(object,iface){var clazz=object.constructor;
this.__assertMembers(object,clazz,iface,false);
this.__assertProperties(clazz,iface);
this.__assertEvents(clazz,iface);
var extend=iface.$$extends;

if(extend){for(var i=0,l=extend.length;i<l;i++){this.assertObject(object,extend[i]);
}}},assert:function(clazz,iface,wrap){this.__assertMembers(clazz.prototype,clazz,iface,wrap);
this.__assertProperties(clazz,iface);
this.__assertEvents(clazz,iface);
var extend=iface.$$extends;

if(extend){for(var i=0,l=extend.length;i<l;i++){this.assert(clazz,extend[i],wrap);
}}},genericToString:function(){return "[Interface "+this.name+"]";
},$$registry:{},__wrapInterfaceMember:function(iface,origFunction,functionName,preCondition){function wrappedFunction(){preCondition.apply(this,arguments);
return origFunction.apply(this,arguments);
}origFunction.wrapper=wrappedFunction;
return wrappedFunction;
},__allowedKeys:{"extend":"object","statics":"object","members":"object","properties":"object","events":"object"},__validateConfig:function(name,config){{var allowed=this.__allowedKeys;

for(var key in config){if(allowed[key]===undefined){throw new Error('The configuration key "'+key+'" in class "'+name+'" is not allowed!');
}
if(config[key]==null){throw new Error("Invalid key '"+key+"' in interface '"+name+"'! The value is undefined/null!");
}
if(allowed[key]!==null&&typeof config[key]!==allowed[key]){throw new Error('Invalid type of key "'+key+'" in interface "'+name+'"! The type of the key must be "'+allowed[key]+'"!');
}}var maps=["statics","members","properties","events"];

for(var i=0,l=maps.length;i<l;i++){var key=maps[i];

if(config[key]!==undefined&&(config[key] instanceof Array||config[key] instanceof RegExp||config[key] instanceof Date||config[key].classname!==undefined)){throw new Error('Invalid key "'+key+'" in interface "'+name+'"! The value needs to be a map!');
}}if(config.extend){for(var i=0,a=config.extend,l=a.length;i<l;i++){if(a[i]==null){throw new Error("Extends of interfaces must be interfaces. The extend number '"+i+1+"' in interface '"+name+"' is undefined/null!");
}
if(a[i].$$type!=="Interface"){throw new Error("Extends of interfaces must be interfaces. The extend number '"+i+1+"' in interface '"+name+"' is not an interface!");
}}}if(config.statics){for(var key in config.statics){if(key.toUpperCase()!==key){throw new Error('Invalid key "'+key+'" in interface "'+name+'"! Static constants must be all uppercase.');
}
switch(typeof config.statics[key]){case "boolean":case "string":case "number":break;
default:throw new Error('Invalid key "'+key+'" in interface "'+name+'"! Static constants must be all of a primitive type.');
}}}};
}}});
qx.Bootstrap.define("qx.Mixin",{statics:{define:function(name,config){if(config){if(config.include&&!(config.include instanceof Array)){config.include=[config.include];
}{this.__validateConfig(name,config);
};
var mixin=config.statics?config.statics:{};
qx.Bootstrap.setDisplayNames(mixin,name);

for(var key in mixin){if(mixin[key] instanceof Function){mixin[key].$$mixin=mixin;
}}if(config.construct){mixin.$$constructor=config.construct;
qx.Bootstrap.setDisplayName(config.construct,name,"constructor");
}
if(config.include){mixin.$$includes=config.include;
}
if(config.properties){mixin.$$properties=config.properties;
}
if(config.members){mixin.$$members=config.members;
qx.Bootstrap.setDisplayNames(config.members,name+".prototype");
}
for(var key in mixin.$$members){if(mixin.$$members[key] instanceof Function){mixin.$$members[key].$$mixin=mixin;
}}
if(config.events){mixin.$$events=config.events;
}
if(config.destruct){mixin.$$destructor=config.destruct;
qx.Bootstrap.setDisplayName(config.destruct,name,"destruct");
}}else{var mixin={};
}mixin.$$type="Mixin";
mixin.name=name;
mixin.toString=this.genericToString;
mixin.basename=qx.Bootstrap.createNamespace(name,mixin);
this.$$registry[name]=mixin;
return mixin;
},checkCompatibility:function(mixins){var list=this.flatten(mixins);
var len=list.length;

if(len<2){return true;
}var properties={};
var members={};
var events={};
var mixin;

for(var i=0;i<len;i++){mixin=list[i];

for(var key in mixin.events){if(events[key]){throw new Error('Conflict between mixin "'+mixin.name+'" and "'+events[key]+'" in member "'+key+'"!');
}events[key]=mixin.name;
}
for(var key in mixin.properties){if(properties[key]){throw new Error('Conflict between mixin "'+mixin.name+'" and "'+properties[key]+'" in property "'+key+'"!');
}properties[key]=mixin.name;
}
for(var key in mixin.members){if(members[key]){throw new Error('Conflict between mixin "'+mixin.name+'" and "'+members[key]+'" in member "'+key+'"!');
}members[key]=mixin.name;
}}return true;
},isCompatible:function(mixin,clazz){var list=qx.Bootstrap.getMixins(clazz);
list.push(mixin);
return qx.Mixin.checkCompatibility(list);
},getByName:function(name){return this.$$registry[name];
},isDefined:function(name){return this.getByName(name)!==undefined;
},getTotalNumber:function(){return qx.Bootstrap.objectGetLength(this.$$registry);
},flatten:function(mixins){if(!mixins){return [];
}var list=mixins.concat();

for(var i=0,l=mixins.length;i<l;i++){if(mixins[i].$$includes){list.push.apply(list,this.flatten(mixins[i].$$includes));
}}return list;
},genericToString:function(){return "[Mixin "+this.name+"]";
},$$registry:{},__allowedKeys:{"include":"object","statics":"object","members":"object","properties":"object","events":"object","destruct":"function","construct":"function"},__validateConfig:function(name,config){var allowed=this.__allowedKeys;

for(var key in config){if(!allowed[key]){throw new Error('The configuration key "'+key+'" in mixin "'+name+'" is not allowed!');
}
if(config[key]==null){throw new Error('Invalid key "'+key+'" in mixin "'+name+'"! The value is undefined/null!');
}
if(allowed[key]!==null&&typeof config[key]!==allowed[key]){throw new Error('Invalid type of key "'+key+'" in mixin "'+name+'"! The type of the key must be "'+allowed[key]+'"!');
}}var maps=["statics","members","properties","events"];

for(var i=0,l=maps.length;i<l;i++){var key=maps[i];

if(config[key]!==undefined&&(config[key] instanceof Array||config[key] instanceof RegExp||config[key] instanceof Date||config[key].classname!==undefined)){throw new Error('Invalid key "'+key+'" in mixin "'+name+'"! The value needs to be a map!');
}}if(config.include){for(var i=0,a=config.include,l=a.length;i<l;i++){if(a[i]==null){throw new Error("Includes of mixins must be mixins. The include number '"+(i+1)+"' in mixin '"+name+"'is undefined/null!");
}
if(a[i].$$type!=="Mixin"){throw new Error("Includes of mixins must be mixins. The include number '"+(i+1)+"' in mixin '"+name+"'is not a mixin!");
}}this.checkCompatibility(config.include);
}}}});
qx.Bootstrap.define("qx.core.Property",{statics:{__checks:{"Boolean":'qx.core.Assert.assertBoolean(value, msg) || true',"String":'qx.core.Assert.assertString(value, msg) || true',"Number":'qx.core.Assert.assertNumber(value, msg) || true',"Integer":'qx.core.Assert.assertInteger(value, msg) || true',"PositiveNumber":'qx.core.Assert.assertPositiveNumber(value, msg) || true',"PositiveInteger":'qx.core.Assert.assertPositiveInteger(value, msg) || true',"Error":'qx.core.Assert.assertInstance(value, Error, msg) || true',"RegExp":'qx.core.Assert.assertInstance(value, RegExp, msg) || true',"Object":'qx.core.Assert.assertObject(value, msg) || true',"Array":'qx.core.Assert.assertArray(value, msg) || true',"Map":'qx.core.Assert.assertMap(value, msg) || true',"Function":'qx.core.Assert.assertFunction(value, msg) || true',"Date":'qx.core.Assert.assertInstance(value, Date, msg) || true',"Node":'value !== null && value.nodeType !== undefined',"Element":'value !== null && value.nodeType === 1 && value.attributes',"Document":'value !== null && value.nodeType === 9 && value.documentElement',"Window":'value !== null && value.document',"Event":'value !== null && value.type !== undefined',"Class":'value !== null && value.$$type === "Class"',"Mixin":'value !== null && value.$$type === "Mixin"',"Interface":'value !== null && value.$$type === "Interface"',"Theme":'value !== null && value.$$type === "Theme"',"Color":'qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)',"Decorator":'value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)',"Font":'value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)'},__dereference:{"Node":true,"Element":true,"Document":true,"Window":true,"Event":true},$$inherit:"inherit",$$store:{runtime:{},user:{},theme:{},inherit:{},init:{},useinit:{}},$$method:{get:{},set:{},reset:{},init:{},refresh:{},setRuntime:{},resetRuntime:{},setThemed:{},resetThemed:{}},$$allowedKeys:{name:"string",dispose:"boolean",dereference:"boolean",inheritable:"boolean",nullable:"boolean",themeable:"boolean",refine:"boolean",init:null,apply:"string",event:"string",check:null,transform:"string",deferredInit:"boolean",validate:null},$$allowedGroupKeys:{name:"string",group:"object",mode:"string",themeable:"boolean"},$$inheritable:{},__executeOptimizedRefresh:function(clazz){var inheritables=this.__getInheritablesOfClass(clazz);

if(!inheritables.length){var refresher=qx.lang.Function.empty;
}else{refresher=this.__createRefresher(inheritables);
}clazz.prototype.$$refreshInheritables=refresher;
},__getInheritablesOfClass:function(clazz){var inheritable=[];

while(clazz){var properties=clazz.$$properties;

if(properties){for(var name in this.$$inheritable){if(properties[name]&&properties[name].inheritable){inheritable.push(name);
}}}clazz=clazz.superclass;
}return inheritable;
},__createRefresher:function(inheritables){var inherit=this.$$store.inherit;
var init=this.$$store.init;
var refresh=this.$$method.refresh;
var code=["var parent = this.getLayoutParent();","if (!parent) return;"];

for(var i=0,l=inheritables.length;i<l;i++){var name=inheritables[i];
code.push("var value = parent.",inherit[name],";","if (value===undefined) value = parent.",init[name],";","this.",refresh[name],"(value);");
}return new Function(code.join(""));
},refresh:function(widget){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"qx.core.Property.refresh() is deprecated. Please use the member function '$$refreshInheritables()'");
};
widget.$$refreshInheritables();
},attachRefreshInheritables:function(clazz){clazz.prototype.$$refreshInheritables=function(){qx.core.Property.__executeOptimizedRefresh(clazz);
return this.$$refreshInheritables();
};
},attachMethods:function(clazz,name,config){config.group?this.__attachGroupMethods(clazz,config,name):this.__attachPropertyMethods(clazz,config,name);
},__attachGroupMethods:function(clazz,config,name){var upname=qx.Bootstrap.firstUp(name);
var members=clazz.prototype;
var themeable=config.themeable===true;
{if(qx.core.Setting.get("qx.propertyDebugLevel")>1){qx.Bootstrap.debug("Generating property group: "+name);
}};
var setter=[];
var resetter=[];

if(themeable){var styler=[];
var unstyler=[];
}var argHandler="var a=arguments[0] instanceof Array?arguments[0]:arguments;";
setter.push(argHandler);

if(themeable){styler.push(argHandler);
}
if(config.mode=="shorthand"){var shorthand="a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));";
setter.push(shorthand);

if(themeable){styler.push(shorthand);
}}
for(var i=0,a=config.group,l=a.length;i<l;i++){{if(!this.$$method.set[a[i]]||!this.$$method.reset[a[i]]){throw new Error("Cannot create property group '"+name+"' including non-existing property '"+a[i]+"'!");
}};
setter.push("this.",this.$$method.set[a[i]],"(a[",i,"]);");
resetter.push("this.",this.$$method.reset[a[i]],"();");

if(themeable){{if(!this.$$method.setThemed[a[i]]){throw new Error("Cannot add the non themable property '"+a[i]+"' to the themable property group '"+name+"'");
}};
styler.push("this.",this.$$method.setThemed[a[i]],"(a[",i,"]);");
unstyler.push("this.",this.$$method.resetThemed[a[i]],"();");
}}this.$$method.set[name]="set"+upname;
members[this.$$method.set[name]]=new Function(setter.join(""));
this.$$method.reset[name]="reset"+upname;
members[this.$$method.reset[name]]=new Function(resetter.join(""));

if(themeable){this.$$method.setThemed[name]="setThemed"+upname;
members[this.$$method.setThemed[name]]=new Function(styler.join(""));
this.$$method.resetThemed[name]="resetThemed"+upname;
members[this.$$method.resetThemed[name]]=new Function(unstyler.join(""));
}},__attachPropertyMethods:function(clazz,config,name){var upname=qx.Bootstrap.firstUp(name);
var members=clazz.prototype;
{if(qx.core.Setting.get("qx.propertyDebugLevel")>1){qx.Bootstrap.debug("Generating property wrappers: "+name);
}};
{if(config.dispose){if(!config.dereference){config.dereference=config.dispose;
}qx.log.Logger.warn("The property key 'dispose' is deprecated: "+"Please use 'dereference' instead.");
qx.log.Logger.trace();
}};
if(config.dereference===undefined&&typeof config.check==="string"){config.dereference=this.__shouldBeDereferenced(config.check);
}var method=this.$$method;
var store=this.$$store;
store.runtime[name]="$$runtime_"+name;
store.user[name]="$$user_"+name;
store.theme[name]="$$theme_"+name;
store.init[name]="$$init_"+name;
store.inherit[name]="$$inherit_"+name;
store.useinit[name]="$$useinit_"+name;
method.get[name]="get"+upname;
members[method.get[name]]=function(){return qx.core.Property.executeOptimizedGetter(this,clazz,name,"get");
};
method.set[name]="set"+upname;
members[method.set[name]]=function(value){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"set",arguments);
};
method.reset[name]="reset"+upname;
members[method.reset[name]]=function(){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"reset");
};

if(config.inheritable||config.apply||config.event||config.deferredInit){method.init[name]="init"+upname;
members[method.init[name]]=function(value){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"init",arguments);
};
}
if(config.inheritable){method.refresh[name]="refresh"+upname;
members[method.refresh[name]]=function(value){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"refresh",arguments);
};
}method.setRuntime[name]="setRuntime"+upname;
members[method.setRuntime[name]]=function(value){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"setRuntime",arguments);
};
method.resetRuntime[name]="resetRuntime"+upname;
members[method.resetRuntime[name]]=function(){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"resetRuntime");
};

if(config.themeable){method.setThemed[name]="setThemed"+upname;
members[method.setThemed[name]]=function(value){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"setThemed",arguments);
};
method.resetThemed[name]="resetThemed"+upname;
members[method.resetThemed[name]]=function(){return qx.core.Property.executeOptimizedSetter(this,clazz,name,"resetThemed");
};
}
if(config.check==="Boolean"){members["toggle"+upname]=new Function("return this."+method.set[name]+"(!this."+method.get[name]+"())");
members["is"+upname]=new Function("return this."+method.get[name]+"()");
}},__shouldBeDereferenced:function(check){return !!this.__dereference[check];
},__shouldBeDereferencedOld:function(check){return this.__dereference[check]||qx.Bootstrap.classIsDefined(check)||(qx.Interface&&qx.Interface.isDefined(check));
},__errors:{0:'Could not change or apply init value after constructing phase!',1:'Requires exactly one argument!',2:'Undefined value is not allowed!',3:'Does not allow any arguments!',4:'Null value is not allowed!',5:'Is invalid!'},error:function(obj,id,property,variant,value){var classname=obj.constructor.classname;
var msg="Error in property "+property+" of class "+classname+" in method "+this.$$method[variant][property]+" with incoming value '"+value+"': ";
throw new Error(msg+(this.__errors[id]||"Unknown reason: "+id));
},__unwrapFunctionFromCode:function(instance,members,name,variant,code,args){var store=this.$$method[variant][name];
{if(qx.core.Setting.get("qx.propertyDebugLevel")>1){qx.Bootstrap.debug("Code["+this.$$method[variant][name]+"]: "+code.join(""));
}try{members[store]=new Function("value",code.join(""));
}catch(ex){throw new Error("Malformed generated code to unwrap method: "+this.$$method[variant][name]+"\n"+code.join(""));
}};
{members[store]=qx.core.Aspect.wrap(instance.classname+"."+store,members[store],"property");
};
qx.Bootstrap.setDisplayName(members[store],instance.classname+".prototype",store);
if(args===undefined){return instance[store]();
}else{return instance[store].apply(instance,args);
}},executeOptimizedGetter:function(instance,clazz,name,variant){var config=clazz.$$properties[name];
var members=clazz.prototype;
var code=[];
var store=this.$$store;
code.push('if(this.',store.runtime[name],'!==undefined)');
code.push('return this.',store.runtime[name],';');

if(config.inheritable){code.push('else if(this.',store.inherit[name],'!==undefined)');
code.push('return this.',store.inherit[name],';');
code.push('else ');
}code.push('if(this.',store.user[name],'!==undefined)');
code.push('return this.',store.user[name],';');

if(config.themeable){code.push('else if(this.',store.theme[name],'!==undefined)');
code.push('return this.',store.theme[name],';');
}
if(config.deferredInit&&config.init===undefined){code.push('else if(this.',store.init[name],'!==undefined)');
code.push('return this.',store.init[name],';');
}code.push('else ');

if(config.init!==undefined){if(config.inheritable){code.push('var init=this.',store.init[name],';');

if(config.nullable){code.push('if(init==qx.core.Property.$$inherit)init=null;');
}else if(config.init!==undefined){code.push('return this.',store.init[name],';');
}else{code.push('if(init==qx.core.Property.$$inherit)throw new Error("Inheritable property ',name,' of an instance of ',clazz.classname,' is not (yet) ready!");');
}code.push('return init;');
}else{code.push('return this.',store.init[name],';');
}}else if(config.inheritable||config.nullable){code.push('return null;');
}else{code.push('throw new Error("Property ',name,' of an instance of ',clazz.classname,' is not (yet) ready!");');
}return this.__unwrapFunctionFromCode(instance,members,name,variant,code);
},executeOptimizedSetter:function(instance,clazz,name,variant,args){var config=clazz.$$properties[name];
var members=clazz.prototype;
var code=[];
var incomingValue=variant==="set"||variant==="setThemed"||variant==="setRuntime"||(variant==="init"&&config.init===undefined);
var hasCallback=config.apply||config.event||config.inheritable;
var store=this.__getStore(variant,name);
this.__emitSetterPreConditions(code,config,name,variant,incomingValue);

if(incomingValue){this.__emitIncomingValueTransformation(code,clazz,config,name);
}
if(hasCallback){this.__emitOldNewComparison(code,incomingValue,store,variant);
}
if(config.inheritable){code.push('var inherit=prop.$$inherit;');
}{if(incomingValue){this.__emitIncomingValueValidation(code,config,clazz,name,variant);
}};

if(!hasCallback){this.__emitStoreValue(code,name,variant,incomingValue);
}else{this.__emitStoreComputedAndOldValue(code,config,name,variant,incomingValue);
}
if(config.inheritable){this.__emitStoreInheritedPropertyValue(code,config,name,variant);
}else if(hasCallback){this.__emitNormalizeUndefinedValues(code,config,name,variant);
}
if(hasCallback){this.__emitCallCallback(code,config,name);
if(config.inheritable&&members._getChildren){this.__emitRefreshChildrenValue(code,name);
}}if(incomingValue){code.push('return value;');
}return this.__unwrapFunctionFromCode(instance,members,name,variant,code,args);
},__getStore:function(variant,name){if(variant==="setRuntime"||variant==="resetRuntime"){var store=this.$$store.runtime[name];
}else if(variant==="setThemed"||variant==="resetThemed"){store=this.$$store.theme[name];
}else if(variant==="init"){store=this.$$store.init[name];
}else{store=this.$$store.user[name];
}return store;
},__emitSetterPreConditions:function(code,config,name,variant,incomingValue){{code.push('var prop=qx.core.Property;');

if(variant==="init"){code.push('if(this.$$initialized)prop.error(this,0,"',name,'","',variant,'",value);');
}
if(variant==="refresh"){}else if(incomingValue){code.push('if(arguments.length!==1)prop.error(this,1,"',name,'","',variant,'",value);');
code.push('if(value===undefined)prop.error(this,2,"',name,'","',variant,'",value);');
}else{code.push('if(arguments.length!==0)prop.error(this,3,"',name,'","',variant,'",value);');
}};
},__emitIncomingValueTransformation:function(code,clazz,config,name){if(config.transform){code.push('value=this.',config.transform,'(value);');
}if(config.validate){if(typeof config.validate==="string"){code.push('this.',config.validate,'(value);');
}else if(config.validate instanceof Function){code.push(clazz.classname,'.$$properties.',name);
code.push('.validate.call(this, value);');
}}},__emitOldNewComparison:function(code,incomingValue,store,variant){var resetValue=(variant==="reset"||variant==="resetThemed"||variant==="resetRuntime");

if(incomingValue){code.push('if(this.',store,'===value)return value;');
}else if(resetValue){code.push('if(this.',store,'===undefined)return;');
}},__emitIncomingValueValidation:function(code,config,clazz,name,variant){if(!config.nullable){code.push('if(value===null)prop.error(this,4,"',name,'","',variant,'",value);');
}if(config.check!==undefined){code.push('var msg = "Invalid incoming value for property \''+name+'\' of class \''+clazz.classname+'\'";');
if(config.nullable){code.push('if(value!==null)');
}if(config.inheritable){code.push('if(value!==inherit)');
}code.push('if(');

if(this.__checks[config.check]!==undefined){code.push('!(',this.__checks[config.check],')');
}else if(qx.Class.isDefined(config.check)){code.push('qx.core.Assert.assertInstance(value, qx.Class.getByName("',config.check,'"), msg)');
}else if(qx.Interface&&qx.Interface.isDefined(config.check)){code.push('qx.core.Assert.assertInterface(value, qx.Interface.getByName("',config.check,'"), msg)');
}else if(typeof config.check==="function"){code.push('!',clazz.classname,'.$$properties.',name);
code.push('.check.call(this, value)');
}else if(typeof config.check==="string"){code.push('!(',config.check,')');
}else if(config.check instanceof Array){code.push('qx.core.Assert.assertInArray(value, ',clazz.classname,'.$$properties.',name,'.check, msg)');
}else{throw new Error("Could not add check to property "+name+" of class "+clazz.classname);
}code.push(')prop.error(this,5,"',name,'","',variant,'",value);');
}},__emitStoreValue:function(code,name,variant,incomingValue){if(variant==="setRuntime"){code.push('this.',this.$$store.runtime[name],'=value;');
}else if(variant==="resetRuntime"){code.push('if(this.',this.$$store.runtime[name],'!==undefined)');
code.push('delete this.',this.$$store.runtime[name],';');
}else if(variant==="set"){code.push('this.',this.$$store.user[name],'=value;');
}else if(variant==="reset"){code.push('if(this.',this.$$store.user[name],'!==undefined)');
code.push('delete this.',this.$$store.user[name],';');
}else if(variant==="setThemed"){code.push('this.',this.$$store.theme[name],'=value;');
}else if(variant==="resetThemed"){code.push('if(this.',this.$$store.theme[name],'!==undefined)');
code.push('delete this.',this.$$store.theme[name],';');
}else if(variant==="init"&&incomingValue){code.push('this.',this.$$store.init[name],'=value;');
}},__emitStoreComputedAndOldValue:function(code,config,name,variant,incomingValue){if(config.inheritable){code.push('var computed, old=this.',this.$$store.inherit[name],';');
}else{code.push('var computed, old;');
}code.push('if(this.',this.$$store.runtime[name],'!==undefined){');

if(variant==="setRuntime"){code.push('computed=this.',this.$$store.runtime[name],'=value;');
}else if(variant==="resetRuntime"){code.push('delete this.',this.$$store.runtime[name],';');
code.push('if(this.',this.$$store.user[name],'!==undefined)');
code.push('computed=this.',this.$$store.user[name],';');
code.push('else if(this.',this.$$store.theme[name],'!==undefined)');
code.push('computed=this.',this.$$store.theme[name],';');
code.push('else if(this.',this.$$store.init[name],'!==undefined){');
code.push('computed=this.',this.$$store.init[name],';');
code.push('this.',this.$$store.useinit[name],'=true;');
code.push('}');
}else{code.push('old=computed=this.',this.$$store.runtime[name],';');
if(variant==="set"){code.push('this.',this.$$store.user[name],'=value;');
}else if(variant==="reset"){code.push('delete this.',this.$$store.user[name],';');
}else if(variant==="setThemed"){code.push('this.',this.$$store.theme[name],'=value;');
}else if(variant==="resetThemed"){code.push('delete this.',this.$$store.theme[name],';');
}else if(variant==="init"&&incomingValue){code.push('this.',this.$$store.init[name],'=value;');
}}code.push('}');
code.push('else if(this.',this.$$store.user[name],'!==undefined){');

if(variant==="set"){if(!config.inheritable){code.push('old=this.',this.$$store.user[name],';');
}code.push('computed=this.',this.$$store.user[name],'=value;');
}else if(variant==="reset"){if(!config.inheritable){code.push('old=this.',this.$$store.user[name],';');
}code.push('delete this.',this.$$store.user[name],';');
code.push('if(this.',this.$$store.runtime[name],'!==undefined)');
code.push('computed=this.',this.$$store.runtime[name],';');
code.push('if(this.',this.$$store.theme[name],'!==undefined)');
code.push('computed=this.',this.$$store.theme[name],';');
code.push('else if(this.',this.$$store.init[name],'!==undefined){');
code.push('computed=this.',this.$$store.init[name],';');
code.push('this.',this.$$store.useinit[name],'=true;');
code.push('}');
}else{if(variant==="setRuntime"){code.push('computed=this.',this.$$store.runtime[name],'=value;');
}else if(config.inheritable){code.push('computed=this.',this.$$store.user[name],';');
}else{code.push('old=computed=this.',this.$$store.user[name],';');
}if(variant==="setThemed"){code.push('this.',this.$$store.theme[name],'=value;');
}else if(variant==="resetThemed"){code.push('delete this.',this.$$store.theme[name],';');
}else if(variant==="init"&&incomingValue){code.push('this.',this.$$store.init[name],'=value;');
}}code.push('}');
if(config.themeable){code.push('else if(this.',this.$$store.theme[name],'!==undefined){');

if(!config.inheritable){code.push('old=this.',this.$$store.theme[name],';');
}
if(variant==="setRuntime"){code.push('computed=this.',this.$$store.runtime[name],'=value;');
}else if(variant==="set"){code.push('computed=this.',this.$$store.user[name],'=value;');
}else if(variant==="setThemed"){code.push('computed=this.',this.$$store.theme[name],'=value;');
}else if(variant==="resetThemed"){code.push('delete this.',this.$$store.theme[name],';');
code.push('if(this.',this.$$store.init[name],'!==undefined){');
code.push('computed=this.',this.$$store.init[name],';');
code.push('this.',this.$$store.useinit[name],'=true;');
code.push('}');
}else if(variant==="init"){if(incomingValue){code.push('this.',this.$$store.init[name],'=value;');
}code.push('computed=this.',this.$$store.theme[name],';');
}else if(variant==="refresh"){code.push('computed=this.',this.$$store.theme[name],';');
}code.push('}');
}code.push('else if(this.',this.$$store.useinit[name],'){');

if(!config.inheritable){code.push('old=this.',this.$$store.init[name],';');
}
if(variant==="init"){if(incomingValue){code.push('computed=this.',this.$$store.init[name],'=value;');
}else{code.push('computed=this.',this.$$store.init[name],';');
}}else if(variant==="set"||variant==="setRuntime"||variant==="setThemed"||variant==="refresh"){code.push('delete this.',this.$$store.useinit[name],';');

if(variant==="setRuntime"){code.push('computed=this.',this.$$store.runtime[name],'=value;');
}else if(variant==="set"){code.push('computed=this.',this.$$store.user[name],'=value;');
}else if(variant==="setThemed"){code.push('computed=this.',this.$$store.theme[name],'=value;');
}else if(variant==="refresh"){code.push('computed=this.',this.$$store.init[name],';');
}}code.push('}');
if(variant==="set"||variant==="setRuntime"||variant==="setThemed"||variant==="init"){code.push('else{');

if(variant==="setRuntime"){code.push('computed=this.',this.$$store.runtime[name],'=value;');
}else if(variant==="set"){code.push('computed=this.',this.$$store.user[name],'=value;');
}else if(variant==="setThemed"){code.push('computed=this.',this.$$store.theme[name],'=value;');
}else if(variant==="init"){if(incomingValue){code.push('computed=this.',this.$$store.init[name],'=value;');
}else{code.push('computed=this.',this.$$store.init[name],';');
}code.push('this.',this.$$store.useinit[name],'=true;');
}code.push('}');
}},__emitStoreInheritedPropertyValue:function(code,config,name,variant){code.push('if(computed===undefined||computed===inherit){');

if(variant==="refresh"){code.push('computed=value;');
}else{code.push('var pa=this.getLayoutParent();if(pa)computed=pa.',this.$$store.inherit[name],';');
}code.push('if((computed===undefined||computed===inherit)&&');
code.push('this.',this.$$store.init[name],'!==undefined&&');
code.push('this.',this.$$store.init[name],'!==inherit){');
code.push('computed=this.',this.$$store.init[name],';');
code.push('this.',this.$$store.useinit[name],'=true;');
code.push('}else{');
code.push('delete this.',this.$$store.useinit[name],';}');
code.push('}');
code.push('if(old===computed)return value;');
code.push('if(computed===inherit){');
code.push('computed=undefined;delete this.',this.$$store.inherit[name],';');
code.push('}');
code.push('else if(computed===undefined)');
code.push('delete this.',this.$$store.inherit[name],';');
code.push('else this.',this.$$store.inherit[name],'=computed;');
code.push('var backup=computed;');
if(config.init!==undefined&&variant!=="init"){code.push('if(old===undefined)old=this.',this.$$store.init[name],";");
}else{code.push('if(old===undefined)old=null;');
}code.push('if(computed===undefined||computed==inherit)computed=null;');
},__emitNormalizeUndefinedValues:function(code,config,name,variant){if(variant!=="set"&&variant!=="setRuntime"&&variant!=="setThemed"){code.push('if(computed===undefined)computed=null;');
}code.push('if(old===computed)return value;');
if(config.init!==undefined&&variant!=="init"){code.push('if(old===undefined)old=this.',this.$$store.init[name],";");
}else{code.push('if(old===undefined)old=null;');
}},__emitCallCallback:function(code,config,name){if(config.apply){code.push('this.',config.apply,'(computed, old, "',name,'");');
}if(config.event){code.push("var reg=qx.event.Registration;","if(reg.hasListener(this, '",config.event,"')){","reg.fireEvent(this, '",config.event,"', qx.event.type.Data, [computed, old]",")}");
}},__emitRefreshChildrenValue:function(code,name){code.push('var a=this._getChildren();if(a)for(var i=0,l=a.length;i<l;i++){');
code.push('if(a[i].',this.$$method.refresh[name],')a[i].',this.$$method.refresh[name],'(backup);');
code.push('}');
}},defer:function(statics){var ie6=navigator.userAgent.indexOf("MSIE 6.0")!=-1;
var ff2=navigator.userAgent.indexOf("rv:1.8.1")!=-1;
if(ie6||ff2){statics.__shouldBeDereferenced=statics.__shouldBeDereferencedOld;
}}});
qx.Bootstrap.define("qx.core.Aspect",{statics:{__registry:[],wrap:function(fullName,fcn,type){var before=[];
var after=[];
var reg=this.__registry;
var entry;

for(var i=0;i<reg.length;i++){entry=reg[i];

if((entry.type==null||type==entry.type||entry.type=="*")&&(entry.name==null||fullName.match(entry.name))){entry.pos==-1?before.push(entry.fcn):after.push(entry.fcn);
}}
if(before.length===0&&after.length===0){return fcn;
}var wrapper=function(){for(var i=0;i<before.length;i++){before[i].call(this,fullName,fcn,type,arguments);
}var ret=fcn.apply(this,arguments);

for(var i=0;i<after.length;i++){after[i].call(this,fullName,fcn,type,arguments,ret);
}return ret;
};

if(type!=="static"){wrapper.self=fcn.self;
wrapper.base=fcn.base;
}fcn.wrapper=wrapper;
wrapper.original=fcn;
return wrapper;
},addAdvice:function(fcn,position,type,name){this.__registry.push({fcn:fcn,pos:position==="before"?-1:1,type:type,name:name});
}}});
qx.Bootstrap.define("qx.Class",{statics:{define:function(name,config){if(!config){var config={};
}if(config.include&&!(config.include instanceof Array)){config.include=[config.include];
}if(config.implement&&!(config.implement instanceof Array)){config.implement=[config.implement];
}var implicitType=false;

if(!config.hasOwnProperty("extend")&&!config.type){config.type="static";
implicitType=true;
}{try{this.__validateConfig(name,config);
}catch(ex){if(implicitType){ex.message='Assumed static class because no "extend" key was found. '+ex.message;
}throw ex;
}};
var clazz=this.__createClass(name,config.type,config.extend,config.statics,config.construct,config.destruct,config.include);
if(config.extend){if(config.properties){this.__addProperties(clazz,config.properties,true);
}if(config.members){this.__addMembers(clazz,config.members,true,true,false);
}if(config.events){this.__addEvents(clazz,config.events,true);
}if(config.include){for(var i=0,l=config.include.length;i<l;i++){this.__addMixin(clazz,config.include[i],false);
}}}if(config.settings){for(var key in config.settings){qx.core.Setting.define(key,config.settings[key]);
}}if(config.variants){for(var key in config.variants){qx.core.Variant.define(key,config.variants[key].allowedValues,config.variants[key].defaultValue);
}}if(config.implement){for(var i=0,l=config.implement.length;i<l;i++){this.__addInterface(clazz,config.implement[i]);
}}{this.__validateAbstractInterfaces(clazz);
};
if(config.defer){config.defer.self=clazz;
config.defer(clazz,clazz.prototype,{add:function(name,config){var properties={};
properties[name]=config;
qx.Class.__addProperties(clazz,properties,true);
}});
}return clazz;
},undefine:function(name){delete this.$$registry[name];
var ns=name.split(".");
var objects=[window];

for(var i=0;i<ns.length;i++){objects.push(objects[i][ns[i]]);
}for(var i=objects.length-1;i>=1;i--){var last=objects[i];
var parent=objects[i-1];

if(qx.Bootstrap.isFunction(last)||qx.Bootstrap.objectGetLength(last)===0){delete parent[ns[i-1]];
}else{break;
}}},isDefined:qx.Bootstrap.classIsDefined,getTotalNumber:function(){return qx.Bootstrap.objectGetLength(this.$$registry);
},getByName:qx.Bootstrap.getByName,include:function(clazz,mixin){{if(!mixin){throw new Error("Includes of mixins must be mixins. A dynamic mixin of class '"+clazz.classname+"' is undefined/null!");
}qx.Mixin.isCompatible(mixin,clazz);
};
qx.Class.__addMixin(clazz,mixin,false);
},patch:function(clazz,mixin){{if(!mixin){throw new Error("Includes of mixins must be mixins. A dynamic mixin of class '"+clazz.classname+"' is undefined/null!");
}qx.Mixin.isCompatible(mixin,clazz);
};
qx.Class.__addMixin(clazz,mixin,true);
},isSubClassOf:function(clazz,superClass){if(!clazz){return false;
}
if(clazz==superClass){return true;
}
if(clazz.prototype instanceof superClass){return true;
}return false;
},getPropertyDefinition:qx.Bootstrap.getPropertyDefinition,getProperties:function(clazz){var list=[];

while(clazz){if(clazz.$$properties){list.push.apply(list,qx.Bootstrap.getKeys(clazz.$$properties));
}clazz=clazz.superclass;
}return list;
},getByProperty:function(clazz,name){while(clazz){if(clazz.$$properties&&clazz.$$properties[name]){return clazz;
}clazz=clazz.superclass;
}return null;
},hasProperty:qx.Bootstrap.hasProperty,getEventType:qx.Bootstrap.getEventType,supportsEvent:qx.Bootstrap.supportsEvent,hasOwnMixin:function(clazz,mixin){return clazz.$$includes&&clazz.$$includes.indexOf(mixin)!==-1;
},getByMixin:function(clazz,mixin){var list,i,l;

while(clazz){if(clazz.$$includes){list=clazz.$$flatIncludes;

for(i=0,l=list.length;i<l;i++){if(list[i]===mixin){return clazz;
}}}clazz=clazz.superclass;
}return null;
},getMixins:qx.Bootstrap.getMixins,hasMixin:function(clazz,mixin){return !!this.getByMixin(clazz,mixin);
},hasOwnInterface:function(clazz,iface){return clazz.$$implements&&clazz.$$implements.indexOf(iface)!==-1;
},getByInterface:qx.Bootstrap.getByInterface,getInterfaces:function(clazz){var list=[];

while(clazz){if(clazz.$$implements){list.push.apply(list,clazz.$$flatImplements);
}clazz=clazz.superclass;
}return list;
},hasInterface:qx.Bootstrap.hasInterface,implementsInterface:function(obj,iface){var clazz=obj.constructor;

if(this.hasInterface(clazz,iface)){return true;
}
try{qx.Interface.assertObject(obj,iface);
return true;
}catch(ex){}
try{qx.Interface.assert(clazz,iface,false);
return true;
}catch(ex){}return false;
},getInstance:function(){if(!this.$$instance){this.$$allowconstruct=true;
this.$$instance=new this;
delete this.$$allowconstruct;
}return this.$$instance;
},genericToString:function(){return "[Class "+this.classname+"]";
},$$registry:qx.Bootstrap.$$registry,__allowedKeys:{"type":"string","extend":"function","implement":"object","include":"object","construct":"function","statics":"object","properties":"object","members":"object","settings":"object","variants":"object","events":"object","defer":"function","destruct":"function"},__staticAllowedKeys:{"type":"string","statics":"object","settings":"object","variants":"object","defer":"function"},__validateConfig:function(name,config){if(config.type&&!(config.type==="static"||config.type==="abstract"||config.type==="singleton")){throw new Error('Invalid type "'+config.type+'" definition for class "'+name+'"!');
}if(config.type&&config.type!=="static"&&!config.extend){throw new Error('Invalid config in class "'+name+'"! Every non-static class has to extend at least the "qx.core.Object" class.');
}var allowed=config.type==="static"?this.__staticAllowedKeys:this.__allowedKeys;

for(var key in config){if(!allowed[key]){throw new Error('The configuration key "'+key+'" in class "'+name+'" is not allowed!');
}
if(config[key]==null){throw new Error('Invalid key "'+key+'" in class "'+name+'"! The value is undefined/null!');
}
if(typeof config[key]!==allowed[key]){throw new Error('Invalid type of key "'+key+'" in class "'+name+'"! The type of the key must be "'+allowed[key]+'"!');
}}var maps=["statics","properties","members","settings","variants","events"];

for(var i=0,l=maps.length;i<l;i++){var key=maps[i];

if(config[key]!==undefined&&(config[key].$$hash!==undefined||!qx.Bootstrap.isObject(config[key]))){throw new Error('Invalid key "'+key+'" in class "'+name+'"! The value needs to be a map!');
}}if(config.include){if(config.include instanceof Array){for(var i=0,a=config.include,l=a.length;i<l;i++){if(a[i]==null||a[i].$$type!=="Mixin"){throw new Error('The include definition in class "'+name+'" contains an invalid mixin at position '+i+': '+a[i]);
}}}else{throw new Error('Invalid include definition in class "'+name+'"! Only mixins and arrays of mixins are allowed!');
}}if(config.implement){if(config.implement instanceof Array){for(var i=0,a=config.implement,l=a.length;i<l;i++){if(a[i]==null||a[i].$$type!=="Interface"){throw new Error('The implement definition in class "'+name+'" contains an invalid interface at position '+i+': '+a[i]);
}}}else{throw new Error('Invalid implement definition in class "'+name+'"! Only interfaces and arrays of interfaces are allowed!');
}}if(config.include){try{qx.Mixin.checkCompatibility(config.include);
}catch(ex){throw new Error('Error in include definition of class "'+name+'"! '+ex.message);
}}if(config.settings){for(var key in config.settings){if(key.substr(0,key.indexOf("."))!=name.substr(0,name.indexOf("."))){throw new Error('Forbidden setting "'+key+'" found in "'+name+'". It is forbidden to define a default setting for an external namespace!');
}}}if(config.variants){for(var key in config.variants){if(key.substr(0,key.indexOf("."))!=name.substr(0,name.indexOf("."))){throw new Error('Forbidden variant "'+key+'" found in "'+name+'". It is forbidden to define a variant for an external namespace!');
}}}},__validateAbstractInterfaces:function(clazz){var superclass=clazz.superclass;

while(superclass){if(superclass.$$classtype!=="abstract"){break;
}var interfaces=superclass.$$implements;

if(interfaces){for(var i=0;i<interfaces.length;i++){qx.Interface.assert(clazz,interfaces[i],true);
}}superclass=superclass.superclass;
}},__createClass:function(name,type,extend,statics,construct,destruct,mixins){var clazz;

if(!extend&&false){clazz=statics||{};
qx.Bootstrap.setDisplayNames(clazz,name);
}else{var clazz={};

if(extend){if(!construct){construct=this.__createDefaultConstructor();
}
if(this.__needsConstructorWrapper(extend,mixins)){clazz=this.__wrapConstructor(construct,name,type);
}else{clazz=construct;
}if(type==="singleton"){clazz.getInstance=this.getInstance;
}qx.Bootstrap.setDisplayName(construct,name,"constructor");
}if(statics){qx.Bootstrap.setDisplayNames(statics,name);
var key;

for(var i=0,a=qx.Bootstrap.getKeys(statics),l=a.length;i<l;i++){key=a[i];
var staticValue=statics[key];
{if(staticValue instanceof Function){staticValue=qx.core.Aspect.wrap(name+"."+key,staticValue,"static");
}clazz[key]=staticValue;
};
}}}var basename=qx.Bootstrap.createNamespace(name,clazz);
clazz.name=clazz.classname=name;
clazz.basename=basename;
clazz.$$type="Class";

if(type){clazz.$$classtype=type;
}if(!clazz.hasOwnProperty("toString")){clazz.toString=this.genericToString;
}
if(extend){qx.Bootstrap.extendClass(clazz,construct,extend,name,basename);
if(destruct){{destruct=qx.core.Aspect.wrap(name,destruct,"destructor");
};
clazz.$$destructor=destruct;
qx.Bootstrap.setDisplayName(destruct,name,"destruct");
}}this.$$registry[name]=clazz;
return clazz;
},__addEvents:function(clazz,events,patch){{if(typeof events!=="object"||events instanceof Array){throw new Error(clazz.classname+": the events must be defined as map!");
}
for(var key in events){if(typeof events[key]!=="string"){throw new Error(clazz.classname+"/"+key+": the event value needs to be a string with the class name of the event object which will be fired.");
}}if(clazz.$$events&&patch!==true){for(var key in events){if(clazz.$$events[key]!==undefined&&clazz.$$events[key]!==events[key]){throw new Error(clazz.classname+"/"+key+": the event value/type cannot be changed from "+clazz.$$events[key]+" to "+events[key]);
}}}};

if(clazz.$$events){for(var key in events){clazz.$$events[key]=events[key];
}}else{clazz.$$events=events;
}},__addProperties:function(clazz,properties,patch){var config;

if(patch===undefined){patch=false;
}var proto=clazz.prototype;

for(var name in properties){config=properties[name];
{this.__validateProperty(clazz,name,config,patch);
};
config.name=name;
if(!config.refine){if(clazz.$$properties===undefined){clazz.$$properties={};
}clazz.$$properties[name]=config;
}if(config.init!==undefined){clazz.prototype["$$init_"+name]=config.init;
}if(config.event!==undefined){var event={};
event[config.event]="qx.event.type.Data";
this.__addEvents(clazz,event,patch);
}if(config.inheritable){qx.core.Property.$$inheritable[name]=true;

if(!proto.$$refreshInheritables){qx.core.Property.attachRefreshInheritables(clazz);
}}
if(!config.refine){qx.core.Property.attachMethods(clazz,name,config);
}}},__validateProperty:function(clazz,name,config,patch){var has=this.hasProperty(clazz,name);

if(has){var existingProperty=this.getPropertyDefinition(clazz,name);

if(config.refine&&existingProperty.init===undefined){throw new Error("Could not refine a init value if there was previously no init value defined. Property '"+name+"' of class '"+clazz.classname+"'.");
}}
if(!has&&config.refine){throw new Error("Could not refine non-existent property: '"+name+"' of class: '"+clazz.classname+"'!");
}
if(has&&!patch){throw new Error("Class "+clazz.classname+" already has a property: "+name+"!");
}
if(has&&patch){if(!config.refine){throw new Error('Could not refine property "'+name+'" without a "refine" flag in the property definition! This class: '+clazz.classname+', original class: '+this.getByProperty(clazz,name).classname+'.');
}
for(var key in config){if(key!=="init"&&key!=="refine"){throw new Error("Class "+clazz.classname+" could not refine property: "+name+"! Key: "+key+" could not be refined!");
}}}var allowed=config.group?qx.core.Property.$$allowedGroupKeys:qx.core.Property.$$allowedKeys;

for(var key in config){if(allowed[key]===undefined){throw new Error('The configuration key "'+key+'" of property "'+name+'" in class "'+clazz.classname+'" is not allowed!');
}
if(config[key]===undefined){throw new Error('Invalid key "'+key+'" of property "'+name+'" in class "'+clazz.classname+'"! The value is undefined: '+config[key]);
}
if(allowed[key]!==null&&typeof config[key]!==allowed[key]){throw new Error('Invalid type of key "'+key+'" of property "'+name+'" in class "'+clazz.classname+'"! The type of the key must be "'+allowed[key]+'"!');
}}
if(config.transform!=null){if(!(typeof config.transform=="string")){throw new Error('Invalid transform definition of property "'+name+'" in class "'+clazz.classname+'"! Needs to be a String.');
}}
if(config.check!=null){if(!qx.Bootstrap.isString(config.check)&&!qx.Bootstrap.isArray(config.check)&&!qx.Bootstrap.isFunction(config.check)){throw new Error('Invalid check definition of property "'+name+'" in class "'+clazz.classname+'"! Needs to be a String, Array or Function.');
}}},__addMembers:function(clazz,members,patch,base,wrap){var proto=clazz.prototype;
var key,member;
qx.Bootstrap.setDisplayNames(members,clazz.classname+".prototype");

for(var i=0,a=qx.Bootstrap.getKeys(members),l=a.length;i<l;i++){key=a[i];
member=members[key];
{if(proto[key]!==undefined&&key.charAt(0)=="_"&&key.charAt(1)=="_"){throw new Error('Overwriting private member "'+key+'" of Class "'+clazz.classname+'" is not allowed!');
}
if(patch!==true&&proto.hasOwnProperty(key)){throw new Error('Overwriting member "'+key+'" of Class "'+clazz.classname+'" is not allowed!');
}};
if(base!==false&&member instanceof Function&&member.$$type==null){if(wrap==true){member=this.__mixinMemberWrapper(member,proto[key]);
}else{if(proto[key]){member.base=proto[key];
}member.self=clazz;
}{member=qx.core.Aspect.wrap(clazz.classname+"."+key,member,"member");
};
}proto[key]=member;
}},__mixinMemberWrapper:function(member,base){if(base){return function(){var oldBase=member.base;
member.base=base;
var retval=member.apply(this,arguments);
member.base=oldBase;
return retval;
};
}else{return member;
}},__addInterface:function(clazz,iface){{if(!clazz||!iface){throw new Error("Incomplete parameters!");
}if(this.hasOwnInterface(clazz,iface)){throw new Error('Interface "'+iface.name+'" is already used by Class "'+clazz.classname+'!');
}if(clazz.$$classtype!=="abstract"){qx.Interface.assert(clazz,iface,true);
}};
var list=qx.Interface.flatten([iface]);

if(clazz.$$implements){clazz.$$implements.push(iface);
clazz.$$flatImplements.push.apply(clazz.$$flatImplements,list);
}else{clazz.$$implements=[iface];
clazz.$$flatImplements=list;
}},__retrospectWrapConstruct:function(clazz){var name=clazz.classname;
var wrapper=this.__wrapConstructor(clazz,name,clazz.$$classtype);
for(var i=0,a=qx.Bootstrap.getKeys(clazz),l=a.length;i<l;i++){key=a[i];

if(clazz.hasOwnProperty(key)){wrapper[key]=clazz[key];
}}wrapper.prototype=clazz.prototype;
var members=clazz.prototype;

for(var i=0,a=qx.Bootstrap.getKeys(members),l=a.length;i<l;i++){key=a[i];

if(members.hasOwnProperty(key)){var method=members[key];

if(method.self==clazz){method.self=wrapper;
}}}for(var key in this.$$registry){var construct=this.$$registry[key];

if(!construct){continue;
}
if(construct.base==clazz){construct.base=wrapper;
}
if(construct.superclass==clazz){construct.superclass=wrapper;
}
if(construct.$$original){if(construct.$$original.base==clazz){construct.$$original.base=wrapper;
}
if(construct.$$original.superclass==clazz){construct.$$original.superclass=wrapper;
}}}qx.Bootstrap.createNamespace(name,wrapper);
this.$$registry[name]=wrapper;
return wrapper;
},__addMixin:function(clazz,mixin,patch){{if(!clazz||!mixin){throw new Error("Incomplete parameters!");
}};

if(this.hasMixin(clazz,mixin)){return;
}var isConstructorWrapped=clazz.$$original;

if(mixin.$$constructor&&!isConstructorWrapped){clazz=this.__retrospectWrapConstruct(clazz);
}var list=qx.Mixin.flatten([mixin]);
var entry;

for(var i=0,l=list.length;i<l;i++){entry=list[i];
if(entry.$$events){this.__addEvents(clazz,entry.$$events,patch);
}if(entry.$$properties){this.__addProperties(clazz,entry.$$properties,patch);
}if(entry.$$members){this.__addMembers(clazz,entry.$$members,patch,patch,patch);
}}if(clazz.$$includes){clazz.$$includes.push(mixin);
clazz.$$flatIncludes.push.apply(clazz.$$flatIncludes,list);
}else{clazz.$$includes=[mixin];
clazz.$$flatIncludes=list;
}},__createDefaultConstructor:function(){function defaultConstructor(){defaultConstructor.base.apply(this,arguments);
}return defaultConstructor;
},__createEmptyFunction:function(){return function(){};
},__needsConstructorWrapper:function(base,mixins){{return true;
};
if(base&&base.$$includes){var baseMixins=base.$$flatIncludes;

for(var i=0,l=baseMixins.length;i<l;i++){if(baseMixins[i].$$constructor){return true;
}}}if(mixins){var flatMixins=qx.Mixin.flatten(mixins);

for(var i=0,l=flatMixins.length;i<l;i++){if(flatMixins[i].$$constructor){return true;
}}}return false;
},__wrapConstructor:function(construct,name,type){var wrapper=function(){var clazz=wrapper;
{if(!(this instanceof clazz)){throw new Error("Please initialize '"+name+"' objects using the new keyword!");
}if(type==="abstract"){if(this.classname===name){throw new Error("The class ',"+name+"' is abstract! It is not possible to instantiate it.");
}}else if(type==="singleton"){if(!clazz.$$allowconstruct){throw new Error("The class '"+name+"' is a singleton! It is not possible to instantiate it directly. Use the static getInstance() method instead.");
}}};
var retval=clazz.$$original.apply(this,arguments);
if(clazz.$$includes){var mixins=clazz.$$flatIncludes;

for(var i=0,l=mixins.length;i<l;i++){if(mixins[i].$$constructor){mixins[i].$$constructor.apply(this,arguments);
}}}{if(this.classname===name){this.$$initialized=true;
}};
return retval;
};
{var aspectWrapper=qx.core.Aspect.wrap(name,wrapper,"constructor");
wrapper.$$original=construct;
wrapper.constructor=aspectWrapper;
wrapper=aspectWrapper;
};
wrapper.$$original=construct;
construct.wrapper=wrapper;
return wrapper;
}},defer:function(){{for(var classname in qx.Bootstrap.$$registry){var statics=qx.Bootstrap.$$registry[classname];

for(var key in statics){if(statics[key] instanceof Function){statics[key]=qx.core.Aspect.wrap(classname+"."+key,statics[key],"static");
}}}};
}});
qx.Class.define("qx.core.ObjectRegistry",{statics:{inShutDown:false,__registry:{},__nextHash:0,__freeHashes:[],register:function(obj){var registry=this.__registry;

if(!registry){return;
}var hash=obj.$$hash;

if(hash==null){var cache=this.__freeHashes;

if(cache.length>0){hash=cache.pop();
}else{hash=(this.__nextHash++)+"";
}obj.$$hash=hash;
}{if(!obj.dispose){throw new Error("Invalid object: "+obj);
}};
registry[hash]=obj;
},unregister:function(obj){var hash=obj.$$hash;

if(hash==null){return;
}var registry=this.__registry;

if(registry&&registry[hash]){delete registry[hash];
this.__freeHashes.push(hash);
}try{delete obj.$$hash;
}catch(ex){if(obj.removeAttribute){obj.removeAttribute("$$hash");
}}},toHashCode:function(obj){{if(obj==null){throw new Error("Invalid object: "+obj);
}};
var hash=obj.$$hash;

if(hash!=null){return hash;
}var cache=this.__freeHashes;

if(cache.length>0){hash=cache.pop();
}else{hash=(this.__nextHash++)+"";
}return obj.$$hash=hash;
},clearHashCode:function(obj){{if(obj==null){throw new Error("Invalid object: "+obj);
}};
var hash=obj.$$hash;

if(hash!=null){this.__freeHashes.push(hash);
try{delete obj.$$hash;
}catch(ex){if(obj.removeAttribute){obj.removeAttribute("$$hash");
}}}},fromHashCode:function(hash){return this.__registry[hash]||null;
},shutdown:function(){this.inShutDown=true;
var registry=this.__registry;
var hashes=[];

for(var hash in registry){hashes.push(hash);
}hashes.sort(function(a,b){return parseInt(b)-parseInt(a);
});
var obj,i=0,l=hashes.length;

while(true){try{for(;i<l;i++){hash=hashes[i];
obj=registry[hash];

if(obj&&obj.dispose){obj.dispose();
}}}catch(ex){qx.Bootstrap.error(this,"Could not dispose object "+obj.toString()+": "+ex);

if(i!==l){i++;
continue;
}}break;
}qx.Bootstrap.debug(this,"Disposed "+l+" objects");
delete this.__registry;
},getRegistry:function(){return this.__registry;
}}});
qx.Class.define("qx.lang.Type",{statics:{getClass:qx.Bootstrap.getClass,isString:qx.Bootstrap.isString,isArray:qx.Bootstrap.isArray,isObject:qx.Bootstrap.isObject,isFunction:qx.Bootstrap.isFunction,isRegExp:function(value){return this.getClass(value)=="RegExp";
},isNumber:function(value){return (value!==null&&(this.getClass(value)=="Number"||value instanceof Number));
},isBoolean:function(value){return (value!==null&&(this.getClass(value)=="Boolean"||value instanceof Boolean));
},isDate:function(value){return (value!==null&&(this.getClass(value)=="Date"||value instanceof Date));
},isError:function(value){return (value!==null&&(this.getClass(value)=="Error"||value instanceof Error));
}}});
qx.Class.define("qx.core.Assert",{statics:{__logError:true,__fail:function(comment,msgvarargs){var msg="";

for(var i=1,l=arguments.length;i<l;i++){msg=msg+this.__toString(arguments[i]);
}var errorMsg="Assertion error! "+comment+": "+msg;

if(this.__logError){qx.Bootstrap.error(errorMsg);
}
if(qx.Class.isDefined("qx.core.AssertionError")){var err=new qx.core.AssertionError(comment,msg);

if(this.__logError){qx.Bootstrap.error("Stack trace: \n"+err.getStackTrace());
}throw err;
}else{throw new Error(errorMsg);
}},__toString:function(value){var stringValue;

if(value===null){stringValue="null";
}else if(qx.lang.Type.isArray(value)&&value.length>10){stringValue="Array["+value.length+"]";
}else if((value instanceof Object)&&(value.toString==null)){stringValue=qx.lang.Json.stringify(value,null,2);
}else{try{stringValue=value.toString();
}catch(e){stringValue="";
}}return stringValue;
},assert:function(condition,msg){condition==true||this.__fail(msg||"","Called assert with 'false'");
},fail:function(msg){this.__fail(msg||"","Called fail().");
},assertTrue:function(value,msg){(value===true)||this.__fail(msg||"","Called assertTrue with '",value,"'");
},assertFalse:function(value,msg){(value===false)||this.__fail(msg||"","Called assertFalse with '",value,"'");
},assertEquals:function(expected,found,msg){expected==found||this.__fail(msg||"","Expected '",expected,"' but found '",found,"'!");
},assertNotEquals:function(expected,found,msg){expected!=found||this.__fail(msg||"","Expected '",expected,"' to be not equal with '",found,"'!");
},assertIdentical:function(expected,found,msg){expected===found||this.__fail(msg||"","Expected '",expected,"' (identical) but found '",found,"'!");
},assertNotIdentical:function(expected,found,msg){expected!==found||this.__fail(msg||"","Expected '",expected,"' to be not identical with '",found,"'!");
},assertNotUndefined:function(value,msg){value!==undefined||this.__fail(msg||"","Expected value not to be undefined but found ",value,"!");
},assertUndefined:function(value,msg){value===undefined||this.__fail(msg||"","Expected value to be undefined but found ",value,"!");
},assertNotNull:function(value,msg){value!==null||this.__fail(msg||"","Expected value not to be null but found ",value,"!");
},assertNull:function(value,msg){value===null||this.__fail(msg||"","Expected value to be null but found ",value,"!");
},assertJsonEquals:function(expected,found,msg){this.assertEquals(qx.lang.Json.stringify(expected),qx.lang.Json.stringify(found),msg);
},assertMatch:function(str,re,msg){this.assertString(str);
this.assert(qx.lang.Type.isRegExp(re)||qx.lang.Type.isString(re),"The parameter 're' must be a string or a regular expression.");
str.search(re)>=0||this.__fail(msg||"","The String '",str,"' does not match the regular expression '",re.toString(),"'!");
},assertArgumentsCount:function(args,minCount,maxCount,msg){var argCount=args.length;
(argCount>=minCount&&argCount<=maxCount)||this.__fail(msg||"","Wrong number of arguments given. Expected '",minCount,"' to '",maxCount,"' arguments but found '",arguments.length,"' arguments.");
},assertEventFired:function(obj,event,invokeFunc,listenerFunc,msg){var called=false;
var listener=function(e){if(listenerFunc){listenerFunc.call(obj,e);
}called=true;
};
var id=obj.addListener(event,listener,obj);
invokeFunc.call();
called===true||this.__fail(msg||"","Event (",event,") not fired.");
obj.removeListenerById(id);
},assertEventNotFired:function(obj,event,invokeFunc,msg){var called=false;
var listener=function(e){called=true;
};
var id=obj.addListener(event,listener,obj);
invokeFunc.call();
called===false||this.__fail(msg||"","Event (",event,") was fired.");
obj.removeListenerById(id);
},assertException:function(callback,exception,re,msg){var exception=exception||Error;
var error;

try{this.__logError=false;
callback();
}catch(ex){error=ex;
}finally{this.__logError=true;
}
if(error==null){this.__fail(msg||"","The function did not raise an exception!");
}error instanceof exception||this.__fail(msg||"","The raised exception does not have the expected type! ",exception);

if(re){this.assertMatch(error.toString(),re,msg);
}},assertInArray:function(value,array,msg){array.indexOf(value)!==-1||this.__fail(msg||"","The value '",value,"' must have any of the values defined in the array '",array,"'");
},assertArrayEquals:function(expected,found,msg){this.assertArray(expected,msg);
this.assertArray(found,msg);
this.assertEquals(expected.length,found.length,msg);

for(var i=0;i<expected.length;i++){this.assertIdentical(expected[i],found[i],msg);
}},assertKeyInMap:function(value,map,msg){map[value]!==undefined||this.__fail(msg||"","The value '",value,"' must must be a key of the map '",map,"'");
},assertFunction:function(value,msg){qx.lang.Type.isFunction(value)||this.__fail(msg||"","Expected value to be typeof function but found ",value,"!");
},assertString:function(value,msg){qx.lang.Type.isString(value)||this.__fail(msg||"","Expected value to be a string but found ",value,"!");
},assertBoolean:function(value,msg){qx.lang.Type.isBoolean(value)||this.__fail(msg||"","Expected value to be a boolean but found ",value,"!");
},assertNumber:function(value,msg){(qx.lang.Type.isNumber(value)&&isFinite(value))||this.__fail(msg||"","Expected value to be a number but found ",value,"!");
},assertPositiveNumber:function(value,msg){(qx.lang.Type.isNumber(value)&&isFinite(value)&&value>=0)||this.__fail(msg||"","Expected value to be a number >= 0 but found ",value,"!");
},assertInteger:function(value,msg){(qx.lang.Type.isNumber(value)&&isFinite(value)&&value%1===0)||this.__fail(msg||"","Expected value to be an integer but found ",value,"!");
},assertPositiveInteger:function(value,msg){var condition=(qx.lang.Type.isNumber(value)&&isFinite(value)&&value%1===0&&value>=0);
condition||this.__fail(msg||"","Expected value to be an integer >= 0 but found ",value,"!");
},assertInRange:function(value,min,max,msg){(value>=min&&value<=max)||this.__fail(msg||"",qx.lang.String.format("Expected value '%1' to be in the range '%2'..'%3'!",[value,min,max]));
},assertObject:function(value,msg){var condition=value!==null&&(qx.lang.Type.isObject(value)||typeof value==="object");
condition||this.__fail(msg||"","Expected value to be typeof object but found ",(value),"!");
},assertArray:function(value,msg){qx.lang.Type.isArray(value)||this.__fail(msg||"","Expected value to be an array but found ",value,"!");
},assertMap:function(value,msg){qx.lang.Type.isObject(value)||this.__fail(msg||"","Expected value to be a map but found ",value,"!");
},assertRegExp:function(value,msg){qx.lang.Type.isRegExp(value)||this.__fail(msg||"","Expected value to be a regular expression but found ",value,"!");
},assertType:function(value,type,msg){this.assertString(type,"Invalid argument 'type'");
typeof (value)===type||this.__fail(msg||"","Expected value to be typeof '",type,"' but found ",value,"!");
},assertInstance:function(value,clazz,msg){var className=clazz.classname||clazz+"";
value instanceof clazz||this.__fail(msg||"","Expected value to be instanceof '",className,"' but found ",value,"!");
},assertInterface:function(value,iface,msg){qx.Class.implementsInterface(value,iface)||this.__fail(msg||"","Expected object '",value,"' to implement the interface '",iface,"'!");
},assertCssColor:function(expected,value,msg){var ColorUtil=qx.Class.getByName("qx.util.ColorUtil");

if(!ColorUtil){throw new Error("qx.util.ColorUtil not available! Your code must have a dependency on 'qx.util.ColorUtil'");
}var expectedRgb=ColorUtil.stringToRgb(expected);

try{var valueRgb=ColorUtil.stringToRgb(value);
}catch(ex){this.__fail(msg||"","Expected value to be the CSS color '",expected,"' (rgb(",expectedRgb.join(","),")), but found value '",value,"', which cannot be converted to a CSS color!");
}var condition=expectedRgb[0]==valueRgb[0]&&expectedRgb[1]==valueRgb[1]&&expectedRgb[2]==valueRgb[2];
condition||this.__fail(msg||"","Expected value to be the CSS color '",expectedRgb,"' (rgb(",expectedRgb.join(","),")), but found value '",value,"' (rgb(",valueRgb.join(","),"))!");
},assertElement:function(value,msg){!!(value&&value.nodeType===1)||this.__fail(msg||"","Expected value to be a DOM element but found  '",value,"'!");
},assertQxObject:function(value,msg){this.__isQxInstance(value,"qx.core.Object")||this.__fail(msg||"","Expected value to be a qooxdoo object but found ",value,"!");
},assertQxWidget:function(value,msg){this.__isQxInstance(value,"qx.ui.core.Widget")||this.__fail(msg||"","Expected value to be a qooxdoo widget but found ",value,"!");
},__isQxInstance:function(object,classname){if(!object){return false;
}var clazz=object.constructor;

while(clazz){if(clazz.classname===classname){return true;
}clazz=clazz.superclass;
}return false;
}}});
qx.Mixin.define("qx.core.MAssert",{members:{assert:function(condition,msg){qx.core.Assert.assert(condition,msg);
},fail:function(msg){qx.core.Assert.fail(msg);
},assertTrue:function(value,msg){qx.core.Assert.assertTrue(value,msg);
},assertFalse:function(value,msg){qx.core.Assert.assertFalse(value,msg);
},assertEquals:function(expected,found,msg){qx.core.Assert.assertEquals(expected,found,msg);
},assertNotEquals:function(expected,found,msg){qx.core.Assert.assertNotEquals(expected,found,msg);
},assertIdentical:function(expected,found,msg){qx.core.Assert.assertIdentical(expected,found,msg);
},assertNotIdentical:function(expected,found,msg){qx.core.Assert.assertNotIdentical(expected,found,msg);
},assertNotUndefined:function(value,msg){qx.core.Assert.assertNotUndefined(value,msg);
},assertUndefined:function(value,msg){qx.core.Assert.assertUndefined(value,msg);
},assertNotNull:function(value,msg){qx.core.Assert.assertNotNull(value,msg);
},assertNull:function(value,msg){qx.core.Assert.assertNull(value,msg);
},assertJsonEquals:function(expected,found,msg){qx.core.Assert.assertJsonEquals(expected,found,msg);
},assertMatch:function(str,re,msg){qx.core.Assert.assertMatch(str,re,msg);
},assertArgumentsCount:function(args,minCount,maxCount,msg){qx.core.Assert.assertArgumentsCount(args,minCount,maxCount,msg);
},assertEventFired:function(obj,event,invokeFunc,listener,msg){qx.core.Assert.assertEventFired(obj,event,invokeFunc,listener,msg);
},assertEventNotFired:function(obj,event,invokeFunc,msg){qx.core.Assert.assertEventNotFired(obj,event,invokeFunc,msg);
},assertException:function(callback,exception,re,msg){qx.core.Assert.assertException(callback,exception,re,msg);
},assertInArray:function(value,array,msg){qx.core.Assert.assertInArray(value,array,msg);
},assertArrayEquals:function(expected,found,msg){qx.core.Assert.assertArrayEquals(expected,found,msg);
},assertKeyInMap:function(value,map,msg){qx.core.Assert.assertKeyInMap(value,map,msg);
},assertFunction:function(value,msg){qx.core.Assert.assertFunction(value,msg);
},assertString:function(value,msg){qx.core.Assert.assertString(value,msg);
},assertBoolean:function(value,msg){qx.core.Assert.assertBoolean(value,msg);
},assertNumber:function(value,msg){qx.core.Assert.assertNumber(value,msg);
},assertPositiveNumber:function(value,msg){qx.core.Assert.assertPositiveNumber(value,msg);
},assertInteger:function(value,msg){qx.core.Assert.assertInteger(value,msg);
},assertPositiveInteger:function(value,msg){qx.core.Assert.assertPositiveInteger(value,msg);
},assertInRange:function(value,min,max,msg){qx.core.Assert.assertInRange(value,min,max,msg);
},assertObject:function(value,msg){qx.core.Assert.assertObject(value,msg);
},assertArray:function(value,msg){qx.core.Assert.assertArray(value,msg);
},assertMap:function(value,msg){qx.core.Assert.assertMap(value,msg);
},assertRegExp:function(value,msg){qx.core.Assert.assertRegExp(value,msg);
},assertType:function(value,type,msg){qx.core.Assert.assertType(value,type,msg);
},assertInstance:function(value,clazz,msg){qx.core.Assert.assertInstance(value,clazz,msg);
},assertInterface:function(value,iface,msg){qx.core.Assert.assertInterface(value,iface,msg);
},assertCssColor:function(expected,value,msg){qx.core.Assert.assertCssColor(expected,value,msg);
},assertElement:function(value,msg){qx.core.Assert.assertElement(value,msg);
},assertQxObject:function(value,msg){qx.core.Assert.assertQxObject(value,msg);
},assertQxWidget:function(value,msg){qx.core.Assert.assertQxWidget(value,msg);
}}});
qx.Mixin.define("qx.data.MBinding",{members:{bind:function(sourcePropertyChain,targetObject,targetProperty,options){return qx.data.SingleValueBinding.bind(this,sourcePropertyChain,targetObject,targetProperty,options);
},removeBinding:function(id){qx.data.SingleValueBinding.removeBindingFromObject(this,id);
},removeAllBindings:function(){qx.data.SingleValueBinding.removeAllBindingsForObject(this);
},getBindings:function(){return qx.data.SingleValueBinding.getAllBindingsForObject(this);
}}});
qx.Bootstrap.define("qx.bom.client.Engine",{statics:{NAME:"",FULLVERSION:"0.0.0",VERSION:0.0,OPERA:false,WEBKIT:false,GECKO:false,MSHTML:false,UNKNOWN_ENGINE:false,UNKNOWN_VERSION:false,DOCUMENT_MODE:null,__init:function(){var engine="unknown";
var version="0.0.0";
var agent=window.navigator.userAgent;
var unknownEngine=false;
var unknownVersion=false;

if(window.opera&&Object.prototype.toString.call(window.opera)=="[object Opera]"){engine="opera";
this.OPERA=true;
if(/Opera[\s\/]([0-9]+)\.([0-9])([0-9]*)/.test(agent)){version=RegExp.$1+"."+RegExp.$2;

if(RegExp.$3!=""){version+="."+RegExp.$3;
}}else{unknownVersion=true;
version="9.6.0";
}}else if(window.navigator.userAgent.indexOf("AppleWebKit/")!=-1){engine="webkit";
this.WEBKIT=true;

if(/AppleWebKit\/([^ ]+)/.test(agent)){version=RegExp.$1;
var invalidCharacter=RegExp("[^\\.0-9]").exec(version);

if(invalidCharacter){version=version.slice(0,invalidCharacter.index);
}}else{unknownVersion=true;
version="525.26";
}}else if(window.controllers&&window.navigator.product==="Gecko"){engine="gecko";
this.GECKO=true;
if(/rv\:([^\);]+)(\)|;)/.test(agent)){version=RegExp.$1;
}else{unknownVersion=true;
version="1.9.0.0";
}}else if(window.navigator.cpuClass&&/MSIE\s+([^\);]+)(\)|;)/.test(agent)){engine="mshtml";
version=RegExp.$1;

if(document.documentMode){this.DOCUMENT_MODE=document.documentMode;
}if(version<8&&/Trident\/([^\);]+)(\)|;)/.test(agent)){if(RegExp.$1==="4.0"){version="8.0";
}}this.MSHTML=true;
}else{var failFunction=window.qxFail;

if(failFunction&&typeof failFunction==="function"){var engine=failFunction();

if(engine.NAME&&engine.FULLVERSION){engine=engine.NAME;
this[engine.toUpperCase()]=true;
version=engine.FULLVERSION;
}}else{unknownEngine=true;
unknownVersion=true;
version="1.9.0.0";
engine="gecko";
this.GECKO=true;
qx.Bootstrap.warn("Unsupported client: "+agent+"! Assumed gecko version 1.9.0.0 (Firefox 3.0).");
}}this.UNKNOWN_ENGINE=unknownEngine;
this.UNKNOWN_VERSION=unknownVersion;
this.NAME=engine;
this.FULLVERSION=version;
this.VERSION=parseFloat(version);
}},defer:function(statics){statics.__init();
}});
qx.Bootstrap.define("qx.core.Variant",{statics:{__variants:{},__cache:{},compilerIsSet:function(){return true;
},define:function(key,allowedValues,defaultValue){{if(!this.__isValidArray(allowedValues)){throw new Error('Allowed values of variant "'+key+'" must be defined!');
}
if(defaultValue===undefined){throw new Error('Default value of variant "'+key+'" must be defined!');
}};

if(!this.__variants[key]){this.__variants[key]={};
}else{if(this.__variants[key].defaultValue!==undefined){throw new Error('Variant "'+key+'" is already defined!');
}}this.__variants[key].allowedValues=allowedValues;
this.__variants[key].defaultValue=defaultValue;
},get:function(key){var data=this.__variants[key];
{if(data===undefined){throw new Error('Variant "'+key+'" is not defined.');
}};

if(data.value!==undefined){return data.value;
}return data.defaultValue;
},__init:function(){if(window.qxvariants){for(var key in qxvariants){{if((key.split(".")).length<2){throw new Error('Malformed settings key "'+key+'". Must be following the schema "namespace.key".');
}};

if(!this.__variants[key]){this.__variants[key]={};
}this.__variants[key].value=qxvariants[key];
}window.qxvariants=undefined;

try{delete window.qxvariants;
}catch(ex){}this.__loadUrlVariants(this.__variants);
}},__loadUrlVariants:function(){if(qx.core.Setting.get("qx.allowUrlVariants")!=true){return;
}var urlVariants=document.location.search.slice(1).split("&");

for(var i=0;i<urlVariants.length;i++){var variant=urlVariants[i].split(":");

if(variant.length!=3||variant[0]!="qxvariant"){continue;
}var key=variant[1];

if(!this.__variants[key]){this.__variants[key]={};
}this.__variants[key].value=decodeURIComponent(variant[2]);
}},select:function(key,variantFunctionMap){{if(!this.__isValidObject(this.__variants[key])){throw new Error("Variant \""+key+"\" is not defined");
}
if(!this.__isValidObject(variantFunctionMap)){throw new Error("the second parameter must be a map!");
}};

for(var variant in variantFunctionMap){if(this.isSet(key,variant)){return variantFunctionMap[variant];
}}
if(variantFunctionMap["default"]!==undefined){return variantFunctionMap["default"];
}{throw new Error('No match for variant "'+key+'" in variants ['+qx.Bootstrap.getKeysAsString(variantFunctionMap)+'] found, and no default ("default") given');
};
},isSet:function(key,variants){var access=key+"$"+variants;

if(this.__cache[access]!==undefined){return this.__cache[access];
}var retval=false;
if(variants.indexOf("|")<0){retval=this.get(key)===variants;
}else{var keyParts=variants.split("|");

for(var i=0,l=keyParts.length;i<l;i++){if(this.get(key)===keyParts[i]){retval=true;
break;
}}}this.__cache[access]=retval;
return retval;
},__isValidArray:function(v){return typeof v==="object"&&v!==null&&v instanceof Array;
},__isValidObject:function(v){return typeof v==="object"&&v!==null&&!(v instanceof Array);
},__arrayContains:function(arr,obj){for(var i=0,l=arr.length;i<l;i++){if(arr[i]==obj){return true;
}}return false;
}},defer:function(statics){statics.define("qx.client",["gecko","mshtml","opera","webkit"],qx.bom.client.Engine.NAME);
statics.define("qx.debug",["on","off"],"on");
statics.define("qx.aspects",["on","off"],"off");
statics.define("qx.dynlocale",["on","off"],"on");
statics.__init();
}});
qx.Class.define("qx.bom.Event",{statics:{addNativeListener:qx.core.Variant.select("qx.client",{"mshtml":function(target,type,listener){target.attachEvent("on"+type,listener);
},"default":function(target,type,listener){target.addEventListener(type,listener,false);
}}),removeNativeListener:qx.core.Variant.select("qx.client",{"mshtml":function(target,type,listener){try{target.detachEvent("on"+type,listener);
}catch(e){if(e.number!==-2146828218){throw e;
}}},"default":function(target,type,listener){target.removeEventListener(type,listener,false);
}}),getTarget:function(e){return e.target||e.srcElement;
},getRelatedTarget:qx.core.Variant.select("qx.client",{"mshtml":function(e){if(e.type==="mouseover"){return e.fromEvent;
}else{return e.toElement;
}},"gecko":function(e){try{e.relatedTarget&&e.relatedTarget.nodeType;
}catch(e){return null;
}return e.relatedTarget;
},"default":function(e){return e.relatedTarget;
}}),preventDefault:qx.core.Variant.select("qx.client",{"gecko":function(e){if(qx.bom.client.Engine.VERSION>=1.9&&e.type=="mousedown"&&e.button==2){return;
}e.preventDefault();
if(qx.bom.client.Engine.VERSION<1.9){try{e.keyCode=0;
}catch(ex){}}},"mshtml":function(e){try{e.keyCode=0;
}catch(ex){}e.returnValue=false;
},"default":function(e){e.preventDefault();
}}),stopPropagation:function(e){if(e.stopPropagation){e.stopPropagation();
}e.cancelBubble=true;
},fire:function(target,type){if(document.createEventObject){var evt=document.createEventObject();
return target.fireEvent("on"+type,evt);
}else{var evt=document.createEvent("HTMLEvents");
evt.initEvent(type,true,true);
return !target.dispatchEvent(evt);
}},supportsEvent:qx.core.Variant.select("qx.client",{"webkit":function(target,type){return target.hasOwnProperty("on"+type);
},"default":function(target,type){var eventName="on"+type;
var supportsEvent=(eventName in target);

if(!supportsEvent){supportsEvent=typeof target[eventName]=="function";

if(!supportsEvent&&target.setAttribute){target.setAttribute(eventName,"return;");
supportsEvent=typeof target[eventName]=="function";
target.removeAttribute(eventName);
}}return supportsEvent;
}})}});
qx.Class.define("qx.event.Manager",{extend:Object,construct:function(win,registration){this.__window=win;
this.__windowId=qx.core.ObjectRegistry.toHashCode(win);
this.__registration=registration;
if(win.qx!==qx){var self=this;
qx.bom.Event.addNativeListener(win,"unload",qx.event.GlobalError.observeMethod(function(){qx.bom.Event.removeNativeListener(win,"unload",arguments.callee);
self.dispose();
}));
}this.__listeners={};
this.__handlers={};
this.__dispatchers={};
this.__handlerCache={};
},statics:{__lastUnique:0,getNextUniqueId:function(){return (this.__lastUnique++)+"";
}},members:{__registration:null,__listeners:null,__dispatchers:null,__disposeWrapper:null,__handlers:null,__handlerCache:null,__window:null,__windowId:null,getWindow:function(){return this.__window;
},getWindowId:function(){return this.__windowId;
},getHandler:function(clazz){var handler=this.__handlers[clazz.classname];

if(handler){return handler;
}return this.__handlers[clazz.classname]=new clazz(this);
},getDispatcher:function(clazz){var dispatcher=this.__dispatchers[clazz.classname];

if(dispatcher){return dispatcher;
}return this.__dispatchers[clazz.classname]=new clazz(this,this.__registration);
},getListeners:function(target,type,capture){var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){return null;
}var entryKey=type+(capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];
return entryList?entryList.concat():null;
},serializeListeners:function(target){var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];
var result=[];

if(targetMap){var indexOf,type,capture,entryList,entry;

for(var entryKey in targetMap){indexOf=entryKey.indexOf("|");
type=entryKey.substring(0,indexOf);
capture=entryKey.charAt(indexOf+1)=="c";
entryList=targetMap[entryKey];

for(var i=0,l=entryList.length;i<l;i++){entry=entryList[i];
result.push({self:entry.context,handler:entry.handler,type:type,capture:capture});
}}}return result;
},toggleAttachedEvents:function(target,enable){var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(targetMap){var indexOf,type,capture,entryList;

for(var entryKey in targetMap){indexOf=entryKey.indexOf("|");
type=entryKey.substring(0,indexOf);
capture=entryKey.charCodeAt(indexOf+1)===99;
entryList=targetMap[entryKey];

if(enable){this.__registerAtHandler(target,type,capture);
}else{this.__unregisterAtHandler(target,type,capture);
}}}},hasListener:function(target,type,capture){{if(target==null){qx.log.Logger.trace(this);
throw new Error("Invalid object: "+target);
}};
var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){return false;
}var entryKey=type+(capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];
return entryList&&entryList.length>0;
},importListeners:function(target,list){{if(target==null){qx.log.Logger.trace(this);
throw new Error("Invalid object: "+target);
}};
var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey]={};
var clazz=qx.event.Manager;

for(var listKey in list){var item=list[listKey];
var entryKey=item.type+(item.capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];

if(!entryList){entryList=targetMap[entryKey]=[];
this.__registerAtHandler(target,item.type,item.capture);
}entryList.push({handler:item.listener,context:item.self,unique:item.unique||(clazz.__lastUnique++)+""});
}},addListener:function(target,type,listener,self,capture){{var msg="Failed to add event listener for type '"+type+"'"+" to the target '"+target.classname+"': ";
qx.core.Assert.assertObject(target,msg+"Invalid Target.");
qx.core.Assert.assertString(type,msg+"Invalid event type.");
qx.core.Assert.assertFunction(listener,msg+"Invalid callback function");

if(capture!==undefined){qx.core.Assert.assertBoolean(capture,"Invalid capture flag.");
}};
var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){targetMap=this.__listeners[targetKey]={};
}var entryKey=type+(capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];

if(!entryList){entryList=targetMap[entryKey]=[];
}if(entryList.length===0){this.__registerAtHandler(target,type,capture);
}var unique=(qx.event.Manager.__lastUnique++)+"";
var entry={handler:listener,context:self,unique:unique};
entryList.push(entry);
return entryKey+"|"+unique;
},findHandler:function(target,type){var isDomNode=false,isWindow=false,isObject=false;
var key;

if(target.nodeType===1){isDomNode=true;
key="DOM_"+target.tagName.toLowerCase()+"_"+type;
}else if(target==this.__window){isWindow=true;
key="WIN_"+type;
}else if(target.classname){isObject=true;
key="QX_"+target.classname+"_"+type;
}else{key="UNKNOWN_"+target+"_"+type;
}var cache=this.__handlerCache;

if(cache[key]){return cache[key];
}var classes=this.__registration.getHandlers();
var IEventHandler=qx.event.IEventHandler;
var clazz,instance,supportedTypes,targetCheck;

for(var i=0,l=classes.length;i<l;i++){clazz=classes[i];
supportedTypes=clazz.SUPPORTED_TYPES;

if(supportedTypes&&!supportedTypes[type]){continue;
}targetCheck=clazz.TARGET_CHECK;

if(targetCheck){if(!isDomNode&&targetCheck===IEventHandler.TARGET_DOMNODE){continue;
}else if(!isWindow&&targetCheck===IEventHandler.TARGET_WINDOW){continue;
}else if(!isObject&&targetCheck===IEventHandler.TARGET_OBJECT){continue;
}}instance=this.getHandler(classes[i]);

if(clazz.IGNORE_CAN_HANDLE||instance.canHandleEvent(target,type)){cache[key]=instance;
return instance;
}}return null;
},__registerAtHandler:function(target,type,capture){var handler=this.findHandler(target,type);

if(handler){handler.registerEvent(target,type,capture);
return;
}{qx.log.Logger.warn(this,"There is no event handler for the event '"+type+"' on target '"+target+"'!");
};
},removeListener:function(target,type,listener,self,capture){{var msg="Failed to remove event listener for type '"+type+"'"+" from the target '"+target.classname+"': ";
qx.core.Assert.assertObject(target,msg+"Invalid Target.");
qx.core.Assert.assertString(type,msg+"Invalid event type.");
qx.core.Assert.assertFunction(listener,msg+"Invalid callback function");

if(self!==undefined){qx.core.Assert.assertObject(self,"Invalid context for callback.");
}
if(capture!==undefined){qx.core.Assert.assertBoolean(capture,"Invalid capture falg.");
}};
var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){return false;
}var entryKey=type+(capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];

if(!entryList){return false;
}var entry;

for(var i=0,l=entryList.length;i<l;i++){entry=entryList[i];

if(entry.handler===listener&&entry.context===self){qx.lang.Array.removeAt(entryList,i);

if(entryList.length==0){this.__unregisterAtHandler(target,type,capture);
}return true;
}}return false;
},removeListenerById:function(target,id){{var msg="Failed to remove event listener for id '"+id+"'"+" from the target '"+target.classname+"': ";
qx.core.Assert.assertObject(target,msg+"Invalid Target.");
qx.core.Assert.assertString(id,msg+"Invalid id type.");
};
var split=id.split("|");
var type=split[0];
var capture=split[1].charCodeAt(0)==99;
var unique=split[2];
var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){return false;
}var entryKey=type+(capture?"|capture":"|bubble");
var entryList=targetMap[entryKey];

if(!entryList){return false;
}var entry;

for(var i=0,l=entryList.length;i<l;i++){entry=entryList[i];

if(entry.unique===unique){qx.lang.Array.removeAt(entryList,i);

if(entryList.length==0){this.__unregisterAtHandler(target,type,capture);
}return true;
}}return false;
},removeAllListeners:function(target){var targetKey=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var targetMap=this.__listeners[targetKey];

if(!targetMap){return false;
}var split,type,capture;

for(var entryKey in targetMap){if(targetMap[entryKey].length>0){split=entryKey.split("|");
type=split[0];
capture=split[1]==="capture";
this.__unregisterAtHandler(target,type,capture);
}}delete this.__listeners[targetKey];
return true;
},deleteAllListeners:function(targetKey){delete this.__listeners[targetKey];
},__unregisterAtHandler:function(target,type,capture){var handler=this.findHandler(target,type);

if(handler){handler.unregisterEvent(target,type,capture);
return;
}{qx.log.Logger.warn(this,"There is no event handler for the event '"+type+"' on target '"+target+"'!");
};
},dispatchEvent:function(target,event){{var msg="Could not dispatch event '"+event+"' on target '"+target.classname+"': ";
qx.core.Assert.assertNotUndefined(target,msg+"Invalid event target.");
qx.core.Assert.assertNotNull(target,msg+"Invalid event target.");
qx.core.Assert.assertInstance(event,qx.event.type.Event,msg+"Invalid event object.");
};
var type=event.getType();

if(!event.getBubbles()&&!this.hasListener(target,type)){qx.event.Pool.getInstance().poolObject(event);
return true;
}
if(!event.getTarget()){event.setTarget(target);
}var classes=this.__registration.getDispatchers();
var instance;
var dispatched=false;

for(var i=0,l=classes.length;i<l;i++){instance=this.getDispatcher(classes[i]);
if(instance.canDispatchEvent(target,event,type)){instance.dispatchEvent(target,event,type);
dispatched=true;
break;
}}
if(!dispatched){{qx.log.Logger.error(this,"No dispatcher can handle event of type "+type+" on "+target);
};
return true;
}var preventDefault=event.getDefaultPrevented();
qx.event.Pool.getInstance().poolObject(event);
return !preventDefault;
},dispose:function(){this.__registration.removeManager(this);
qx.util.DisposeUtil.disposeMap(this,"__handlers");
qx.util.DisposeUtil.disposeMap(this,"__dispatchers");
this.__listeners=this.__window=this.__disposeWrapper=null;
this.__registration=this.__handlerCache=null;
}}});
qx.Class.define("qx.dom.Node",{statics:{ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12,getDocument:function(node){return node.nodeType===
this.DOCUMENT?node:
node.ownerDocument||node.document;
},getWindow:qx.core.Variant.select("qx.client",{"mshtml":function(node){if(node.nodeType==null){return node;
}if(node.nodeType!==this.DOCUMENT){node=node.ownerDocument;
}return node.parentWindow;
},"default":function(node){if(node.nodeType==null){return node;
}if(node.nodeType!==this.DOCUMENT){node=node.ownerDocument;
}return node.defaultView;
}}),getDocumentElement:function(node){return this.getDocument(node).documentElement;
},getBodyElement:function(node){return this.getDocument(node).body;
},isNode:function(node){return !!(node&&node.nodeType!=null);
},isElement:function(node){return !!(node&&node.nodeType===this.ELEMENT);
},isDocument:function(node){return !!(node&&node.nodeType===this.DOCUMENT);
},isText:function(node){return !!(node&&node.nodeType===this.TEXT);
},isWindow:function(obj){return !!(obj&&obj.history&&obj.location&&obj.document);
},isNodeName:function(node,nodeName){if(!nodeName||!node||!node.nodeName){return false;
}return nodeName.toLowerCase()==qx.dom.Node.getName(node);
},getName:function(node){if(!node||!node.nodeName){return null;
}return node.nodeName.toLowerCase();
},getText:function(node){if(!node||!node.nodeType){return null;
}
switch(node.nodeType){case 1:var i,a=[],nodes=node.childNodes,length=nodes.length;

for(i=0;i<length;i++){a[i]=this.getText(nodes[i]);
}return a.join("");
case 2:return node.nodeValue;
break;
case 3:return node.nodeValue;
break;
}return null;
}}});
qx.Class.define("qx.lang.Array",{statics:{toArray:function(object,offset){return this.cast(object,Array,offset);
},cast:function(object,constructor,offset){if(object.constructor===constructor){return object;
}
if(qx.Class.hasInterface(object,qx.data.IListData)){var object=object.toArray();
}var ret=new constructor;
if(qx.core.Variant.isSet("qx.client","mshtml")){if(object.item){for(var i=offset||0,l=object.length;i<l;i++){ret.push(object[i]);
}return ret;
}}if(Object.prototype.toString.call(object)==="[object Array]"&&offset==null){ret.push.apply(ret,object);
}else{ret.push.apply(ret,Array.prototype.slice.call(object,offset||0));
}return ret;
},fromArguments:function(args,offset){return Array.prototype.slice.call(args,offset||0);
},fromCollection:function(coll){if(qx.core.Variant.isSet("qx.client","mshtml")){if(coll.item){var arr=[];

for(var i=0,l=coll.length;i<l;i++){arr[i]=coll[i];
}return arr;
}}return Array.prototype.slice.call(coll,0);
},fromShortHand:function(input){var len=input.length;
var result=qx.lang.Array.clone(input);
switch(len){case 1:result[1]=result[2]=result[3]=result[0];
break;
case 2:result[2]=result[0];
case 3:result[3]=result[1];
}return result;
},clone:function(arr){return arr.concat();
},insertAt:function(arr,obj,i){arr.splice(i,0,obj);
return arr;
},insertBefore:function(arr,obj,obj2){var i=arr.indexOf(obj2);

if(i==-1){arr.push(obj);
}else{arr.splice(i,0,obj);
}return arr;
},insertAfter:function(arr,obj,obj2){var i=arr.indexOf(obj2);

if(i==-1||i==(arr.length-1)){arr.push(obj);
}else{arr.splice(i+1,0,obj);
}return arr;
},removeAt:function(arr,i){return arr.splice(i,1)[0];
},removeAll:function(arr){arr.length=0;
return this;
},append:function(arr1,arr2){{qx.core.Assert&&qx.core.Assert.assertArray(arr1,"The first parameter must be an array.");
qx.core.Assert&&qx.core.Assert.assertArray(arr2,"The second parameter must be an array.");
};
Array.prototype.push.apply(arr1,arr2);
return arr1;
},exclude:function(arr1,arr2){{qx.core.Assert&&qx.core.Assert.assertArray(arr1,"The first parameter must be an array.");
qx.core.Assert&&qx.core.Assert.assertArray(arr2,"The second parameter must be an array.");
};

for(var i=0,il=arr2.length,index;i<il;i++){index=arr1.indexOf(arr2[i]);

if(index!=-1){arr1.splice(index,1);
}}return arr1;
},remove:function(arr,obj){var i=arr.indexOf(obj);

if(i!=-1){arr.splice(i,1);
return obj;
}},contains:function(arr,obj){return arr.indexOf(obj)!==-1;
},equals:function(arr1,arr2){var length=arr1.length;

if(length!==arr2.length){return false;
}
for(var i=0;i<length;i++){if(arr1[i]!==arr2[i]){return false;
}}return true;
},sum:function(arr){var result=0;

for(var i=0,l=arr.length;i<l;i++){result+=arr[i];
}return result;
},max:function(arr){{qx.core.Assert&&qx.core.Assert.assertArray(arr,"Parameter must be an array.");
};
var i,len=arr.length,result=arr[0];

for(i=1;i<len;i++){if(arr[i]>result){result=arr[i];
}}return result===undefined?null:result;
},min:function(arr){{qx.core.Assert&&qx.core.Assert.assertArray(arr,"Parameter must be an array.");
};
var i,len=arr.length,result=arr[0];

for(i=1;i<len;i++){if(arr[i]<result){result=arr[i];
}}return result===undefined?null:result;
},unique:function(arr){var ret=[],doneStrings={},doneNumbers={},doneObjects={};
var value,count=0;
var key="qx"+qx.lang.Date.now();
var hasNull=false,hasFalse=false,hasTrue=false;
for(var i=0,len=arr.length;i<len;i++){value=arr[i];
if(value===null){if(!hasNull){hasNull=true;
ret.push(value);
}}else if(value===undefined){}else if(value===false){if(!hasFalse){hasFalse=true;
ret.push(value);
}}else if(value===true){if(!hasTrue){hasTrue=true;
ret.push(value);
}}else if(typeof value==="string"){if(!doneStrings[value]){doneStrings[value]=1;
ret.push(value);
}}else if(typeof value==="number"){if(!doneNumbers[value]){doneNumbers[value]=1;
ret.push(value);
}}else{hash=value[key];

if(hash==null){hash=value[key]=count++;
}
if(!doneObjects[hash]){doneObjects[hash]=value;
ret.push(value);
}}}for(var hash in doneObjects){try{delete doneObjects[hash][key];
}catch(ex){try{doneObjects[hash][key]=null;
}catch(ex){throw new Error("Cannot clean-up map entry doneObjects["+hash+"]["+key+"]");
}}}return ret;
}}});
qx.Class.define("qx.lang.Function",{statics:{getCaller:function(args){return args.caller?args.caller.callee:args.callee.caller;
},getName:function(fcn){if(fcn.displayName){return fcn.displayName;
}
if(fcn.$$original||fcn.wrapper||fcn.classname){return fcn.classname+".constructor()";
}
if(fcn.$$mixin){for(var key in fcn.$$mixin.$$members){if(fcn.$$mixin.$$members[key]==fcn){return fcn.$$mixin.name+".prototype."+key+"()";
}}for(var key in fcn.$$mixin){if(fcn.$$mixin[key]==fcn){return fcn.$$mixin.name+"."+key+"()";
}}}
if(fcn.self){var clazz=fcn.self.constructor;

if(clazz){for(var key in clazz.prototype){if(clazz.prototype[key]==fcn){return clazz.classname+".prototype."+key+"()";
}}for(var key in clazz){if(clazz[key]==fcn){return clazz.classname+"."+key+"()";
}}}}var fcnReResult=fcn.toString().match(/function\s*(\w*)\s*\(.*/);

if(fcnReResult&&fcnReResult.length>=1&&fcnReResult[1]){return fcnReResult[1]+"()";
}return 'anonymous()';
},globalEval:function(data){if(window.execScript){return window.execScript(data);
}else{return eval.call(window,data);
}},empty:function(){},returnTrue:function(){return true;
},returnFalse:function(){return false;
},returnNull:function(){return null;
},returnThis:function(){return this;
},returnZero:function(){return 0;
},create:function(func,options){{qx.core.Assert&&qx.core.Assert.assertFunction(func,"Invalid parameter 'func'.");
};
if(!options){return func;
}if(!(options.self||options.args||options.delay!=null||options.periodical!=null||options.attempt)){return func;
}return function(event){{if(options.self instanceof qx.core.Object){qx.core.Assert&&qx.core.Assert.assertFalse(options.self.isDisposed(),"Trying to call a bound function with a disposed object as context: "+options.self.toString()+" :: "+qx.lang.Function.getName(func));
}};
var args=qx.lang.Array.fromArguments(arguments);
if(options.args){args=options.args.concat(args);
}
if(options.delay||options.periodical){var returns=qx.event.GlobalError.observeMethod(function(){return func.apply(options.self||this,args);
});

if(options.delay){return window.setTimeout(returns,options.delay);
}
if(options.periodical){return window.setInterval(returns,options.periodical);
}}else if(options.attempt){var ret=false;

try{ret=func.apply(options.self||this,args);
}catch(ex){}return ret;
}else{return func.apply(options.self||this,args);
}};
},bind:function(func,self,varargs){return this.create(func,{self:self,args:arguments.length>2?qx.lang.Array.fromArguments(arguments,2):null});
},curry:function(func,varargs){return this.create(func,{args:arguments.length>1?qx.lang.Array.fromArguments(arguments,1):null});
},listener:function(func,self,varargs){if(arguments.length<3){return function(event){return func.call(self||this,event||window.event);
};
}else{var optargs=qx.lang.Array.fromArguments(arguments,2);
return function(event){var args=[event||window.event];
args.push.apply(args,optargs);
func.apply(self||this,args);
};
}},attempt:function(func,self,varargs){return this.create(func,{self:self,attempt:true,args:arguments.length>2?qx.lang.Array.fromArguments(arguments,2):null})();
},delay:function(func,delay,self,varargs){return this.create(func,{delay:delay,self:self,args:arguments.length>3?qx.lang.Array.fromArguments(arguments,3):null})();
},periodical:function(func,interval,self,varargs){return this.create(func,{periodical:interval,self:self,args:arguments.length>3?qx.lang.Array.fromArguments(arguments,3):null})();
}}});
qx.Class.define("qx.event.Registration",{statics:{__managers:{},getManager:function(target){if(target==null){{qx.log.Logger.error("qx.event.Registration.getManager(null) was called!");
qx.log.Logger.trace(this);
};
target=window;
}else if(target.nodeType){target=qx.dom.Node.getWindow(target);
}else if(!qx.dom.Node.isWindow(target)){target=window;
}var hash=target.$$hash||qx.core.ObjectRegistry.toHashCode(target);
var manager=this.__managers[hash];

if(!manager){manager=new qx.event.Manager(target,this);
this.__managers[hash]=manager;
}return manager;
},removeManager:function(mgr){var id=mgr.getWindowId();
delete this.__managers[id];
},addListener:function(target,type,listener,self,capture){return this.getManager(target).addListener(target,type,listener,self,capture);
},removeListener:function(target,type,listener,self,capture){return this.getManager(target).removeListener(target,type,listener,self,capture);
},removeListenerById:function(target,id){return this.getManager(target).removeListenerById(target,id);
},removeAllListeners:function(target){return this.getManager(target).removeAllListeners(target);
},deleteAllListeners:function(target){var targetKey=target.$$hash;

if(targetKey){this.getManager(target).deleteAllListeners(targetKey);
}},hasListener:function(target,type,capture){return this.getManager(target).hasListener(target,type,capture);
},serializeListeners:function(target){return this.getManager(target).serializeListeners(target);
},createEvent:function(type,clazz,args){{if(arguments.length>1&&clazz===undefined){throw new Error("Create event of type "+type+" with undefined class. Please use null to explicit fallback to default event type!");
}};
if(clazz==null){clazz=qx.event.type.Event;
}var obj=qx.event.Pool.getInstance().getObject(clazz);
args?obj.init.apply(obj,args):obj.init();
if(type){obj.setType(type);
}return obj;
},dispatchEvent:function(target,event){return this.getManager(target).dispatchEvent(target,event);
},fireEvent:function(target,type,clazz,args){{if(arguments.length>2&&clazz===undefined&&args!==undefined){throw new Error("Create event of type "+type+" with undefined class. Please use null to explicit fallback to default event type!");
}var msg="Could not fire event '"+type+"' on target '"+(target?target.classname:"undefined")+"': ";
qx.core.Assert.assertNotUndefined(target,msg+"Invalid event target.");
qx.core.Assert.assertNotNull(target,msg+"Invalid event target.");
};
var evt=this.createEvent(type,clazz||null,args);
return this.getManager(target).dispatchEvent(target,evt);
},fireNonBubblingEvent:function(target,type,clazz,args){{if(arguments.length>2&&clazz===undefined&&args!==undefined){throw new Error("Create event of type "+type+" with undefined class. Please use null to explicit fallback to default event type!");
}};
var mgr=this.getManager(target);

if(!mgr.hasListener(target,type,false)){return true;
}var evt=this.createEvent(type,clazz||null,args);
return mgr.dispatchEvent(target,evt);
},PRIORITY_FIRST:-32000,PRIORITY_NORMAL:0,PRIORITY_LAST:32000,__handlers:[],addHandler:function(handler){{qx.core.Assert.assertInterface(handler,qx.event.IEventHandler,"Invalid event handler.");
};
this.__handlers.push(handler);
this.__handlers.sort(function(a,b){return a.PRIORITY-b.PRIORITY;
});
},getHandlers:function(){return this.__handlers;
},__dispatchers:[],addDispatcher:function(dispatcher,priority){{qx.core.Assert.assertInterface(dispatcher,qx.event.IEventDispatcher,"Invalid event dispatcher!");
};
this.__dispatchers.push(dispatcher);
this.__dispatchers.sort(function(a,b){return a.PRIORITY-b.PRIORITY;
});
},getDispatchers:function(){return this.__dispatchers;
}}});
qx.Class.define("qx.dev.StackTrace",{statics:{getStackTrace:qx.core.Variant.select("qx.client",{"gecko":function(){try{throw new Error();
}catch(ex){var errorTrace=this.getStackTraceFromError(ex);
qx.lang.Array.removeAt(errorTrace,0);
var callerTrace=this.getStackTraceFromCaller(arguments);
var trace=callerTrace.length>errorTrace.length?callerTrace:errorTrace;

for(var i=0;i<Math.min(callerTrace.length,errorTrace.length);i++){var callerCall=callerTrace[i];

if(callerCall.indexOf("anonymous")>=0){continue;
}var callerArr=callerCall.split(":");

if(callerArr.length!=2){continue;
}var callerClassName=callerArr[0];
var methodName=callerArr[1];
var errorCall=errorTrace[i];
var errorArr=errorCall.split(":");
var errorClassName=errorArr[0];
var lineNumber=errorArr[1];

if(qx.Class.getByName(errorClassName)){var className=errorClassName;
}else{className=callerClassName;
}var line=className+":";

if(methodName){line+=methodName+":";
}line+=lineNumber;
trace[i]=line;
}return trace;
}},"mshtml|webkit":function(){return this.getStackTraceFromCaller(arguments);
},"opera":function(){var foo;

try{foo.bar();
}catch(ex){var trace=this.getStackTraceFromError(ex);
qx.lang.Array.removeAt(trace,0);
return trace;
}return [];
}}),getStackTraceFromCaller:qx.core.Variant.select("qx.client",{"opera":function(args){return [];
},"default":function(args){var trace=[];
var fcn=qx.lang.Function.getCaller(args);
var knownFunction={};

while(fcn){var fcnName=qx.lang.Function.getName(fcn);
trace.push(fcnName);

try{fcn=fcn.caller;
}catch(ex){break;
}
if(!fcn){break;
}var hash=qx.core.ObjectRegistry.toHashCode(fcn);

if(knownFunction[hash]){trace.push("...");
break;
}knownFunction[hash]=fcn;
}return trace;
}}),getStackTraceFromError:qx.core.Variant.select("qx.client",{"gecko":function(error){if(!error.stack){return [];
}var lineRe=/@(.+):(\d+)$/gm;
var hit;
var trace=[];

while((hit=lineRe.exec(error.stack))!=null){var url=hit[1];
var lineNumber=hit[2];
var className=this.__fileNameToClassName(url);
trace.push(className+":"+lineNumber);
}return trace;
},"webkit":function(error){if(error.sourceURL&&error.line){return [this.__fileNameToClassName(error.sourceURL)+":"+error.line];
}else{return [];
}},"opera":function(error){if(error.message.indexOf("Backtrace:")<0){return [];
}var trace=[];
var traceString=qx.lang.String.trim(error.message.split("Backtrace:")[1]);
var lines=traceString.split("\n");

for(var i=0;i<lines.length;i++){var reResult=lines[i].match(/\s*Line ([0-9]+) of.* (\S.*)/);

if(reResult&&reResult.length>=2){var lineNumber=reResult[1];
var fileName=this.__fileNameToClassName(reResult[2]);
trace.push(fileName+":"+lineNumber);
}}return trace;
},"default":function(){return [];
}}),__fileNameToClassName:function(fileName){var scriptDir="/source/class/";
var jsPos=fileName.indexOf(scriptDir);
var className=(jsPos==-1)?fileName:fileName.substring(jsPos+scriptDir.length).replace(/\//g,".").replace(/\.js$/,"");
return className;
}}});
qx.Class.define("qx.log.appender.RingBuffer",{extend:Object,construct:function(maxMessages){this.__history=[];
this.setMaxMessages(maxMessages||50);
},members:{__nextIndexToStoreTo:0,__history:null,__maxMessages:50,setMaxMessages:function(maxMessages){this.__maxMessages=maxMessages;
this.clearHistory();
},getMaxMessages:function(){return this.__maxMessages;
},process:function(entry){var maxMessages=this.getMaxMessages();

if(this.__history.length<maxMessages){this.__history.push(entry);
}else{this.__history[this.__nextIndexToStoreTo++]=entry;

if(this.__nextIndexToStoreTo>=maxMessages){this.__nextIndexToStoreTo=0;
}}},getAllLogEvents:function(){return this.retrieveLogEvents(this.getMaxMessages());
},retrieveLogEvents:function(count){if(count>this.__history.length){count=this.__history.length;
}
if(this.__history.length==this.getMaxMessages()){var indexOfYoungestElementInHistory=this.__nextIndexToStoreTo-1;
}else{indexOfYoungestElementInHistory=this.__history.length-1;
}var startIndex=indexOfYoungestElementInHistory-count+1;

if(startIndex<0){startIndex+=this.__history.length;
}var result;

if(startIndex<=indexOfYoungestElementInHistory){result=this.__history.slice(startIndex,indexOfYoungestElementInHistory+1);
}else{result=this.__history.slice(startIndex,this.__history.length).concat(this.__history.slice(0,indexOfYoungestElementInHistory+1));
}return result;
},clearHistory:function(){this.__history=[];
this.__nextIndexToStoreTo=0;
}}});
qx.Class.define("qx.log.Logger",{statics:{__level:"debug",setLevel:function(value){this.__level=value;
},getLevel:function(){return this.__level;
},setTreshold:function(value){this.__buffer.setMaxMessages(value);
},getTreshold:function(){return this.__buffer.getMaxMessages();
},__appender:{},__id:0,register:function(appender){if(appender.$$id){return;
}var id=this.__id++;
this.__appender[id]=appender;
appender.$$id=id;
var entries=this.__buffer.getAllLogEvents();

for(var i=0,l=entries.length;i<l;i++){appender.process(entries[i]);
}},unregister:function(appender){var id=appender.$$id;

if(id==null){return;
}delete this.__appender[id];
delete appender.$$id;
},debug:function(object,message){qx.log.Logger.__log("debug",arguments);
},info:function(object,message){qx.log.Logger.__log("info",arguments);
},warn:function(object,message){qx.log.Logger.__log("warn",arguments);
},error:function(object,message){qx.log.Logger.__log("error",arguments);
},trace:function(object){qx.log.Logger.__log("info",[object,qx.dev.StackTrace.getStackTrace().join("\n")]);
},deprecatedMethodWarning:function(fcn,msg){{var functionName=qx.lang.Function.getName(fcn);
this.warn("The method '"+functionName+"' is deprecated: "+(msg||"Please consult the API documentation of this method for alternatives."));
this.trace();
};
},deprecatedClassWarning:function(clazz,msg){{var className=clazz.classname||"unknown";
this.warn("The class '"+className+"' is deprecated: "+(msg||"Please consult the API documentation of this class for alternatives."));
this.trace();
};
},deprecatedEventWarning:function(clazz,event,msg){{var className=clazz.self?clazz.self.classname:"unknown";
this.warn("The event '"+(event||"unknown")+"' from class '"+className+"' is deprecated: "+(msg||"Please consult the API documentation of this class for alternatives."));
this.trace();
};
},deprecatedMixinWarning:function(clazz,msg){{var mixinName=clazz?clazz.name:"unknown";
this.warn("The mixin '"+mixinName+"' is deprecated: "+(msg||"Please consult the API documentation of this class for alternatives."));
this.trace();
};
},deprecatedConstantWarning:function(clazz,constant,msg){{if(clazz.__defineGetter__){var self=this;
var constantValue=clazz[constant];
clazz.__defineGetter__(constant,function(){self.warn("The constant '"+constant+"' is deprecated: "+(msg||"Please consult the API documentation for alternatives."));
self.trace();
return constantValue;
});
}};
},deprecateMethodOverriding:function(object,baseclass,methodName,msg){{var clazz=object.constructor;

while(clazz.classname!==baseclass.classname){if(clazz.prototype.hasOwnProperty(methodName)){this.warn("The method '"+qx.lang.Function.getName(object[methodName])+"' overrides a deprecated method: "+(msg||"Please consult the API documentation for alternatives."));
this.trace();
break;
}clazz=clazz.superclass;
}};
},clear:function(){this.__buffer.clearHistory();
},__buffer:new qx.log.appender.RingBuffer(50),__levels:{debug:0,info:1,warn:2,error:3},__log:function(level,args){var levels=this.__levels;

if(levels[level]<levels[this.__level]){return;
}var object=args.length<2?null:args[0];
var start=object?1:0;
var items=[];

for(var i=start,l=args.length;i<l;i++){items.push(this.__serialize(args[i],true));
}var time=new Date;
var entry={time:time,offset:time-qx.Bootstrap.LOADSTART,level:level,items:items,win:window};
if(object){if(object instanceof qx.core.Object){entry.object=object.$$hash;
}else if(object.$$type){entry.clazz=object;
}}this.__buffer.process(entry);
var appender=this.__appender;

for(var id in appender){appender[id].process(entry);
}},__detect:function(value){if(value===undefined){return "undefined";
}else if(value===null){return "null";
}
if(value.$$type){return "class";
}var type=typeof value;

if(type==="function"||type=="string"||type==="number"||type==="boolean"){return type;
}else if(type==="object"){if(value.nodeType){return "node";
}else if(value.classname){return "instance";
}else if(value instanceof Array){return "array";
}else if(value instanceof Error){return "error";
}else{return "map";
}}
if(value.toString){return "stringify";
}return "unknown";
},__serialize:function(value,deep){var type=this.__detect(value);
var text="unknown";
var trace=[];

switch(type){case "null":case "undefined":text=type;
break;
case "string":case "number":case "boolean":text=value;
break;
case "node":if(value.nodeType===9){text="document";
}else if(value.nodeType===3){text="text["+value.nodeValue+"]";
}else if(value.nodeType===1){text=value.nodeName.toLowerCase();

if(value.id){text+="#"+value.id;
}}else{text="node";
}break;
case "function":text=qx.lang.Function.getName(value)||type;
break;
case "instance":text=value.basename+"["+value.$$hash+"]";
break;
case "class":case "stringify":text=value.toString();
break;
case "error":trace=qx.dev.StackTrace.getStackTraceFromError(value);
text=value.toString();
break;
case "array":if(deep){text=[];

for(var i=0,l=value.length;i<l;i++){if(text.length>20){text.push("...(+"+(l-i)+")");
break;
}text.push(this.__serialize(value[i],false));
}}else{text="[...("+value.length+")]";
}break;
case "map":if(deep){var temp;
var sorted=[];

for(var key in value){sorted.push(key);
}sorted.sort();
text=[];

for(var i=0,l=sorted.length;i<l;i++){if(text.length>20){text.push("...(+"+(l-i)+")");
break;
}key=sorted[i];
temp=this.__serialize(value[key],false);
temp.key=key;
text.push(temp);
}}else{var number=0;

for(var key in value){number++;
}text="{...("+number+")}";
}break;
}return {type:type,text:text,trace:trace};
}},defer:function(statics){var logs=qx.Bootstrap.$$logs;

for(var i=0;i<logs.length;i++){this.__log(logs[i][0],logs[i][1]);
}qx.Bootstrap.debug=statics.debug;
qx.Bootstrap.info=statics.info;
qx.Bootstrap.warn=statics.warn;
qx.Bootstrap.error=statics.error;
qx.Bootstrap.trace=statics.trace;
}});
qx.Class.define("qx.core.Object",{extend:Object,include:[qx.data.MBinding],construct:function(){qx.core.ObjectRegistry.register(this);
},statics:{$$type:"Object"},members:{toHashCode:function(){return this.$$hash;
},toString:function(){return this.classname+"["+this.$$hash+"]";
},base:function(args,varags){{if(!qx.Bootstrap.isFunction(args.callee.base)){throw new Error("Cannot call super class. Method is not derived: "+args.callee.displayName);
}};

if(arguments.length===1){return args.callee.base.call(this);
}else{return args.callee.base.apply(this,Array.prototype.slice.call(arguments,1));
}},self:function(args){return args.callee.self;
},clone:function(){var clazz=this.constructor;
var clone=new clazz;
var props=qx.Class.getProperties(clazz);
var user=qx.core.Property.$$store.user;
var setter=qx.core.Property.$$method.set;
var name;
for(var i=0,l=props.length;i<l;i++){name=props[i];

if(this.hasOwnProperty(user[name])){clone[setter[name]](this[user[name]]);
}}return clone;
},set:function(data,value){var setter=qx.core.Property.$$method.set;

if(qx.Bootstrap.isString(data)){if(!this[setter[data]]){if(this["set"+qx.Bootstrap.firstUp(data)]!=undefined){this["set"+qx.Bootstrap.firstUp(data)](value);
return;
}{qx.Bootstrap.error("No such property: "+data);
return this;
};
}return this[setter[data]](value);
}else{for(var prop in data){if(!this[setter[prop]]){if(this["set"+qx.Bootstrap.firstUp(prop)]!=undefined){this["set"+qx.Bootstrap.firstUp(prop)](data[prop]);
continue;
}{qx.Bootstrap.error("No such property: "+prop);
return this;
};
}this[setter[prop]](data[prop]);
}return this;
}},get:function(prop){var getter=qx.core.Property.$$method.get;

if(!this[getter[prop]]){if(this["get"+qx.Bootstrap.firstUp(prop)]!=undefined){return this["get"+qx.Bootstrap.firstUp(prop)]();
}{qx.Bootstrap.error("No such property: "+prop);
return this;
};
}return this[getter[prop]]();
},reset:function(prop){var resetter=qx.core.Property.$$method.reset;

if(!this[resetter[prop]]){if(this["reset"+qx.Bootstrap.firstUp(prop)]!=undefined){this["reset"+qx.Bootstrap.firstUp(prop)]();
return;
}{qx.Bootstrap.error("No such property: "+prop);
return this;
};
}this[resetter[prop]]();
},__Registration:qx.event.Registration,addListener:function(type,listener,self,capture){if(!this.$$disposed){return this.__Registration.addListener(this,type,listener,self,capture);
}return null;
},addListenerOnce:function(type,listener,self,capture){var callback=function(e){listener.call(self||this,e);
this.removeListener(type,callback,this,capture);
};
return this.addListener(type,callback,this,capture);
},removeListener:function(type,listener,self,capture){if(!this.$$disposed){return this.__Registration.removeListener(this,type,listener,self,capture);
}return false;
},removeListenerById:function(id){if(!this.$$disposed){return this.__Registration.removeListenerById(this,id);
}return false;
},hasListener:function(type,capture){return this.__Registration.hasListener(this,type,capture);
},dispatchEvent:function(evt){if(!this.$$disposed){return this.__Registration.dispatchEvent(this,evt);
}return true;
},fireEvent:function(type,clazz,args){if(!this.$$disposed){return this.__Registration.fireEvent(this,type,clazz,args);
}return true;
},fireNonBubblingEvent:function(type,clazz,args){if(!this.$$disposed){return this.__Registration.fireNonBubblingEvent(this,type,clazz,args);
}return true;
},fireDataEvent:function(type,data,oldData,cancelable){if(!this.$$disposed){if(oldData===undefined){oldData=null;
}return this.__Registration.fireNonBubblingEvent(this,type,qx.event.type.Data,[data,oldData,!!cancelable]);
}return true;
},__userData:null,setUserData:function(key,value){if(!this.__userData){this.__userData={};
}this.__userData[key]=value;
},getUserData:function(key){if(!this.__userData){return null;
}var data=this.__userData[key];
return data===undefined?null:data;
},__Logger:qx.log.Logger,debug:function(msg){this.__Logger.debug(this,msg);
},info:function(msg){this.__Logger.info(this,msg);
},warn:function(msg){this.__Logger.warn(this,msg);
},error:function(msg){this.__Logger.error(this,msg);
},trace:function(){this.__Logger.trace(this);
},isDisposed:function(){return this.$$disposed||false;
},dispose:function(){if(this.$$disposed){return;
}this.$$disposed=true;
this.$$instance=null;
this.$$allowconstruct=null;
{if(qx.core.Setting.get("qx.disposerDebugLevel")>2){qx.Bootstrap.debug(this,"Disposing "+this.classname+"["+this.toHashCode()+"]");
}};
var clazz=this.constructor;
var mixins;

while(clazz.superclass){if(clazz.$$destructor){clazz.$$destructor.call(this);
}if(clazz.$$includes){mixins=clazz.$$flatIncludes;

for(var i=0,l=mixins.length;i<l;i++){if(mixins[i].$$destructor){mixins[i].$$destructor.call(this);
}}}clazz=clazz.superclass;
}if(this.__removePropertyReferences){this.__removePropertyReferences();
}{if(qx.core.Setting.get("qx.disposerDebugLevel")>0){var key,value;

for(key in this){value=this[key];
if(value!==null&&typeof value==="object"&&!(qx.Bootstrap.isString(value))){if(this.constructor.prototype[key]!=null){continue;
}var ff2=navigator.userAgent.indexOf("rv:1.8.1")!=-1;
var ie6=navigator.userAgent.indexOf("MSIE 6.0")!=-1;
if(ff2||ie6){if(value instanceof qx.core.Object||qx.core.Setting.get("qx.disposerDebugLevel")>1){qx.Bootstrap.warn(this,"Missing destruct definition for '"+key+"' in "+this.classname+"["+this.toHashCode()+"]: "+value);
delete this[key];
}}else{if(qx.core.Setting.get("qx.disposerDebugLevel")>1){qx.Bootstrap.warn(this,"Missing destruct definition for '"+key+"' in "+this.classname+"["+this.toHashCode()+"]: "+value);
delete this[key];
}}}}}};
},__removePropertyReferences:null,__removePropertyReferencesOld:function(){var properties=qx.Class.getProperties(this.constructor);

for(var i=0,l=properties.length;i<l;i++){delete this["$$user_"+properties[i]];
}},_disposeFields:function(varargs){qx.Bootstrap.warn("Don't use '_disposeFields' - instead assign directly to 'null'");
qx.util.DisposeUtil.disposeFields(this,arguments);
},_disposeObjects:function(varargs){qx.util.DisposeUtil.disposeObjects(this,arguments);
},_disposeSingletonObjects:function(varargs){qx.util.DisposeUtil.disposeObjects(this,arguments,true);
},_disposeArray:function(field){qx.util.DisposeUtil.disposeArray(this,field);
},_disposeMap:function(field){qx.util.DisposeUtil.disposeMap(this,field);
}},settings:{"qx.disposerDebugLevel":0},defer:function(statics,proto){{qx.Class.include(statics,qx.core.MAssert);
};
var ie6=navigator.userAgent.indexOf("MSIE 6.0")!=-1;
var ff2=navigator.userAgent.indexOf("rv:1.8.1")!=-1;
if(ie6||ff2){proto.__removePropertyReferences=proto.__removePropertyReferencesOld;
}},destruct:function(){if(!qx.core.ObjectRegistry.inShutDown){qx.event.Registration.removeAllListeners(this);
}else{qx.event.Registration.deleteAllListeners(this);
}qx.core.ObjectRegistry.unregister(this);
this.__userData=null;
var clazz=this.constructor;
var properties;
var store=qx.core.Property.$$store;
var storeUser=store.user;
var storeTheme=store.theme;
var storeInherit=store.inherit;
var storeUseinit=store.useinit;
var storeInit=store.init;

while(clazz){properties=clazz.$$properties;

if(properties){for(var name in properties){if(properties[name].dispose||properties[name].dereference){this[storeUser[name]]=this[storeTheme[name]]=this[storeInherit[name]]=this[storeUseinit[name]]=this[storeInit[name]]=undefined;
}}}clazz=clazz.superclass;
}}});
qx.Class.define("qx.event.type.Event",{extend:qx.core.Object,statics:{CAPTURING_PHASE:1,AT_TARGET:2,BUBBLING_PHASE:3},members:{init:function(canBubble,cancelable){{if(canBubble!==undefined){qx.core.Assert.assertBoolean(canBubble,"Invalid argument value 'canBubble'.");
}
if(cancelable!==undefined){qx.core.Assert.assertBoolean(cancelable,"Invalid argument value 'cancelable'.");
}};
this._type=null;
this._target=null;
this._currentTarget=null;
this._relatedTarget=null;
this._originalTarget=null;
this._stopPropagation=false;
this._preventDefault=false;
this._bubbles=!!canBubble;
this._cancelable=!!cancelable;
this._timeStamp=(new Date()).getTime();
this._eventPhase=null;
return this;
},clone:function(embryo){if(embryo){var clone=embryo;
}else{var clone=qx.event.Pool.getInstance().getObject(this.constructor);
}clone._type=this._type;
clone._target=this._target;
clone._currentTarget=this._currentTarget;
clone._relatedTarget=this._relatedTarget;
clone._originalTarget=this._originalTarget;
clone._stopPropagation=this._stopPropagation;
clone._bubbles=this._bubbles;
clone._preventDefault=this._preventDefault;
clone._cancelable=this._cancelable;
return clone;
},stop:function(){if(this._bubbles){this.stopPropagation();
}
if(this._cancelable){this.preventDefault();
}},stopPropagation:function(){{this.assertTrue(this._bubbles,"Cannot stop propagation on a non bubbling event: "+this.getType());
};
this._stopPropagation=true;
},getPropagationStopped:function(){return !!this._stopPropagation;
},preventDefault:function(){{this.assertTrue(this._cancelable,"Cannot prevent default action on a non cancelable event: "+this.getType());
};
this._preventDefault=true;
},getDefaultPrevented:function(){return !!this._preventDefault;
},getType:function(){return this._type;
},setType:function(type){this._type=type;
},getEventPhase:function(){return this._eventPhase;
},setEventPhase:function(eventPhase){this._eventPhase=eventPhase;
},getTimeStamp:function(){return this._timeStamp;
},getTarget:function(){return this._target;
},setTarget:function(target){this._target=target;
},getCurrentTarget:function(){return this._currentTarget||this._target;
},setCurrentTarget:function(currentTarget){this._currentTarget=currentTarget;
},getRelatedTarget:function(){return this._relatedTarget;
},setRelatedTarget:function(relatedTarget){this._relatedTarget=relatedTarget;
},getOriginalTarget:function(){return this._originalTarget;
},setOriginalTarget:function(originalTarget){this._originalTarget=originalTarget;
},getBubbles:function(){return this._bubbles;
},setBubbles:function(bubbles){this._bubbles=bubbles;
},isCancelable:function(){return this._cancelable;
},setCancelable:function(cancelable){this._cancelable=cancelable;
}},destruct:function(){this._target=this._currentTarget=this._relatedTarget=this._originalTarget=null;
}});
qx.Class.define("qx.event.type.Data",{extend:qx.event.type.Event,members:{__data:null,__old:null,init:function(data,old,cancelable){this.base(arguments,false,cancelable);
this.__data=data;
this.__old=old;
return this;
},clone:function(embryo){var clone=this.base(arguments,embryo);
clone.__data=this.__data;
clone.__old=this.__old;
return clone;
},getData:function(){return this.__data;
},getOldData:function(){return this.__old;
}},destruct:function(){this.__data=this.__old=null;
}});
qx.Class.define("qx.type.BaseError",{extend:Error,construct:function(comment,failMessage){Error.call(this,failMessage);
this.__comment=comment||"";
this.message=failMessage||qx.type.BaseError.DEFAULTMESSAGE;
},statics:{DEFAULTMESSAGE:"error"},members:{__comment:null,message:null,getComment:function(){return this.__comment;
},toString:function(){return this.__comment+": "+this.message;
}}});
qx.Class.define("qx.core.AssertionError",{extend:qx.type.BaseError,construct:function(comment,failMessage){qx.type.BaseError.call(this,comment,failMessage);
this.__trace=qx.dev.StackTrace.getStackTrace();
},members:{__trace:null,getStackTrace:function(){return this.__trace;
}}});
qx.Interface.define("qx.data.IListData",{events:{"change":"qx.event.type.Data","changeLength":"qx.event.type.Event"},members:{getItem:function(index){},setItem:function(index,item){},splice:function(startIndex,amount,varargs){},contains:function(item){},getLength:function(){},toArray:function(){}}});
qx.Class.define("qx.lang.Date",{statics:{now:function(){return +new Date;
}}});
qx.Bootstrap.define("qx.event.GlobalError",{statics:{setErrorHandler:function(callback,context){this.__callback=callback||null;
this.__context=context||window;

if(qx.core.Setting.get("qx.globalErrorHandling")==="on"){if(callback&&window.onerror){var wrappedHandler=qx.Bootstrap.bind(this.__onErrorWindow,this);

if(this.__originalOnError==null){this.__originalOnError=window.onerror;
}var self=this;
window.onerror=function(e){self.__originalOnError(e);
wrappedHandler(e);
};
}
if(callback&&!window.onerror){window.onerror=qx.Bootstrap.bind(this.__onErrorWindow,this);
}if(this.__callback==null){if(this.__originalOnError!=null){window.onerror=this.__originalOnError;
this.__originalOnError=null;
}else{window.onerror=null;
}}}},__onErrorWindow:function(msg,uri,lineNumber){if(this.__callback){this.handleError(new qx.core.WindowError(msg,uri,lineNumber));
return true;
}},observeMethod:function(method){if(qx.core.Setting.get("qx.globalErrorHandling")==="on"){var self=this;
return function(){if(!self.__callback){return method.apply(this,arguments);
}
try{return method.apply(this,arguments);
}catch(ex){self.handleError(new qx.core.GlobalError(ex,arguments));
}};
}else{return method;
}},handleError:function(ex){if(this.__callback){this.__callback.call(this.__context,ex);
}}},defer:function(statics){qx.core.Setting.define("qx.globalErrorHandling","on");
statics.setErrorHandler(null,null);
}});
qx.Bootstrap.define("qx.core.WindowError",{extend:Error,construct:function(failMessage,uri,lineNumber){Error.call(this,failMessage);
this.__failMessage=failMessage;
this.__uri=uri||"";
this.__lineNumber=lineNumber===undefined?-1:lineNumber;
},members:{__failMessage:null,__uri:null,__lineNumber:null,toString:function(){return this.__failMessage;
},getUri:function(){return this.__uri;
},getLineNumber:function(){return this.__lineNumber;
}}});
qx.Bootstrap.define("qx.core.GlobalError",{extend:Error,construct:function(exc,args){{qx.core.Assert.assertNotUndefined(exc);
};
this.__failMessage="GlobalError: "+(exc&&exc.message?exc.message:exc);
Error.call(this,this.__failMessage);
this.__arguments=args;
this.__exc=exc;
},members:{__exc:null,__arguments:null,__failMessage:null,toString:function(){return this.__failMessage;
},getArguments:function(){return this.__arguments;
},getSourceException:function(){return this.__exc;
}},destruct:function(){this.__exc=null;
this.__arguments=null;
this.__failMessage=null;
}});
qx.Class.define("qx.lang.String",{statics:{camelCase:function(str){return str.replace(/\-([a-z])/g,function(match,chr){return chr.toUpperCase();
});
},hyphenate:function(str){return str.replace(/[A-Z]/g,function(match){return ('-'+match.charAt(0).toLowerCase());
});
},capitalize:function(str){return str.replace(/\b[a-z]/g,function(match){return match.toUpperCase();
});
},clean:function(str){return this.trim(str.replace(/\s+/g,' '));
},trimLeft:function(str){return str.replace(/^\s+/,"");
},trimRight:function(str){return str.replace(/\s+$/,"");
},trim:function(str){return str.replace(/^\s+|\s+$/g,"");
},startsWith:function(fullstr,substr){return fullstr.indexOf(substr)===0;
},endsWith:function(fullstr,substr){return fullstr.substring(fullstr.length-substr.length,fullstr.length)===substr;
},repeat:function(str,times){return str.length>0?new Array(times+1).join(str):"";
},pad:function(str,length,ch){var padLength=length-str.length;

if(padLength>0){if(typeof ch==="undefined"){ch="0";
}return this.repeat(ch,padLength)+str;
}else{return str;
}},firstUp:qx.Bootstrap.firstUp,firstLow:qx.Bootstrap.firstLow,contains:function(str,substring){return str.indexOf(substring)!=-1;
},format:function(pattern,args){var str=pattern;

for(var i=0;i<args.length;i++){str=str.replace(new RegExp("%"+(i+1),"g"),args[i]);
}return str;
},escapeRegexpChars:function(str){return str.replace(/([.*+?^${}()|[\]\/\\])/g,'\\$1');
},toArray:function(str){return str.split(/\B|\b/g);
},stripTags:function(str){return str.replace(/<\/?[^>]+>/gi,"");
},stripScripts:function(str,exec){var scripts="";
var text=str.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi,function(){scripts+=arguments[1]+'\n';
return "";
});

if(exec===true){qx.lang.Function.globalEval(scripts);
}return text;
}}});
qx.Class.define("qx.lang.JsonImpl",{extend:Object,construct:function(){this.stringify=qx.lang.Function.bind(this.stringify,this);
this.parse=qx.lang.Function.bind(this.parse,this);
},members:{__gap:null,__indent:null,__rep:null,__stack:null,stringify:function(value,replacer,space){this.__gap='';
this.__indent='';
this.__stack=[];

if(qx.lang.Type.isNumber(space)){var space=Math.min(10,Math.floor(space));

for(var i=0;i<space;i+=1){this.__indent+=' ';
}}else if(qx.lang.Type.isString(space)){if(space.length>10){space=space.slice(0,10);
}this.__indent=space;
}if(replacer&&(qx.lang.Type.isFunction(replacer)||qx.lang.Type.isArray(replacer))){this.__rep=replacer;
}else{this.__rep=null;
}return this.__str('',{'':value});
},__str:function(key,holder){var mind=this.__gap,partial,value=holder[key];
if(value&&qx.lang.Type.isFunction(value.toJSON)){value=value.toJSON(key);
}else if(qx.lang.Type.isDate(value)){value=this.dateToJSON(value);
}if(typeof this.__rep==='function'){value=this.__rep.call(holder,key,value);
}
if(value===null){return 'null';
}
if(value===undefined){return undefined;
}switch(qx.lang.Type.getClass(value)){case 'String':return this.__quote(value);
case 'Number':return isFinite(value)?String(value):'null';
case 'Boolean':return String(value);
case 'Array':this.__gap+=this.__indent;
partial=[];

if(this.__stack.indexOf(value)!==-1){throw new TypeError("Cannot stringify a recursive object.");
}this.__stack.push(value);
var length=value.length;

for(var i=0;i<length;i+=1){partial[i]=this.__str(i,value)||'null';
}this.__stack.pop();
if(partial.length===0){var string='[]';
}else if(this.__gap){string='[\n'+this.__gap+partial.join(',\n'+this.__gap)+'\n'+mind+']';
}else{string='['+partial.join(',')+']';
}this.__gap=mind;
return string;
case 'Object':this.__gap+=this.__indent;
partial=[];

if(this.__stack.indexOf(value)!==-1){throw new TypeError("Cannot stringify a recursive object.");
}this.__stack.push(value);
if(this.__rep&&typeof this.__rep==='object'){var length=this.__rep.length;

for(var i=0;i<length;i+=1){var k=this.__rep[i];

if(typeof k==='string'){var v=this.__str(k,value);

if(v){partial.push(this.__quote(k)+(this.__gap?': ':':')+v);
}}}}else{for(var k in value){if(Object.hasOwnProperty.call(value,k)){var v=this.__str(k,value);

if(v){partial.push(this.__quote(k)+(this.__gap?': ':':')+v);
}}}}this.__stack.pop();
if(partial.length===0){var string='{}';
}else if(this.__gap){string='{\n'+this.__gap+partial.join(',\n'+this.__gap)+'\n'+mind+'}';
}else{string='{'+partial.join(',')+'}';
}this.__gap=mind;
return string;
}},dateToJSON:function(date){var f2=function(n){return n<10?'0'+n:n;
};
var f3=function(n){var value=f2(n);
return n<100?'0'+value:value;
};
return isFinite(date.valueOf())?date.getUTCFullYear()+'-'+f2(date.getUTCMonth()+1)+'-'+f2(date.getUTCDate())+'T'+f2(date.getUTCHours())+':'+f2(date.getUTCMinutes())+':'+f2(date.getUTCSeconds())+'.'+f3(date.getUTCMilliseconds())+'Z':null;
},__quote:function(string){var meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'};
var escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
escapable.lastIndex=0;

if(escapable.test(string)){return '"'+
string.replace(escapable,function(a){var c=meta[a];
return typeof c==='string'?c:'\\u'+('0000'+a.charCodeAt(0).toString(16)).slice(-4);
})+'"';
}else{return '"'+string+'"';
}},parse:function(text,reviver){var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
cx.lastIndex=0;
if(cx.test(text)){text=text.replace(cx,function(a){return '\\u'+('0000'+a.charCodeAt(0).toString(16)).slice(-4);
});
}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,''))){var j=eval('('+text+')');
return typeof reviver==='function'?this.__walk({'':j},'',reviver):j;
}throw new SyntaxError('JSON.parse');
},__walk:function(holder,key,reviver){var value=holder[key];

if(value&&typeof value==='object'){for(var k in value){if(Object.hasOwnProperty.call(value,k)){var v=this.__walk(value,k,reviver);

if(v!==undefined){value[k]=v;
}else{delete value[k];
}}}}return reviver.call(holder,key,value);
}}});
qx.Class.define("qx.lang.Json",{statics:{JSON:(qx.lang.Type.getClass(window.JSON)=="JSON"&&JSON.parse('{"x":1}').x===1)?window.JSON:new qx.lang.JsonImpl(),stringify:null,parse:null},defer:function(statics){statics.stringify=statics.JSON.stringify;
statics.parse=statics.JSON.parse;
}});
qx.Class.define("qx.data.SingleValueBinding",{statics:{DEBUG_ON:false,__bindings:{},bind:function(sourceObject,sourcePropertyChain,targetObject,targetPropertyChain,options){var targetListenerMap=this.__setUpTargetBinding(sourceObject,sourcePropertyChain,targetObject,targetPropertyChain,options);
var propertyNames=sourcePropertyChain.split(".");
var arrayIndexValues=this.__checkForArrayInPropertyChain(propertyNames);
var sources=[];
var listeners=[];
var listenerIds=[];
var eventNames=[];
var source=sourceObject;
for(var i=0;i<propertyNames.length;i++){if(arrayIndexValues[i]!==""){eventNames.push("change");
}else{eventNames.push(this.__getEventNameForProperty(source,propertyNames[i]));
}sources[i]=source;
if(i==propertyNames.length-1){if(arrayIndexValues[i]!==""){var itemIndex=arrayIndexValues[i]==="last"?source.length-1:arrayIndexValues[i];
var currentValue=source.getItem(itemIndex);
this.__setInitialValue(currentValue,targetObject,targetPropertyChain,options,sourceObject);
listenerIds[i]=this.__bindEventToProperty(source,eventNames[i],targetObject,targetPropertyChain,options,arrayIndexValues[i]);
}else{if(propertyNames[i]!=null&&source["get"+qx.lang.String.firstUp(propertyNames[i])]!=null){var currentValue=source["get"+qx.lang.String.firstUp(propertyNames[i])]();
this.__setInitialValue(currentValue,targetObject,targetPropertyChain,options,sourceObject);
}listenerIds[i]=this.__bindEventToProperty(source,eventNames[i],targetObject,targetPropertyChain,options);
}}else{var context={index:i,propertyNames:propertyNames,sources:sources,listenerIds:listenerIds,arrayIndexValues:arrayIndexValues,targetObject:targetObject,targetPropertyChain:targetPropertyChain,options:options,listeners:listeners};
var listener=qx.lang.Function.bind(this.__chainListener,this,context);
listeners.push(listener);
listenerIds[i]=source.addListener(eventNames[i],listener);
}if(source["get"+qx.lang.String.firstUp(propertyNames[i])]==null){source=null;
}else if(arrayIndexValues[i]!==""){source=source["get"+qx.lang.String.firstUp(propertyNames[i])](arrayIndexValues[i]);
}else{source=source["get"+qx.lang.String.firstUp(propertyNames[i])]();
}
if(!source){break;
}}var id={type:"deepBinding",listenerIds:listenerIds,sources:sources,targetListenerIds:targetListenerMap.listenerIds,targets:targetListenerMap.targets};
this.__storeBinding(id,sourceObject,sourcePropertyChain,targetObject,targetPropertyChain);
return id;
},__chainListener:function(context){if(context.options&&context.options.onUpdate){context.options.onUpdate(context.sources[context.index],context.targetObject);
}for(var j=context.index+1;j<context.propertyNames.length;j++){var source=context.sources[j];
context.sources[j]=null;

if(!source){continue;
}source.removeListenerById(context.listenerIds[j]);
}var source=context.sources[context.index];
for(var j=context.index+1;j<context.propertyNames.length;j++){if(context.arrayIndexValues[j-1]!==""){source=source["get"+qx.lang.String.firstUp(context.propertyNames[j-1])](context.arrayIndexValues[j-1]);
}else{source=source["get"+qx.lang.String.firstUp(context.propertyNames[j-1])]();
}context.sources[j]=source;
if(!source){this.__resetTargetValue(context.targetObject,context.targetPropertyChain);
break;
}if(j==context.propertyNames.length-1){if(qx.Class.implementsInterface(source,qx.data.IListData)){var itemIndex=context.arrayIndexValues[j]==="last"?source.length-1:context.arrayIndexValues[j];
var currentValue=source.getItem(itemIndex);
this.__setInitialValue(currentValue,context.targetObject,context.targetPropertyChain,context.options,context.sources[context.index]);
context.listenerIds[j]=this.__bindEventToProperty(source,"change",context.targetObject,context.targetPropertyChain,context.options,context.arrayIndexValues[j]);
}else{if(context.propertyNames[j]!=null&&source["get"+qx.lang.String.firstUp(context.propertyNames[j])]!=null){var currentValue=source["get"+qx.lang.String.firstUp(context.propertyNames[j])]();
this.__setInitialValue(currentValue,context.targetObject,context.targetPropertyChain,context.options,context.sources[context.index]);
}var eventName=this.__getEventNameForProperty(source,context.propertyNames[j]);
context.listenerIds[j]=this.__bindEventToProperty(source,eventName,context.targetObject,context.targetPropertyChain,context.options);
}}else{if(context.listeners[j]==null){var listener=qx.lang.Function.bind(this.__chainListener,this,context);
context.listeners.push(listener);
}if(qx.Class.implementsInterface(source,qx.data.IListData)){var eventName="change";
}else{var eventName=this.__getEventNameForProperty(source,context.propertyNames[j]);
}context.listenerIds[j]=source.addListener(eventName,context.listeners[j]);
}}},__setUpTargetBinding:function(sourceObject,sourcePropertyChain,targetObject,targetPropertyChain,options){var propertyNames=targetPropertyChain.split(".");
var arrayIndexValues=this.__checkForArrayInPropertyChain(propertyNames);
var targets=[];
var listeners=[];
var listenerIds=[];
var eventNames=[];
var target=targetObject;
for(var i=0;i<propertyNames.length-1;i++){if(arrayIndexValues[i]!==""){eventNames.push("change");
}else{try{eventNames.push(this.__getEventNameForProperty(target,propertyNames[i]));
}catch(e){break;
}}targets[i]=target;
var listener=function(){for(var j=i+1;j<propertyNames.length-1;j++){var target=targets[j];
targets[j]=null;

if(!target){continue;
}target.removeListenerById(listenerIds[j]);
}var target=targets[i];
for(var j=i+1;j<propertyNames.length-1;j++){var firstUpPropName=qx.lang.String.firstUp(propertyNames[j-1]);
if(arrayIndexValues[j-1]!==""){var currentIndex=arrayIndexValues[j-1]==="last"?target.getLength()-1:arrayIndexValues[j-1];
target=target["get"+firstUpPropName](currentIndex);
}else{target=target["get"+firstUpPropName]();
}targets[j]=target;
if(listeners[j]==null){listeners.push(listener);
}if(qx.Class.implementsInterface(target,qx.data.IListData)){var eventName="change";
}else{try{var eventName=qx.data.SingleValueBinding.__getEventNameForProperty(target,propertyNames[j]);
}catch(e){break;
}}listenerIds[j]=target.addListener(eventName,listeners[j]);
}qx.data.SingleValueBinding.__updateTarget(sourceObject,sourcePropertyChain,targetObject,targetPropertyChain);
};
listeners.push(listener);
listenerIds[i]=target.addListener(eventNames[i],listener);
var firstUpPropName=qx.lang.String.firstUp(propertyNames[i]);
if(target["get"+firstUpPropName]==null){target=null;
}else if(arrayIndexValues[i]!==""){target=target["get"+firstUpPropName](arrayIndexValues[i]);
}else{target=target["get"+firstUpPropName]();
}
if(!target){break;
}}return {listenerIds:listenerIds,targets:targets};
},__updateTarget:function(sourceObject,sourcePropertyChain,targetObject,targetPropertyChain){var source=this.__getTargetFromChain(sourceObject,sourcePropertyChain);

if(source!=null){var lastProperty=sourcePropertyChain.substring(sourcePropertyChain.lastIndexOf(".")+1,sourcePropertyChain.length);
if(lastProperty.charAt(lastProperty.length-1)=="]"){var index=lastProperty.substring(lastProperty.lastIndexOf("[")+1,lastProperty.length-1);
var prop=lastProperty.substring(0,lastProperty.lastIndexOf("["));
var sourceArray=source["get"+qx.lang.String.firstUp(prop)]();

if(index=="last"){index=sourceArray.length-1;
}
if(sourceArray!=null){var value=sourceArray.getItem(index);
}}else{var value=source["get"+qx.lang.String.firstUp(lastProperty)]();
}}this.__setTargetValue(targetObject,targetPropertyChain,value);
},__getEventNameForProperty:function(source,propertyname){var eventName=this.__getEventForProperty(source,propertyname);
if(eventName==null){if(qx.Class.supportsEvent(source.constructor,propertyname)){eventName=propertyname;
}else if(qx.Class.supportsEvent(source.constructor,"change"+qx.lang.String.firstUp(propertyname))){eventName="change"+qx.lang.String.firstUp(propertyname);
}else{throw new qx.core.AssertionError("No event could be found for the property",propertyname);
}}return eventName;
},__resetTargetValue:function(targetObject,targetPropertyChain){var target=this.__getTargetFromChain(targetObject,targetPropertyChain);

if(target!=null){var lastProperty=targetPropertyChain.substring(targetPropertyChain.lastIndexOf(".")+1,targetPropertyChain.length);
if(lastProperty.charAt(lastProperty.length-1)=="]"){this.__setTargetValue(targetObject,targetPropertyChain,null);
return;
}if(target["reset"+qx.lang.String.firstUp(lastProperty)]!=undefined){target["reset"+qx.lang.String.firstUp(lastProperty)]();
}else{target["set"+qx.lang.String.firstUp(lastProperty)](null);
}}},__setTargetValue:function(targetObject,targetPropertyChain,value){var target=this.__getTargetFromChain(targetObject,targetPropertyChain);

if(target!=null){var lastProperty=targetPropertyChain.substring(targetPropertyChain.lastIndexOf(".")+1,targetPropertyChain.length);
if(lastProperty.charAt(lastProperty.length-1)=="]"){var index=lastProperty.substring(lastProperty.lastIndexOf("[")+1,lastProperty.length-1);
var prop=lastProperty.substring(0,lastProperty.lastIndexOf("["));
var targetArray=target["get"+qx.lang.String.firstUp(prop)]();

if(index=="last"){index=targetArray.length-1;
}
if(targetArray!=null){targetArray.setItem(index,value);
}}else{target["set"+qx.lang.String.firstUp(lastProperty)](value);
}}},__getTargetFromChain:function(targetObject,targetPropertyChain){var properties=targetPropertyChain.split(".");
var target=targetObject;
for(var i=0;i<properties.length-1;i++){try{var property=properties[i];
if(property.indexOf("]")==property.length-1){var index=property.substring(property.indexOf("[")+1,property.length-1);
property=property.substring(0,property.indexOf("["));
}target=target["get"+qx.lang.String.firstUp(property)]();

if(index!=null){if(index=="last"){index=target.length-1;
}target=target.getItem(index);
index=null;
}}catch(ex){return null;
}}return target;
},__setInitialValue:function(value,targetObject,targetPropertyChain,options,sourceObject){value=this.__convertValue(value,targetObject,targetPropertyChain,options);
if(value==null){this.__resetTargetValue(targetObject,targetPropertyChain);
}if(value!=undefined){try{this.__setTargetValue(targetObject,targetPropertyChain,value);
if(options&&options.onUpdate){options.onUpdate(sourceObject,targetObject,value);
}}catch(e){if(!(e instanceof qx.core.ValidationError)){throw e;
}
if(options&&options.onSetFail){options.onSetFail(e);
}else{this.warn("Failed so set value "+value+" on "+targetObject+". Error message: "+e);
}}}},__checkForArrayInPropertyChain:function(propertyNames){var arrayIndexValues=[];
for(var i=0;i<propertyNames.length;i++){var name=propertyNames[i];
if(qx.lang.String.endsWith(name,"]")){var arrayIndex=name.substring(name.indexOf("[")+1,name.indexOf("]"));
if(name.indexOf("]")!=name.length-1){throw new Error("Please use only one array at a time: "+name+" does not work.");
}
if(arrayIndex!=="last"){if(arrayIndex==""||isNaN(parseInt(arrayIndex))){throw new Error("No number or 'last' value hast been given"+" in a array binding: "+name+" does not work.");
}}if(name.indexOf("[")!=0){propertyNames[i]=name.substring(0,name.indexOf("["));
arrayIndexValues[i]="";
arrayIndexValues[i+1]=arrayIndex;
propertyNames.splice(i+1,0,"item");
i++;
}else{arrayIndexValues[i]=arrayIndex;
propertyNames.splice(i,1,"item");
}}else{arrayIndexValues[i]="";
}}return arrayIndexValues;
},__bindEventToProperty:function(sourceObject,sourceEvent,targetObject,targetProperty,options,arrayIndex){{var eventType=qx.Class.getEventType(sourceObject.constructor,sourceEvent);
qx.core.Assert.assertEquals("qx.event.type.Data",eventType,sourceEvent+" is not an data (qx.event.type.Data) event on "+sourceObject+".");
};
var bindListener=function(arrayIndex,e){if(arrayIndex!==""){if(arrayIndex==="last"){arrayIndex=sourceObject.length-1;
}var data=sourceObject.getItem(arrayIndex);
if(data==undefined){qx.data.SingleValueBinding.__resetTargetValue(targetObject,targetProperty);
}var start=e.getData().start;
var end=e.getData().end;

if(arrayIndex<start||arrayIndex>end){return;
}}else{var data=e.getData();
}if(qx.data.SingleValueBinding.DEBUG_ON){qx.log.Logger.debug("Binding executed from "+sourceObject+" by "+sourceEvent+" to "+targetObject+" ("+targetProperty+")");
qx.log.Logger.debug("Data before conversion: "+data);
}data=qx.data.SingleValueBinding.__convertValue(data,targetObject,targetProperty,options);
if(qx.data.SingleValueBinding.DEBUG_ON){qx.log.Logger.debug("Data after conversion: "+data);
}try{if(data!=undefined){qx.data.SingleValueBinding.__setTargetValue(targetObject,targetProperty,data);
}else{qx.data.SingleValueBinding.__resetTargetValue(targetObject,targetProperty);
}if(options&&options.onUpdate){options.onUpdate(sourceObject,targetObject,data);
}}catch(e){if(!(e instanceof qx.core.ValidationError)){throw e;
}
if(options&&options.onSetFail){options.onSetFail(e);
}else{this.warn("Failed so set value "+data+" on "+targetObject+". Error message: "+e);
}}};
if(!arrayIndex){arrayIndex="";
}bindListener=qx.lang.Function.bind(bindListener,sourceObject,arrayIndex);
var id=sourceObject.addListener(sourceEvent,bindListener);
return id;
},__storeBinding:function(id,sourceObject,sourceEvent,targetObject,targetProperty){if(this.__bindings[sourceObject.toHashCode()]===undefined){this.__bindings[sourceObject.toHashCode()]=[];
}this.__bindings[sourceObject.toHashCode()].push([id,sourceObject,sourceEvent,targetObject,targetProperty]);
},__convertValue:function(value,targetObject,targetPropertyChain,options){if(options&&options.converter){var model;

if(targetObject.getModel){model=targetObject.getModel();
}return options.converter(value,model);
}else{var target=this.__getTargetFromChain(targetObject,targetPropertyChain);
var lastProperty=targetPropertyChain.substring(targetPropertyChain.lastIndexOf(".")+1,targetPropertyChain.length);
if(target==null){return value;
}var propertieDefinition=qx.Class.getPropertyDefinition(target.constructor,lastProperty);
var check=propertieDefinition==null?"":propertieDefinition.check;
return this.__defaultConversion(value,check);
}},__getEventForProperty:function(sourceObject,sourceProperty){var propertieDefinition=qx.Class.getPropertyDefinition(sourceObject.constructor,sourceProperty);

if(propertieDefinition==null){return null;
}return propertieDefinition.event;
},__defaultConversion:function(data,targetCheck){var dataType=qx.lang.Type.getClass(data);
if((dataType=="Number"||dataType=="String")&&(targetCheck=="Integer"||targetCheck=="PositiveInteger")){data=parseInt(data);
}if((dataType=="Boolean"||dataType=="Number"||dataType=="Date")&&targetCheck=="String"){data=data+"";
}if((dataType=="Number"||dataType=="String")&&(targetCheck=="Number"||targetCheck=="PositiveNumber")){data=parseFloat(data);
}return data;
},removeBindingFromObject:function(sourceObject,id){if(id.type=="deepBinding"){for(var i=0;i<id.sources.length;i++){if(id.sources[i]){id.sources[i].removeListenerById(id.listenerIds[i]);
}}for(var i=0;i<id.targets.length;i++){if(id.targets[i]){id.targets[i].removeListenerById(id.targetListenerIds[i]);
}}}else{sourceObject.removeListenerById(id);
}var bindings=this.__bindings[sourceObject.toHashCode()];
if(bindings!=undefined){for(var i=0;i<bindings.length;i++){if(bindings[i][0]==id){qx.lang.Array.remove(bindings,bindings[i]);
return;
}}}throw new Error("Binding could not be found!");
},removeAllBindingsForObject:function(object){{qx.core.Assert.assertNotNull(object,"Can not remove the bindings for null object!");
};
var bindings=this.__bindings[object.toHashCode()];

if(bindings!=undefined){for(var i=bindings.length-1;i>=0;i--){this.removeBindingFromObject(object,bindings[i][0]);
}}},getAllBindingsForObject:function(object){if(this.__bindings[object.toHashCode()]===undefined){this.__bindings[object.toHashCode()]=[];
}return this.__bindings[object.toHashCode()];
},removeAllBindings:function(){for(var hash in this.__bindings){var object=qx.core.ObjectRegistry.fromHashCode(hash);
if(object==null){delete this.__bindings[hash];
continue;
}this.removeAllBindingsForObject(object);
}this.__bindings={};
},getAllBindings:function(){return this.__bindings;
},showBindingInLog:function(object,id){var binding;
for(var i=0;i<this.__bindings[object.toHashCode()].length;i++){if(this.__bindings[object.toHashCode()][i][0]==id){binding=this.__bindings[object.toHashCode()][i];
break;
}}
if(binding===undefined){var message="Binding does not exist!";
}else{var message="Binding from '"+binding[1]+"' ("+binding[2]+") to the object '"+binding[3]+"' ("+binding[4]+").";
}qx.log.Logger.debug(message);
},showAllBindingsInLog:function(){for(var hash in this.__bindings){var object=qx.core.ObjectRegistry.fromHashCode(hash);

for(var i=0;i<this.__bindings[hash].length;i++){this.showBindingInLog(object,this.__bindings[hash][i][0]);
}}}}});
qx.Class.define("qx.core.ValidationError",{extend:qx.type.BaseError});
qx.Interface.define("qx.event.IEventHandler",{statics:{TARGET_DOMNODE:1,TARGET_WINDOW:2,TARGET_OBJECT:3},members:{canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){}}});
qx.Class.define("qx.util.ObjectPool",{extend:qx.core.Object,construct:function(size){this.base(arguments);
this.__pool={};

if(size!=null){this.setSize(size);
}},properties:{size:{check:"Integer",init:Infinity}},members:{__pool:null,getObject:function(clazz){if(this.$$disposed){return new clazz;
}
if(!clazz){throw new Error("Class needs to be defined!");
}var obj=null;
var pool=this.__pool[clazz.classname];

if(pool){obj=pool.pop();
}
if(obj){obj.$$pooled=false;
}else{obj=new clazz;
}return obj;
},poolObject:function(obj){if(!this.__pool){return;
}var classname=obj.classname;
var pool=this.__pool[classname];

if(obj.$$pooled){throw new Error("Object is already pooled: "+obj);
}
if(!pool){this.__pool[classname]=pool=[];
}if(pool.length>this.getSize()){if(obj.destroy){obj.destroy();
}else{obj.dispose();
}return;
}obj.$$pooled=true;
pool.push(obj);
}},destruct:function(){var pool=this.__pool;
var classname,list,i,l;

for(classname in pool){list=pool[classname];

for(i=0,l=list.length;i<l;i++){list[i].dispose();
}}delete this.__pool;
}});
qx.Class.define("qx.event.Pool",{extend:qx.util.ObjectPool,type:"singleton",construct:function(){this.base(arguments,30);
}});
qx.Class.define("qx.util.DisposeUtil",{statics:{disposeFields:function(obj,arr){qx.Bootstrap.warn("Don't use 'disposeFields' - instead assign directly to 'null'");

for(var i=0,l=arr.length;i<l;i++){var name=arr[i];

if(obj[name]==null||!obj.hasOwnProperty(name)){continue;
}obj[name]=null;
}},disposeObjects:function(obj,arr,disposeSingletons){var name;

for(var i=0,l=arr.length;i<l;i++){name=arr[i];

if(obj[name]==null||!obj.hasOwnProperty(name)){continue;
}
if(!qx.core.ObjectRegistry.inShutDown){if(obj[name].dispose){if(!disposeSingletons&&obj[name].constructor.$$instance){throw new Error("The object stored in key "+name+" is a singleton! Please use disposeSingleton instead.");
}else{obj[name].dispose();
}}else{throw new Error("Has no disposable object under key: "+name+"!");
}}obj[name]=null;
}},disposeArray:function(obj,field){var data=obj[field];

if(!data){return;
}if(qx.core.ObjectRegistry.inShutDown){obj[field]=null;
return;
}try{var entry;

for(var i=data.length-1;i>=0;i--){entry=data[i];

if(entry){entry.dispose();
}}}catch(ex){throw new Error("The array field: "+field+" of object: "+obj+" has non disposable entries: "+ex);
}data.length=0;
obj[field]=null;
},disposeMap:function(obj,field){var data=obj[field];

if(!data){return;
}if(qx.core.ObjectRegistry.inShutDown){obj[field]=null;
return;
}try{for(var key in data){if(data.hasOwnProperty(key)){data[key].dispose();
}}}catch(ex){throw new Error("The map field: "+field+" of object: "+obj+" has non disposable entries: "+ex);
}obj[field]=null;
},disposeTriggeredBy:function(disposeMe,trigger){var triggerDispose=trigger.dispose;
trigger.dispose=function(){triggerDispose.call(trigger);
disposeMe.dispose();
};
}}});
qx.Interface.define("qx.event.IEventDispatcher",{members:{canDispatchEvent:function(target,event,type){this.assertInstance(event,qx.event.type.Event);
this.assertString(type);
},dispatchEvent:function(target,event,type){this.assertInstance(event,qx.event.type.Event);
this.assertString(type);
}}});
qx.Class.define("qx.event.dispatch.Direct",{extend:qx.core.Object,implement:qx.event.IEventDispatcher,construct:function(manager){this._manager=manager;
},statics:{PRIORITY:qx.event.Registration.PRIORITY_LAST},members:{canDispatchEvent:function(target,event,type){return !event.getBubbles();
},dispatchEvent:function(target,event,type){{if(target instanceof qx.core.Object){var expectedEventClassName=qx.Class.getEventType(target.constructor,type);
var expectedEventClass=qx.Class.getByName(expectedEventClassName);

if(!expectedEventClass){this.error("The event type '"+type+"' declared in the class '"+target.constructor+" is not an available class': "+expectedEventClassName);
}else if(!(event instanceof expectedEventClass)){this.error("Expected event type to be instanceof '"+expectedEventClassName+"' but found '"+event.classname+"'");
}}};
event.setEventPhase(qx.event.type.Event.AT_TARGET);
var listeners=this._manager.getListeners(target,type,false);

if(listeners){for(var i=0,l=listeners.length;i<l;i++){var context=listeners[i].context||target;
listeners[i].handler.call(context,event);
}}}},defer:function(statics){qx.event.Registration.addDispatcher(statics);
}});
qx.Class.define("qx.event.handler.Object",{extend:qx.core.Object,implement:qx.event.IEventHandler,statics:{PRIORITY:qx.event.Registration.PRIORITY_LAST,SUPPORTED_TYPES:null,TARGET_CHECK:qx.event.IEventHandler.TARGET_OBJECT,IGNORE_CAN_HANDLE:false},members:{canHandleEvent:function(target,type){return qx.Class.supportsEvent(target.constructor,type);
},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){}},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.bom.client.Feature",{statics:{STANDARD_MODE:false,QUIRKS_MODE:false,CONTENT_BOX:false,BORDER_BOX:false,SVG:false,CANVAS:!!window.CanvasRenderingContext2D,VML:false,XPATH:!!document.evaluate,AIR:navigator.userAgent.indexOf("adobeair")!==-1,GEARS:!!(window.google&&window.google.gears),SSL:window.location.protocol==="https:",ECMA_OBJECT_COUNT:(({}).__count__==0),CSS_POINTER_EVENTS:"pointerEvents" in document.documentElement.style,HTML5_CLASSLIST:(document.documentElement.classList&&qx.Bootstrap.getClass(document.documentElement.classList)==="DOMTokenList"),__init:function(){this.QUIRKS_MODE=this.__isQuirksMode();
this.STANDARD_MODE=!this.QUIRKS_MODE;
this.CONTENT_BOX=!qx.bom.client.Engine.MSHTML||this.STANDARD_MODE;
this.BORDER_BOX=!this.CONTENT_BOX;
this.SVG=document.implementation&&document.implementation.hasFeature&&(document.implementation.hasFeature("org.w3c.dom.svg","1.0")||document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1"));
this.VML=qx.bom.client.Engine.MSHTML;
},__isQuirksMode:function(){if(qx.bom.client.Engine.MSHTML&&qx.bom.client.Engine.VERSION>=8){return qx.bom.client.Engine.DOCUMENT_MODE===5;
}else{return document.compatMode!=="CSS1Compat";
}}},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.lang.Object",{statics:{empty:function(map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};

for(var key in map){if(map.hasOwnProperty(key)){delete map[key];
}}},isEmpty:(qx.bom.client.Feature.ECMA_OBJECT_COUNT)?
function(map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};
return map.__count__===0;
}:
function(map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};

for(var key in map){return false;
}return true;
},hasMinLength:(qx.bom.client.Feature.ECMA_OBJECT_COUNT)?
function(map,minLength){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
qx.core.Assert&&qx.core.Assert.assertInteger(minLength,"Invalid argument 'minLength'");
};
return map.__count__>=minLength;
}:
function(map,minLength){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
qx.core.Assert&&qx.core.Assert.assertInteger(minLength,"Invalid argument 'minLength'");
};

if(minLength<=0){return true;
}var length=0;

for(var key in map){if((++length)>=minLength){return true;
}}return false;
},getLength:qx.Bootstrap.objectGetLength,getKeys:qx.Bootstrap.getKeys,getKeysAsString:qx.Bootstrap.getKeysAsString,getValues:function(map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};
var arr=[];
var keys=this.getKeys(map);

for(var i=0,l=keys.length;i<l;i++){arr.push(map[keys[i]]);
}return arr;
},mergeWith:qx.Bootstrap.objectMergeWith,carefullyMergeWith:function(target,source){{qx.core.Assert&&qx.core.Assert.assertMap(target,"Invalid argument 'target'");
qx.core.Assert&&qx.core.Assert.assertMap(source,"Invalid argument 'source'");
};
return qx.lang.Object.mergeWith(target,source,false);
},merge:function(target,varargs){{qx.core.Assert&&qx.core.Assert.assertMap(target,"Invalid argument 'target'");
};
var len=arguments.length;

for(var i=1;i<len;i++){qx.lang.Object.mergeWith(target,arguments[i]);
}return target;
},clone:function(source){{qx.core.Assert&&qx.core.Assert.assertMap(source,"Invalid argument 'source'");
};
var clone={};

for(var key in source){clone[key]=source[key];
}return clone;
},invert:function(map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};
var result={};

for(var key in map){result[map[key].toString()]=key;
}return result;
},getKeyFromValue:function(map,value){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};

for(var key in map){if(map.hasOwnProperty(key)&&map[key]===value){return key;
}}return null;
},contains:function(map,value){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};
return this.getKeyFromValue(map,value)!==null;
},select:function(key,map){{qx.core.Assert&&qx.core.Assert.assertMap(map,"Invalid argument 'map'");
};
return map[key];
},fromArray:function(array){{qx.core.Assert&&qx.core.Assert.assertArray(array,"Invalid argument 'array'");
};
var obj={};

for(var i=0,l=array.length;i<l;i++){{switch(typeof array[i]){case "object":case "function":case "undefined":throw new Error("Could not convert complex objects like "+array[i]+" at array index "+i+" to map syntax");
}};
obj[array[i].toString()]=true;
}return obj;
}}});
qx.Class.define("qx.lang.Core",{statics:{errorToString:qx.lang.Object.select((!Error.prototype.toString||Error.prototype.toString()=="[object Error]")?"emulated":"native",{"native":Error.prototype.toString,"emulated":function(){return this.message;
}}),arrayIndexOf:qx.lang.Object.select(Array.prototype.indexOf?"native":"emulated",{"native":Array.prototype.indexOf,"emulated":function(searchElement,fromIndex){if(fromIndex==null){fromIndex=0;
}else if(fromIndex<0){fromIndex=Math.max(0,this.length+fromIndex);
}
for(var i=fromIndex;i<this.length;i++){if(this[i]===searchElement){return i;
}}return -1;
}}),arrayLastIndexOf:qx.lang.Object.select(Array.prototype.lastIndexOf?"native":"emulated",{"native":Array.prototype.lastIndexOf,"emulated":function(searchElement,fromIndex){if(fromIndex==null){fromIndex=this.length-1;
}else if(fromIndex<0){fromIndex=Math.max(0,this.length+fromIndex);
}
for(var i=fromIndex;i>=0;i--){if(this[i]===searchElement){return i;
}}return -1;
}}),arrayForEach:qx.lang.Object.select(Array.prototype.forEach?"native":"emulated",{"native":Array.prototype.forEach,"emulated":function(callback,obj){var l=this.length;

for(var i=0;i<l;i++){var value=this[i];

if(value!==undefined){callback.call(obj||window,value,i,this);
}}}}),arrayFilter:qx.lang.Object.select(Array.prototype.filter?"native":"emulated",{"native":Array.prototype.filter,"emulated":function(callback,obj){var res=[];
var l=this.length;

for(var i=0;i<l;i++){var value=this[i];

if(value!==undefined){if(callback.call(obj||window,value,i,this)){res.push(this[i]);
}}}return res;
}}),arrayMap:qx.lang.Object.select(Array.prototype.map?"native":"emulated",{"native":Array.prototype.map,"emulated":function(callback,obj){var res=[];
var l=this.length;

for(var i=0;i<l;i++){var value=this[i];

if(value!==undefined){res[i]=callback.call(obj||window,value,i,this);
}}return res;
}}),arraySome:qx.lang.Object.select(Array.prototype.some?"native":"emulated",{"native":Array.prototype.some,"emulated":function(callback,obj){var l=this.length;

for(var i=0;i<l;i++){var value=this[i];

if(value!==undefined){if(callback.call(obj||window,value,i,this)){return true;
}}}return false;
}}),arrayEvery:qx.lang.Object.select(Array.prototype.every?"native":"emulated",{"native":Array.prototype.every,"emulated":function(callback,obj){var l=this.length;

for(var i=0;i<l;i++){var value=this[i];

if(value!==undefined){if(!callback.call(obj||window,value,i,this)){return false;
}}}return true;
}}),stringQuote:qx.lang.Object.select(String.prototype.quote?"native":"emulated",{"native":String.prototype.quote,"emulated":function(){return '"'+this.replace(/\\/g,"\\\\").replace(/\"/g,"\\\"")+'"';
}})}});
Error.prototype.toString=qx.lang.Core.errorToString;
Array.prototype.indexOf=qx.lang.Core.arrayIndexOf;
Array.prototype.lastIndexOf=qx.lang.Core.arrayLastIndexOf;
Array.prototype.forEach=qx.lang.Core.arrayForEach;
Array.prototype.filter=qx.lang.Core.arrayFilter;
Array.prototype.map=qx.lang.Core.arrayMap;
Array.prototype.some=qx.lang.Core.arraySome;
Array.prototype.every=qx.lang.Core.arrayEvery;
String.prototype.quote=qx.lang.Core.stringQuote;
qx.Class.define("qx.lang.Generics",{statics:{__map:{"Array":["join","reverse","sort","push","pop","shift","unshift","splice","concat","slice","indexOf","lastIndexOf","forEach","map","filter","some","every"],"String":["quote","substring","toLowerCase","toUpperCase","charAt","charCodeAt","indexOf","lastIndexOf","toLocaleLowerCase","toLocaleUpperCase","localeCompare","match","search","replace","split","substr","concat","slice"]},__wrap:function(obj,func){return function(s){return obj.prototype[func].apply(s,Array.prototype.slice.call(arguments,1));
};
},__init:function(){var map=qx.lang.Generics.__map;

for(var key in map){var obj=window[key];
var arr=map[key];

for(var i=0,l=arr.length;i<l;i++){var func=arr[i];

if(!obj[func]){obj[func]=qx.lang.Generics.__wrap(obj,func);
}}}}},defer:function(statics){statics.__init();
}});
qx.Bootstrap.define("qx.Theme",{statics:{define:function(name,config){if(!config){var config={};
}config.include=this.__normalizeArray(config.include);
config.patch=this.__normalizeArray(config.patch);
{this.__validateConfig(name,config);
};
var theme={$$type:"Theme",name:name,title:config.title,toString:this.genericToString};
if(config.extend){theme.supertheme=config.extend;
}theme.basename=qx.Bootstrap.createNamespace(name,theme);
this.__convert(theme,config);
this.__initializeAliases(theme,config);
this.$$registry[name]=theme;
for(var i=0,a=config.include,l=a.length;i<l;i++){this.include(theme,a[i]);
}
for(var i=0,a=config.patch,l=a.length;i<l;i++){this.patch(theme,a[i]);
}},__normalizeArray:function(objectOrArray){if(!objectOrArray){return [];
}
if(qx.Bootstrap.isArray(objectOrArray)){return objectOrArray;
}else{return [objectOrArray];
}},__initializeAliases:function(theme,config){var aliases=config.aliases||{};

if(config.extend&&config.extend.aliases){qx.Bootstrap.objectMergeWith(aliases,config.extend.aliases,false);
}theme.aliases=aliases;
},getAll:function(){return this.$$registry;
},getByName:function(name){return this.$$registry[name];
},isDefined:function(name){return this.getByName(name)!==undefined;
},getTotalNumber:function(){return qx.Bootstrap.objectGetLength(this.$$registry);
},genericToString:function(){return "[Theme "+this.name+"]";
},__extractType:function(config){for(var i=0,keys=this.__inheritableKeys,l=keys.length;i<l;i++){if(config[keys[i]]){return keys[i];
}}},__convert:function(theme,config){var type=this.__extractType(config);
if(config.extend&&!type){type=config.extend.type;
}theme.type=type||"other";
if(!type){return;
}var clazz=function(){};
if(config.extend){clazz.prototype=new config.extend.$$clazz;
}var target=clazz.prototype;
var source=config[type];
for(var id in source){target[id]=source[id];
if(target[id].base){{if(!config.extend){throw new Error("Found base flag in entry '"+id+"' of theme '"+config.name+"'. Base flags are not allowed for themes without a valid super theme!");
}};
target[id].base=config.extend;
}}theme.$$clazz=clazz;
theme[type]=new clazz;
},$$registry:{},__inheritableKeys:["colors","borders","decorations","fonts","icons","widgets","appearances","meta"],__allowedKeys:{"title":"string","aliases":"object","type":"string","extend":"object","colors":"object","borders":"object","decorations":"object","fonts":"object","icons":"object","widgets":"object","appearances":"object","meta":"object","include":"object","patch":"object"},__metaKeys:{"color":"object","border":"object","decoration":"object","font":"object","icon":"object","appearance":"object","widget":"object"},__validateConfig:function(name,config){var allowed=this.__allowedKeys;

for(var key in config){if(allowed[key]===undefined){throw new Error('The configuration key "'+key+'" in theme "'+name+'" is not allowed!');
}
if(config[key]==null){throw new Error('Invalid key "'+key+'" in theme "'+name+'"! The value is undefined/null!');
}
if(allowed[key]!==null&&typeof config[key]!==allowed[key]){throw new Error('Invalid type of key "'+key+'" in theme "'+name+'"! The type of the key must be "'+allowed[key]+'"!');
}}var maps=["colors","borders","decorations","fonts","icons","widgets","appearances","meta"];

for(var i=0,l=maps.length;i<l;i++){var key=maps[i];

if(config[key]!==undefined&&(config[key] instanceof Array||config[key] instanceof RegExp||config[key] instanceof Date||config[key].classname!==undefined)){throw new Error('Invalid key "'+key+'" in theme "'+name+'"! The value needs to be a map!');
}}var counter=0;

for(var i=0,l=maps.length;i<l;i++){var key=maps[i];

if(config[key]){counter++;
}
if(counter>1){throw new Error("You can only define one theme category per file! Invalid theme: "+name);
}}if(!config.extend&&counter===0){throw new Error("You must define at least one entry in your theme configuration :"+name);
}if(config.meta){var value;

for(var key in config.meta){value=config.meta[key];

if(this.__metaKeys[key]===undefined){throw new Error('The key "'+key+'" is not allowed inside a meta theme block.');
}
if(typeof value!==this.__metaKeys[key]){throw new Error('The type of the key "'+key+'" inside the meta block is wrong.');
}
if(!(typeof value==="object"&&value!==null&&value.$$type==="Theme")){throw new Error('The content of a meta theme must reference to other themes. The value for "'+key+'" in theme "'+name+'" is invalid: '+value);
}}}if(config.extend&&config.extend.$$type!=="Theme"){throw new Error('Invalid extend in theme "'+name+'": '+config.extend);
}if(config.include){for(var i=0,l=config.include.length;i<l;i++){if(typeof (config.include[i])=="undefined"||config.include[i].$$type!=="Theme"){throw new Error('Invalid include in theme "'+name+'": '+config.include[i]);
}}}if(config.patch){for(var i=0,l=config.patch.length;i<l;i++){if(typeof (config.patch[i])=="undefined"||config.patch[i].$$type!=="Theme"){throw new Error('Invalid patch in theme "'+name+'": '+config.patch[i]);
}}}},patch:function(theme,mixinTheme){var type=this.__extractType(mixinTheme);

if(type!==this.__extractType(theme)){throw new Error("The mixins '"+theme.name+"' are not compatible '"+mixinTheme.name+"'!");
}var source=mixinTheme[type];
var target=theme.$$clazz.prototype;

for(var key in source){target[key]=source[key];
}},include:function(theme,mixinTheme){var type=mixinTheme.type;

if(type!==theme.type){throw new Error("The mixins '"+theme.name+"' are not compatible '"+mixinTheme.name+"'!");
}var source=mixinTheme[type];
var target=theme.$$clazz.prototype;

for(var key in source){if(target[key]!==undefined){continue;
}target[key]=source[key];
}}}});
qx.Class.define("qx.event.handler.Application",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this._window=manager.getWindow();
this.__domReady=false;
this.__loaded=false;
this._initObserver();
qx.event.handler.Application.$$instance=this;
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{ready:1,shutdown:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_WINDOW,IGNORE_CAN_HANDLE:true,onScriptLoaded:function(){var inst=qx.event.handler.Application.$$instance;

if(inst){inst.__fireReady();
}}},members:{canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){},__isReady:null,__domReady:null,__loaded:null,__isUnloaded:null,__fireReady:function(){if(!this.__isReady&&this.__domReady&&qx.$$loader.scriptLoaded){if(qx.core.Variant.isSet("qx.client","mshtml")){if(qx.event.Registration.hasListener(this._window,"ready")){this.__isReady=true;
qx.event.Registration.fireEvent(this._window,"ready");
}}else{this.__isReady=true;
qx.event.Registration.fireEvent(this._window,"ready");
}}},isApplicationReady:function(){return this.__isReady;
},_initObserver:function(){if(qx.$$domReady||document.readyState=="complete"||document.readyState=="ready"){this.__domReady=true;
this.__fireReady();
}else{this._onNativeLoadWrapped=qx.lang.Function.bind(this._onNativeLoad,this);

if(qx.core.Variant.isSet("qx.client","gecko|opera|webkit")){qx.bom.Event.addNativeListener(this._window,"DOMContentLoaded",this._onNativeLoadWrapped);
}else if(qx.core.Variant.isSet("qx.client","mshtml")){var self=this;
var timer=function(){try{document.documentElement.doScroll("left");

if(document.body){self._onNativeLoadWrapped();
}}catch(error){window.setTimeout(timer,100);
}};
timer();
}qx.bom.Event.addNativeListener(this._window,"load",this._onNativeLoadWrapped);
}this._onNativeUnloadWrapped=qx.lang.Function.bind(this._onNativeUnload,this);
qx.bom.Event.addNativeListener(this._window,"unload",this._onNativeUnloadWrapped);
},_stopObserver:function(){if(this._onNativeLoadWrapped){qx.bom.Event.removeNativeListener(this._window,"load",this._onNativeLoadWrapped);
}qx.bom.Event.removeNativeListener(this._window,"unload",this._onNativeUnloadWrapped);
this._onNativeLoadWrapped=null;
this._onNativeUnloadWrapped=null;
},_onNativeLoad:qx.event.GlobalError.observeMethod(function(){this.__domReady=true;
this.__fireReady();
}),_onNativeUnload:qx.event.GlobalError.observeMethod(function(){if(!this.__isUnloaded){this.__isUnloaded=true;

try{qx.event.Registration.fireEvent(this._window,"shutdown");
}catch(e){throw e;
}finally{qx.core.ObjectRegistry.shutdown();
}}})},destruct:function(){this._stopObserver();
this._window=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.event.handler.Window",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this._manager=manager;
this._window=manager.getWindow();
this._initWindowObserver();
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{error:1,load:1,beforeunload:1,unload:1,resize:1,scroll:1,beforeshutdown:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_WINDOW,IGNORE_CAN_HANDLE:true},members:{canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){},_initWindowObserver:function(){this._onNativeWrapper=qx.lang.Function.listener(this._onNative,this);
var types=qx.event.handler.Window.SUPPORTED_TYPES;

for(var key in types){qx.bom.Event.addNativeListener(this._window,key,this._onNativeWrapper);
}},_stopWindowObserver:function(){var types=qx.event.handler.Window.SUPPORTED_TYPES;

for(var key in types){qx.bom.Event.removeNativeListener(this._window,key,this._onNativeWrapper);
}},_onNative:qx.event.GlobalError.observeMethod(function(e){if(this.isDisposed()){return;
}var win=this._window;

try{var doc=win.document;
}catch(e){return ;
}var html=doc.documentElement;
var target=e.target||e.srcElement;

if(target==null||target===win||target===doc||target===html){var event=qx.event.Registration.createEvent(e.type,qx.event.type.Native,[e,win]);
qx.event.Registration.dispatchEvent(win,event);
var result=event.getReturnValue();

if(result!=null){e.returnValue=result;
return result;
}}})},destruct:function(){this._stopWindowObserver();
this._manager=this._window=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.core.Init",{statics:{getApplication:function(){return this.__application||null;
},ready:function(){if(this.__application){return;
}
if(qx.bom.client.Engine.UNKNOWN_ENGINE){qx.log.Logger.warn("Could not detect engine!");
}
if(qx.bom.client.Engine.UNKNOWN_VERSION){qx.log.Logger.warn("Could not detect the version of the engine!");
}
if(qx.bom.client.Platform.UNKNOWN_PLATFORM){qx.log.Logger.warn("Could not detect platform!");
}
if(qx.bom.client.System.UNKNOWN_SYSTEM){qx.log.Logger.warn("Could not detect system!");
}qx.log.Logger.debug(this,"Load runtime: "+(new Date-qx.Bootstrap.LOADSTART)+"ms");
var app=qx.core.Setting.get("qx.application");
var clazz=qx.Class.getByName(app);

if(clazz){this.__application=new clazz;
var start=new Date;
this.__application.main();
qx.log.Logger.debug(this,"Main runtime: "+(new Date-start)+"ms");
var start=new Date;
this.__application.finalize();
qx.log.Logger.debug(this,"Finalize runtime: "+(new Date-start)+"ms");
}else{qx.log.Logger.warn("Missing application class: "+app);
}},__close:function(e){var app=this.__application;

if(app){e.setReturnValue(app.close());
}},__shutdown:function(){var app=this.__application;

if(app){app.terminate();
}}},defer:function(statics){qx.event.Registration.addListener(window,"ready",statics.ready,statics);
qx.event.Registration.addListener(window,"shutdown",statics.__shutdown,statics);
qx.event.Registration.addListener(window,"beforeunload",statics.__close,statics);
}});
qx.Interface.define("qx.application.IApplication",{members:{main:function(){},finalize:function(){},close:function(){},terminate:function(){}}});
qx.Mixin.define("qx.locale.MTranslation",{members:{tr:function(messageId,varargs){var nlsManager=qx.locale.Manager;

if(nlsManager){return nlsManager.tr.apply(nlsManager,arguments);
}throw new Error("To enable localization please include qx.locale.Manager into your build!");
},trn:function(singularMessageId,pluralMessageId,count,varargs){var nlsManager=qx.locale.Manager;

if(nlsManager){return nlsManager.trn.apply(nlsManager,arguments);
}throw new Error("To enable localization please include qx.locale.Manager into your build!");
},trc:function(hint,messageId,varargs){var nlsManager=qx.locale.Manager;

if(nlsManager){return nlsManager.trc.apply(nlsManager,arguments);
}throw new Error("To enable localization please include qx.locale.Manager into your build!");
},marktr:function(messageId){var nlsManager=qx.locale.Manager;

if(nlsManager){return nlsManager.marktr.apply(nlsManager,arguments);
}throw new Error("To enable localization please include qx.locale.Manager into your build!");
}}});
qx.Class.define("qx.application.AbstractGui",{type:"abstract",extend:qx.core.Object,implement:[qx.application.IApplication],include:qx.locale.MTranslation,members:{__root:null,_createRootWidget:function(){throw new Error("Abstract method call");
},getRoot:function(){return this.__root;
},main:function(){qx.theme.manager.Meta.getInstance().initialize();
qx.ui.tooltip.Manager.getInstance();
this.__root=this._createRootWidget();
},finalize:function(){this.render();
},render:function(){qx.ui.core.queue.Manager.flush();
},close:function(val){},terminate:function(){}},destruct:function(){this.__root=null;
}});
qx.Class.define("qx.event.type.Native",{extend:qx.event.type.Event,members:{init:function(nativeEvent,target,relatedTarget,canBubble,cancelable){this.base(arguments,canBubble,cancelable);
this._target=target||qx.bom.Event.getTarget(nativeEvent);
this._relatedTarget=relatedTarget||qx.bom.Event.getRelatedTarget(nativeEvent);

if(nativeEvent.timeStamp){this._timeStamp=nativeEvent.timeStamp;
}this._native=nativeEvent;
this._returnValue=null;
return this;
},clone:function(embryo){var clone=this.base(arguments,embryo);
var nativeClone={};
clone._native=this._cloneNativeEvent(this._native,nativeClone);
clone._returnValue=this._returnValue;
return clone;
},_cloneNativeEvent:function(nativeEvent,clone){clone.preventDefault=qx.lang.Function.empty;
return clone;
},preventDefault:function(){this.base(arguments);
qx.bom.Event.preventDefault(this._native);
},getNativeEvent:function(){return this._native;
},setReturnValue:function(returnValue){this._returnValue=returnValue;
},getReturnValue:function(){return this._returnValue;
}},destruct:function(){this._native=this._returnValue=null;
}});
qx.Class.define("qx.bom.client.Platform",{statics:{NAME:"",WIN:false,MAC:false,UNIX:false,UNKNOWN_PLATFORM:false,__init:function(){var input=navigator.platform;
if(input==null||input===""){input=navigator.userAgent;
}
if(input.indexOf("Windows")!=-1||input.indexOf("Win32")!=-1||input.indexOf("Win64")!=-1){this.WIN=true;
this.NAME="win";
}else if(input.indexOf("Macintosh")!=-1||input.indexOf("MacPPC")!=-1||input.indexOf("MacIntel")!=-1||input.indexOf("iPod")!=-1||input.indexOf("iPhone")!=-1){this.MAC=true;
this.NAME="mac";
}else if(input.indexOf("X11")!=-1||input.indexOf("Linux")!=-1||input.indexOf("BSD")!=-1){this.UNIX=true;
this.NAME="unix";
}else{this.UNKNOWN_PLATFORM=true;
this.WIN=true;
this.NAME="win";
}}},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.bom.client.System",{statics:{NAME:"",SP1:false,SP2:false,WIN95:false,WIN98:false,WINME:false,WINNT4:false,WIN2000:false,WINXP:false,WIN2003:false,WINVISTA:false,WIN7:false,WINCE:false,LINUX:false,SUNOS:false,FREEBSD:false,NETBSD:false,OPENBSD:false,OSX:false,OS9:false,SYMBIAN:false,NINTENDODS:false,PSP:false,IPHONE:false,UNKNOWN_SYSTEM:false,__ids:{"Windows NT 6.1":"win7","Windows NT 6.0":"winvista","Windows NT 5.2":"win2003","Windows NT 5.1":"winxp","Windows NT 5.0":"win2000","Windows 2000":"win2000","Windows NT 4.0":"winnt4","Win 9x 4.90":"winme","Windows CE":"wince","Windows 98":"win98","Win98":"win98","Windows 95":"win95","Win95":"win95","Linux":"linux","FreeBSD":"freebsd","NetBSD":"netbsd","OpenBSD":"openbsd","SunOS":"sunos","Symbian System":"symbian","Nitro":"nintendods","PSP":"sonypsp","Mac OS X 10_5":"osx5","Mac OS X 10.5":"osx5","Mac OS X 10_4":"osx4","Mac OS X 10.4":"osx4","Mac OS X 10_3":"osx3","Mac OS X 10.3":"osx3","Mac OS X 10_2":"osx2","Mac OS X 10.2":"osx2","Mac OS X 10_1":"osx1","Mac OS X 10.1":"osx1","Mac OS X 10_0":"osx0","Mac OS X 10.0":"osx0","Mac OS X":"osx","Mac OS 9":"os9"},__init:function(){var agent=navigator.userAgent;
var str=[];

for(var key in this.__ids){str.push(key);
}var reg=new RegExp("("+str.join("|").replace(/\./g,"\.")+")","g");

if(!reg.test(agent)){this.UNKNOWN_SYSTEM=true;

if(!qx.bom.client.Platform.UNKNOWN_PLATFORM){if(qx.bom.client.Platform.UNIX){this.NAME="linux";
this.LINUX=true;
}else if(qx.bom.client.Platform.MAC){this.NAME="osx5";
this.OSX=true;
}else{this.NAME="winxp";
this.WINXP=true;
}}else{this.NAME="winxp";
this.WINXP=true;
}return;
}
if(qx.bom.client.Engine.WEBKIT&&RegExp(" Mobile/").test(navigator.userAgent)){this.IPHONE=true;
this.NAME="iphone";
}else{this.NAME=this.__ids[RegExp.$1];
this[this.NAME.toUpperCase()]=true;

if(qx.bom.client.Platform.WIN){if(agent.indexOf("Windows NT 5.01")!==-1){this.SP1=true;
}else if(qx.bom.client.Engine.MSHTML&&agent.indexOf("SV1")!==-1){this.SP2=true;
}}}}},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.theme.manager.Meta",{type:"singleton",extend:qx.core.Object,properties:{theme:{check:"Theme",nullable:true,apply:"_applyTheme"}},members:{_applyTheme:function(value,old){var color=null;
var decoration=null;
var font=null;
var icon=null;
var appearance=null;

if(value){color=value.meta.color||null;
decoration=value.meta.decoration||null;
font=value.meta.font||null;
icon=value.meta.icon||null;
appearance=value.meta.appearance||null;
}var colorMgr=qx.theme.manager.Color.getInstance();
var decorationMgr=qx.theme.manager.Decoration.getInstance();
var fontMgr=qx.theme.manager.Font.getInstance();
var iconMgr=qx.theme.manager.Icon.getInstance();
var appearanceMgr=qx.theme.manager.Appearance.getInstance();
colorMgr.setTheme(color);
decorationMgr.setTheme(decoration);
fontMgr.setTheme(font);
iconMgr.setTheme(icon);
appearanceMgr.setTheme(appearance);
},initialize:function(){var setting=qx.core.Setting;
var theme,obj;
theme=setting.get("qx.theme");

if(theme){obj=qx.Theme.getByName(theme);

if(!obj){throw new Error("The theme to use is not available: "+theme);
}this.setTheme(obj);
}}},settings:{"qx.theme":"qx.theme.Modern"}});
qx.Class.define("qx.util.ValueManager",{type:"abstract",extend:qx.core.Object,construct:function(){this.base(arguments);
this._dynamic={};
},members:{_dynamic:null,resolveDynamic:function(value){return this._dynamic[value];
},isDynamic:function(value){return !!this._dynamic[value];
},resolve:function(value){if(value&&this._dynamic[value]){return this._dynamic[value];
}return value;
},_setDynamic:function(value){this._dynamic=value;
},_getDynamic:function(){return this._dynamic;
}},destruct:function(){this._dynamic=null;
}});
qx.Class.define("qx.theme.manager.Color",{type:"singleton",extend:qx.util.ValueManager,properties:{theme:{check:"Theme",nullable:true,apply:"_applyTheme",event:"changeTheme"}},members:{_applyTheme:function(value){var dest={};

if(value){var source=value.colors;
var util=qx.util.ColorUtil;
var temp;

for(var key in source){temp=source[key];

if(typeof temp==="string"){if(!util.isCssString(temp)){throw new Error("Could not parse color: "+temp);
}}else if(temp instanceof Array){temp=util.rgbToRgbString(temp);
}else{throw new Error("Could not parse color: "+temp);
}dest[key]=temp;
}}this._setDynamic(dest);
},resolve:function(value){var cache=this._dynamic;
var resolved=cache[value];

if(resolved){return resolved;
}var theme=this.getTheme();

if(theme!==null&&theme.colors[value]){return cache[value]=theme.colors[value];
}return value;
},isDynamic:function(value){var cache=this._dynamic;

if(value&&(cache[value]!==undefined)){return true;
}var theme=this.getTheme();

if(theme!==null&&value&&(theme.colors[value]!==undefined)){cache[value]=theme.colors[value];
return true;
}return false;
}}});
qx.Class.define("qx.util.ColorUtil",{statics:{REGEXP:{hex3:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,rgb:/^rgb\(\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*\)$/,rgba:/^rgba\(\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*\)$/},SYSTEM:{activeborder:true,activecaption:true,appworkspace:true,background:true,buttonface:true,buttonhighlight:true,buttonshadow:true,buttontext:true,captiontext:true,graytext:true,highlight:true,highlighttext:true,inactiveborder:true,inactivecaption:true,inactivecaptiontext:true,infobackground:true,infotext:true,menu:true,menutext:true,scrollbar:true,threeddarkshadow:true,threedface:true,threedhighlight:true,threedlightshadow:true,threedshadow:true,window:true,windowframe:true,windowtext:true},NAMED:{black:[0,0,0],silver:[192,192,192],gray:[128,128,128],white:[255,255,255],maroon:[128,0,0],red:[255,0,0],purple:[128,0,128],fuchsia:[255,0,255],green:[0,128,0],lime:[0,255,0],olive:[128,128,0],yellow:[255,255,0],navy:[0,0,128],blue:[0,0,255],teal:[0,128,128],aqua:[0,255,255],transparent:[-1,-1,-1],magenta:[255,0,255],orange:[255,165,0],brown:[165,42,42]},isNamedColor:function(value){return this.NAMED[value]!==undefined;
},isSystemColor:function(value){return this.SYSTEM[value]!==undefined;
},supportsThemes:function(){return qx.Class.isDefined("qx.theme.manager.Color");
},isThemedColor:function(value){if(!this.supportsThemes()){return false;
}return qx.theme.manager.Color.getInstance().isDynamic(value);
},stringToRgb:function(str){if(this.supportsThemes()&&this.isThemedColor(str)){var str=qx.theme.manager.Color.getInstance().resolveDynamic(str);
}
if(this.isNamedColor(str)){return this.NAMED[str];
}else if(this.isSystemColor(str)){throw new Error("Could not convert system colors to RGB: "+str);
}else if(this.isRgbString(str)){return this.__rgbStringToRgb();
}else if(this.isHex3String(str)){return this.__hex3StringToRgb();
}else if(this.isHex6String(str)){return this.__hex6StringToRgb();
}throw new Error("Could not parse color: "+str);
},cssStringToRgb:function(str){if(this.isNamedColor(str)){return this.NAMED[str];
}else if(this.isSystemColor(str)){throw new Error("Could not convert system colors to RGB: "+str);
}else if(this.isRgbString(str)){return this.__rgbStringToRgb();
}else if(this.isRgbaString(str)){return this.__rgbaStringToRgb();
}else if(this.isHex3String(str)){return this.__hex3StringToRgb();
}else if(this.isHex6String(str)){return this.__hex6StringToRgb();
}throw new Error("Could not parse color: "+str);
},stringToRgbString:function(str){return this.rgbToRgbString(this.stringToRgb(str));
},rgbToRgbString:function(rgb){return "rgb("+rgb[0]+","+rgb[1]+","+rgb[2]+")";
},rgbToHexString:function(rgb){return (qx.lang.String.pad(rgb[0].toString(16).toUpperCase(),2)+qx.lang.String.pad(rgb[1].toString(16).toUpperCase(),2)+qx.lang.String.pad(rgb[2].toString(16).toUpperCase(),2));
},isValidPropertyValue:function(str){return this.isThemedColor(str)||this.isNamedColor(str)||this.isHex3String(str)||this.isHex6String(str)||this.isRgbString(str);
},isCssString:function(str){return this.isSystemColor(str)||this.isNamedColor(str)||this.isHex3String(str)||this.isHex6String(str)||this.isRgbString(str);
},isHex3String:function(str){return this.REGEXP.hex3.test(str);
},isHex6String:function(str){return this.REGEXP.hex6.test(str);
},isRgbString:function(str){return this.REGEXP.rgb.test(str);
},isRgbaString:function(str){return this.REGEXP.rgba.test(str);
},__rgbStringToRgb:function(){var red=parseInt(RegExp.$1,10);
var green=parseInt(RegExp.$2,10);
var blue=parseInt(RegExp.$3,10);
return [red,green,blue];
},__rgbaStringToRgb:function(){var red=parseInt(RegExp.$1,10);
var green=parseInt(RegExp.$2,10);
var blue=parseInt(RegExp.$3,10);
return [red,green,blue];
},__hex3StringToRgb:function(){var red=parseInt(RegExp.$1,16)*17;
var green=parseInt(RegExp.$2,16)*17;
var blue=parseInt(RegExp.$3,16)*17;
return [red,green,blue];
},__hex6StringToRgb:function(){var red=(parseInt(RegExp.$1,16)*16)+parseInt(RegExp.$2,16);
var green=(parseInt(RegExp.$3,16)*16)+parseInt(RegExp.$4,16);
var blue=(parseInt(RegExp.$5,16)*16)+parseInt(RegExp.$6,16);
return [red,green,blue];
},hex3StringToRgb:function(value){if(this.isHex3String(value)){return this.__hex3StringToRgb(value);
}throw new Error("Invalid hex3 value: "+value);
},hex6StringToRgb:function(value){if(this.isHex6String(value)){return this.__hex6StringToRgb(value);
}throw new Error("Invalid hex6 value: "+value);
},hexStringToRgb:function(value){if(this.isHex3String(value)){return this.__hex3StringToRgb(value);
}
if(this.isHex6String(value)){return this.__hex6StringToRgb(value);
}throw new Error("Invalid hex value: "+value);
},rgbToHsb:function(rgb){var hue,saturation,brightness;
var red=rgb[0];
var green=rgb[1];
var blue=rgb[2];
var cmax=(red>green)?red:green;

if(blue>cmax){cmax=blue;
}var cmin=(red<green)?red:green;

if(blue<cmin){cmin=blue;
}brightness=cmax/255.0;

if(cmax!=0){saturation=(cmax-cmin)/cmax;
}else{saturation=0;
}
if(saturation==0){hue=0;
}else{var redc=(cmax-red)/(cmax-cmin);
var greenc=(cmax-green)/(cmax-cmin);
var bluec=(cmax-blue)/(cmax-cmin);

if(red==cmax){hue=bluec-greenc;
}else if(green==cmax){hue=2.0+redc-bluec;
}else{hue=4.0+greenc-redc;
}hue=hue/6.0;

if(hue<0){hue=hue+1.0;
}}return [Math.round(hue*360),Math.round(saturation*100),Math.round(brightness*100)];
},hsbToRgb:function(hsb){var i,f,p,q,t;
var hue=hsb[0]/360;
var saturation=hsb[1]/100;
var brightness=hsb[2]/100;

if(hue>=1.0){hue%=1.0;
}
if(saturation>1.0){saturation=1.0;
}
if(brightness>1.0){brightness=1.0;
}var tov=Math.floor(255*brightness);
var rgb={};

if(saturation==0.0){rgb.red=rgb.green=rgb.blue=tov;
}else{hue*=6.0;
i=Math.floor(hue);
f=hue-i;
p=Math.floor(tov*(1.0-saturation));
q=Math.floor(tov*(1.0-(saturation*f)));
t=Math.floor(tov*(1.0-(saturation*(1.0-f))));

switch(i){case 0:rgb.red=tov;
rgb.green=t;
rgb.blue=p;
break;
case 1:rgb.red=q;
rgb.green=tov;
rgb.blue=p;
break;
case 2:rgb.red=p;
rgb.green=tov;
rgb.blue=t;
break;
case 3:rgb.red=p;
rgb.green=q;
rgb.blue=tov;
break;
case 4:rgb.red=t;
rgb.green=p;
rgb.blue=tov;
break;
case 5:rgb.red=tov;
rgb.green=p;
rgb.blue=q;
break;
}}return [rgb.red,rgb.green,rgb.blue];
},randomColor:function(){var r=Math.round(Math.random()*255);
var g=Math.round(Math.random()*255);
var b=Math.round(Math.random()*255);
return this.rgbToRgbString([r,g,b]);
}}});
qx.Class.define("qx.theme.manager.Decoration",{type:"singleton",extend:qx.core.Object,properties:{theme:{check:"Theme",nullable:true,apply:"_applyTheme",event:"changeTheme"}},members:{__dynamic:null,resolve:function(value){if(!value){return null;
}
if(typeof value==="object"){return value;
}var theme=this.getTheme();

if(!theme){return null;
}var theme=this.getTheme();

if(!theme){return null;
}var cache=this.__dynamic;

if(!cache){cache=this.__dynamic={};
}var resolved=cache[value];

if(resolved){return resolved;
}var entry=theme.decorations[value];

if(!entry){return null;
}var clazz=entry.decorator;

if(clazz==null){throw new Error("Missing definition of which decorator to use in entry: "+value+"!");
}return cache[value]=(new clazz).set(entry.style);
},isValidPropertyValue:function(value){if(typeof value==="string"){return this.isDynamic(value);
}else if(typeof value==="object"){var clazz=value.constructor;
return qx.Class.hasInterface(clazz,qx.ui.decoration.IDecorator);
}return false;
},isDynamic:function(value){if(!value){return false;
}var theme=this.getTheme();

if(!theme){return false;
}return !!theme.decorations[value];
},_applyTheme:function(value,old){var aliasManager=qx.util.AliasManager.getInstance();

if(old){for(var alias in old.aliases){aliasManager.remove(alias);
}}
if(value){for(var alias in value.aliases){aliasManager.add(alias,value.aliases[alias]);
}}
if(!value){this.__dynamic={};
}}},destruct:function(){this._disposeMap("__dynamic");
}});
qx.Interface.define("qx.ui.decoration.IDecorator",{members:{getMarkup:function(){},resize:function(element,width,height){},tint:function(element,bgcolor){},getInsets:function(){}}});
qx.Class.define("qx.util.AliasManager",{type:"singleton",extend:qx.util.ValueManager,construct:function(){this.base(arguments);
this.__aliases={};
this.add("static","qx/static");
},members:{__aliases:null,_preprocess:function(value){var dynamics=this._getDynamic();

if(dynamics[value]===false){return value;
}else if(dynamics[value]===undefined){if(value.charAt(0)==="/"||value.charAt(0)==="."||value.indexOf("http://")===0||value.indexOf("https://")==="0"||value.indexOf("file://")===0){dynamics[value]=false;
return value;
}
if(this.__aliases[value]){return this.__aliases[value];
}var alias=value.substring(0,value.indexOf("/"));
var resolved=this.__aliases[alias];

if(resolved!==undefined){dynamics[value]=resolved+value.substring(alias.length);
}}return value;
},add:function(alias,base){this.__aliases[alias]=base;
var dynamics=this._getDynamic();
for(var path in dynamics){if(path.substring(0,path.indexOf("/"))===alias){dynamics[path]=base+path.substring(alias.length);
}}},remove:function(alias){delete this.__aliases[alias];
},resolve:function(path){var dynamic=this._getDynamic();

if(path!==null){path=this._preprocess(path);
}return dynamic[path]||path;
}},destruct:function(){this.__aliases=null;
}});
qx.Class.define("qx.theme.manager.Font",{type:"singleton",extend:qx.util.ValueManager,properties:{theme:{check:"Theme",nullable:true,apply:"_applyTheme",event:"changeTheme"}},members:{resolveDynamic:function(value){var dynamic=this._dynamic;
return value instanceof qx.bom.Font?value:dynamic[value];
},resolve:function(value){var cache=this._dynamic;
var resolved=cache[value];

if(resolved){return resolved;
}var theme=this.getTheme();

if(theme!==null&&theme.fonts[value]){return cache[value]=(new qx.bom.Font).set(theme.fonts[value]);
}return value;
},isDynamic:function(value){var cache=this._dynamic;

if(value&&(value instanceof qx.bom.Font||cache[value]!==undefined)){return true;
}var theme=this.getTheme();

if(theme!==null&&value&&theme.fonts[value]){cache[value]=(new qx.bom.Font).set(theme.fonts[value]);
return true;
}return false;
},__resolveInclude:function(fonts,fontName){if(fonts[fontName].include){var fontToInclude=fonts[fonts[fontName].include];
fonts[fontName].include=null;
delete fonts[fontName].include;
fonts[fontName]=qx.lang.Object.mergeWith(fonts[fontName],fontToInclude,false);
this.__resolveInclude(fonts,fontName);
}},_applyTheme:function(value){var dest=this._getDynamic();

for(var key in dest){if(dest[key].themed){dest[key].dispose();
delete dest[key];
}}
if(value){var source=value.fonts;
var font=qx.bom.Font;

for(var key in source){if(source[key].include&&source[source[key].include]){this.__resolveInclude(source,key);
}dest[key]=(new font).set(source[key]);
dest[key].themed=true;
}}this._setDynamic(dest);
}}});
qx.Class.define("qx.bom.Font",{extend:qx.core.Object,construct:function(size,family){this.base(arguments);

if(size!==undefined){this.setSize(size);
}
if(family!==undefined){this.setFamily(family);
}},statics:{fromString:function(str){var font=new qx.bom.Font();
var parts=str.split(/\s+/);
var name=[];
var part;

for(var i=0;i<parts.length;i++){switch(part=parts[i]){case "bold":font.setBold(true);
break;
case "italic":font.setItalic(true);
break;
case "underline":font.setDecoration("underline");
break;
default:var temp=parseInt(part,10);

if(temp==part||qx.lang.String.contains(part,"px")){font.setSize(temp);
}else{name.push(part);
}break;
}}
if(name.length>0){font.setFamily(name);
}return font;
},fromConfig:function(config){var font=new qx.bom.Font;
font.set(config);
return font;
},__defaultStyles:{fontFamily:"",fontSize:"",fontWeight:"",fontStyle:"",textDecoration:"",lineHeight:1.2},getDefaultStyles:function(){return this.__defaultStyles;
}},properties:{size:{check:"Integer",nullable:true,apply:"_applySize"},lineHeight:{check:"Number",nullable:true,apply:"_applyLineHeight"},family:{check:"Array",nullable:true,apply:"_applyFamily"},bold:{check:"Boolean",nullable:true,apply:"_applyBold"},italic:{check:"Boolean",nullable:true,apply:"_applyItalic"},decoration:{check:["underline","line-through","overline"],nullable:true,apply:"_applyDecoration"}},members:{__size:null,__family:null,__bold:null,__italic:null,__decoration:null,__lineHeight:null,_applySize:function(value,old){this.__size=value===null?null:value+"px";
},_applyLineHeight:function(value,old){this.__lineHeight=value===null?null:value;
},_applyFamily:function(value,old){var family="";

for(var i=0,l=value.length;i<l;i++){if(value[i].indexOf(" ")>0){family+='"'+value[i]+'"';
}else{family+=value[i];
}
if(i!==l-1){family+=",";
}}this.__family=family;
},_applyBold:function(value,old){this.__bold=value===null?null:value?"bold":"normal";
},_applyItalic:function(value,old){this.__italic=value===null?null:value?"italic":"normal";
},_applyDecoration:function(value,old){this.__decoration=value===null?null:value;
},getStyles:function(){return {fontFamily:this.__family,fontSize:this.__size,fontWeight:this.__bold,fontStyle:this.__italic,textDecoration:this.__decoration,lineHeight:this.__lineHeight};
}}});
qx.Class.define("qx.theme.manager.Icon",{type:"singleton",extend:qx.core.Object,properties:{theme:{check:"Theme",nullable:true,apply:"_applyTheme",event:"changeTheme"}},members:{_applyTheme:function(value,old){var aliasManager=qx.util.AliasManager.getInstance();

if(old){for(var alias in old.aliases){aliasManager.remove(alias);
}}
if(value){for(var alias in value.aliases){aliasManager.add(alias,value.aliases[alias]);
}}}}});
qx.Class.define("qx.theme.manager.Appearance",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__styleCache={};
this.__aliasMap={};
},properties:{theme:{check:"Theme",nullable:true,event:"changeTheme",apply:"_applyTheme"}},members:{__defaultStates:{},__styleCache:null,__aliasMap:null,_applyTheme:function(value,old){this.__aliasMap={};
this.__styleCache={};
},__resolveId:function(id,theme,defaultId){var db=theme.appearances;
var entry=db[id];

if(!entry){var divider="/";
var end=[];
var splitted=id.split(divider);
var alias;

while(!entry&&splitted.length>0){end.unshift(splitted.pop());
var baseid=splitted.join(divider);
entry=db[baseid];

if(entry){alias=entry.alias||entry;

if(typeof alias==="string"){var mapped=alias+divider+end.join(divider);
return this.__resolveId(mapped,theme,defaultId);
}}}if(defaultId!=null){return this.__resolveId(defaultId,theme);
}return null;
}else if(typeof entry==="string"){return this.__resolveId(entry,theme,defaultId);
}else if(entry.include&&!entry.style){return this.__resolveId(entry.include,theme,defaultId);
}return id;
},styleFrom:function(id,states,theme,defaultId){if(!theme){theme=this.getTheme();
}var aliasMap=this.__aliasMap;
var resolved=aliasMap[id];

if(!resolved){resolved=aliasMap[id]=this.__resolveId(id,theme,defaultId);
}var entry=theme.appearances[resolved];

if(!entry){this.warn("Missing appearance: "+id);
return null;
}if(!entry.style){return null;
}var unique=resolved;

if(states){var bits=entry.$$bits;

if(!bits){bits=entry.$$bits={};
entry.$$length=0;
}var sum=0;

for(var state in states){if(!states[state]){continue;
}
if(bits[state]==null){bits[state]=1<<entry.$$length++;
}sum+=bits[state];
}if(sum>0){unique+=":"+sum;
}}var cache=this.__styleCache;

if(cache[unique]!==undefined){return cache[unique];
}if(!states){states=this.__defaultStates;
}var result;
if(entry.include||entry.base){var local=entry.style(states);
var incl;

if(entry.include){incl=this.styleFrom(entry.include,states,theme,defaultId);
}result={};
if(entry.base){var base=this.styleFrom(resolved,states,entry.base,defaultId);

if(entry.include){for(var key in base){if(!incl.hasOwnProperty(key)&&!local.hasOwnProperty(key)){result[key]=base[key];
}}}else{for(var key in base){if(!local.hasOwnProperty(key)){result[key]=base[key];
}}}}if(entry.include){for(var key in incl){if(!local.hasOwnProperty(key)){result[key]=incl[key];
}}}for(var key in local){result[key]=local[key];
}}else{result=entry.style(states);
}return cache[unique]=result||null;
}},destruct:function(){this.__styleCache=this.__aliasMap=null;
}});
qx.Class.define("qx.ui.tooltip.Manager",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
qx.event.Registration.addListener(document.body,"mouseover",this.__onMouseOverRoot,this,true);
this.__showTimer=new qx.event.Timer();
this.__showTimer.addListener("interval",this.__onShowInterval,this);
this.__hideTimer=new qx.event.Timer();
this.__hideTimer.addListener("interval",this.__onHideInterval,this);
this.__mousePosition={left:0,top:0};
},properties:{current:{check:"qx.ui.tooltip.ToolTip",nullable:true,apply:"_applyCurrent"},showInvalidTooltips:{check:"Boolean",init:true}},members:{__mousePosition:null,__hideTimer:null,__showTimer:null,__sharedToolTip:null,__sharedErrorToolTip:null,__getSharedTooltip:function(){if(!this.__sharedToolTip){this.__sharedToolTip=new qx.ui.tooltip.ToolTip().set({rich:true});
}return this.__sharedToolTip;
},__getSharedErrorTooltip:function(){if(!this.__sharedErrorToolTip){this.__sharedErrorToolTip=new qx.ui.tooltip.ToolTip().set({appearance:"tooltip-error"});
this.__sharedErrorToolTip.syncAppearance();
}return this.__sharedErrorToolTip;
},_applyCurrent:function(value,old){if(old&&qx.ui.core.Widget.contains(old,value)){return;
}if(old){if(!old.isDisposed()){old.exclude();
}this.__showTimer.stop();
this.__hideTimer.stop();
}var Registration=qx.event.Registration;
var el=document.body;
if(value){this.__showTimer.startWith(value.getShowTimeout());
Registration.addListener(el,"mouseout",this.__onMouseOutRoot,this,true);
Registration.addListener(el,"focusout",this.__onFocusOutRoot,this,true);
Registration.addListener(el,"mousemove",this.__onMouseMoveRoot,this,true);
}else{Registration.removeListener(el,"mouseout",this.__onMouseOutRoot,this,true);
Registration.removeListener(el,"focusout",this.__onFocusOutRoot,this,true);
Registration.removeListener(el,"mousemove",this.__onMouseMoveRoot,this,true);
}},__onShowInterval:function(e){var current=this.getCurrent();

if(current&&!current.isDisposed()){this.__hideTimer.startWith(current.getHideTimeout());

if(current.getPlaceMethod()=="widget"){current.placeToWidget(current.getOpener());
}else{current.placeToPoint(this.__mousePosition);
}current.show();
}this.__showTimer.stop();
},__onHideInterval:function(e){var current=this.getCurrent();

if(current&&!current.isDisposed()){current.exclude();
}this.__hideTimer.stop();
this.resetCurrent();
},__onMouseMoveRoot:function(e){var pos=this.__mousePosition;
pos.left=e.getDocumentLeft();
pos.top=e.getDocumentTop();
},__onMouseOverRoot:function(e){var target=qx.ui.core.Widget.getWidgetByElement(e.getTarget());

if(!target){return;
}var tooltip;
while(target!=null){var tooltip=target.getToolTip();
var tooltipText=target.getToolTipText()||null;
var tooltipIcon=target.getToolTipIcon()||null;

if(qx.Class.hasInterface(target.constructor,qx.ui.form.IForm)&&!target.isValid()){var invalidMessage=target.getInvalidMessage();
}
if(tooltip||tooltipText||tooltipIcon||invalidMessage){break;
}target=target.getLayoutParent();
}
if(!target){return;
}
if(target.isBlockToolTip()){return;
}if(invalidMessage&&target.getEnabled()){if(!this.getShowInvalidTooltips()){return;
}var tooltip=this.__getSharedErrorTooltip().set({label:invalidMessage});
}else if(!tooltip){var tooltip=this.__getSharedTooltip().set({label:tooltipText,icon:tooltipIcon});
}this.setCurrent(tooltip);
tooltip.setOpener(target);
},__onMouseOutRoot:function(e){var target=qx.ui.core.Widget.getWidgetByElement(e.getTarget());

if(!target){return;
}var related=qx.ui.core.Widget.getWidgetByElement(e.getRelatedTarget());

if(!related){return;
}var tooltip=this.getCurrent();
if(tooltip&&(related==tooltip||qx.ui.core.Widget.contains(tooltip,related))){return;
}if(related&&target&&qx.ui.core.Widget.contains(target,related)){return;
}if(tooltip&&!related){this.setCurrent(null);
}else{this.resetCurrent();
}},__onFocusOutRoot:function(e){var target=qx.ui.core.Widget.getWidgetByElement(e.getTarget());

if(!target){return;
}var tooltip=this.getCurrent();
if(tooltip&&tooltip==target.getToolTip()){this.setCurrent(null);
}}},destruct:function(){qx.event.Registration.removeListener(document.body,"mouseover",this.__onMouseOverRoot,this,true);
this._disposeObjects("__showTimer","__hideTimer","__sharedToolTip");
this.__mousePosition=null;
}});
qx.Class.define("qx.event.Timer",{extend:qx.core.Object,construct:function(interval){this.base(arguments);
this.setEnabled(false);

if(interval!=null){this.setInterval(interval);
}var self=this;
this.__oninterval=function(){self._oninterval.call(self);
};
},events:{"interval":"qx.event.type.Event"},statics:{once:function(func,obj,timeout){var timer=new qx.event.Timer(timeout);
timer.__onceFunc=func;
timer.addListener("interval",function(e){timer.stop();
func.call(obj,e);
timer.dispose();
obj=null;
},obj);
timer.start();
return timer;
}},properties:{enabled:{init:true,check:"Boolean",apply:"_applyEnabled"},interval:{check:"Integer",init:1000,apply:"_applyInterval"}},members:{__intervalHandler:null,__oninterval:null,_applyInterval:function(value,old){if(this.getEnabled()){this.restart();
}},_applyEnabled:function(value,old){if(old){window.clearInterval(this.__intervalHandler);
this.__intervalHandler=null;
}else if(value){this.__intervalHandler=window.setInterval(this.__oninterval,this.getInterval());
}},start:function(){this.setEnabled(true);
},startWith:function(interval){this.setInterval(interval);
this.start();
},stop:function(){this.setEnabled(false);
},restart:function(){this.stop();
this.start();
},restartWith:function(interval){this.stop();
this.startWith(interval);
},_oninterval:qx.event.GlobalError.observeMethod(function(){if(this.$$disposed){return;
}
if(this.getEnabled()){this.fireEvent("interval");
}})},destruct:function(){if(this.__intervalHandler){window.clearInterval(this.__intervalHandler);
}this.__intervalHandler=this.__oninterval=null;
}});
qx.Mixin.define("qx.ui.core.MChildrenHandling",{members:{getChildren:function(){return this._getChildren();
},hasChildren:function(){return this._hasChildren();
},indexOf:function(child){return this._indexOf(child);
},add:function(child,options){this._add(child,options);
},addAt:function(child,index,options){this._addAt(child,index,options);
},addBefore:function(child,before,options){this._addBefore(child,before,options);
},addAfter:function(child,after,options){this._addAfter(child,after,options);
},remove:function(child){this._remove(child);
},removeAt:function(index){return this._removeAt(index);
},removeAll:function(){this._removeAll();
}},statics:{remap:function(members){members.getChildren=members._getChildren;
members.hasChildren=members._hasChildren;
members.indexOf=members._indexOf;
members.add=members._add;
members.addAt=members._addAt;
members.addBefore=members._addBefore;
members.addAfter=members._addAfter;
members.remove=members._remove;
members.removeAt=members._removeAt;
members.removeAll=members._removeAll;
}}});
qx.Mixin.define("qx.ui.core.MLayoutHandling",{members:{setLayout:function(layout){return this._setLayout(layout);
},getLayout:function(){return this._getLayout();
}},statics:{remap:function(members){members.getLayout=members._getLayout;
members.setLayout=members._setLayout;
}}});
qx.Class.define("qx.ui.core.LayoutItem",{type:"abstract",extend:qx.core.Object,properties:{minWidth:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},width:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},maxWidth:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},minHeight:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},height:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},maxHeight:{check:"Integer",nullable:true,apply:"_applyDimension",init:null,themeable:true},allowGrowX:{check:"Boolean",apply:"_applyStretching",init:true,themeable:true},allowShrinkX:{check:"Boolean",apply:"_applyStretching",init:true,themeable:true},allowGrowY:{check:"Boolean",apply:"_applyStretching",init:true,themeable:true},allowShrinkY:{check:"Boolean",apply:"_applyStretching",init:true,themeable:true},allowStretchX:{group:["allowGrowX","allowShrinkX"],mode:"shorthand",themeable:true},allowStretchY:{group:["allowGrowY","allowShrinkY"],mode:"shorthand",themeable:true},marginTop:{check:"Integer",init:0,apply:"_applyMargin",themeable:true},marginRight:{check:"Integer",init:0,apply:"_applyMargin",themeable:true},marginBottom:{check:"Integer",init:0,apply:"_applyMargin",themeable:true},marginLeft:{check:"Integer",init:0,apply:"_applyMargin",themeable:true},margin:{group:["marginTop","marginRight","marginBottom","marginLeft"],mode:"shorthand",themeable:true},alignX:{check:["left","center","right"],nullable:true,apply:"_applyAlign",themeable:true},alignY:{check:["top","middle","bottom","baseline"],nullable:true,apply:"_applyAlign",themeable:true}},members:{__computedHeightForWidth:null,__computedLayout:null,__hasInvalidLayout:null,__sizeHint:null,__updateMargin:null,__userBounds:null,__layoutProperties:null,getBounds:function(){return this.__userBounds||this.__computedLayout||null;
},clearSeparators:function(){},renderSeparator:function(separator,bounds){},renderLayout:function(left,top,width,height){{var msg="Something went wrong with the layout of "+this.toString()+"!";
this.assertInteger(left,"Wrong 'left' argument. "+msg);
this.assertInteger(top,"Wrong 'top' argument. "+msg);
this.assertInteger(width,"Wrong 'width' argument. "+msg);
this.assertInteger(height,"Wrong 'height' argument. "+msg);
};
var flowHeight=null;

if(this.getHeight()==null&&this._hasHeightForWidth()){var flowHeight=this._getHeightForWidth(width);
}
if(flowHeight!=null&&flowHeight!==this.__computedHeightForWidth){this.__computedHeightForWidth=flowHeight;
qx.ui.core.queue.Layout.add(this);
return null;
}var computed=this.__computedLayout;

if(!computed){computed=this.__computedLayout={};
}var changes={};

if(left!==computed.left||top!==computed.top){changes.position=true;
computed.left=left;
computed.top=top;
}
if(width!==computed.width||height!==computed.height){changes.size=true;
computed.width=width;
computed.height=height;
}if(this.__hasInvalidLayout){changes.local=true;
delete this.__hasInvalidLayout;
}
if(this.__updateMargin){changes.margin=true;
delete this.__updateMargin;
}return changes;
},isExcluded:function(){return false;
},hasValidLayout:function(){return !this.__hasInvalidLayout;
},scheduleLayoutUpdate:function(){qx.ui.core.queue.Layout.add(this);
},invalidateLayoutCache:function(){this.__hasInvalidLayout=true;
this.__sizeHint=null;
},getSizeHint:function(compute){var hint=this.__sizeHint;

if(hint){return hint;
}
if(compute===false){return null;
}hint=this.__sizeHint=this._computeSizeHint();
if(this._hasHeightForWidth()&&this.__computedHeightForWidth&&this.getHeight()==null){hint.height=this.__computedHeightForWidth;
}if(hint.minWidth>hint.width){hint.width=hint.minWidth;
}
if(hint.maxWidth<hint.width){hint.width=hint.maxWidth;
}
if(!this.getAllowGrowX()){hint.maxWidth=hint.width;
}
if(!this.getAllowShrinkX()){hint.minWidth=hint.width;
}if(hint.minHeight>hint.height){hint.height=hint.minHeight;
}
if(hint.maxHeight<hint.height){hint.height=hint.maxHeight;
}
if(!this.getAllowGrowY()){hint.maxHeight=hint.height;
}
if(!this.getAllowShrinkY()){hint.minHeight=hint.height;
}return hint;
},_computeSizeHint:function(){var minWidth=this.getMinWidth()||0;
var minHeight=this.getMinHeight()||0;
var width=this.getWidth()||minWidth;
var height=this.getHeight()||minHeight;
var maxWidth=this.getMaxWidth()||Infinity;
var maxHeight=this.getMaxHeight()||Infinity;
return {minWidth:minWidth,width:width,maxWidth:maxWidth,minHeight:minHeight,height:height,maxHeight:maxHeight};
},_hasHeightForWidth:function(){var layout=this._getLayout();

if(layout){return layout.hasHeightForWidth();
}return false;
},_getHeightForWidth:function(width){var layout=this._getLayout();

if(layout&&layout.hasHeightForWidth()){return layout.getHeightForWidth(width);
}return null;
},_getLayout:function(){return null;
},_applyMargin:function(){this.__updateMargin=true;
var parent=this.$$parent;

if(parent){parent.updateLayoutProperties();
}},_applyAlign:function(){var parent=this.$$parent;

if(parent){parent.updateLayoutProperties();
}},_applyDimension:function(){qx.ui.core.queue.Layout.add(this);
},_applyStretching:function(){qx.ui.core.queue.Layout.add(this);
},hasUserBounds:function(){return !!this.__userBounds;
},setUserBounds:function(left,top,width,height){this.__userBounds={left:left,top:top,width:width,height:height};
qx.ui.core.queue.Layout.add(this);
},resetUserBounds:function(){delete this.__userBounds;
qx.ui.core.queue.Layout.add(this);
},__emptyProperties:{},setLayoutProperties:function(props){if(props==null){return;
}var storage=this.__layoutProperties;

if(!storage){storage=this.__layoutProperties={};
}var parent=this.getLayoutParent();

if(parent){parent.updateLayoutProperties(props);
}for(var key in props){if(props[key]==null){delete storage[key];
}else{storage[key]=props[key];
}}},getLayoutProperties:function(){return this.__layoutProperties||this.__emptyProperties;
},clearLayoutProperties:function(){delete this.__layoutProperties;
},updateLayoutProperties:function(props){var layout=this._getLayout();

if(layout){{if(props){for(var key in props){if(props[key]!==null){layout.verifyLayoutProperty(this,key,props[key]);
}}}};
layout.invalidateChildrenCache();
}qx.ui.core.queue.Layout.add(this);
},getApplicationRoot:function(){return qx.core.Init.getApplication().getRoot();
},getLayoutParent:function(){return this.$$parent||null;
},setLayoutParent:function(parent){if(this.$$parent===parent){return;
}this.$$parent=parent||null;
qx.ui.core.queue.Visibility.add(this);
},isRootWidget:function(){return false;
},_getRoot:function(){var parent=this;

while(parent){if(parent.isRootWidget()){return parent;
}parent=parent.$$parent;
}return null;
},clone:function(){var clone=this.base(arguments);
var props=this.__layoutProperties;

if(props){clone.__layoutProperties=qx.lang.Object.clone(props);
}return clone;
}},destruct:function(){this.$$parent=this.$$subparent=this.__layoutProperties=this.__computedLayout=this.__userBounds=this.__sizeHint=null;
}});
qx.Class.define("qx.ui.core.DecoratorFactory",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__pool={};
},statics:{MAX_SIZE:15,__NO_POOL_ID:"$$nopool$$"},members:{__pool:null,getDecoratorElement:function(decorator){var clazz=qx.ui.core.DecoratorFactory;

if(qx.lang.Type.isString(decorator)){var id=decorator;
var decoratorInstance=qx.theme.manager.Decoration.getInstance().resolve(decorator);
}else{var id=clazz.__NO_POOL_ID;
decoratorInstance=decorator;
}var pool=this.__pool;

if(pool[id]&&pool[id].length>0){var element=pool[id].pop();
}else{var element=this._createDecoratorElement(decoratorInstance,id);
}element.$$pooled=false;
return element;
},poolDecorator:function(decoratorElement){if(!decoratorElement||decoratorElement.$$pooled){return;
}var clazz=qx.ui.core.DecoratorFactory;
var id=decoratorElement.getId();

if(id==clazz.__NO_POOL_ID){decoratorElement.dispose();
return;
}var pool=this.__pool;

if(!pool[id]){pool[id]=[];
}
if(pool[id].length>clazz.MAX_SIZE){decoratorElement.dispose();
}else{decoratorElement.$$pooled=true;
pool[id].push(decoratorElement);
}},_createDecoratorElement:function(decorator,id){var element=new qx.html.Decorator(decorator,id);
{element.setAttribute("qxType","decorator");
};
return element;
},toString:function(){var keys=0;
var elements=0;

for(var key in this.__pool){keys+=1;
elements+=this.__pool[key].length;
}return ["qx.ui.core.DecoratorFactory[",this.$$hash,"] ","keys: ",keys,", elements: ",elements].join("");
}},destruct:function(){if(!qx.core.ObjectRegistry.inShutDown){var pool=this.__pool;

for(var key in pool){qx.util.DisposeUtil.disposeArray(pool,key);
}}this.__pool=null;
}});
qx.Class.define("qx.ui.core.Widget",{extend:qx.ui.core.LayoutItem,include:[qx.locale.MTranslation],construct:function(){this.base(arguments);
this.__containerElement=this._createContainerElement();
this.__contentElement=this.__createContentElement();
this.__containerElement.add(this.__contentElement);
this.initFocusable();
this.initSelectable();
this.initNativeContextMenu();
},events:{appear:"qx.event.type.Event",disappear:"qx.event.type.Event",createChildControl:"qx.event.type.Data",resize:"qx.event.type.Data",move:"qx.event.type.Data",syncAppearance:"qx.event.type.Data",mousemove:"qx.event.type.Mouse",mouseover:"qx.event.type.Mouse",mouseout:"qx.event.type.Mouse",mousedown:"qx.event.type.Mouse",mouseup:"qx.event.type.Mouse",click:"qx.event.type.Mouse",dblclick:"qx.event.type.Mouse",contextmenu:"qx.event.type.Mouse",beforeContextmenuOpen:"qx.event.type.Mouse",mousewheel:"qx.event.type.MouseWheel",keyup:"qx.event.type.KeySequence",keydown:"qx.event.type.KeySequence",keypress:"qx.event.type.KeySequence",keyinput:"qx.event.type.KeyInput",focus:"qx.event.type.Focus",blur:"qx.event.type.Focus",focusin:"qx.event.type.Focus",focusout:"qx.event.type.Focus",activate:"qx.event.type.Focus",deactivate:"qx.event.type.Focus",capture:"qx.event.type.Event",losecapture:"qx.event.type.Event",drop:"qx.event.type.Drag",dragleave:"qx.event.type.Drag",dragover:"qx.event.type.Drag",drag:"qx.event.type.Drag",dragstart:"qx.event.type.Drag",dragend:"qx.event.type.Drag",dragchange:"qx.event.type.Drag",droprequest:"qx.event.type.Drag"},properties:{paddingTop:{check:"Integer",init:0,apply:"_applyPadding",themeable:true},paddingRight:{check:"Integer",init:0,apply:"_applyPadding",themeable:true},paddingBottom:{check:"Integer",init:0,apply:"_applyPadding",themeable:true},paddingLeft:{check:"Integer",init:0,apply:"_applyPadding",themeable:true},padding:{group:["paddingTop","paddingRight","paddingBottom","paddingLeft"],mode:"shorthand",themeable:true},zIndex:{nullable:true,init:null,apply:"_applyZIndex",event:"changeZIndex",check:"Integer",themeable:true},decorator:{nullable:true,init:null,apply:"_applyDecorator",event:"changeDecorator",check:"Decorator",themeable:true},shadow:{nullable:true,init:null,apply:"_applyShadow",event:"changeShadow",check:"Decorator",themeable:true},backgroundColor:{nullable:true,check:"Color",apply:"_applyBackgroundColor",event:"changeBackgroundColor",themeable:true},textColor:{nullable:true,check:"Color",apply:"_applyTextColor",event:"changeTextColor",themeable:true,inheritable:true},font:{nullable:true,apply:"_applyFont",check:"Font",event:"changeFont",themeable:true,inheritable:true,dereference:true},opacity:{check:"Number",apply:"_applyOpacity",themeable:true,nullable:true,init:null},cursor:{check:"String",apply:"_applyCursor",themeable:true,inheritable:true,nullable:true,init:null},toolTip:{check:"qx.ui.tooltip.ToolTip",nullable:true},toolTipText:{check:"String",nullable:true,event:"changeToolTipText",apply:"_applyToolTipText"},toolTipIcon:{check:"String",nullable:true,event:"changeToolTipText"},blockToolTip:{check:"Boolean",init:false},visibility:{check:["visible","hidden","excluded"],init:"visible",apply:"_applyVisibility",event:"changeVisibility"},enabled:{init:true,check:"Boolean",inheritable:true,apply:"_applyEnabled",event:"changeEnabled"},anonymous:{init:false,check:"Boolean"},tabIndex:{check:"Integer",nullable:true,apply:"_applyTabIndex"},focusable:{check:"Boolean",init:false,apply:"_applyFocusable"},keepFocus:{check:"Boolean",init:false,apply:"_applyKeepFocus"},keepActive:{check:"Boolean",init:false,apply:"_applyKeepActive"},draggable:{check:"Boolean",init:false,apply:"_applyDraggable"},droppable:{check:"Boolean",init:false,apply:"_applyDroppable"},selectable:{check:"Boolean",init:false,event:"changeSelectable",apply:"_applySelectable"},contextMenu:{check:"qx.ui.menu.Menu",apply:"_applyContextMenu",nullable:true,event:"changeContextMenu"},nativeContextMenu:{check:"Boolean",init:false,themeable:true,event:"changeNativeContextMenu",apply:"_applyNativeContextMenu"},appearance:{check:"String",init:"widget",apply:"_applyAppearance",event:"changeAppearance"}},statics:{DEBUG:false,getWidgetByElement:function(element){while(element){var widgetKey=element.$$widget;
if(widgetKey!=null){return qx.core.ObjectRegistry.fromHashCode(widgetKey);
}try{element=element.parentNode;
}catch(e){return null;
}}return null;
},contains:function(parent,child){while(child){if(parent==child){return true;
}child=child.getLayoutParent();
}return false;
},__decoratorPool:new qx.ui.core.DecoratorFactory(),__shadowPool:new qx.ui.core.DecoratorFactory()},members:{__containerElement:null,__contentElement:null,__decoratorElement:null,__shadowElement:null,__protectorElement:null,__initialAppearanceApplied:null,__toolTipTextListenerId:null,__layoutManager:null,_getLayout:function(){return this.__layoutManager;
},_setLayout:function(layout){{if(layout){this.assertInstance(layout,qx.ui.layout.Abstract);
}};

if(this.__layoutManager){this.__layoutManager.connectToWidget(null);
}
if(layout){layout.connectToWidget(this);
}this.__layoutManager=layout;
qx.ui.core.queue.Layout.add(this);
},setLayoutParent:function(parent){if(this.$$parent===parent){return;
}var container=this.getContainerElement();

if(this.$$parent&&!this.$$parent.$$disposed){this.$$parent.getContentElement().remove(container);
}this.$$parent=parent||null;

if(parent&&!parent.$$disposed){this.$$parent.getContentElement().add(container);
}this.$$refreshInheritables();
qx.ui.core.queue.Visibility.add(this);
},_updateInsets:null,__checkInsetsModified:function(a,b){if(a==b){return false;
}
if(a==null||b==null){return true;
}var manager=qx.theme.manager.Decoration.getInstance();
var first=manager.resolve(a).getInsets();
var second=manager.resolve(b).getInsets();

if(first.top!=second.top||first.right!=second.right||first.bottom!=second.bottom||first.left!=second.left){return true;
}return false;
},renderLayout:function(left,top,width,height){var changes=this.base(arguments,left,top,width,height);
if(!changes){return;
}var container=this.getContainerElement();
var content=this.getContentElement();
var inner=changes.size||this._updateInsets;
var pixel="px";
var containerStyles={};
if(changes.position){containerStyles.left=left+pixel;
containerStyles.top=top+pixel;
}if(changes.size){containerStyles.width=width+pixel;
containerStyles.height=height+pixel;
}
if(changes.position||changes.size){container.setStyles(containerStyles);
}
if(inner||changes.local||changes.margin){var insets=this.getInsets();
var innerWidth=width-insets.left-insets.right;
var innerHeight=height-insets.top-insets.bottom;
innerWidth=innerWidth<0?0:innerWidth;
innerHeight=innerHeight<0?0:innerHeight;
}var contentStyles={};

if(this._updateInsets){contentStyles.left=insets.left+pixel;
contentStyles.top=insets.top+pixel;
}
if(inner){contentStyles.width=innerWidth+pixel;
contentStyles.height=innerHeight+pixel;
}
if(inner||this._updateInsets){content.setStyles(contentStyles);
}
if(changes.size){var protector=this.__protectorElement;

if(protector){protector.setStyles({width:width+"px",height:height+"px"});
}}
if(changes.size||this._updateInsets){if(this.__decoratorElement){this.__decoratorElement.resize(width,height);
}}
if(changes.size){if(this.__shadowElement){var insets=this.__shadowElement.getInsets();
var shadowWidth=width+insets.left+insets.right;
var shadowHeight=height+insets.top+insets.bottom;
this.__shadowElement.resize(shadowWidth,shadowHeight);
}}
if(inner||changes.local||changes.margin){if(this.__layoutManager&&this.hasLayoutChildren()){this.__layoutManager.renderLayout(innerWidth,innerHeight);
}else if(this.hasLayoutChildren()){throw new Error("At least one child in control "+this._findTopControl()+" requires a layout, but no one was defined!");
}}if(changes.position&&this.hasListener("move")){this.fireDataEvent("move",this.getBounds());
}
if(changes.size&&this.hasListener("resize")){this.fireDataEvent("resize",this.getBounds());
}delete this._updateInsets;
return changes;
},__separators:null,clearSeparators:function(){var reg=this.__separators;

if(!reg){return;
}var pool=qx.ui.core.Widget.__decoratorPool;
var content=this.getContentElement();
var elem;

for(var i=0,l=reg.length;i<l;i++){elem=reg[i];
pool.poolDecorator(elem);
content.remove(elem);
}reg.length=0;
},renderSeparator:function(separator,bounds){var elem=qx.ui.core.Widget.__decoratorPool.getDecoratorElement(separator);
this.getContentElement().add(elem);
elem.resize(bounds.width,bounds.height);
elem.setStyles({left:bounds.left+"px",top:bounds.top+"px"});
if(!this.__separators){this.__separators=[elem];
}else{this.__separators.push(elem);
}},_computeSizeHint:function(){var width=this.getWidth();
var minWidth=this.getMinWidth();
var maxWidth=this.getMaxWidth();
var height=this.getHeight();
var minHeight=this.getMinHeight();
var maxHeight=this.getMaxHeight();
{if(minWidth!==null&&maxWidth!==null){this.assert(minWidth<=maxWidth,"minWidth is larger than maxWidth!");
}
if(minHeight!==null&&maxHeight!==null){this.assert(minHeight<=maxHeight,"minHeight is larger than maxHeight!");
}};
var contentHint=this._getContentHint();
var insets=this.getInsets();
var insetX=insets.left+insets.right;
var insetY=insets.top+insets.bottom;

if(width==null){width=contentHint.width+insetX;
}
if(height==null){height=contentHint.height+insetY;
}
if(minWidth==null){minWidth=insetX;

if(contentHint.minWidth!=null){minWidth+=contentHint.minWidth;
}}
if(minHeight==null){minHeight=insetY;

if(contentHint.minHeight!=null){minHeight+=contentHint.minHeight;
}}
if(maxWidth==null){if(contentHint.maxWidth==null){maxWidth=Infinity;
}else{maxWidth=contentHint.maxWidth+insetX;
}}
if(maxHeight==null){if(contentHint.maxHeight==null){maxHeight=Infinity;
}else{maxHeight=contentHint.maxHeight+insetY;
}}return {width:width,minWidth:minWidth,maxWidth:maxWidth,height:height,minHeight:minHeight,maxHeight:maxHeight};
},invalidateLayoutCache:function(){this.base(arguments);

if(this.__layoutManager){this.__layoutManager.invalidateLayoutCache();
}},_getContentHint:function(){var layout=this.__layoutManager;

if(layout){if(this.hasLayoutChildren()){var hint=layout.getSizeHint();
{var msg="The layout of the widget"+this.toString()+" returned an invalid size hint!";
this.assertInteger(hint.width,"Wrong 'left' argument. "+msg);
this.assertInteger(hint.height,"Wrong 'top' argument. "+msg);
};
return hint;
}else{return {width:0,height:0};
}}else{return {width:100,height:50};
}},_getHeightForWidth:function(width){var insets=this.getInsets();
var insetX=insets.left+insets.right;
var insetY=insets.top+insets.bottom;
var contentWidth=width-insetX;
var layout=this._getLayout();

if(layout&&layout.hasHeightForWidth()){var contentHeight=layout.getHeightForWidth(width);
}else{contentHeight=this._getContentHeightForWidth(contentWidth);
}var height=contentHeight+insetY;
return height;
},_getContentHeightForWidth:function(width){throw new Error("Abstract method call: _getContentHeightForWidth()!");
},getInsets:function(){var top=this.getPaddingTop();
var right=this.getPaddingRight();
var bottom=this.getPaddingBottom();
var left=this.getPaddingLeft();

if(this.__decoratorElement){var inset=this.__decoratorElement.getInsets();
{this.assertNumber(inset.top,"Invalid top decorator inset detected: "+inset.top);
this.assertNumber(inset.right,"Invalid right decorator inset detected: "+inset.right);
this.assertNumber(inset.bottom,"Invalid bottom decorator inset detected: "+inset.bottom);
this.assertNumber(inset.left,"Invalid left decorator inset detected: "+inset.left);
};
top+=inset.top;
right+=inset.right;
bottom+=inset.bottom;
left+=inset.left;
}return {"top":top,"right":right,"bottom":bottom,"left":left};
},getInnerSize:function(){var computed=this.getBounds();

if(!computed){return null;
}var insets=this.getInsets();
return {width:computed.width-insets.left-insets.right,height:computed.height-insets.top-insets.bottom};
},show:function(){this.setVisibility("visible");
},hide:function(){this.setVisibility("hidden");
},exclude:function(){this.setVisibility("excluded");
},isVisible:function(){return this.getVisibility()==="visible";
},isHidden:function(){return this.getVisibility()!=="visible";
},isExcluded:function(){return this.getVisibility()==="excluded";
},isSeeable:function(){var element=this.getContainerElement().getDomElement();

if(element){return element.offsetWidth>0;
}var current=this;

do{if(!current.isVisible()){return false;
}
if(current.isRootWidget()){return true;
}current=current.getLayoutParent();
}while(current);
return false;
},_createContainerElement:function(){var attributes={"$$widget":this.toHashCode()};
{attributes.qxType="container";
attributes.qxClass=this.classname;
};
var styles={zIndex:0,position:"absolute"};
return new qx.html.Element("div",styles,attributes);
},__createContentElement:function(){var el=this._createContentElement();
{el.setAttribute("qxType","content");
};
el.setStyles({"position":"absolute","zIndex":10});
return el;
},_createContentElement:function(){return new qx.html.Element("div",{overflowX:"hidden",overflowY:"hidden"});
},getContainerElement:function(){return this.__containerElement;
},getContentElement:function(){return this.__contentElement;
},getDecoratorElement:function(){return this.__decoratorElement||null;
},getShadowElement:function(){return this.__shadowElement||null;
},__widgetChildren:null,getLayoutChildren:function(){var children=this.__widgetChildren;

if(!children){return this.__emptyChildren;
}var layoutChildren;

for(var i=0,l=children.length;i<l;i++){var child=children[i];

if(child.hasUserBounds()||child.isExcluded()){if(layoutChildren==null){layoutChildren=children.concat();
}qx.lang.Array.remove(layoutChildren,child);
}}return layoutChildren||children;
},scheduleLayoutUpdate:function(){qx.ui.core.queue.Layout.add(this);
},invalidateLayoutChildren:function(){var layout=this.__layoutManager;

if(layout){layout.invalidateChildrenCache();
}qx.ui.core.queue.Layout.add(this);
},hasLayoutChildren:function(){var children=this.__widgetChildren;

if(!children){return false;
}var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(!child.hasUserBounds()&&!child.isExcluded()){return true;
}}return false;
},getChildrenContainer:function(){return this;
},__emptyChildren:[],_getChildren:function(){return this.__widgetChildren||this.__emptyChildren;
},_indexOf:function(child){var children=this.__widgetChildren;

if(!children){return -1;
}return children.indexOf(child);
},_hasChildren:function(){var children=this.__widgetChildren;
return children!=null&&(!!children[0]);
},addChildrenToQueue:function(queue){var children=this.__widgetChildren;

if(!children){return;
}var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];
queue[child.$$hash]=child;
child.addChildrenToQueue(queue);
}},_add:function(child,options){if(child.getLayoutParent()==this){qx.lang.Array.remove(this.__widgetChildren,child);
}
if(this.__widgetChildren){this.__widgetChildren.push(child);
}else{this.__widgetChildren=[child];
}this.__addHelper(child,options);
},_addAt:function(child,index,options){if(!this.__widgetChildren){this.__widgetChildren=[];
}if(child.getLayoutParent()==this){qx.lang.Array.remove(this.__widgetChildren,child);
}var ref=this.__widgetChildren[index];

if(ref===child){return child.setLayoutProperties(options);
}
if(ref){qx.lang.Array.insertBefore(this.__widgetChildren,child,ref);
}else{this.__widgetChildren.push(child);
}this.__addHelper(child,options);
},_addBefore:function(child,before,options){{this.assertInArray(before,this._getChildren(),"The 'before' widget is not a child of this widget!");
};

if(child==before){return;
}
if(!this.__widgetChildren){this.__widgetChildren=[];
}if(child.getLayoutParent()==this){qx.lang.Array.remove(this.__widgetChildren,child);
}qx.lang.Array.insertBefore(this.__widgetChildren,child,before);
this.__addHelper(child,options);
},_addAfter:function(child,after,options){{this.assertInArray(after,this._getChildren(),"The 'after' widget is not a child of this widget!");
};

if(child==after){return;
}
if(!this.__widgetChildren){this.__widgetChildren=[];
}if(child.getLayoutParent()==this){qx.lang.Array.remove(this.__widgetChildren,child);
}qx.lang.Array.insertAfter(this.__widgetChildren,child,after);
this.__addHelper(child,options);
},_remove:function(child){if(!this.__widgetChildren){throw new Error("This widget has no children!");
}qx.lang.Array.remove(this.__widgetChildren,child);
this.__removeHelper(child);
},_removeAt:function(index){if(!this.__widgetChildren){throw new Error("This widget has no children!");
}var child=this.__widgetChildren[index];
qx.lang.Array.removeAt(this.__widgetChildren,index);
this.__removeHelper(child);
return child;
},_removeAll:function(){if(!this.__widgetChildren){return;
}var children=this.__widgetChildren.concat();
this.__widgetChildren.length=0;

for(var i=children.length-1;i>=0;i--){this.__removeHelper(children[i]);
}qx.ui.core.queue.Layout.add(this);
},_afterAddChild:null,_afterRemoveChild:null,__addHelper:function(child,options){{this.assertInstance(child,qx.ui.core.LayoutItem,"Invalid widget to add: "+child);
this.assertNotIdentical(child,this,"Could not add widget to itself: "+child);

if(options!=null){this.assertType(options,"object","Invalid layout data: "+options);
}};
var parent=child.getLayoutParent();

if(parent&&parent!=this){parent._remove(child);
}child.setLayoutParent(this);
if(options){child.setLayoutProperties(options);
}else{this.updateLayoutProperties();
}if(this._afterAddChild){this._afterAddChild(child);
}},__removeHelper:function(child){{this.assertNotUndefined(child);
};

if(child.getLayoutParent()!==this){throw new Error("Remove Error: "+child+" is not a child of this widget!");
}child.setLayoutParent(null);
if(this.__layoutManager){this.__layoutManager.invalidateChildrenCache();
}qx.ui.core.queue.Layout.add(this);
if(this._afterRemoveChild){this._afterRemoveChild(child);
}},capture:function(containerCapture){this.getContainerElement().capture(containerCapture);
},releaseCapture:function(){this.getContainerElement().releaseCapture();
},_applyPadding:function(value,old,name){this._updateInsets=true;
qx.ui.core.queue.Layout.add(this);
},_createProtectorElement:function(){if(this.__protectorElement){return;
}var protect=this.__protectorElement=new qx.html.Element;
{protect.setAttribute("qxType","protector");
};
protect.setStyles({position:"absolute",top:0,left:0,zIndex:7});
var bounds=this.getBounds();

if(bounds){this.__protectorElement.setStyles({width:bounds.width+"px",height:bounds.height+"px"});
}if(qx.core.Variant.isSet("qx.client","mshtml")){protect.setStyles({backgroundImage:"url("+qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif")+")",backgroundRepeat:"repeat"});
}this.getContainerElement().add(protect);
},_applyDecorator:function(value,old){{if(value&&typeof value==="object"){if(qx.ui.core.Widget.DEBUG){this.warn("Decorator instances may increase memory usage and processing time. Often it is better to lay them out to a theme file. Hash code of decorator object: "+value);
}}};
var pool=qx.ui.core.Widget.__decoratorPool;
var container=this.getContainerElement();
if(!this.__protectorElement&&!qx.bom.client.Feature.CSS_POINTER_EVENTS){this._createProtectorElement();
}if(old){container.remove(this.__decoratorElement);
pool.poolDecorator(this.__decoratorElement);
}if(value){var elem=this.__decoratorElement=pool.getDecoratorElement(value);
elem.setStyle("zIndex",5);
var bgcolor=this.getBackgroundColor();
elem.tint(bgcolor);
container.add(elem);
}else{delete this.__decoratorElement;
this._applyBackgroundColor(this.getBackgroundColor());
}if(value&&!old&&bgcolor){this.getContainerElement().setStyle("backgroundColor",null);
}if(this.__checkInsetsModified(old,value)){this._updateInsets=true;
qx.ui.core.queue.Layout.add(this);
}else if(value){var bounds=this.getBounds();

if(bounds){elem.resize(bounds.width,bounds.height);
this.__protectorElement&&
this.__protectorElement.setStyles({width:bounds.width+"px",height:bounds.height+"px"});
}}},_applyShadow:function(value,old){var pool=qx.ui.core.Widget.__shadowPool;
var container=this.getContainerElement();
if(old){container.remove(this.__shadowElement);
pool.poolDecorator(this.__shadowElement);
}if(value){var elem=this.__shadowElement=pool.getDecoratorElement(value);
container.add(elem);
var insets=elem.getInsets();
elem.setStyles({left:(-insets.left)+"px",top:(-insets.top)+"px"});
var bounds=this.getBounds();

if(bounds){var shadowWidth=bounds.width+insets.left+insets.right;
var shadowHeight=bounds.height+insets.top+insets.bottom;
elem.resize(shadowWidth,shadowHeight);
}elem.tint(null);
}else{delete this.__shadowElement;
}},_applyToolTipText:function(value,old){var manager;
{};
},_applyTextColor:function(value,old){},_applyZIndex:function(value,old){this.getContainerElement().setStyle("zIndex",value==null?0:value);
},_applyVisibility:function(value,old){var container=this.getContainerElement();

if(value==="visible"){container.show();
}else{container.hide();
}var parent=this.$$parent;

if(parent&&(old==null||value==null||old==="excluded"||value==="excluded")){parent.invalidateLayoutChildren();
}qx.ui.core.queue.Visibility.add(this);
},_applyOpacity:function(value,old){this.getContainerElement().setStyle("opacity",value==1?null:value);
if(qx.core.Variant.isSet("qx.client","mshtml")&&qx.bom.element.Decoration.isAlphaImageLoaderEnabled()){if(!qx.Class.isSubClassOf(this.getContentElement().constructor,qx.html.Image)){var contentElementOpacity=(value==1||value==null)?null:0.99;
this.getContentElement().setStyle("opacity",contentElementOpacity);
}}},_applyCursor:function(value,old){if(value==null&&!this.isSelectable()){value="default";
}this.getContainerElement().setStyle("cursor",value,qx.bom.client.Engine.OPERA);
},_applyBackgroundColor:function(value,old){var color=this.getBackgroundColor();
var container=this.getContainerElement();

if(this.__decoratorElement){this.__decoratorElement.tint(color);
container.setStyle("backgroundColor",null);
}else{var resolved=qx.theme.manager.Color.getInstance().resolve(color);
container.setStyle("backgroundColor",resolved);
}},_applyFont:function(value,old){},__states:null,$$stateChanges:null,_forwardStates:null,hasState:function(state){var states=this.__states;
return states&&states[state];
},addState:function(state){var states=this.__states;

if(!states){states=this.__states={};
}
if(states[state]){return;
}this.__states[state]=true;
if(state==="hovered"){this.syncAppearance();
}else if(!qx.ui.core.queue.Visibility.isVisible(this)){this.$$stateChanges=true;
}else{qx.ui.core.queue.Appearance.add(this);
}var forward=this._forwardStates;
var controls=this.__childControls;

if(forward&&forward[state]&&controls){var control;

for(var id in controls){control=controls[id];

if(control instanceof qx.ui.core.Widget){controls[id].addState(state);
}}}},removeState:function(state){var states=this.__states;

if(!states||!states[state]){return;
}delete this.__states[state];
if(state==="hovered"){this.syncAppearance();
}else if(!qx.ui.core.queue.Visibility.isVisible(this)){this.$$stateChanges=true;
}else{qx.ui.core.queue.Appearance.add(this);
}var forward=this._forwardStates;
var controls=this.__childControls;

if(forward&&forward[state]&&controls){for(var id in controls){var control=controls[id];

if(control instanceof qx.ui.core.Widget){control.removeState(state);
}}}},replaceState:function(old,value){var states=this.__states;

if(!states){states=this.__states={};
}
if(!states[value]){states[value]=true;
}
if(states[old]){delete states[old];
}
if(!qx.ui.core.queue.Visibility.isVisible(this)){this.$$stateChanges=true;
}else{qx.ui.core.queue.Appearance.add(this);
}var forward=this._forwardStates;
var controls=this.__childControls;

if(forward&&forward[value]&&controls){for(var id in controls){var control=controls[id];

if(control instanceof qx.ui.core.Widget){control.replaceState(old,value);
}}}},__appearanceSelector:null,__updateSelector:null,syncAppearance:function(){var states=this.__states;
var selector=this.__appearanceSelector;
var manager=qx.theme.manager.Appearance.getInstance();
var styler=qx.core.Property.$$method.setThemed;
var unstyler=qx.core.Property.$$method.resetThemed;
if(this.__updateSelector){delete this.__updateSelector;
if(selector){var oldData=manager.styleFrom(selector,states,null,this.getAppearance());
if(oldData){selector=null;
}}}if(!selector){var obj=this;
var id=[];

do{id.push(obj.$$subcontrol||obj.getAppearance());
}while(obj=obj.$$subparent);
selector=this.__appearanceSelector=id.reverse().join("/").replace(/#[0-9]+/g,"");
}var newData=manager.styleFrom(selector,states,null,this.getAppearance());

if(newData){if(oldData){for(var prop in oldData){if(newData[prop]===undefined){this[unstyler[prop]]();
}}}{for(var prop in newData){if(!this[styler[prop]]){throw new Error(this.classname+' has no themeable property "'+prop+'" while styling '+selector);
}}};
for(var prop in newData){newData[prop]===undefined?this[unstyler[prop]]():this[styler[prop]](newData[prop]);
}}else if(oldData){for(var prop in oldData){this[unstyler[prop]]();
}}this.fireDataEvent("syncAppearance",this.__states);
},_applyAppearance:function(value,old){this.updateAppearance();
},checkAppearanceNeeds:function(){if(!this.__initialAppearanceApplied){qx.ui.core.queue.Appearance.add(this);
this.__initialAppearanceApplied=true;
}else if(this.$$stateChanges){qx.ui.core.queue.Appearance.add(this);
delete this.$$stateChanges;
}},updateAppearance:function(){this.__updateSelector=true;
qx.ui.core.queue.Appearance.add(this);
var controls=this.__childControls;

if(controls){var obj;

for(var id in controls){obj=controls[id];

if(obj instanceof qx.ui.core.Widget){obj.updateAppearance();
}}}},syncWidget:function(){},getEventTarget:function(){var target=this;

while(target.getAnonymous()){target=target.getLayoutParent();

if(!target){return null;
}}return target;
},getFocusTarget:function(){var target=this;

if(!target.getEnabled()){return null;
}
while(target.getAnonymous()||!target.getFocusable()){target=target.getLayoutParent();

if(!target||!target.getEnabled()){return null;
}}return target;
},getFocusElement:function(){return this.getContainerElement();
},isTabable:function(){return (!!this.getContainerElement().getDomElement())&&this.isFocusable();
},_applyFocusable:function(value,old){var target=this.getFocusElement();
if(value){var tabIndex=this.getTabIndex();

if(tabIndex==null){tabIndex=1;
}target.setAttribute("tabIndex",tabIndex);
if(qx.core.Variant.isSet("qx.client","mshtml")){target.setAttribute("hideFocus","true");
}else{target.setStyle("outline","none");
}}else{if(target.isNativelyFocusable()){target.setAttribute("tabIndex",-1);
}else if(old){target.setAttribute("tabIndex",null);
}}},_applyKeepFocus:function(value){var target=this.getFocusElement();
target.setAttribute("qxKeepFocus",value?"on":null);
},_applyKeepActive:function(value){var target=this.getContainerElement();
target.setAttribute("qxKeepActive",value?"on":null);
},_applyTabIndex:function(value){if(value==null){value=1;
}else if(value<1||value>32000){throw new Error("TabIndex property must be between 1 and 32000");
}
if(this.getFocusable()&&value!=null){this.getFocusElement().setAttribute("tabIndex",value);
}},_applySelectable:function(value,old){if(old!==null){this._applyCursor(this.getCursor());
}this.getContainerElement().setSelectable(value);
this.getContentElement().setSelectable(value);
},_applyEnabled:function(value,old){if(value===false){this.addState("disabled");
this.removeState("hovered");
if(this.isFocusable()){this.removeState("focused");
this._applyFocusable(false,true);
}if(this.isDraggable()){this._applyDraggable(false,true);
}if(this.isDroppable()){this._applyDroppable(false,true);
}}else{this.removeState("disabled");
if(this.isFocusable()){this._applyFocusable(true,false);
}if(this.isDraggable()){this._applyDraggable(true,false);
}if(this.isDroppable()){this._applyDroppable(true,false);
}}},_applyNativeContextMenu:function(value,old,name){},_applyContextMenu:function(value,old){if(old){old.removeState("contextmenu");

if(old.getOpener()==this){old.resetOpener();
}
if(!value){this.removeListener("contextmenu",this._onContextMenuOpen);
old.removeListener("changeVisibility",this._onBeforeContextMenuOpen,this);
}}
if(value){value.setOpener(this);
value.addState("contextmenu");

if(!old){this.addListener("contextmenu",this._onContextMenuOpen);
value.addListener("changeVisibility",this._onBeforeContextMenuOpen,this);
}}},_onContextMenuOpen:function(e){this.getContextMenu().openAtMouse(e);
e.stop();
},_onBeforeContextMenuOpen:function(e){if(e.getData()=="visible"&&this.hasListener("beforeContextmenuOpen")){this.fireDataEvent("beforeContextmenuOpen",e);
}},_onStopEvent:function(e){e.stopPropagation();
},_applyDraggable:function(value,old){if(!this.isEnabled()&&value===true){value=false;
}qx.ui.core.DragDropCursor.getInstance();
if(value){this.addListener("dragstart",this._onDragStart);
this.addListener("drag",this._onDrag);
this.addListener("dragend",this._onDragEnd);
this.addListener("dragchange",this._onDragChange);
}else{this.removeListener("dragstart",this._onDragStart);
this.removeListener("drag",this._onDrag);
this.removeListener("dragend",this._onDragEnd);
this.removeListener("dragchange",this._onDragChange);
}this.getContainerElement().setAttribute("qxDraggable",value?"on":null);
},_applyDroppable:function(value,old){if(!this.isEnabled()&&value===true){value=false;
}this.getContainerElement().setAttribute("qxDroppable",value?"on":null);
},_onDragStart:function(e){qx.ui.core.DragDropCursor.getInstance().placeToMouse(e);
this.getApplicationRoot().setGlobalCursor("default");
},_onDrag:function(e){qx.ui.core.DragDropCursor.getInstance().placeToMouse(e);
},_onDragEnd:function(e){qx.ui.core.DragDropCursor.getInstance().moveTo(-1000,-1000);
this.getApplicationRoot().resetGlobalCursor();
},_onDragChange:function(e){var cursor=qx.ui.core.DragDropCursor.getInstance();
var action=e.getCurrentAction();
action?cursor.setAction(action):cursor.resetAction();
},visualizeFocus:function(){this.addState("focused");
},visualizeBlur:function(){this.removeState("focused");
},scrollChildIntoView:function(child,alignX,alignY,direct){this.scrollChildIntoViewX(child,alignX,direct);
this.scrollChildIntoViewY(child,alignY,direct);
},scrollChildIntoViewX:function(child,align,direct){this.getContentElement().scrollChildIntoViewX(child.getContainerElement(),align,direct);
},scrollChildIntoViewY:function(child,align,direct){this.getContentElement().scrollChildIntoViewY(child.getContainerElement(),align,direct);
},focus:function(){if(this.isFocusable()){this.getFocusElement().focus();
}else{throw new Error("Widget is not focusable!");
}},blur:function(){if(this.isFocusable()){this.getFocusElement().blur();
}else{throw new Error("Widget is not focusable!");
}},activate:function(){this.getContainerElement().activate();
},deactivate:function(){this.getContainerElement().deactivate();
},tabFocus:function(){this.getFocusElement().focus();
},hasChildControl:function(id){if(!this.__childControls){return false;
}return !!this.__childControls[id];
},__childControls:null,_getCreatedChildControls:function(){return this.__childControls;
},getChildControl:function(id,notcreate){if(!this.__childControls){if(notcreate){return null;
}this.__childControls={};
}var control=this.__childControls[id];

if(control){return control;
}
if(notcreate===true){return null;
}return this._createChildControl(id);
},_showChildControl:function(id){var control=this.getChildControl(id);
control.show();
return control;
},_excludeChildControl:function(id){var control=this.getChildControl(id,true);

if(control){control.exclude();
}},_isChildControlVisible:function(id){var control=this.getChildControl(id,true);

if(control){return control.isVisible();
}return false;
},_createChildControl:function(id){if(!this.__childControls){this.__childControls={};
}else if(this.__childControls[id]){throw new Error("Child control '"+id+"' already created!");
}var pos=id.indexOf("#");

if(pos==-1){var control=this._createChildControlImpl(id);
}else{var control=this._createChildControlImpl(id.substring(0,pos));
}
if(!control){throw new Error("Unsupported control: "+id);
}control.$$subcontrol=id;
control.$$subparent=this;
var states=this.__states;
var forward=this._forwardStates;

if(states&&forward&&control instanceof qx.ui.core.Widget){for(var state in states){if(forward[state]){control.addState(state);
}}}this.fireDataEvent("createChildControl",control);
return this.__childControls[id]=control;
},_createChildControlImpl:function(id){return null;
},_disposeChildControls:function(){var controls=this.__childControls;

if(!controls){return;
}var Widget=qx.ui.core.Widget;

for(var id in controls){var control=controls[id];

if(!Widget.contains(this,control)){control.destroy();
}else{control.dispose();
}}delete this.__childControls;
},_findTopControl:function(){var obj=this;

while(obj){if(!obj.$$subparent){return obj;
}obj=obj.$$subparent;
}return null;
},getContainerLocation:function(mode){var domEl=this.getContainerElement().getDomElement();
return domEl?qx.bom.element.Location.get(domEl,mode):null;
},getContentLocation:function(mode){var domEl=this.getContentElement().getDomElement();
return domEl?qx.bom.element.Location.get(domEl,mode):null;
},setDomLeft:function(value){var domEl=this.getContainerElement().getDomElement();

if(domEl){domEl.style.left=value+"px";
}else{throw new Error("DOM element is not yet created!");
}},setDomTop:function(value){var domEl=this.getContainerElement().getDomElement();

if(domEl){domEl.style.top=value+"px";
}else{throw new Error("DOM element is not yet created!");
}},setDomPosition:function(left,top){var domEl=this.getContainerElement().getDomElement();

if(domEl){domEl.style.left=left+"px";
domEl.style.top=top+"px";
}else{throw new Error("DOM element is not yet created!");
}},destroy:function(){if(this.$$disposed){return;
}var parent=this.$$parent;

if(parent){parent._remove(this);
}qx.ui.core.queue.Dispose.add(this);
},clone:function(){var clone=this.base(arguments);

if(this.getChildren){var children=this.getChildren();

for(var i=0,l=children.length;i<l;i++){clone.add(children[i].clone());
}}return clone;
}},destruct:function(){if(!qx.core.ObjectRegistry.inShutDown){{};
this.getContainerElement().setAttribute("$$widget",null,true);
this._disposeChildControls();
qx.ui.core.queue.Appearance.remove(this);
qx.ui.core.queue.Layout.remove(this);
qx.ui.core.queue.Visibility.remove(this);
qx.ui.core.queue.Widget.remove(this);
}if(!qx.core.ObjectRegistry.inShutDown){var clazz=qx.ui.core.Widget;
var container=this.getContainerElement();

if(this.__decoratorElement){container.remove(this.__decoratorElement);
clazz.__decoratorPool.poolDecorator(this.__decoratorElement);
}
if(this.__shadowElement){container.remove(this.__shadowElement);
clazz.__shadowPool.poolDecorator(this.__shadowElement);
}this.clearSeparators();
this.__decoratorElement=this.__shadowElement=this.__separators=null;
}else{this._disposeArray("__separators");
this._disposeObjects("__decoratorElement","__shadowElement");
}this._disposeArray("__widgetChildren");
this.__states=this.__childControls=null;
this._disposeObjects("__layoutManager","__containerElement","__contentElement","__protectorElement");
}});
qx.Class.define("qx.ui.container.Composite",{extend:qx.ui.core.Widget,include:[qx.ui.core.MChildrenHandling,qx.ui.core.MLayoutHandling],construct:function(layout){this.base(arguments);

if(layout!=null){this._setLayout(layout);
}},events:{addChildWidget:"qx.event.type.Data",removeChildWidget:"qx.event.type.Data"},members:{_afterAddChild:function(child){this.fireNonBubblingEvent("addChildWidget",qx.event.type.Data,[child]);
},_afterRemoveChild:function(child){this.fireNonBubblingEvent("removeChildWidget",qx.event.type.Data,[child]);
}},defer:function(statics,members){qx.ui.core.MChildrenHandling.remap(members);
qx.ui.core.MLayoutHandling.remap(members);
}});
qx.Mixin.define("qx.ui.core.MPlacement",{properties:{position:{check:["top-left","top-right","bottom-left","bottom-right","left-top","left-bottom","right-top","right-bottom"],init:"bottom-left",themeable:true},placeMethod:{check:["widget","mouse"],init:"mouse",themeable:true},domMove:{check:"Boolean",init:false},placementModeX:{check:["direct","keep-align","best-fit"],init:"keep-align",themeable:true},placementModeY:{check:["direct","keep-align","best-fit"],init:"keep-align",themeable:true},offsetLeft:{check:"Integer",init:0,themeable:true},offsetTop:{check:"Integer",init:0,themeable:true},offsetRight:{check:"Integer",init:0,themeable:true},offsetBottom:{check:"Integer",init:0,themeable:true},offset:{group:["offsetTop","offsetRight","offsetBottom","offsetLeft"],mode:"shorthand",themeable:true}},members:{__ptwLiveUpdater:null,__ptwLiveDisappearListener:null,__ptwLiveUpdateDisappearListener:null,getLayoutLocation:function(widget){var insets,bounds,left,top;
bounds=widget.getBounds();
left=bounds.left;
top=bounds.top;
var size=bounds;
widget=widget.getLayoutParent();

while(widget&&!widget.isRootWidget()){bounds=widget.getBounds();
left+=bounds.left;
top+=bounds.top;
insets=widget.getInsets();
left+=insets.left;
top+=insets.top;
widget=widget.getLayoutParent();
}if(widget.isRootWidget()){var rootCoords=widget.getContainerLocation();

if(rootCoords){left+=rootCoords.left;
top+=rootCoords.top;
}}return {left:left,top:top,right:left+size.width,bottom:top+size.height};
},moveTo:function(left,top){if(this.getDomMove()){this.setDomPosition(left,top);
}else{this.setLayoutProperties({left:left,top:top});
}},placeToWidget:function(target,liveupdate){if(liveupdate){this.__cleanupFromLastPlaceToWidgetLiveUpdate();
this.__ptwLiveUpdater=qx.lang.Function.bind(this.placeToWidget,this,target,false);
qx.event.Idle.getInstance().addListener("interval",this.__ptwLiveUpdater);
this.__ptwLiveUpdateDisappearListener=function(){this.__cleanupFromLastPlaceToWidgetLiveUpdate();
};
this.addListener("disappear",this.__ptwLiveUpdateDisappearListener,this);
}var coords=target.getContainerLocation()||this.getLayoutLocation(target);
this.__place(coords);
},__cleanupFromLastPlaceToWidgetLiveUpdate:function(){if(this.__ptwLiveUpdater){qx.event.Idle.getInstance().removeListener("interval",this.__ptwLiveUpdater);
this.__ptwLiveUpdater=null;
}
if(this.__ptwLiveUpdateDisappearListener){this.removeListener("disappear",this.__ptwLiveUpdateDisappearListener,this);
this.__ptwLiveUpdateDisappearListener=null;
}},placeToMouse:function(event){var left=event.getDocumentLeft();
var top=event.getDocumentTop();
var coords={left:left,top:top,right:left,bottom:top};
this.__place(coords);
},placeToElement:function(elem,liveupdate){var location=qx.bom.element.Location.get(elem);
var coords={left:location.left,top:location.top,right:location.left+elem.offsetWidth,bottom:location.top+elem.offsetHeight};
if(liveupdate){this.__ptwLiveUpdater=qx.lang.Function.bind(this.placeToElement,this,elem,false);
qx.event.Idle.getInstance().addListener("interval",this.__ptwLiveUpdater);
this.addListener("disappear",function(){if(this.__ptwLiveUpdater){qx.event.Idle.getInstance().removeListener("interval",this.__ptwLiveUpdater);
this.__ptwLiveUpdater=null;
}},this);
}this.__place(coords);
},placeToPoint:function(point){var coords={left:point.left,top:point.top,right:point.left,bottom:point.top};
this.__place(coords);
},_getPlacementOffsets:function(){return {left:this.getOffsetLeft(),top:this.getOffsetTop(),right:this.getOffsetRight(),bottom:this.getOffsetBottom()};
},__getPlacementSize:function(callback){var size=null;

if(this._computePlacementSize){var size=this._computePlacementSize();
}else if(this.isVisible()){var size=this.getBounds();
}
if(size==null){this.addListenerOnce("appear",function(){this.__getPlacementSize(callback);
},this);
}else{callback.call(this,size);
}},__place:function(coords){this.__getPlacementSize(function(size){var result=qx.util.placement.Placement.compute(size,this.getLayoutParent().getBounds(),coords,this._getPlacementOffsets(),this.getPosition(),this.getPlacementModeX(),this.getPlacementModeY());
this.moveTo(result.left,result.top);
});
},setSmart:function(value){{qx.core.Assert.assertBoolean(value,"Invalid attribute 'value'.");
qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'smart' is deprecated. Please us the properties "+"'placementModeX' and 'placementModeY' instead.");
};
var mode=value?"keep-align":"direct";
this.set({placementModeX:mode,placementModeY:mode});
},getSmart:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'smart' is deprecated. Please us the properties "+"'placementModeX' and 'placementModeY' instead.");
};
var placementModeX=this.getPlacementModeX()=="keep-align"?true:false;
var placementModeY=this.getPlacementModeY()=="keep-align"?true:false;
return placementModeX&&placementModeY;
},resetSmart:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'smart' is deprecated. Please us the properties "+"'placementModeX' and 'placementModeY' instead.");
};
this.resetPlacementModeX();
this.resetPlacementModeY();
},isSmart:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'smart' is deprecated. Please us the properties "+"'placementModeX' and 'placementModeY' instead.");
};
return this.getSmart();
},toggleSmart:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'smart' is deprecated. Please us the properties "+"'placementModeX' and 'placementModeY' instead.");
};
this.setSmart(!this.getSmart());
}},destruct:function(){this.__cleanupFromLastPlaceToWidgetLiveUpdate();
}});
qx.Class.define("qx.ui.popup.Popup",{extend:qx.ui.container.Composite,include:qx.ui.core.MPlacement,construct:function(layout){this.base(arguments,layout);
qx.core.Init.getApplication().getRoot().add(this);
this.initVisibility();
},properties:{appearance:{refine:true,init:"popup"},visibility:{refine:true,init:"excluded"},autoHide:{check:"Boolean",init:true}},members:{_applyVisibility:function(value,old){this.base(arguments,value,old);
var mgr=qx.ui.popup.Manager.getInstance();
value==="visible"?mgr.add(this):mgr.remove(this);
}},destruct:function(){qx.ui.popup.Manager.getInstance().remove(this);
}});
qx.Class.define("qx.ui.tooltip.ToolTip",{extend:qx.ui.popup.Popup,construct:function(label,icon){this.base(arguments);
this.setLayout(new qx.ui.layout.Grow);
this._createChildControl("atom");
if(label!=null){this.setLabel(label);
}
if(icon!=null){this.setIcon(icon);
}this.addListener("mouseover",this._onMouseOver,this);
},properties:{appearance:{refine:true,init:"tooltip"},showTimeout:{check:"Integer",init:700,themeable:true},hideTimeout:{check:"Integer",init:4000,themeable:true},label:{check:"String",nullable:true,apply:"_applyLabel"},icon:{check:"String",nullable:true,apply:"_applyIcon",themeable:true},rich:{check:"Boolean",init:false,apply:"_applyRich"},opener:{check:"qx.ui.core.Widget",nullable:true}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "atom":control=new qx.ui.basic.Atom;
this._add(control);
break;
}return control||this.base(arguments,id);
},_onMouseOver:function(e){this.hide();
},_applyIcon:function(value,old){var atom=this.getChildControl("atom");
value==null?atom.resetIcon:atom.setIcon(value);
},_applyLabel:function(value,old){var atom=this.getChildControl("atom");
value==null?atom.resetLabel():atom.setLabel(value);
},_applyRich:function(value,old){var atom=this.getChildControl("atom");
atom.setRich(value);
}}});
qx.Class.define("qx.ui.core.queue.Layout",{statics:{__queue:{},remove:function(widget){delete this.__queue[widget.$$hash];
},add:function(widget){this.__queue[widget.$$hash]=widget;
qx.ui.core.queue.Manager.scheduleFlush("layout");
},flush:function(){var queue=this.__getSortedQueue();
for(var i=queue.length-1;i>=0;i--){var widget=queue[i];
if(widget.hasValidLayout()){continue;
}if(widget.isRootWidget()&&!widget.hasUserBounds()){var hint=widget.getSizeHint();
widget.renderLayout(0,0,hint.width,hint.height);
}else{var bounds=widget.getBounds();
widget.renderLayout(bounds.left,bounds.top,bounds.width,bounds.height);
}}},getNestingLevel:function(widget){var cache=this.__nesting;
var level=0;
var parent=widget;
while(true){if(cache[parent.$$hash]!=null){level+=cache[parent.$$hash];
break;
}
if(!parent.$$parent){break;
}parent=parent.$$parent;
level+=1;
}var leveldown=level;

while(widget&&widget!==parent){cache[widget.$$hash]=leveldown--;
widget=widget.$$parent;
}return level;
},__getLevelGroupedWidgets:function(){var VisibilityQueue=qx.ui.core.queue.Visibility;
this.__nesting={};
var levels=[];
var queue=this.__queue;
var widget,level;

for(var hash in queue){widget=queue[hash];

if(VisibilityQueue.isVisible(widget)){level=this.getNestingLevel(widget);
if(!levels[level]){levels[level]={};
}levels[level][hash]=widget;
delete queue[hash];
}}return levels;
},__getSortedQueue:function(){var sortedQueue=[];
var levels=this.__getLevelGroupedWidgets();

for(var level=levels.length-1;level>=0;level--){if(!levels[level]){continue;
}
for(var hash in levels[level]){var widget=levels[level][hash];
if(level==0||widget.isRootWidget()||widget.hasUserBounds()){sortedQueue.push(widget);
widget.invalidateLayoutCache();
continue;
}var oldSizeHint=widget.getSizeHint(false);

if(oldSizeHint){widget.invalidateLayoutCache();
var newSizeHint=widget.getSizeHint();
var hintChanged=(!widget.getBounds()||oldSizeHint.minWidth!==newSizeHint.minWidth||oldSizeHint.width!==newSizeHint.width||oldSizeHint.maxWidth!==newSizeHint.maxWidth||oldSizeHint.minHeight!==newSizeHint.minHeight||oldSizeHint.height!==newSizeHint.height||oldSizeHint.maxHeight!==newSizeHint.maxHeight);
}else{hintChanged=true;
}
if(hintChanged){var parent=widget.getLayoutParent();

if(!levels[level-1]){levels[level-1]={};
}levels[level-1][parent.$$hash]=parent;
}else{sortedQueue.push(widget);
}}}return sortedQueue;
}}});
qx.Class.define("qx.event.handler.UserAction",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__window=manager.getWindow();
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{useraction:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_WINDOW,IGNORE_CAN_HANDLE:true},members:{__manager:null,__window:null,canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){}},destruct:function(){this.__manager=this.__window=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.util.DeferredCallManager",{extend:qx.core.Object,type:"singleton",construct:function(){this.__calls={};
this.__timeoutWrapper=qx.lang.Function.bind(this.__timeout,this);
this.__hasCalls=false;
},members:{__timeoutId:null,__currentQueue:null,__calls:null,__hasCalls:null,__timeoutWrapper:null,schedule:function(deferredCall){if(this.__timeoutId==null){this.__timeoutId=window.setTimeout(this.__timeoutWrapper,0);
}var callKey=deferredCall.toHashCode();
if(this.__currentQueue&&this.__currentQueue[callKey]){return;
}this.__calls[callKey]=deferredCall;
this.__hasCalls=true;
},cancel:function(deferredCall){var callKey=deferredCall.toHashCode();
if(this.__currentQueue&&this.__currentQueue[callKey]){this.__currentQueue[callKey]=null;
return;
}delete this.__calls[callKey];
if(qx.lang.Object.isEmpty(this.__calls)&&this.__timeoutId!=null){window.clearTimeout(this.__timeoutId);
this.__timeoutId=null;
}},__timeout:qx.event.GlobalError.observeMethod(function(){this.__timeoutId=null;
while(this.__hasCalls){this.__currentQueue=qx.lang.Object.clone(this.__calls);
this.__calls={};
this.__hasCalls=false;

for(var key in this.__currentQueue){var call=this.__currentQueue[key];

if(call){this.__currentQueue[key]=null;
call.call();
}}}this.__currentQueue=null;
})},destruct:function(){if(this.__timeoutId!=null){window.clearTimeout(this.__timeoutId);
}this.__timeoutWrapper=this.__calls=null;
}});
qx.Class.define("qx.util.DeferredCall",{extend:qx.core.Object,construct:function(callback,context){this.base(arguments);
this.__callback=callback;
this.__context=context||null;
this.__manager=qx.util.DeferredCallManager.getInstance();
},members:{__callback:null,__context:null,__manager:null,cancel:function(){this.__manager.cancel(this);
},schedule:function(){this.__manager.schedule(this);
},call:function(){this.__context?this.__callback.apply(this.__context):this.__callback();
}},destruct:function(callback,context){this.cancel();
this.__context=this.__callback=this.__manager=null;
}});
qx.Class.define("qx.html.Element",{extend:qx.core.Object,construct:function(tagName,styles,attributes){this.base(arguments);
this.__nodeName=tagName||"div";
this.__styleValues=styles||null;
this.__attribValues=attributes||null;
},statics:{DEBUG:false,_modified:{},_visibility:{},_scroll:{},_actions:[],__selection:{},_scheduleFlush:function(job){qx.html.Element.__deferredCall.schedule();
},flush:function(){var obj;
{if(this.DEBUG){qx.log.Logger.debug(this,"Flushing elements...");
}};
var focusHandler=this.__getFocusHandler();
var focusedDomElement=focusHandler.getFocus();

if(focusedDomElement&&this.__willBecomeInvisible(focusedDomElement)){focusHandler.blur(focusedDomElement);
}var activeDomElement=focusHandler.getActive();

if(activeDomElement&&this.__willBecomeInvisible(activeDomElement)){qx.bom.Element.deactivate(activeDomElement);
}var captureDomElement=this.__getCaptureElement();

if(captureDomElement&&this.__willBecomeInvisible(captureDomElement)){qx.bom.Element.releaseCapture(captureDomElement);
}var later=[];
var modified=this._modified;

for(var hc in modified){obj=modified[hc];
if(obj.__willBeSeeable()){if(obj.__element&&qx.dom.Hierarchy.isRendered(obj.__element)){later.push(obj);
}else{{if(this.DEBUG){obj.debug("Flush invisible element");
}};
obj.__flush();
}delete modified[hc];
}}
for(var i=0,l=later.length;i<l;i++){obj=later[i];
{if(this.DEBUG){obj.debug("Flush rendered element");
}};
obj.__flush();
}var visibility=this._visibility;

for(var hc in visibility){obj=visibility[hc];
var element=obj.__element;

if(!element){delete visibility[hc];
continue;
}{if(this.DEBUG){qx.log.Logger.debug(this,"Switching visibility to: "+obj.__visible);
}};
if(!obj.$$disposed){element.style.display=obj.__visible?"":"none";
if(qx.core.Variant.isSet("qx.client","mshtml")){if(!(document.documentMode>=8)){element.style.visibility=obj.__visible?"visible":"hidden";
}}}delete visibility[hc];
}var scroll=this._scroll;

for(var hc in scroll){obj=scroll[hc];
var elem=obj.__element;

if(elem&&elem.offsetWidth){var done=true;
if(obj.__lazyScrollX!=null){obj.__element.scrollLeft=obj.__lazyScrollX;
delete obj.__lazyScrollX;
}if(obj.__lazyScrollY!=null){obj.__element.scrollTop=obj.__lazyScrollY;
delete obj.__lazyScrollY;
}var intoViewX=obj.__lazyScrollIntoViewX;

if(intoViewX!=null){var child=intoViewX.element.getDomElement();

if(child&&child.offsetWidth){qx.bom.element.Scroll.intoViewX(child,elem,intoViewX.align);
delete obj.__lazyScrollIntoViewX;
}else{done=false;
}}var intoViewY=obj.__lazyScrollIntoViewY;

if(intoViewY!=null){var child=intoViewY.element.getDomElement();

if(child&&child.offsetWidth){qx.bom.element.Scroll.intoViewY(child,elem,intoViewY.align);
delete obj.__lazyScrollIntoViewY;
}else{done=false;
}}if(done){delete scroll[hc];
}}}var activityEndActions={"releaseCapture":1,"blur":1,"deactivate":1};
for(var i=0;i<this._actions.length;i++){var action=this._actions[i];
var element=action.element.__element;

if(!element||!activityEndActions[action.type]&&!action.element.__willBeSeeable()){continue;
}var args=action.args;
args.unshift(element);
qx.bom.Element[action.type].apply(qx.bom.Element,args);
}this._actions=[];
for(var hc in this.__selection){var selection=this.__selection[hc];
var elem=selection.element.__element;

if(elem){qx.bom.Selection.set(elem,selection.start,selection.end);
delete this.__selection[hc];
}}qx.event.handler.Appear.refresh();
},__getFocusHandler:function(){if(!this.__focusHandler){var eventManager=qx.event.Registration.getManager(window);
this.__focusHandler=eventManager.getHandler(qx.event.handler.Focus);
}return this.__focusHandler;
},__getCaptureElement:function(){if(!this.__mouseCapture){var eventManager=qx.event.Registration.getManager(window);
this.__mouseCapture=eventManager.getDispatcher(qx.event.dispatch.MouseCapture);
}return this.__mouseCapture.getCaptureElement();
},__willBecomeInvisible:function(domElement){var element=qx.core.ObjectRegistry.fromHashCode(domElement.$$element);
return element&&!element.__willBeSeeable();
}},members:{__nodeName:null,__element:null,__root:false,__included:true,__visible:true,__lazyScrollIntoViewX:null,__lazyScrollIntoViewY:null,__lazyScrollX:null,__lazyScrollY:null,__styleJobs:null,__attribJobs:null,__propertyJobs:null,__styleValues:null,__attribValues:null,__propertyValues:null,__eventValues:null,__children:null,__modifiedChildren:null,__parent:null,_scheduleChildrenUpdate:function(){if(this.__modifiedChildren){return;
}this.__modifiedChildren=true;
qx.html.Element._modified[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
},_createDomElement:function(){return qx.bom.Element.create(this.__nodeName);
},__flush:function(){{if(this.DEBUG){this.debug("Flush: "+this.getAttribute("id"));
}};
var children=this.__children;

if(children){var length=children.length;
var child;

for(var i=0;i<length;i++){child=children[i];

if(child.__visible&&child.__included&&!child.__element){child.__flush();
}}}
if(!this.__element){this.__element=this._createDomElement();
this.__element.$$element=this.$$hash;
this._copyData(false);

if(children&&length>0){this._insertChildren();
}}else{this._syncData();

if(this.__modifiedChildren){this._syncChildren();
}}delete this.__modifiedChildren;
},_insertChildren:function(){var children=this.__children;
var length=children.length;
var child;

if(length>2){var domElement=document.createDocumentFragment();

for(var i=0;i<length;i++){child=children[i];

if(child.__element&&child.__included){domElement.appendChild(child.__element);
}}this.__element.appendChild(domElement);
}else{var domElement=this.__element;

for(var i=0;i<length;i++){child=children[i];

if(child.__element&&child.__included){domElement.appendChild(child.__element);
}}}},_syncChildren:function(){var ObjectRegistry=qx.core.ObjectRegistry;
var dataChildren=this.__children;
var dataLength=dataChildren.length;
var dataChild;
var dataEl;
var domParent=this.__element;
var domChildren=domParent.childNodes;
var domPos=0;
var domEl;
{var domOperations=0;
};
for(var i=domChildren.length-1;i>=0;i--){domEl=domChildren[i];
dataEl=ObjectRegistry.fromHashCode(domEl.$$element);

if(!dataEl||!dataEl.__included||dataEl.__parent!==this){domParent.removeChild(domEl);
{domOperations++;
};
}}for(var i=0;i<dataLength;i++){dataChild=dataChildren[i];
if(dataChild.__included){dataEl=dataChild.__element;
domEl=domChildren[domPos];

if(!dataEl){continue;
}if(dataEl!=domEl){if(domEl){domParent.insertBefore(dataEl,domEl);
}else{domParent.appendChild(dataEl);
}{domOperations++;
};
}domPos++;
}}{if(qx.html.Element.DEBUG){this.debug("Synced DOM with "+domOperations+" operations");
}};
},_copyData:function(fromMarkup){var elem=this.__element;
var data=this.__attribValues;

if(data){var Attribute=qx.bom.element.Attribute;

for(var key in data){Attribute.set(elem,key,data[key]);
}}var data=this.__styleValues;

if(data){var Style=qx.bom.element.Style;

if(fromMarkup){Style.setStyles(elem,data);
}else{Style.setCss(elem,Style.compile(data));
}}var data=this.__propertyValues;

if(data){for(var key in data){this._applyProperty(key,data[key]);
}}var data=this.__eventValues;

if(data){qx.event.Registration.getManager(elem).importListeners(elem,data);
delete this.__eventValues;
}},_syncData:function(){var elem=this.__element;
var Attribute=qx.bom.element.Attribute;
var Style=qx.bom.element.Style;
var jobs=this.__attribJobs;

if(jobs){var data=this.__attribValues;

if(data){var value;

for(var key in jobs){value=data[key];

if(value!==undefined){Attribute.set(elem,key,value);
}else{Attribute.reset(elem,key);
}}}this.__attribJobs=null;
}var jobs=this.__styleJobs;

if(jobs){var data=this.__styleValues;

if(data){var styles={};

for(var key in jobs){styles[key]=data[key];
}Style.setStyles(elem,styles);
}this.__styleJobs=null;
}var jobs=this.__propertyJobs;

if(jobs){var data=this.__propertyValues;

if(data){var value;

for(var key in jobs){this._applyProperty(key,data[key]);
}}this.__propertyJobs=null;
}},__willBeSeeable:function(){var pa=this;
while(pa){if(pa.__root){return true;
}
if(!pa.__included||!pa.__visible){return false;
}pa=pa.__parent;
}return false;
},__addChildHelper:function(child){if(child.__parent===this){throw new Error("Child is already in: "+child);
}
if(child.__root){throw new Error("Root elements could not be inserted into other ones.");
}if(child.__parent){child.__parent.remove(child);
}child.__parent=this;
if(!this.__children){this.__children=[];
}if(this.__element){this._scheduleChildrenUpdate();
}},__removeChildHelper:function(child){if(child.__parent!==this){throw new Error("Has no child: "+child);
}if(this.__element){this._scheduleChildrenUpdate();
}delete child.__parent;
},__moveChildHelper:function(child){if(child.__parent!==this){throw new Error("Has no child: "+child);
}if(this.__element){this._scheduleChildrenUpdate();
}},getChildren:function(){return this.__children||null;
},getChild:function(index){var children=this.__children;
return children&&children[index]||null;
},hasChildren:function(){var children=this.__children;
return children&&children[0]!==undefined;
},indexOf:function(child){var children=this.__children;
return children?children.indexOf(child):-1;
},hasChild:function(child){var children=this.__children;
return children&&children.indexOf(child)!==-1;
},add:function(varargs){if(arguments[1]){for(var i=0,l=arguments.length;i<l;i++){this.__addChildHelper(arguments[i]);
}this.__children.push.apply(this.__children,arguments);
}else{this.__addChildHelper(varargs);
this.__children.push(varargs);
}return this;
},addAt:function(child,index){this.__addChildHelper(child);
qx.lang.Array.insertAt(this.__children,child,index);
return this;
},remove:function(childs){var children=this.__children;

if(!children){return;
}
if(arguments[1]){var child;

for(var i=0,l=arguments.length;i<l;i++){child=arguments[i];
this.__removeChildHelper(child);
qx.lang.Array.remove(children,child);
}}else{this.__removeChildHelper(childs);
qx.lang.Array.remove(children,childs);
}return this;
},removeAt:function(index){var children=this.__children;

if(!children){throw new Error("Has no children!");
}var child=children[index];

if(!child){throw new Error("Has no child at this position!");
}this.__removeChildHelper(child);
qx.lang.Array.removeAt(this.__children,index);
return this;
},removeAll:function(){var children=this.__children;

if(children){for(var i=0,l=children.length;i<l;i++){this.__removeChildHelper(children[i]);
}children.length=0;
}return this;
},getParent:function(){return this.__parent||null;
},insertInto:function(parent,index){parent.__addChildHelper(this);

if(index==null){parent.__children.push(this);
}else{qx.lang.Array.insertAt(this.__children,this,index);
}return this;
},insertBefore:function(rel){var parent=rel.__parent;
parent.__addChildHelper(this);
qx.lang.Array.insertBefore(parent.__children,this,rel);
return this;
},insertAfter:function(rel){var parent=rel.__parent;
parent.__addChildHelper(this);
qx.lang.Array.insertAfter(parent.__children,this,rel);
return this;
},moveTo:function(index){var parent=this.__parent;
parent.__moveChildHelper(this);
var oldIndex=parent.__children.indexOf(this);

if(oldIndex===index){throw new Error("Could not move to same index!");
}else if(oldIndex<index){index--;
}qx.lang.Array.removeAt(parent.__children,oldIndex);
qx.lang.Array.insertAt(parent.__children,this,index);
return this;
},moveBefore:function(rel){var parent=this.__parent;
return this.moveTo(parent.__children.indexOf(rel));
},moveAfter:function(rel){var parent=this.__parent;
return this.moveTo(parent.__children.indexOf(rel)+1);
},free:function(){var parent=this.__parent;

if(!parent){throw new Error("Has no parent to remove from.");
}
if(!parent.__children){return;
}parent.__removeChildHelper(this);
qx.lang.Array.remove(parent.__children,this);
return this;
},getDomElement:function(){return this.__element||null;
},getNodeName:function(){return this.__nodeName;
},setNodeName:function(name){this.__nodeName=name;
},setRoot:function(root){this.__root=root;
},useMarkup:function(html){if(this.__element){throw new Error("Could not overwrite existing element!");
}if(qx.core.Variant.isSet("qx.client","mshtml")){var helper=document.createElement("div");
}else{var helper=qx.bom.Element.getHelperElement();
}helper.innerHTML=html;
this.useElement(helper.firstChild);
return this.__element;
},useElement:function(elem){if(this.__element){throw new Error("Could not overwrite existing element!");
}this.__element=elem;
this.__element.$$element=this.$$hash;
this._copyData(true);
},isFocusable:function(){var tabIndex=this.getAttribute("tabIndex");

if(tabIndex>=1){return true;
}var focusable=qx.event.handler.Focus.FOCUSABLE_ELEMENTS;

if(tabIndex>=0&&focusable[this.__nodeName]){return true;
}return false;
},setSelectable:qx.core.Variant.select("qx.client",{"webkit":function(value){this.setAttribute("qxSelectable",value?"on":"off");
this.setStyle("userSelect",value?"normal":"none");
},"gecko":function(value){this.setAttribute("qxSelectable",value?"on":"off");
this.setStyle("MozUserSelect",value?"text":"-moz-none");
},"default":function(value){this.setAttribute("qxSelectable",value?"on":"off");
}}),isNativelyFocusable:function(){return !!qx.event.handler.Focus.FOCUSABLE_ELEMENTS[this.__nodeName];
},include:function(){if(this.__included){return;
}delete this.__included;

if(this.__parent){this.__parent._scheduleChildrenUpdate();
}return this;
},exclude:function(){if(!this.__included){return;
}this.__included=false;

if(this.__parent){this.__parent._scheduleChildrenUpdate();
}return this;
},isIncluded:function(){return this.__included===true;
},show:function(){if(this.__visible){return;
}
if(this.__element){qx.html.Element._visibility[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}if(this.__parent){this.__parent._scheduleChildrenUpdate();
}delete this.__visible;
},hide:function(){if(!this.__visible){return;
}
if(this.__element){qx.html.Element._visibility[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}this.__visible=false;
},isVisible:function(){return this.__visible===true;
},scrollChildIntoViewX:function(elem,align,direct){var thisEl=this.__element;
var childEl=elem.getDomElement();

if(direct!==false&&thisEl&&thisEl.offsetWidth&&childEl&&childEl.offsetWidth){qx.bom.element.Scroll.intoViewX(childEl,thisEl,align);
}else{this.__lazyScrollIntoViewX={element:elem,align:align};
qx.html.Element._scroll[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}delete this.__lazyScrollX;
},scrollChildIntoViewY:function(elem,align,direct){var thisEl=this.__element;
var childEl=elem.getDomElement();

if(direct!==false&&thisEl&&thisEl.offsetWidth&&childEl&&childEl.offsetWidth){qx.bom.element.Scroll.intoViewY(childEl,thisEl,align);
}else{this.__lazyScrollIntoViewY={element:elem,align:align};
qx.html.Element._scroll[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}delete this.__lazyScrollY;
},scrollToX:function(x,lazy){var thisEl=this.__element;

if(lazy!==true&&thisEl&&thisEl.offsetWidth){thisEl.scrollLeft=x;
}else{this.__lazyScrollX=x;
qx.html.Element._scroll[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}delete this.__lazyScrollIntoViewX;
},getScrollX:function(){var thisEl=this.__element;

if(thisEl){return thisEl.scrollLeft;
}return this.__lazyScrollX||0;
},scrollToY:function(y,lazy){var thisEl=this.__element;

if(lazy!==true&&thisEl&&thisEl.offsetWidth){thisEl.scrollTop=y;
}else{this.__lazyScrollY=y;
qx.html.Element._scroll[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}delete this.__lazyScrollIntoViewY;
},getScrollY:function(){var thisEl=this.__element;

if(thisEl){return thisEl.scrollTop;
}return this.__lazyScrollY||0;
},disableScrolling:function(){this.enableScrolling();
this.scrollToX(0);
this.scrollToY(0);
this.addListener("scroll",this.__onScroll,this);
},enableScrolling:function(){this.removeListener("scroll",this.__onScroll,this);
},__inScroll:null,__onScroll:function(e){if(!this.__inScroll){this.__inScroll=true;
this.__element.scrollTop=0;
this.__element.scrollLeft=0;
delete this.__inScroll;
}},getTextSelection:function(){var el=this.__element;

if(el){return qx.bom.Selection.get(el);
}return null;
},getTextSelectionLength:function(){var el=this.__element;

if(el){return qx.bom.Selection.getLength(el);
}return null;
},getTextSelectionStart:function(){var el=this.__element;

if(el){return qx.bom.Selection.getStart(el);
}return null;
},getTextSelectionEnd:function(){var el=this.__element;

if(el){return qx.bom.Selection.getEnd(el);
}return null;
},setTextSelection:function(start,end){var el=this.__element;

if(el){qx.bom.Selection.set(el,start,end);
return;
}qx.html.Element.__selection[this.toHashCode()]={element:this,start:start,end:end};
qx.html.Element._scheduleFlush("element");
},clearTextSelection:function(){var el=this.__element;

if(el){qx.bom.Selection.clear(el);
}delete qx.html.Element.__selection[this.toHashCode()];
},__performAction:function(action,args){var actions=qx.html.Element._actions;
actions.push({type:action,element:this,args:args||[]});
qx.html.Element._scheduleFlush("element");
},focus:function(){this.__performAction("focus");
},blur:function(){this.__performAction("blur");
},activate:function(){this.__performAction("activate");
},deactivate:function(){this.__performAction("deactivate");
},capture:function(containerCapture){this.__performAction("capture",[containerCapture!==false]);
},releaseCapture:function(){this.__performAction("releaseCapture");
},setStyle:function(key,value,direct){if(!this.__styleValues){this.__styleValues={};
}
if(this.__styleValues[key]==value){return;
}
if(value==null){delete this.__styleValues[key];
}else{this.__styleValues[key]=value;
}if(this.__element){if(direct){qx.bom.element.Style.set(this.__element,key,value);
return this;
}if(!this.__styleJobs){this.__styleJobs={};
}this.__styleJobs[key]=true;
qx.html.Element._modified[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}return this;
},setStyles:function(map,direct){var Style=qx.bom.element.Style;

if(!this.__styleValues){this.__styleValues={};
}
if(this.__element){if(!this.__styleJobs){this.__styleJobs={};
}
for(var key in map){var value=map[key];

if(this.__styleValues[key]==value){continue;
}
if(value==null){delete this.__styleValues[key];
}else{this.__styleValues[key]=value;
}if(direct){Style.set(this.__element,key,value);
continue;
}this.__styleJobs[key]=true;
}qx.html.Element._modified[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}else{for(var key in map){var value=map[key];

if(this.__styleValues[key]==value){continue;
}
if(value==null){delete this.__styleValues[key];
}else{this.__styleValues[key]=value;
}}}return this;
},removeStyle:function(key,direct){this.setStyle(key,null,direct);
},getStyle:function(key){return this.__styleValues?this.__styleValues[key]:null;
},getAllStyles:function(){return this.__styleValues||null;
},setAttribute:function(key,value,direct){if(!this.__attribValues){this.__attribValues={};
}
if(this.__attribValues[key]==value){return;
}
if(value==null){delete this.__attribValues[key];
}else{this.__attribValues[key]=value;
}if(this.__element){if(direct){qx.bom.element.Attribute.set(this.__element,key,value);
return this;
}if(!this.__attribJobs){this.__attribJobs={};
}this.__attribJobs[key]=true;
qx.html.Element._modified[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}return this;
},setAttributes:function(map,direct){for(var key in map){this.setAttribute(key,map[key],direct);
}return this;
},removeAttribute:function(key,direct){this.setAttribute(key,null,direct);
},getAttribute:function(key){return this.__attribValues?this.__attribValues[key]:null;
},_applyProperty:function(name,value){},_setProperty:function(key,value,direct){if(!this.__propertyValues){this.__propertyValues={};
}
if(this.__propertyValues[key]==value){return;
}
if(value==null){delete this.__propertyValues[key];
}else{this.__propertyValues[key]=value;
}if(this.__element){if(direct){this._applyProperty(key,value);
return this;
}if(!this.__propertyJobs){this.__propertyJobs={};
}this.__propertyJobs[key]=true;
qx.html.Element._modified[this.$$hash]=this;
qx.html.Element._scheduleFlush("element");
}return this;
},_removeProperty:function(key,direct){this._setProperty(key,null,direct);
},_getProperty:function(key){var db=this.__propertyValues;

if(!db){return null;
}var value=db[key];
return value==null?null:value;
},addListener:function(type,listener,self,capture){if(this.$$disposed){return null;
}{var msg="Failed to add event listener for type '"+type+"'"+" to the target '"+this+"': ";
this.assertString(type,msg+"Invalid event type.");
this.assertFunction(listener,msg+"Invalid callback function");

if(self!==undefined){this.assertObject(self,"Invalid context for callback.");
}
if(capture!==undefined){this.assertBoolean(capture,"Invalid capture falg.");
}};

if(this.__element){return qx.event.Registration.addListener(this.__element,type,listener,self,capture);
}
if(!this.__eventValues){this.__eventValues={};
}
if(capture==null){capture=false;
}var unique=qx.event.Manager.getNextUniqueId();
var id=type+(capture?"|capture|":"|bubble|")+unique;
this.__eventValues[id]={type:type,listener:listener,self:self,capture:capture,unique:unique};
return id;
},removeListener:function(type,listener,self,capture){if(this.$$disposed){return null;
}{var msg="Failed to remove event listener for type '"+type+"'"+" from the target '"+this+"': ";
this.assertString(type,msg+"Invalid event type.");
this.assertFunction(listener,msg+"Invalid callback function");

if(self!==undefined){this.assertObject(self,"Invalid context for callback.");
}
if(capture!==undefined){this.assertBoolean(capture,"Invalid capture flag.");
}};

if(this.__element){qx.event.Registration.removeListener(this.__element,type,listener,self,capture);
}else{var values=this.__eventValues;
var entry;

if(capture==null){capture=false;
}
for(var key in values){entry=values[key];
if(entry.listener===listener&&entry.self===self&&entry.capture===capture&&entry.type===type){delete values[key];
break;
}}}return this;
},removeListenerById:function(id){if(this.$$disposed){return null;
}
if(this.__element){qx.event.Registration.removeListenerById(this.__element,id);
}else{delete this.__eventValues[id];
}return this;
},hasListener:function(type,capture){if(this.$$disposed){return false;
}
if(this.__element){return qx.event.Registration.hasListener(this.__element,type,capture);
}var values=this.__eventValues;
var entry;

if(capture==null){capture=false;
}
for(var key in values){entry=values[key];
if(entry.capture===capture&&entry.type===type){return true;
}}return false;
}},defer:function(statics){statics.__deferredCall=new qx.util.DeferredCall(statics.flush,statics);
},destruct:function(){var el=this.__element;

if(el){qx.event.Registration.getManager(el).removeAllListeners(el);
el.$$element="";
}
if(!qx.core.ObjectRegistry.inShutDown){var parent=this.__parent;

if(parent&&!parent.$$disposed){parent.remove(this);
}}this._disposeArray("__children");
this.__attribValues=this.__styleValues=this.__eventValues=this.__propertyValues=this.__attribJobs=this.__styleJobs=this.__propertyJobs=this.__element=this.__parent=this.__lazyScrollIntoViewX=this.__lazyScrollIntoViewY=null;
}});
qx.Class.define("qx.ui.core.queue.Manager",{statics:{__scheduled:false,__jobs:{},__retries:0,MAX_RETRIES:10,scheduleFlush:function(job){var self=qx.ui.core.queue.Manager;
self.__jobs[job]=true;

if(!self.__scheduled){self.__deferredCall.schedule();
self.__scheduled=true;
}},flush:function(){var self=qx.ui.core.queue.Manager;
if(self.__inFlush){return;
}self.__inFlush=true;
self.__deferredCall.cancel();
var jobs=self.__jobs;
self.__executeAndRescheduleOnError(function(){while(jobs.visibility||jobs.widget||jobs.appearance||jobs.layout||jobs.element){if(jobs.widget){delete jobs.widget;
qx.ui.core.queue.Widget.flush();
}
if(jobs.visibility){delete jobs.visibility;
qx.ui.core.queue.Visibility.flush();
}
if(jobs.appearance){delete jobs.appearance;
qx.ui.core.queue.Appearance.flush();
}if(jobs.widget||jobs.visibility||jobs.appearance){continue;
}
if(jobs.layout){delete jobs.layout;
qx.ui.core.queue.Layout.flush();
}if(jobs.widget||jobs.visibility||jobs.appearance||jobs.layout){continue;
}
if(jobs.element){delete jobs.element;
qx.html.Element.flush();
}}},function(){self.__scheduled=false;
});
self.__executeAndRescheduleOnError(function(){if(jobs.dispose){delete jobs.dispose;
qx.ui.core.queue.Dispose.flush();
}},function(){self.__inFlush=false;
});
self.__retries=0;
},__executeAndRescheduleOnError:function(callback,finallyCode){callback();
finallyCode();
}},defer:function(statics){statics.__deferredCall=new qx.util.DeferredCall(statics.flush);
qx.html.Element._scheduleFlush=statics.scheduleFlush;
qx.event.Registration.addListener(window,"useraction",statics.flush);
}});
qx.Class.define("qx.event.dispatch.AbstractBubbling",{extend:qx.core.Object,implement:qx.event.IEventDispatcher,type:"abstract",construct:function(manager){this._manager=manager;
},members:{_getParent:function(target){throw new Error("Missing implementation");
},canDispatchEvent:function(target,event,type){return event.getBubbles();
},dispatchEvent:function(target,event,type){var parent=target;
var manager=this._manager;
var captureListeners,bubbleListeners;
var localList;
var listener,context;
var currentTarget;
var targetList=[];
captureListeners=manager.getListeners(target,type,true);
bubbleListeners=manager.getListeners(target,type,false);

if(captureListeners){targetList.push(captureListeners);
}
if(bubbleListeners){targetList.push(bubbleListeners);
}var parent=this._getParent(target);
var bubbleList=[];
var bubbleTargets=[];
var captureList=[];
var captureTargets=[];
while(parent!=null){captureListeners=manager.getListeners(parent,type,true);

if(captureListeners){captureList.push(captureListeners);
captureTargets.push(parent);
}bubbleListeners=manager.getListeners(parent,type,false);

if(bubbleListeners){bubbleList.push(bubbleListeners);
bubbleTargets.push(parent);
}parent=this._getParent(parent);
}event.setEventPhase(qx.event.type.Event.CAPTURING_PHASE);

for(var i=captureList.length-1;i>=0;i--){currentTarget=captureTargets[i];
event.setCurrentTarget(currentTarget);
localList=captureList[i];

for(var j=0,jl=localList.length;j<jl;j++){listener=localList[j];
context=listener.context||currentTarget;
listener.handler.call(context,event);
}
if(event.getPropagationStopped()){return;
}}event.setEventPhase(qx.event.type.Event.AT_TARGET);
event.setCurrentTarget(target);

for(var i=0,il=targetList.length;i<il;i++){localList=targetList[i];

for(var j=0,jl=localList.length;j<jl;j++){listener=localList[j];
context=listener.context||target;
listener.handler.call(context,event);
}
if(event.getPropagationStopped()){return;
}}event.setEventPhase(qx.event.type.Event.BUBBLING_PHASE);

for(var i=0,il=bubbleList.length;i<il;i++){currentTarget=bubbleTargets[i];
event.setCurrentTarget(currentTarget);
localList=bubbleList[i];

for(var j=0,jl=localList.length;j<jl;j++){listener=localList[j];
context=listener.context||currentTarget;
listener.handler.call(context,event);
}
if(event.getPropagationStopped()){return;
}}}}});
qx.Class.define("qx.event.dispatch.DomBubbling",{extend:qx.event.dispatch.AbstractBubbling,statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL},members:{_getParent:function(target){return target.parentNode;
},canDispatchEvent:function(target,event,type){return target.nodeType!==undefined&&event.getBubbles();
}},defer:function(statics){qx.event.Registration.addDispatcher(statics);
}});
qx.Class.define("qx.event.handler.Keyboard",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__window=manager.getWindow();
if(qx.core.Variant.isSet("qx.client","gecko")){this.__root=this.__window;
}else{this.__root=this.__window.document.documentElement;
}this.__lastUpDownType={};
this._initKeyObserver();
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{keyup:1,keydown:1,keypress:1,keyinput:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:true,isValidKeyIdentifier:function(keyIdentifier){if(this._identifierToKeyCodeMap[keyIdentifier]){return true;
}
if(keyIdentifier.length!=1){return false;
}
if(keyIdentifier>="0"&&keyIdentifier<="9"){return true;
}
if(keyIdentifier>="A"&&keyIdentifier<="Z"){return true;
}
switch(keyIdentifier){case "+":case "-":case "*":case "/":return true;
default:return false;
}}},members:{__onKeyUpDownWrapper:null,__manager:null,__window:null,__root:null,__lastUpDownType:null,__lastKeyCode:null,__inputListeners:null,__onKeyPressWrapper:null,canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){},_fireInputEvent:function(domEvent,charCode){var target=this.__getEventTarget();
if(target&&target.offsetWidth!=0){var event=qx.event.Registration.createEvent("keyinput",qx.event.type.KeyInput,[domEvent,target,charCode]);
this.__manager.dispatchEvent(target,event);
}if(this.__window){qx.event.Registration.fireEvent(this.__window,"useraction",qx.event.type.Data,["keyinput"]);
}},_fireSequenceEvent:function(domEvent,type,keyIdentifier){var target=this.__getEventTarget();
var keyCode=domEvent.keyCode;
var event=qx.event.Registration.createEvent(type,qx.event.type.KeySequence,[domEvent,target,keyIdentifier]);
this.__manager.dispatchEvent(target,event);
if(qx.core.Variant.isSet("qx.client","mshtml|webkit")){if(type=="keydown"&&event.getDefaultPrevented()){if(!this._isNonPrintableKeyCode(keyCode)&&!this._emulateKeyPress[keyCode]){this._fireSequenceEvent(domEvent,"keypress",keyIdentifier);
}}}if(this.__window){qx.event.Registration.fireEvent(this.__window,"useraction",qx.event.type.Data,[type]);
}},__getEventTarget:function(){var focusHandler=this.__manager.getHandler(qx.event.handler.Focus);
var target=focusHandler.getActive();
if(!target||target.offsetWidth==0){target=focusHandler.getFocus();
}if(!target||target.offsetWidth==0){target=this.__manager.getWindow().document.body;
}return target;
},_initKeyObserver:function(){this.__onKeyUpDownWrapper=qx.lang.Function.listener(this.__onKeyUpDown,this);
this.__onKeyPressWrapper=qx.lang.Function.listener(this.__onKeyPress,this);
var Event=qx.bom.Event;
Event.addNativeListener(this.__root,"keyup",this.__onKeyUpDownWrapper);
Event.addNativeListener(this.__root,"keydown",this.__onKeyUpDownWrapper);
Event.addNativeListener(this.__root,"keypress",this.__onKeyPressWrapper);
},_stopKeyObserver:function(){var Event=qx.bom.Event;
Event.removeNativeListener(this.__root,"keyup",this.__onKeyUpDownWrapper);
Event.removeNativeListener(this.__root,"keydown",this.__onKeyUpDownWrapper);
Event.removeNativeListener(this.__root,"keypress",this.__onKeyPressWrapper);

for(var key in (this.__inputListeners||{})){var listener=this.__inputListeners[key];
Event.removeNativeListener(listener.target,"keypress",listener.callback);
}delete (this.__inputListeners);
},__onKeyUpDown:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(domEvent){domEvent=window.event||domEvent;
var keyCode=domEvent.keyCode;
var charCode=0;
var type=domEvent.type;
if(!(this.__lastUpDownType[keyCode]=="keydown"&&type=="keydown")){this._idealKeyHandler(keyCode,charCode,type,domEvent);
}if(type=="keydown"){if(this._isNonPrintableKeyCode(keyCode)||this._emulateKeyPress[keyCode]){this._idealKeyHandler(keyCode,charCode,"keypress",domEvent);
}}this.__lastUpDownType[keyCode]=type;
},"gecko":function(domEvent){var keyCode=this._keyCodeFix[domEvent.keyCode]||domEvent.keyCode;
var charCode=0;
var type=domEvent.type;
if(qx.bom.client.Platform.WIN){var keyIdentifier=keyCode?this._keyCodeToIdentifier(keyCode):this._charCodeToIdentifier(charCode);

if(!(this.__lastUpDownType[keyIdentifier]=="keydown"&&type=="keydown")){this._idealKeyHandler(keyCode,charCode,type,domEvent);
}this.__lastUpDownType[keyIdentifier]=type;
}else{this._idealKeyHandler(keyCode,charCode,type,domEvent);
}this.__firefoxInputFix(domEvent.target,type,keyCode);
},"webkit":function(domEvent){var keyCode=0;
var charCode=0;
var type=domEvent.type;
if(qx.bom.client.Engine.VERSION<525.13){if(type=="keyup"||type=="keydown"){keyCode=this._charCode2KeyCode[domEvent.charCode]||domEvent.keyCode;
}else{if(this._charCode2KeyCode[domEvent.charCode]){keyCode=this._charCode2KeyCode[domEvent.charCode];
}else{charCode=domEvent.charCode;
}}this._idealKeyHandler(keyCode,charCode,type,domEvent);
}else{keyCode=domEvent.keyCode;
if(!(this.__lastUpDownType[keyCode]=="keydown"&&type=="keydown")){this._idealKeyHandler(keyCode,charCode,type,domEvent);
}if(type=="keydown"){if(this._isNonPrintableKeyCode(keyCode)||this._emulateKeyPress[keyCode]){this._idealKeyHandler(keyCode,charCode,"keypress",domEvent);
}}this.__lastUpDownType[keyCode]=type;
}},"opera":function(domEvent){this.__lastKeyCode=domEvent.keyCode;
this._idealKeyHandler(domEvent.keyCode,0,domEvent.type,domEvent);
}})),__firefoxInputFix:qx.core.Variant.select("qx.client",{"gecko":function(target,type,keyCode){if(type==="keydown"&&(keyCode==33||keyCode==34||keyCode==38||keyCode==40)&&target.type=="text"&&target.tagName.toLowerCase()==="input"&&target.getAttribute("autoComplete")!=="off"){if(!this.__inputListeners){this.__inputListeners={};
}var hash=qx.core.ObjectRegistry.toHashCode(target);

if(this.__inputListeners[hash]){return;
}var self=this;
this.__inputListeners[hash]={target:target,callback:function(domEvent){qx.bom.Event.stopPropagation(domEvent);
self.__onKeyPress(domEvent);
}};
var listener=qx.event.GlobalError.observeMethod(this.__inputListeners[hash].callback);
qx.bom.Event.addNativeListener(target,"keypress",listener);
}},"default":null}),__onKeyPress:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(domEvent){domEvent=window.event||domEvent;

if(this._charCode2KeyCode[domEvent.keyCode]){this._idealKeyHandler(this._charCode2KeyCode[domEvent.keyCode],0,domEvent.type,domEvent);
}else{this._idealKeyHandler(0,domEvent.keyCode,domEvent.type,domEvent);
}},"gecko":function(domEvent){var keyCode=this._keyCodeFix[domEvent.keyCode]||domEvent.keyCode;
var charCode=domEvent.charCode;
var type=domEvent.type;
this._idealKeyHandler(keyCode,charCode,type,domEvent);
},"webkit":function(domEvent){if(qx.bom.client.Engine.VERSION<525.13){var keyCode=0;
var charCode=0;
var type=domEvent.type;

if(type=="keyup"||type=="keydown"){keyCode=this._charCode2KeyCode[domEvent.charCode]||domEvent.keyCode;
}else{if(this._charCode2KeyCode[domEvent.charCode]){keyCode=this._charCode2KeyCode[domEvent.charCode];
}else{charCode=domEvent.charCode;
}}this._idealKeyHandler(keyCode,charCode,type,domEvent);
}else{if(this._charCode2KeyCode[domEvent.keyCode]){this._idealKeyHandler(this._charCode2KeyCode[domEvent.keyCode],0,domEvent.type,domEvent);
}else{this._idealKeyHandler(0,domEvent.keyCode,domEvent.type,domEvent);
}}},"opera":function(domEvent){var keyCode=domEvent.keyCode;
var type=domEvent.type;
if(keyCode!=this.__lastKeyCode){this._idealKeyHandler(0,this.__lastKeyCode,type,domEvent);
}else{if(this._keyCodeToIdentifierMap[domEvent.keyCode]){this._idealKeyHandler(domEvent.keyCode,0,domEvent.type,domEvent);
}else{this._idealKeyHandler(0,domEvent.keyCode,domEvent.type,domEvent);
}}}})),_idealKeyHandler:function(keyCode,charCode,eventType,domEvent){var keyIdentifier;
if(keyCode||(!keyCode&&!charCode)){keyIdentifier=this._keyCodeToIdentifier(keyCode);
this._fireSequenceEvent(domEvent,eventType,keyIdentifier);
}else{keyIdentifier=this._charCodeToIdentifier(charCode);
this._fireSequenceEvent(domEvent,"keypress",keyIdentifier);
this._fireInputEvent(domEvent,charCode);
}},_specialCharCodeMap:{8:"Backspace",9:"Tab",13:"Enter",27:"Escape",32:"Space"},_emulateKeyPress:qx.core.Variant.select("qx.client",{"mshtml":{8:true,9:true},"webkit":{8:true,9:true,27:true},"default":{}}),_keyCodeToIdentifierMap:{16:"Shift",17:"Control",18:"Alt",20:"CapsLock",224:"Meta",37:"Left",38:"Up",39:"Right",40:"Down",33:"PageUp",34:"PageDown",35:"End",36:"Home",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",44:"PrintScreen",145:"Scroll",19:"Pause",91:"Win",93:"Apps"},_numpadToCharCode:{96:"0".charCodeAt(0),97:"1".charCodeAt(0),98:"2".charCodeAt(0),99:"3".charCodeAt(0),100:"4".charCodeAt(0),101:"5".charCodeAt(0),102:"6".charCodeAt(0),103:"7".charCodeAt(0),104:"8".charCodeAt(0),105:"9".charCodeAt(0),106:"*".charCodeAt(0),107:"+".charCodeAt(0),109:"-".charCodeAt(0),110:",".charCodeAt(0),111:"/".charCodeAt(0)},_charCodeA:"A".charCodeAt(0),_charCodeZ:"Z".charCodeAt(0),_charCode0:"0".charCodeAt(0),_charCode9:"9".charCodeAt(0),_isNonPrintableKeyCode:function(keyCode){return this._keyCodeToIdentifierMap[keyCode]?true:false;
},_isIdentifiableKeyCode:function(keyCode){if(keyCode>=this._charCodeA&&keyCode<=this._charCodeZ){return true;
}if(keyCode>=this._charCode0&&keyCode<=this._charCode9){return true;
}if(this._specialCharCodeMap[keyCode]){return true;
}if(this._numpadToCharCode[keyCode]){return true;
}if(this._isNonPrintableKeyCode(keyCode)){return true;
}return false;
},_keyCodeToIdentifier:function(keyCode){if(this._isIdentifiableKeyCode(keyCode)){var numPadKeyCode=this._numpadToCharCode[keyCode];

if(numPadKeyCode){return String.fromCharCode(numPadKeyCode);
}return (this._keyCodeToIdentifierMap[keyCode]||this._specialCharCodeMap[keyCode]||String.fromCharCode(keyCode));
}else{return "Unidentified";
}},_charCodeToIdentifier:function(charCode){return this._specialCharCodeMap[charCode]||String.fromCharCode(charCode).toUpperCase();
},_identifierToKeyCode:function(keyIdentifier){return qx.event.handler.Keyboard._identifierToKeyCodeMap[keyIdentifier]||keyIdentifier.charCodeAt(0);
}},destruct:function(){this._stopKeyObserver();
this.__lastKeyCode=this.__manager=this.__window=this.__root=this.__lastUpDownType=null;
},defer:function(statics,members,properties){qx.event.Registration.addHandler(statics);
if(!statics._identifierToKeyCodeMap){statics._identifierToKeyCodeMap={};

for(var key in members._keyCodeToIdentifierMap){statics._identifierToKeyCodeMap[members._keyCodeToIdentifierMap[key]]=parseInt(key,10);
}
for(var key in members._specialCharCodeMap){statics._identifierToKeyCodeMap[members._specialCharCodeMap[key]]=parseInt(key,10);
}}
if(qx.core.Variant.isSet("qx.client","mshtml")){members._charCode2KeyCode={13:13,27:27};
}else if(qx.core.Variant.isSet("qx.client","gecko")){members._keyCodeFix={12:members._identifierToKeyCode("NumLock")};
}else if(qx.core.Variant.isSet("qx.client","webkit")){if(qx.bom.client.Engine.VERSION<525.13){members._charCode2KeyCode={63289:members._identifierToKeyCode("NumLock"),63276:members._identifierToKeyCode("PageUp"),63277:members._identifierToKeyCode("PageDown"),63275:members._identifierToKeyCode("End"),63273:members._identifierToKeyCode("Home"),63234:members._identifierToKeyCode("Left"),63232:members._identifierToKeyCode("Up"),63235:members._identifierToKeyCode("Right"),63233:members._identifierToKeyCode("Down"),63272:members._identifierToKeyCode("Delete"),63302:members._identifierToKeyCode("Insert"),63236:members._identifierToKeyCode("F1"),63237:members._identifierToKeyCode("F2"),63238:members._identifierToKeyCode("F3"),63239:members._identifierToKeyCode("F4"),63240:members._identifierToKeyCode("F5"),63241:members._identifierToKeyCode("F6"),63242:members._identifierToKeyCode("F7"),63243:members._identifierToKeyCode("F8"),63244:members._identifierToKeyCode("F9"),63245:members._identifierToKeyCode("F10"),63246:members._identifierToKeyCode("F11"),63247:members._identifierToKeyCode("F12"),63248:members._identifierToKeyCode("PrintScreen"),3:members._identifierToKeyCode("Enter"),12:members._identifierToKeyCode("NumLock"),13:members._identifierToKeyCode("Enter")};
}else{members._charCode2KeyCode={13:13,27:27};
}}}});
qx.Class.define("qx.event.handler.Mouse",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__window=manager.getWindow();
this.__root=this.__window.document;
this._initButtonObserver();
this._initMoveObserver();
this._initWheelObserver();
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{mousemove:1,mouseover:1,mouseout:1,mousedown:1,mouseup:1,click:1,dblclick:1,contextmenu:1,mousewheel:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:true},members:{__onButtonEventWrapper:null,__onMoveEventWrapper:null,__onWheelEventWrapper:null,__lastEventType:null,__lastMouseDownTarget:null,__manager:null,__window:null,__root:null,canHandleEvent:function(target,type){},registerEvent:qx.bom.client.System.IPHONE?
function(target,type,capture){target["on"+type]=qx.lang.Function.returnNull;
}:qx.lang.Function.returnNull,unregisterEvent:qx.bom.client.System.IPHONE?
function(target,type,capture){target["on"+type]=undefined;
}:qx.lang.Function.returnNull,__fireEvent:function(domEvent,type,target){if(!target){target=domEvent.target||domEvent.srcElement;
}if(target&&target.nodeType){qx.event.Registration.fireEvent(target,type||domEvent.type,type=="mousewheel"?qx.event.type.MouseWheel:qx.event.type.Mouse,[domEvent,target,null,true,true]);
}qx.event.Registration.fireEvent(this.__window,"useraction",qx.event.type.Data,[type||domEvent.type]);
},_initButtonObserver:function(){this.__onButtonEventWrapper=qx.lang.Function.listener(this._onButtonEvent,this);
var Event=qx.bom.Event;
Event.addNativeListener(this.__root,"mousedown",this.__onButtonEventWrapper);
Event.addNativeListener(this.__root,"mouseup",this.__onButtonEventWrapper);
Event.addNativeListener(this.__root,"click",this.__onButtonEventWrapper);
Event.addNativeListener(this.__root,"dblclick",this.__onButtonEventWrapper);
Event.addNativeListener(this.__root,"contextmenu",this.__onButtonEventWrapper);
},_initMoveObserver:function(){this.__onMoveEventWrapper=qx.lang.Function.listener(this._onMoveEvent,this);
var Event=qx.bom.Event;
Event.addNativeListener(this.__root,"mousemove",this.__onMoveEventWrapper);
Event.addNativeListener(this.__root,"mouseover",this.__onMoveEventWrapper);
Event.addNativeListener(this.__root,"mouseout",this.__onMoveEventWrapper);
},_initWheelObserver:function(){this.__onWheelEventWrapper=qx.lang.Function.listener(this._onWheelEvent,this);
var Event=qx.bom.Event;
var type=qx.core.Variant.isSet("qx.client","mshtml|webkit|opera")?"mousewheel":"DOMMouseScroll";
var target=qx.core.Variant.isSet("qx.client","mshtml")?this.__root:this.__window;
Event.addNativeListener(target,type,this.__onWheelEventWrapper);
},_stopButtonObserver:function(){var Event=qx.bom.Event;
Event.removeNativeListener(this.__root,"mousedown",this.__onButtonEventWrapper);
Event.removeNativeListener(this.__root,"mouseup",this.__onButtonEventWrapper);
Event.removeNativeListener(this.__root,"click",this.__onButtonEventWrapper);
Event.removeNativeListener(this.__root,"dblclick",this.__onButtonEventWrapper);
Event.removeNativeListener(this.__root,"contextmenu",this.__onButtonEventWrapper);
},_stopMoveObserver:function(){var Event=qx.bom.Event;
Event.removeNativeListener(this.__root,"mousemove",this.__onMoveEventWrapper);
Event.removeNativeListener(this.__root,"mouseover",this.__onMoveEventWrapper);
Event.removeNativeListener(this.__root,"mouseout",this.__onMoveEventWrapper);
},_stopWheelObserver:function(){var Event=qx.bom.Event;
var type=qx.core.Variant.isSet("qx.client","mshtml|webkit|opera")?"mousewheel":"DOMMouseScroll";
var target=qx.core.Variant.isSet("qx.client","mshtml")?this.__root:this.__window;
Event.removeNativeListener(target,type,this.__onWheelEventWrapper);
},_onMoveEvent:qx.event.GlobalError.observeMethod(function(domEvent){this.__fireEvent(domEvent);
}),_onButtonEvent:qx.event.GlobalError.observeMethod(function(domEvent){var type=domEvent.type;
var target=domEvent.target||domEvent.srcElement;
if(qx.core.Variant.isSet("qx.client","gecko|webkit")){if(target&&target.nodeType==3){target=target.parentNode;
}}
if(this.__rightClickFixPre){this.__rightClickFixPre(domEvent,type,target);
}
if(this.__doubleClickFixPre){this.__doubleClickFixPre(domEvent,type,target);
}this.__fireEvent(domEvent,type,target);

if(this.__rightClickFixPost){this.__rightClickFixPost(domEvent,type,target);
}
if(this.__differentTargetClickFixPost){this.__differentTargetClickFixPost(domEvent,type,target);
}this.__lastEventType=type;
}),_onWheelEvent:qx.event.GlobalError.observeMethod(function(domEvent){this.__fireEvent(domEvent,"mousewheel");
}),__rightClickFixPre:qx.core.Variant.select("qx.client",{"webkit":function(domEvent,type,target){if(qx.bom.client.Engine.VERSION<530){if(type=="contextmenu"){this.__fireEvent(domEvent,"mouseup",target);
}}},"default":null}),__rightClickFixPost:qx.core.Variant.select("qx.client",{"opera":function(domEvent,type,target){if(type=="mouseup"&&domEvent.button==2){this.__fireEvent(domEvent,"contextmenu",target);
}},"default":null}),__doubleClickFixPre:qx.core.Variant.select("qx.client",{"mshtml":function(domEvent,type,target){if(type=="mouseup"&&this.__lastEventType=="click"){this.__fireEvent(domEvent,"mousedown",target);
}else if(type=="dblclick"){this.__fireEvent(domEvent,"click",target);
}},"default":null}),__differentTargetClickFixPost:qx.core.Variant.select("qx.client",{"mshtml":null,"default":function(domEvent,type,target){switch(type){case "mousedown":this.__lastMouseDownTarget=target;
break;
case "mouseup":if(target!==this.__lastMouseDownTarget){var commonParent=qx.dom.Hierarchy.getCommonParent(target,this.__lastMouseDownTarget);
this.__fireEvent(domEvent,"click",commonParent);
}}}})},destruct:function(){this._stopButtonObserver();
this._stopMoveObserver();
this._stopWheelObserver();
this.__manager=this.__window=this.__root=this.__lastMouseDownTarget=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.event.handler.Capture",{extend:qx.core.Object,implement:qx.event.IEventHandler,statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{capture:true,losecapture:true},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:true},members:{canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){}},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.event.handler.DragDrop",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__root=manager.getWindow().document.documentElement;
this.__manager.addListener(this.__root,"mousedown",this._onMouseDown,this);
this.__rebuildStructures();
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{dragstart:1,dragend:1,dragover:1,dragleave:1,drop:1,drag:1,dragchange:1,droprequest:1},IGNORE_CAN_HANDLE:true},members:{__manager:null,__root:null,__dropTarget:null,__dragTarget:null,__types:null,__actions:null,__keys:null,__cache:null,__currentType:null,__currentAction:null,__sessionActive:false,__startLeft:0,__startTop:0,canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){},addType:function(type){this.__types[type]=true;
},addAction:function(action){this.__actions[action]=true;
},supportsType:function(type){return !!this.__types[type];
},supportsAction:function(type){return !!this.__actions[type];
},getData:function(type){if(!this.__validDrop||!this.__dropTarget){throw new Error("This method must not be used outside the drop event listener!");
}
if(!this.__types[type]){throw new Error("Unsupported data type: "+type+"!");
}
if(!this.__cache[type]){this.__currentType=type;
this.__fireEvent("droprequest",this.__dragTarget,this.__dropTarget,false);
}
if(!this.__cache[type]){throw new Error("Please use a droprequest listener to the drag source to fill the manager with data!");
}return this.__cache[type]||null;
},getCurrentAction:function(){return this.__currentAction;
},addData:function(type,data){this.__cache[type]=data;
},getCurrentType:function(){return this.__currentType;
},isSessionActive:function(){return this.__sessionActive;
},__rebuildStructures:function(){this.__types={};
this.__actions={};
this.__keys={};
this.__cache={};
},__detectAction:function(){if(this.__dragTarget==null){return;
}var actions=this.__actions;
var keys=this.__keys;
var current=null;

if(this.__validDrop){if(keys.Shift&&keys.Ctrl&&actions.alias){current="alias";
}else if(keys.Shift&&keys.Alt&&actions.copy){current="copy";
}else if(keys.Shift&&actions.move){current="move";
}else if(keys.Alt&&actions.alias){current="alias";
}else if(keys.Ctrl&&actions.copy){current="copy";
}else if(actions.move){current="move";
}else if(actions.copy){current="copy";
}else if(actions.alias){current="alias";
}}
if(current!=this.__currentAction){this.__currentAction=current;
this.__fireEvent("dragchange",this.__dragTarget,this.__dropTarget,false);
}},__fireEvent:function(type,target,relatedTarget,cancelable,original){var Registration=qx.event.Registration;
var dragEvent=Registration.createEvent(type,qx.event.type.Drag,[cancelable,original]);

if(target!==relatedTarget){dragEvent.setRelatedTarget(relatedTarget);
}return Registration.dispatchEvent(target,dragEvent);
},__findDraggable:function(elem){while(elem&&elem.nodeType==1){if(elem.getAttribute("qxDraggable")=="on"){return elem;
}elem=elem.parentNode;
}return null;
},__findDroppable:function(elem){while(elem&&elem.nodeType==1){if(elem.getAttribute("qxDroppable")=="on"){return elem;
}elem=elem.parentNode;
}return null;
},__clearInit:function(){this.__dragTarget=null;
this.__manager.removeListener(this.__root,"mousemove",this._onMouseMove,this,true);
this.__manager.removeListener(this.__root,"mouseup",this._onMouseUp,this,true);
qx.event.Registration.removeListener(window,"blur",this._onWindowBlur,this);
this.__rebuildStructures();
},__clearSession:function(){if(this.__sessionActive){this.__manager.removeListener(this.__root,"mouseover",this._onMouseOver,this,true);
this.__manager.removeListener(this.__root,"mouseout",this._onMouseOut,this,true);
this.__manager.removeListener(this.__root,"keydown",this._onKeyDown,this,true);
this.__manager.removeListener(this.__root,"keyup",this._onKeyUp,this,true);
this.__fireEvent("dragend",this.__dragTarget,this.__dropTarget,false);
this.__sessionActive=false;
}this.__validDrop=false;
this.__dropTarget=null;
this.__clearInit();
},__validDrop:false,_onWindowBlur:function(e){this.__clearSession();
},_onKeyDown:function(e){var iden=e.getKeyIdentifier();

switch(iden){case "Alt":case "Ctrl":case "Shift":if(!this.__keys[iden]){this.__keys[iden]=true;
this.__detectAction();
}}},_onKeyUp:function(e){var iden=e.getKeyIdentifier();

switch(iden){case "Alt":case "Ctrl":case "Shift":if(this.__keys[iden]){this.__keys[iden]=false;
this.__detectAction();
}}},_onMouseDown:function(e){if(this.__sessionActive){return;
}var dragable=this.__findDraggable(e.getTarget());

if(dragable){this.__startLeft=e.getDocumentLeft();
this.__startTop=e.getDocumentTop();
this.__dragTarget=dragable;
this.__manager.addListener(this.__root,"mousemove",this._onMouseMove,this,true);
this.__manager.addListener(this.__root,"mouseup",this._onMouseUp,this,true);
qx.event.Registration.addListener(window,"blur",this._onWindowBlur,this);
}},_onMouseUp:function(e){if(this.__validDrop){this.__fireEvent("drop",this.__dropTarget,this.__dragTarget,false,e);
}if(this.__sessionActive){e.stopPropagation();
}this.__clearSession();
},_onMouseMove:function(e){if(this.__sessionActive){if(!this.__fireEvent("drag",this.__dragTarget,this.__dropTarget,true,e)){this.__clearSession();
}}else{if(Math.abs(e.getDocumentLeft()-this.__startLeft)>3||Math.abs(e.getDocumentTop()-this.__startTop)>3){if(this.__fireEvent("dragstart",this.__dragTarget,this.__dropTarget,true,e)){this.__sessionActive=true;
this.__manager.addListener(this.__root,"mouseover",this._onMouseOver,this,true);
this.__manager.addListener(this.__root,"mouseout",this._onMouseOut,this,true);
this.__manager.addListener(this.__root,"keydown",this._onKeyDown,this,true);
this.__manager.addListener(this.__root,"keyup",this._onKeyUp,this,true);
var keys=this.__keys;
keys.Ctrl=e.isCtrlPressed();
keys.Shift=e.isShiftPressed();
keys.Alt=e.isAltPressed();
this.__detectAction();
}else{this.__fireEvent("dragend",this.__dragTarget,this.__dropTarget,false);
this.__clearInit();
}}}},_onMouseOver:function(e){var target=e.getTarget();
var dropable=this.__findDroppable(target);

if(dropable&&dropable!=this.__dropTarget){this.__validDrop=this.__fireEvent("dragover",dropable,this.__dragTarget,true,e);
this.__dropTarget=dropable;
this.__detectAction();
}},_onMouseOut:function(e){var dropable=this.__findDroppable(e.getTarget());
var newDropable=this.__findDroppable(e.getRelatedTarget());

if(dropable&&dropable!==newDropable&&dropable==this.__dropTarget){this.__fireEvent("dragleave",this.__dropTarget,newDropable,false,e);
this.__dropTarget=null;
this.__validDrop=false;
qx.event.Timer.once(this.__detectAction,this,0);
}}},destruct:function(){this.__dragTarget=this.__dropTarget=this.__manager=this.__root=this.__types=this.__actions=this.__keys=this.__cache=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.event.handler.Element",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this._manager=manager;
this._registeredEvents={};
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{abort:true,scroll:true,select:true,reset:true,submit:true},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:true},members:{canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){var elementId=qx.core.ObjectRegistry.toHashCode(target);
var eventId=elementId+"-"+type;
var listener=qx.lang.Function.listener(this._onNative,this,eventId);
qx.bom.Event.addNativeListener(target,type,listener);
this._registeredEvents[eventId]={element:target,type:type,listener:listener};
},unregisterEvent:function(target,type,capture){var events=this._registeredEvents;

if(!events){return;
}var elementId=qx.core.ObjectRegistry.toHashCode(target);
var eventId=elementId+"-"+type;
var eventData=this._registeredEvents[eventId];

if(eventData){qx.bom.Event.removeNativeListener(target,type,eventData.listener);
}delete this._registeredEvents[eventId];
},_onNative:qx.event.GlobalError.observeMethod(function(nativeEvent,eventId){var events=this._registeredEvents;

if(!events){return;
}var eventData=events[eventId];
qx.event.Registration.fireNonBubblingEvent(eventData.element,eventData.type,qx.event.type.Native,[nativeEvent]);
})},destruct:function(){var entry;
var events=this._registeredEvents;

for(var id in events){entry=events[id];
qx.bom.Event.removeNativeListener(entry.element,entry.type,entry.listener);
}this._manager=this._registeredEvents=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.event.handler.Appear",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__targets={};
qx.event.handler.Appear.__instances[this.$$hash]=this;
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{appear:true,disappear:true},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:true,__instances:{},refresh:function(){var all=this.__instances;

for(var hash in all){all[hash].refresh();
}}},members:{__manager:null,__targets:null,canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){var hash=qx.core.ObjectRegistry.toHashCode(target)+type;
var targets=this.__targets;

if(targets&&!targets[hash]){targets[hash]=target;
target.$$displayed=target.offsetWidth>0;
}},unregisterEvent:function(target,type,capture){var hash=qx.core.ObjectRegistry.toHashCode(target)+type;
var targets=this.__targets;

if(!targets){return;
}
if(targets[hash]){delete targets[hash];
}},refresh:function(){var targets=this.__targets;
var elem;

for(var hash in targets){elem=targets[hash];
var displayed=elem.offsetWidth>0;

if((!!elem.$$displayed)!==displayed){elem.$$displayed=displayed;
var evt=qx.event.Registration.createEvent(displayed?"appear":"disappear");
this.__manager.dispatchEvent(elem,evt);
}}}},destruct:function(){this.__manager=this.__targets=null;
delete qx.event.handler.Appear.__instances[this.$$hash];
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.bom.Element",{statics:{__initialAttributes:{"onload":true,"onpropertychange":true,"oninput":true,"onchange":true,"name":true,"type":true,"checked":true,"disabled":true},__helperElement:{},getHelperElement:function(win){if(!win){win=window;
}var key=win.location.href;

if(!qx.bom.Element.__helperElement[key]){var helper=qx.bom.Element.__helperElement[key]=win.document.createElement("div");
if(qx.bom.client.Engine.WEBKIT){helper.style.display="none";
win.document.body.appendChild(helper);
}}return qx.bom.Element.__helperElement[key];
},create:function(name,attributes,win){if(!win){win=window;
}
if(!name){throw new Error("The tag name is missing!");
}var initial=this.__initialAttributes;
var attributesHtml="";

for(var key in attributes){if(initial[key]){attributesHtml+=key+"='"+attributes[key]+"' ";
}}var element;
if(attributesHtml!=""){if(qx.bom.client.Engine.MSHTML){element=win.document.createElement("<"+name+" "+attributesHtml+">");
}else{var helper=qx.bom.Element.getHelperElement(win);
helper.innerHTML="<"+name+" "+attributesHtml+"></"+name+">";
element=helper.firstChild;
}}else{element=win.document.createElement(name);
}
for(var key in attributes){if(!initial[key]){qx.bom.element.Attribute.set(element,key,attributes[key]);
}}return element;
},empty:function(element){return element.innerHTML="";
},addListener:function(element,type,listener,self,capture){return qx.event.Registration.addListener(element,type,listener,self,capture);
},removeListener:function(element,type,listener,self,capture){return qx.event.Registration.removeListener(element,type,listener,self,capture);
},removeListenerById:function(target,id){return qx.event.Registration.removeListenerById(target,id);
},hasListener:function(element,type,capture){return qx.event.Registration.hasListener(element,type,capture);
},focus:function(element){qx.event.Registration.getManager(element).getHandler(qx.event.handler.Focus).focus(element);
},blur:function(element){qx.event.Registration.getManager(element).getHandler(qx.event.handler.Focus).blur(element);
},activate:function(element){qx.event.Registration.getManager(element).getHandler(qx.event.handler.Focus).activate(element);
},deactivate:function(element){qx.event.Registration.getManager(element).getHandler(qx.event.handler.Focus).deactivate(element);
},capture:function(element,containerCapture){qx.event.Registration.getManager(element).getDispatcher(qx.event.dispatch.MouseCapture).activateCapture(element,containerCapture);
},releaseCapture:function(element){qx.event.Registration.getManager(element).getDispatcher(qx.event.dispatch.MouseCapture).releaseCapture(element);
},clone:function(element,events){var clone;

if(events||(qx.core.Variant.isSet("qx.client","mshtml")&&!qx.xml.Document.isXmlDocument(element))){var mgr=qx.event.Registration.getManager(element);
var all=qx.dom.Hierarchy.getDescendants(element);
all.push(element);
}if(qx.core.Variant.isSet("qx.client","mshtml")){for(var i=0,l=all.length;i<l;i++){mgr.toggleAttachedEvents(all[i],false);
}}var clone=element.cloneNode(true);
if(qx.core.Variant.isSet("qx.client","mshtml")){for(var i=0,l=all.length;i<l;i++){mgr.toggleAttachedEvents(all[i],true);
}}if(events===true){var cloneAll=qx.dom.Hierarchy.getDescendants(clone);
cloneAll.push(clone);
var eventList,cloneElem,origElem,eventEntry;

for(var i=0,il=all.length;i<il;i++){origElem=all[i];
eventList=mgr.serializeListeners(origElem);

if(eventList.length>0){cloneElem=cloneAll[i];

for(var j=0,jl=eventList.length;j<jl;j++){eventEntry=eventList[j];
mgr.addListener(cloneElem,eventEntry.type,eventEntry.handler,eventEntry.self,eventEntry.capture);
}}}}return clone;
}}});
qx.Class.define("qx.event.type.Dom",{extend:qx.event.type.Native,statics:{SHIFT_MASK:1,CTRL_MASK:2,ALT_MASK:4,META_MASK:8},members:{_cloneNativeEvent:function(nativeEvent,clone){var clone=this.base(arguments,nativeEvent,clone);
clone.shiftKey=nativeEvent.shiftKey;
clone.ctrlKey=nativeEvent.ctrlKey;
clone.altKey=nativeEvent.altKey;
clone.metaKey=nativeEvent.metaKey;
return clone;
},getModifiers:function(){var mask=0;
var evt=this._native;

if(evt.shiftKey){mask|=qx.event.type.Dom.SHIFT_MASK;
}
if(evt.ctrlKey){mask|=qx.event.type.Dom.CTRL_MASK;
}
if(evt.altKey){mask|=qx.event.type.Dom.ALT_MASK;
}
if(evt.metaKey){mask|=qx.event.type.Dom.META_MASK;
}return mask;
},isCtrlPressed:function(){return this._native.ctrlKey;
},isShiftPressed:function(){return this._native.shiftKey;
},isAltPressed:function(){return this._native.altKey;
},isMetaPressed:function(){return this._native.metaKey;
},isCtrlOrCommandPressed:function(){if(qx.bom.client.Platform.MAC){return this._native.metaKey;
}else{return this._native.ctrlKey;
}}}});
qx.Class.define("qx.event.type.KeyInput",{extend:qx.event.type.Dom,members:{init:function(domEvent,target,charCode){this.base(arguments,domEvent,target,null,true,true);
this._charCode=charCode;
return this;
},clone:function(embryo){var clone=this.base(arguments,embryo);
clone._charCode=this._charCode;
return clone;
},getCharCode:function(){return this._charCode;
},getChar:function(){return String.fromCharCode(this._charCode);
}}});
qx.Class.define("qx.event.type.KeySequence",{extend:qx.event.type.Dom,members:{init:function(domEvent,target,identifier){this.base(arguments,domEvent,target,null,true,true);
this._identifier=identifier;
return this;
},clone:function(embryo){var clone=this.base(arguments,embryo);
clone._identifier=this._identifier;
return clone;
},getKeyIdentifier:function(){return this._identifier;
}}});
qx.Class.define("qx.event.handler.Focus",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this._manager=manager;
this._window=manager.getWindow();
this._document=this._window.document;
this._root=this._document.documentElement;
this._body=this._document.body;
this._initObserver();
},properties:{active:{apply:"_applyActive",nullable:true},focus:{apply:"_applyFocus",nullable:true}},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{focus:1,blur:1,focusin:1,focusout:1,activate:1,deactivate:1},IGNORE_CAN_HANDLE:true,FOCUSABLE_ELEMENTS:qx.core.Variant.select("qx.client",{"mshtml|gecko":{a:1,body:1,button:1,frame:1,iframe:1,img:1,input:1,object:1,select:1,textarea:1},"opera|webkit":{button:1,input:1,select:1,textarea:1}})},members:{__onNativeMouseDownWrapper:null,__onNativeMouseUpWrapper:null,__onNativeFocusWrapper:null,__onNativeBlurWrapper:null,__onNativeDragGestureWrapper:null,__onNativeSelectStartWrapper:null,__onNativeFocusInWrapper:null,__onNativeFocusOutWrapper:null,__previousFocus:null,__previousActive:null,canHandleEvent:function(target,type){},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){},focus:function(element){if(qx.core.Variant.isSet("qx.client","mshtml")){window.setTimeout(function(){try{element.focus();
}catch(ex){}},0);
}else{try{element.focus();
}catch(ex){}}this.setFocus(element);
this.setActive(element);
},activate:function(element){this.setActive(element);
},blur:function(element){try{element.blur();
}catch(ex){}
if(this.getActive()===element){this.resetActive();
}
if(this.getFocus()===element){this.resetFocus();
}},deactivate:function(element){if(this.getActive()===element){this.resetActive();
}},tryActivate:function(element){var active=this.__findActivatableElement(element);

if(active){this.setActive(active);
}},__fireEvent:function(target,related,type,bubbles){var Registration=qx.event.Registration;
var evt=Registration.createEvent(type,qx.event.type.Focus,[target,related,bubbles]);
Registration.dispatchEvent(target,evt);
},_windowFocused:true,__doWindowBlur:function(){if(this._windowFocused){this._windowFocused=false;
this.__fireEvent(this._window,null,"blur",false);
}},__doWindowFocus:function(){if(!this._windowFocused){this._windowFocused=true;
this.__fireEvent(this._window,null,"focus",false);
}},_initObserver:qx.core.Variant.select("qx.client",{"gecko":function(){this.__onNativeMouseDownWrapper=qx.lang.Function.listener(this.__onNativeMouseDown,this);
this.__onNativeMouseUpWrapper=qx.lang.Function.listener(this.__onNativeMouseUp,this);
this.__onNativeFocusWrapper=qx.lang.Function.listener(this.__onNativeFocus,this);
this.__onNativeBlurWrapper=qx.lang.Function.listener(this.__onNativeBlur,this);
this.__onNativeDragGestureWrapper=qx.lang.Function.listener(this.__onNativeDragGesture,this);
this._document.addEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._document.addEventListener("mouseup",this.__onNativeMouseUpWrapper,true);
this._window.addEventListener("focus",this.__onNativeFocusWrapper,true);
this._window.addEventListener("blur",this.__onNativeBlurWrapper,true);
this._window.addEventListener("draggesture",this.__onNativeDragGestureWrapper,true);
},"mshtml":function(){this.__onNativeMouseDownWrapper=qx.lang.Function.listener(this.__onNativeMouseDown,this);
this.__onNativeMouseUpWrapper=qx.lang.Function.listener(this.__onNativeMouseUp,this);
this.__onNativeFocusInWrapper=qx.lang.Function.listener(this.__onNativeFocusIn,this);
this.__onNativeFocusOutWrapper=qx.lang.Function.listener(this.__onNativeFocusOut,this);
this.__onNativeSelectStartWrapper=qx.lang.Function.listener(this.__onNativeSelectStart,this);
this._document.attachEvent("onmousedown",this.__onNativeMouseDownWrapper);
this._document.attachEvent("onmouseup",this.__onNativeMouseUpWrapper);
this._document.attachEvent("onfocusin",this.__onNativeFocusInWrapper);
this._document.attachEvent("onfocusout",this.__onNativeFocusOutWrapper);
this._document.attachEvent("onselectstart",this.__onNativeSelectStartWrapper);
},"webkit":function(){this.__onNativeMouseDownWrapper=qx.lang.Function.listener(this.__onNativeMouseDown,this);
this.__onNativeMouseUpWrapper=qx.lang.Function.listener(this.__onNativeMouseUp,this);
this.__onNativeFocusOutWrapper=qx.lang.Function.listener(this.__onNativeFocusOut,this);
this.__onNativeFocusWrapper=qx.lang.Function.listener(this.__onNativeFocus,this);
this.__onNativeBlurWrapper=qx.lang.Function.listener(this.__onNativeBlur,this);
this.__onNativeSelectStartWrapper=qx.lang.Function.listener(this.__onNativeSelectStart,this);
this._document.addEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._document.addEventListener("mouseup",this.__onNativeMouseUpWrapper,true);
this._document.addEventListener("selectstart",this.__onNativeSelectStartWrapper,false);
this._window.addEventListener("DOMFocusOut",this.__onNativeFocusOutWrapper,true);
this._window.addEventListener("focus",this.__onNativeFocusWrapper,true);
this._window.addEventListener("blur",this.__onNativeBlurWrapper,true);
},"opera":function(){this.__onNativeMouseDownWrapper=qx.lang.Function.listener(this.__onNativeMouseDown,this);
this.__onNativeMouseUpWrapper=qx.lang.Function.listener(this.__onNativeMouseUp,this);
this.__onNativeFocusInWrapper=qx.lang.Function.listener(this.__onNativeFocusIn,this);
this.__onNativeFocusOutWrapper=qx.lang.Function.listener(this.__onNativeFocusOut,this);
this._document.addEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._document.addEventListener("mouseup",this.__onNativeMouseUpWrapper,true);
this._window.addEventListener("DOMFocusIn",this.__onNativeFocusInWrapper,true);
this._window.addEventListener("DOMFocusOut",this.__onNativeFocusOutWrapper,true);
}}),_stopObserver:qx.core.Variant.select("qx.client",{"gecko":function(){this._document.removeEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._document.removeEventListener("mouseup",this.__onNativeMouseUpWrapper,true);
this._window.removeEventListener("focus",this.__onNativeFocusWrapper,true);
this._window.removeEventListener("blur",this.__onNativeBlurWrapper,true);
this._window.removeEventListener("draggesture",this.__onNativeDragGestureWrapper,true);
},"mshtml":function(){qx.bom.Event.removeNativeListener(this._document,"onmousedown",this.__onNativeMouseDownWrapper);
qx.bom.Event.removeNativeListener(this._document,"onmouseup",this.__onNativeMouseUpWrapper);
qx.bom.Event.removeNativeListener(this._document,"onfocusin",this.__onNativeFocusInWrapper);
qx.bom.Event.removeNativeListener(this._document,"onfocusout",this.__onNativeFocusOutWrapper);
qx.bom.Event.removeNativeListener(this._document,"onselectstart",this.__onNativeSelectStartWrapper);
},"webkit":function(){this._document.removeEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._document.removeEventListener("selectstart",this.__onNativeSelectStartWrapper,false);
this._window.removeEventListener("DOMFocusIn",this.__onNativeFocusInWrapper,true);
this._window.removeEventListener("DOMFocusOut",this.__onNativeFocusOutWrapper,true);
this._window.removeEventListener("focus",this.__onNativeFocusWrapper,true);
this._window.removeEventListener("blur",this.__onNativeBlurWrapper,true);
},"opera":function(){this._document.removeEventListener("mousedown",this.__onNativeMouseDownWrapper,true);
this._window.removeEventListener("DOMFocusIn",this.__onNativeFocusInWrapper,true);
this._window.removeEventListener("DOMFocusOut",this.__onNativeFocusOutWrapper,true);
this._window.removeEventListener("focus",this.__onNativeFocusWrapper,true);
this._window.removeEventListener("blur",this.__onNativeBlurWrapper,true);
}}),__onNativeDragGesture:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"gecko":function(e){if(!this.__isSelectable(e.target)){qx.bom.Event.preventDefault(e);
}},"default":null})),__onNativeFocusIn:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(e){this.__doWindowFocus();
var target=e.srcElement;
var focusTarget=this.__findFocusableElement(target);

if(focusTarget){this.setFocus(focusTarget);
}this.tryActivate(target);
},"opera":function(e){var target=e.target;

if(target==this._document||target==this._window){this.__doWindowFocus();

if(this.__previousFocus){this.setFocus(this.__previousFocus);
delete this.__previousFocus;
}
if(this.__previousActive){this.setActive(this.__previousActive);
delete this.__previousActive;
}}else{this.setFocus(target);
this.tryActivate(target);
if(!this.__isSelectable(target)){target.selectionStart=0;
target.selectionEnd=0;
}}},"default":null})),__onNativeFocusOut:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(e){if(!e.toElement){this.__doWindowBlur();
this.resetFocus();
this.resetActive();
}},"webkit":function(e){var target=e.target;

if(target===this.getFocus()){this.resetFocus();
}
if(target===this.getActive()){this.resetActive();
}},"opera":function(e){var target=e.target;

if(target==this._document){this.__doWindowBlur();
this.__previousFocus=this.getFocus();
this.__previousActive=this.getActive();
this.resetFocus();
this.resetActive();
}else{if(target===this.getFocus()){this.resetFocus();
}
if(target===this.getActive()){this.resetActive();
}}},"default":null})),__onNativeBlur:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"gecko":function(e){if(e.target===this._window||e.target===this._document){this.__doWindowBlur();
this.resetActive();
this.resetFocus();
}},"webkit":function(e){if(e.target===this._window||e.target===this._document){this.__doWindowBlur();
this.__previousFocus=this.getFocus();
this.__previousActive=this.getActive();
this.resetActive();
this.resetFocus();
}},"default":null})),__onNativeFocus:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"gecko":function(e){var target=e.target;

if(target===this._window||target===this._document){this.__doWindowFocus();
target=this._body;
}this.setFocus(target);
this.tryActivate(target);
},"webkit":function(e){var target=e.target;

if(target===this._window||target===this._document){this.__doWindowFocus();

if(this.__previousFocus){this.setFocus(this.__previousFocus);
delete this.__previousFocus;
}
if(this.__previousActive){this.setActive(this.__previousActive);
delete this.__previousActive;
}}else{this.setFocus(target);
this.tryActivate(target);
}},"default":null})),__onNativeMouseDown:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"gecko":function(e){var focusTarget=this.__findFocusableElement(e.target);

if(!focusTarget){qx.bom.Event.preventDefault(e);
}},"mshtml":function(e){var target=e.srcElement;
var focusTarget=this.__findFocusableElement(target);

if(focusTarget){if(!this.__isSelectable(target)){target.unselectable="on";
try{document.selection.empty();
}catch(e){}try{focusTarget.focus();
}catch(e){}}}else{qx.bom.Event.preventDefault(e);
if(!this.__isSelectable(target)){target.unselectable="on";
}}},"webkit":function(e){var target=e.target;
var focusTarget=this.__findFocusableElement(target);

if(focusTarget){this.setFocus(focusTarget);
}else{qx.bom.Event.preventDefault(e);
}},"opera":function(e){var target=e.target;
var focusTarget=this.__findFocusableElement(target);

if(!this.__isSelectable(target)){qx.bom.Event.preventDefault(e);
if(focusTarget){var current=this.getFocus();

if(current&&current.selectionEnd){current.selectionStart=0;
current.selectionEnd=0;
current.blur();
}if(focusTarget){this.setFocus(focusTarget);
}}}else if(focusTarget){this.setFocus(focusTarget);
}},"default":null})),__onNativeMouseUp:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(e){var target=e.srcElement;

if(target.unselectable){target.unselectable="off";
}this.tryActivate(this.__fixFocus(target));
},"gecko":function(e){var target=e.target;

while(target&&target.offsetWidth===undefined){target=target.parentNode;
}
if(target){this.tryActivate(target);
}},"webkit|opera":function(e){this.tryActivate(this.__fixFocus(e.target));
},"default":null})),__fixFocus:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml|webkit":function(target){var focusedElement=this.getFocus();

if(focusedElement&&target!=focusedElement&&(focusedElement.nodeName.toLowerCase()==="input"||focusedElement.nodeName.toLowerCase()==="textarea")){target=focusedElement;
}return target;
},"default":function(target){return target;
}})),__onNativeSelectStart:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml|webkit":function(e){var target=qx.bom.client.Engine.MSHTML?e.srcElement:e.target;

if(!this.__isSelectable(target)){qx.bom.Event.preventDefault(e);
}},"default":null})),__isFocusable:function(el){var index=qx.bom.element.Attribute.get(el,"tabIndex");

if(index>=1){return true;
}var focusable=qx.event.handler.Focus.FOCUSABLE_ELEMENTS;

if(index>=0&&focusable[el.tagName]){return true;
}return false;
},__findFocusableElement:function(el){while(el&&el.nodeType===1){if(el.getAttribute("qxKeepFocus")=="on"){return null;
}
if(this.__isFocusable(el)){return el;
}el=el.parentNode;
}return this._body;
},__findActivatableElement:function(el){var orig=el;

while(el&&el.nodeType===1){if(el.getAttribute("qxKeepActive")=="on"){return null;
}el=el.parentNode;
}return orig;
},__isSelectable:function(node){while(node&&node.nodeType===1){var attr=node.getAttribute("qxSelectable");

if(attr!=null){return attr==="on";
}node=node.parentNode;
}return true;
},_applyActive:function(value,old){if(old){this.__fireEvent(old,value,"deactivate",true);
}
if(value){this.__fireEvent(value,old,"activate",true);
}},_applyFocus:function(value,old){if(old){this.__fireEvent(old,value,"focusout",true);
}
if(value){this.__fireEvent(value,old,"focusin",true);
}if(old){this.__fireEvent(old,value,"blur",false);
}
if(value){this.__fireEvent(value,old,"focus",false);
}}},destruct:function(){this._stopObserver();
this._manager=this._window=this._document=this._root=this._body=this.__mouseActive=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
var focusable=statics.FOCUSABLE_ELEMENTS;

for(var entry in focusable){focusable[entry.toUpperCase()]=1;
}}});
qx.Class.define("qx.event.type.Focus",{extend:qx.event.type.Event,members:{init:function(target,relatedTarget,canBubble){this.base(arguments,canBubble,false);
this._target=target;
this._relatedTarget=relatedTarget;
return this;
}}});
qx.Class.define("qx.bom.element.Attribute",{statics:{__hints:{names:{"class":"className","for":"htmlFor",html:"innerHTML",text:qx.core.Variant.isSet("qx.client","mshtml")?"innerText":"textContent",colspan:"colSpan",rowspan:"rowSpan",valign:"vAlign",datetime:"dateTime",accesskey:"accessKey",tabindex:"tabIndex",maxlength:"maxLength",readonly:"readOnly",longdesc:"longDesc",cellpadding:"cellPadding",cellspacing:"cellSpacing",frameborder:"frameBorder",usemap:"useMap"},runtime:{"html":1,"text":1},bools:{compact:1,nowrap:1,ismap:1,declare:1,noshade:1,checked:1,disabled:1,readOnly:1,multiple:1,selected:1,noresize:1,defer:1,allowTransparency:1},property:{$$html:1,$$widget:1,disabled:1,checked:1,readOnly:1,multiple:1,selected:1,value:1,maxLength:1,className:1,innerHTML:1,innerText:1,textContent:1,htmlFor:1,tabIndex:1},qxProperties:{$$widget:1,$$html:1},propertyDefault:{disabled:false,checked:false,readOnly:false,multiple:false,selected:false,value:"",className:"",innerHTML:"",innerText:"",textContent:"",htmlFor:"",tabIndex:0,maxLength:qx.core.Variant.select("qx.client",{"mshtml":2147483647,"webkit":524288,"default":-1})},removeableProperties:{disabled:1,multiple:1,maxLength:1},original:{href:1,src:1,type:1}},compile:function(map){var html=[];
var runtime=this.__hints.runtime;

for(var key in map){if(!runtime[key]){html.push(key,"='",map[key],"'");
}}return html.join("");
},get:qx.core.Variant.select("qx.client",{"mshtml":function(element,name){var hints=this.__hints;
var value;
name=hints.names[name]||name;
if(hints.original[name]){value=element.getAttribute(name,2);
}else if(hints.property[name]){value=element[name];

if(typeof hints.propertyDefault[name]!=="undefined"&&value==hints.propertyDefault[name]){if(typeof hints.bools[name]==="undefined"){return null;
}else{return value;
}}}else{value=element.getAttribute(name);
}if(hints.bools[name]){return !!value;
}return value;
},"default":function(element,name){var hints=this.__hints;
var value;
name=hints.names[name]||name;
if(hints.property[name]){value=element[name];

if(typeof hints.propertyDefault[name]!=="undefined"&&value==hints.propertyDefault[name]){if(typeof hints.bools[name]==="undefined"){return null;
}else{return value;
}}}else{value=element.getAttribute(name);
}if(hints.bools[name]){return !!value;
}return value;
}}),set:function(element,name,value){var hints=this.__hints;
name=hints.names[name]||name;
if(hints.bools[name]){value=!!value;
}if(hints.property[name]&&(!(element[name]===undefined)||hints.qxProperties[name])){if(value==null){if(hints.removeableProperties[name]){element.removeAttribute(name);
return;
}else if(typeof hints.propertyDefault[name]!=="undefined"){value=hints.propertyDefault[name];
}}element[name]=value;
}else{if(value===true){element.setAttribute(name,name);
}else if(value===false||value===null){element.removeAttribute(name);
}else{element.setAttribute(name,value);
}}},reset:function(element,name){this.set(element,name,null);
}}});
qx.Class.define("qx.event.type.Mouse",{extend:qx.event.type.Dom,members:{init:function(nativeEvent,target,relatedTarget,canBubble,cancelable){this.base(arguments,nativeEvent,target,relatedTarget,canBubble,cancelable);

if(!relatedTarget){this._relatedTarget=qx.bom.Event.getRelatedTarget(nativeEvent);
}return this;
},_cloneNativeEvent:function(nativeEvent,clone){var clone=this.base(arguments,nativeEvent,clone);
clone.button=nativeEvent.button;
clone.clientX=nativeEvent.clientX;
clone.clientY=nativeEvent.clientY;
clone.pageX=nativeEvent.pageX;
clone.pageY=nativeEvent.pageY;
clone.screenX=nativeEvent.screenX;
clone.screenY=nativeEvent.screenY;
clone.wheelDelta=nativeEvent.wheelDelta;
clone.detail=nativeEvent.detail;
clone.srcElement=nativeEvent.srcElement;
return clone;
},__buttons:qx.core.Variant.select("qx.client",{"mshtml":{1:"left",2:"right",4:"middle"},"default":{0:"left",2:"right",1:"middle"}}),stop:function(){this.stopPropagation();
},getButton:function(){switch(this._type){case "click":case "dblclick":return "left";
case "contextmenu":return "right";
default:return this.__buttons[this._native.button]||"none";
}},isLeftPressed:function(){return this.getButton()==="left";
},isMiddlePressed:function(){return this.getButton()==="middle";
},isRightPressed:function(){return this.getButton()==="right";
},getRelatedTarget:function(){return this._relatedTarget;
},getViewportLeft:function(){return this._native.clientX;
},getViewportTop:function(){return this._native.clientY;
},getDocumentLeft:qx.core.Variant.select("qx.client",{"mshtml":function(){var win=qx.dom.Node.getWindow(this._native.srcElement);
return this._native.clientX+qx.bom.Viewport.getScrollLeft(win);
},"default":function(){return this._native.pageX;
}}),getDocumentTop:qx.core.Variant.select("qx.client",{"mshtml":function(){var win=qx.dom.Node.getWindow(this._native.srcElement);
return this._native.clientY+qx.bom.Viewport.getScrollTop(win);
},"default":function(){return this._native.pageY;
}}),getScreenLeft:function(){return this._native.screenX;
},getScreenTop:function(){return this._native.screenY;
}}});
qx.Class.define("qx.event.type.MouseWheel",{extend:qx.event.type.Mouse,members:{stop:function(){this.stopPropagation();
this.preventDefault();
},getWheelDelta:qx.core.Variant.select("qx.client",{"default":function(){return -(this._native.wheelDelta/40);
},"gecko":function(){return this._native.detail;
},"webkit":function(){if(qx.bom.client.Browser.NAME=="chrome"){return -(this._native.wheelDelta/120);
}else{return -(this._native.wheelDelta/40);
}}})}});
qx.Class.define("qx.bom.Viewport",{statics:{getWidth:qx.core.Variant.select("qx.client",{"opera":function(win){if(qx.bom.client.Engine.VERSION<9.5){return (win||window).document.body.clientWidth;
}else{var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientWidth:doc.body.clientWidth;
}},"webkit":function(win){if(qx.bom.client.Engine.VERSION<523.15){return (win||window).innerWidth;
}else{var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientWidth:doc.body.clientWidth;
}},"default":function(win){var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientWidth:doc.body.clientWidth;
}}),getHeight:qx.core.Variant.select("qx.client",{"opera":function(win){if(qx.bom.client.Engine.VERSION<9.5){return (win||window).document.body.clientHeight;
}else{var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientHeight:doc.body.clientHeight;
}},"webkit":function(win){if(qx.bom.client.Engine.VERSION<523.15){return (win||window).innerHeight;
}else{var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientHeight:doc.body.clientHeight;
}},"default":function(win){var doc=(win||window).document;
return qx.bom.Document.isStandardMode(win)?doc.documentElement.clientHeight:doc.body.clientHeight;
}}),getScrollLeft:qx.core.Variant.select("qx.client",{"mshtml":function(win){var doc=(win||window).document;
return doc.documentElement.scrollLeft||doc.body.scrollLeft;
},"default":function(win){return (win||window).pageXOffset;
}}),getScrollTop:qx.core.Variant.select("qx.client",{"mshtml":function(win){var doc=(win||window).document;
return doc.documentElement.scrollTop||doc.body.scrollTop;
},"default":function(win){return (win||window).pageYOffset;
}})}});
qx.Class.define("qx.bom.Document",{statics:{isQuirksMode:qx.core.Variant.select("qx.client",{"mshtml":function(win){if(qx.bom.client.Engine.VERSION>=8){return qx.bom.client.Engine.DOCUMENT_MODE===5;
}else{return (win||window).document.compatMode!=="CSS1Compat";
}},"webkit":function(win){if(document.compatMode===undefined){var el=(win||window).document.createElement("div");
el.style.cssText="position:absolute;width:0;height:0;width:1";
return el.style.width==="1px"?true:false;
}else{return (win||window).document.compatMode!=="CSS1Compat";
}},"default":function(win){return (win||window).document.compatMode!=="CSS1Compat";
}}),isStandardMode:function(win){return !this.isQuirksMode(win);
},getWidth:function(win){var doc=(win||window).document;
var view=qx.bom.Viewport.getWidth(win);
var scroll=this.isStandardMode(win)?doc.documentElement.scrollWidth:doc.body.scrollWidth;
return Math.max(scroll,view);
},getHeight:function(win){var doc=(win||window).document;
var view=qx.bom.Viewport.getHeight(win);
var scroll=this.isStandardMode(win)?doc.documentElement.scrollHeight:doc.body.scrollHeight;
return Math.max(scroll,view);
}}});
qx.Bootstrap.define("qx.bom.client.Browser",{statics:{UNKNOWN:true,NAME:"unknown",TITLE:"unknown 0.0",VERSION:0.0,FULLVERSION:"0.0.0",__detect:function(agents){var current=navigator.userAgent;
var reg=new RegExp("("+agents+")(/| )([0-9]+\.[0-9])");
var match=current.match(reg);

if(!match){return;
}var name=match[1].toLowerCase();
var version=match[3];
if(current.match(/Version(\/| )([0-9]+\.[0-9])/)){version=RegExp.$2;
}
if(qx.core.Variant.isSet("qx.client","webkit")){if(name==="android"){name="mobile chrome";
}else if(current.indexOf("Mobile Safari")!==-1||current.indexOf("Mobile/")!==-1){name="mobile safari";
}}else if(qx.core.Variant.isSet("qx.client","mshtml")){if(name==="msie"){name="ie";
if(qx.bom.client.System.WINCE&&name==="ie"){name="iemobile";
version="5.0";
}}}else if(qx.core.Variant.isSet("qx.client","opera")){if(name==="opera mobi"){name="operamobile";
}else if(name==="opera mini"){name="operamini";
}}this.NAME=name;
this.FULLVERSION=version;
this.VERSION=parseFloat(version,10);
this.TITLE=name+" "+this.VERSION;
this.UNKNOWN=false;
}},defer:qx.core.Variant.select("qx.client",{"webkit":function(statics){statics.__detect("AdobeAIR|Titanium|Fluid|Chrome|Android|Epiphany|Konqueror|iCab|OmniWeb|Maxthon|Pre|Mobile Safari|Safari");
},"gecko":function(statics){statics.__detect("prism|Fennec|Camino|Kmeleon|Galeon|Netscape|SeaMonkey|Firefox");
},"mshtml":function(statics){statics.__detect("IEMobile|Maxthon|MSIE");
},"opera":function(statics){statics.__detect("Opera Mini|Opera Mobi|Opera");
}})});
qx.Class.define("qx.dom.Hierarchy",{statics:{getNodeIndex:function(node){var index=0;

while(node&&(node=node.previousSibling)){index++;
}return index;
},getElementIndex:function(element){var index=0;
var type=qx.dom.Node.ELEMENT;

while(element&&(element=element.previousSibling)){if(element.nodeType==type){index++;
}}return index;
},getNextElementSibling:function(element){while(element&&(element=element.nextSibling)&&!qx.dom.Node.isElement(element)){continue;
}return element||null;
},getPreviousElementSibling:function(element){while(element&&(element=element.previousSibling)&&!qx.dom.Node.isElement(element)){continue;
}return element||null;
},contains:qx.core.Variant.select("qx.client",{"webkit|mshtml|opera":function(element,target){if(qx.dom.Node.isDocument(element)){var doc=qx.dom.Node.getDocument(target);
return element&&doc==element;
}else if(qx.dom.Node.isDocument(target)){return false;
}else{return element.contains(target);
}},"gecko":function(element,target){return !!(element.compareDocumentPosition(target)&16);
},"default":function(element,target){while(target){if(element==target){return true;
}target=target.parentNode;
}return false;
}}),isRendered:function(element){if(!element.offsetParent){return false;
}var doc=element.ownerDocument||element.document;
if(doc.body.contains){return doc.body.contains(element);
}if(doc.compareDocumentPosition){return !!(doc.compareDocumentPosition(element)&16);
}throw new Error("Missing support for isRendered()!");
},isDescendantOf:function(element,ancestor){return this.contains(ancestor,element);
},getCommonParent:qx.core.Variant.select("qx.client",{"mshtml|opera":function(element1,element2){if(element1===element2){return element1;
}
while(element1&&qx.dom.Node.isElement(element1)){if(element1.contains(element2)){return element1;
}element1=element1.parentNode;
}return null;
},"default":function(element1,element2){if(element1===element2){return element1;
}var known={};
var obj=qx.core.ObjectRegistry;
var h1,h2;

while(element1||element2){if(element1){h1=obj.toHashCode(element1);

if(known[h1]){return known[h1];
}known[h1]=element1;
element1=element1.parentNode;
}
if(element2){h2=obj.toHashCode(element2);

if(known[h2]){return known[h2];
}known[h2]=element2;
element2=element2.parentNode;
}}return null;
}}),getAncestors:function(element){return this._recursivelyCollect(element,"parentNode");
},getChildElements:function(element){element=element.firstChild;

if(!element){return [];
}var arr=this.getNextSiblings(element);

if(element.nodeType===1){arr.unshift(element);
}return arr;
},getDescendants:function(element){return qx.lang.Array.fromCollection(element.getElementsByTagName("*"));
},getFirstDescendant:function(element){element=element.firstChild;

while(element&&element.nodeType!=1){element=element.nextSibling;
}return element;
},getLastDescendant:function(element){element=element.lastChild;

while(element&&element.nodeType!=1){element=element.previousSibling;
}return element;
},getPreviousSiblings:function(element){return this._recursivelyCollect(element,"previousSibling");
},getNextSiblings:function(element){return this._recursivelyCollect(element,"nextSibling");
},_recursivelyCollect:function(element,property){var list=[];

while(element=element[property]){if(element.nodeType==1){list.push(element);
}}return list;
},getSiblings:function(element){return this.getPreviousSiblings(element).reverse().concat(this.getNextSiblings(element));
},isEmpty:function(element){element=element.firstChild;

while(element){if(element.nodeType===qx.dom.Node.ELEMENT||element.nodeType===qx.dom.Node.TEXT){return false;
}element=element.nextSibling;
}return true;
},cleanWhitespace:function(element){var node=element.firstChild;

while(node){var nextNode=node.nextSibling;

if(node.nodeType==3&&!/\S/.test(node.nodeValue)){element.removeChild(node);
}node=nextNode;
}}}});
qx.Class.define("qx.event.type.Drag",{extend:qx.event.type.Event,members:{init:function(cancelable,originalEvent){this.base(arguments,true,cancelable);

if(originalEvent){this._native=originalEvent.getNativeEvent()||null;
this._originalTarget=originalEvent.getTarget()||null;
}else{this._native=null;
this._originalTarget=null;
}return this;
},clone:function(embryo){var clone=this.base(arguments,embryo);
clone._native=this._native;
return clone;
},getDocumentLeft:qx.core.Variant.select("qx.client",{"mshtml":function(){if(this._native==null){return 0;
}var win=qx.dom.Node.getWindow(this._native.srcElement);
return this._native.clientX+qx.bom.Viewport.getScrollLeft(win);
},"default":function(){if(this._native==null){return 0;
}return this._native.pageX;
}}),getDocumentTop:qx.core.Variant.select("qx.client",{"mshtml":function(){if(this._native==null){return 0;
}var win=qx.dom.Node.getWindow(this._native.srcElement);
return this._native.clientY+qx.bom.Viewport.getScrollTop(win);
},"default":function(){if(this._native==null){return 0;
}return this._native.pageY;
}}),getManager:function(){return qx.event.Registration.getManager(this.getTarget()).getHandler(qx.event.handler.DragDrop);
},addType:function(type){this.getManager().addType(type);
},addAction:function(action){this.getManager().addAction(action);
},supportsType:function(type){return this.getManager().supportsType(type);
},supportsAction:function(action){return this.getManager().supportsAction(action);
},addData:function(type,data){this.getManager().addData(type,data);
},getData:function(type){return this.getManager().getData(type);
},getCurrentType:function(){return this.getManager().getCurrentType();
},getCurrentAction:function(){return this.getManager().getCurrentAction();
}}});
qx.Class.define("qx.event.dispatch.MouseCapture",{extend:qx.event.dispatch.AbstractBubbling,construct:function(manager,registration){this.base(arguments,manager);
this.__window=manager.getWindow();
this.__registration=registration;
manager.addListener(this.__window,"blur",this.releaseCapture,this);
manager.addListener(this.__window,"focus",this.releaseCapture,this);
manager.addListener(this.__window,"scroll",this.releaseCapture,this);
},statics:{PRIORITY:qx.event.Registration.PRIORITY_FIRST},members:{__registration:null,__captureElement:null,__containerCapture:true,__window:null,_getParent:function(target){return target.parentNode;
},canDispatchEvent:function(target,event,type){return (this.__captureElement&&this.__captureEvents[type]);
},dispatchEvent:function(target,event,type){if(type=="click"){event.stopPropagation();
this.releaseCapture();
return;
}
if(this.__containerCapture||!qx.dom.Hierarchy.contains(this.__captureElement,target)){target=this.__captureElement;
}this.base(arguments,target,event,type);
},__captureEvents:{"mouseup":1,"mousedown":1,"click":1,"dblclick":1,"mousemove":1,"mouseout":1,"mouseover":1},activateCapture:function(element,containerCapture){var containerCapture=containerCapture!==false;

if(this.__captureElement===element&&this.__containerCapture==containerCapture){return;
}
if(this.__captureElement){this.releaseCapture();
}this.nativeSetCapture(element,containerCapture);

if(this.hasNativeCapture){var self=this;
qx.bom.Event.addNativeListener(element,"losecapture",function(){qx.bom.Event.removeNativeListener(element,"losecapture",arguments.callee);
self.releaseCapture();
});
}this.__containerCapture=containerCapture;
this.__captureElement=element;
this.__registration.fireEvent(element,"capture",qx.event.type.Event,[true,false]);
},getCaptureElement:function(){return this.__captureElement;
},releaseCapture:function(){var element=this.__captureElement;

if(!element){return;
}this.__captureElement=null;
this.__registration.fireEvent(element,"losecapture",qx.event.type.Event,[true,false]);
this.nativeReleaseCapture(element);
},hasNativeCapture:qx.bom.client.Engine.MSHTML,nativeSetCapture:qx.core.Variant.select("qx.client",{"mshtml":function(element,containerCapture){element.setCapture(containerCapture!==false);
},"default":qx.lang.Function.empty}),nativeReleaseCapture:qx.core.Variant.select("qx.client",{"mshtml":function(element){element.releaseCapture();
},"default":qx.lang.Function.empty})},destruct:function(){this.__captureElement=this.__window=this.__registration=null;
},defer:function(statics){qx.event.Registration.addDispatcher(statics);
}});
qx.Class.define("qx.xml.Document",{statics:{DOMDOC:null,XMLHTTP:null,isXmlDocument:function(elem){if(elem.nodeType===9){return elem.documentElement.nodeName!=="HTML";
}else if(elem.ownerDocument){return this.isXmlDocument(elem.ownerDocument);
}else{return false;
}},create:qx.core.Variant.select("qx.client",{"mshtml":function(namespaceUri,qualifiedName){var obj=new ActiveXObject(this.DOMDOC);
obj.setProperty("SelectionLanguage","XPath");

if(qualifiedName){var str='<\?xml version="1.0" encoding="utf-8"?>\n<';
str+=qualifiedName;

if(namespaceUri){str+=" xmlns='"+namespaceUri+"'";
}str+=" />";
obj.loadXML(str);
}return obj;
},"default":function(namespaceUri,qualifiedName){return document.implementation.createDocument(namespaceUri||"",qualifiedName||"",null);
}}),fromString:qx.core.Variant.select("qx.client",{"mshtml":function(str){var dom=qx.xml.Document.create();
dom.loadXML(str);
return dom;
},"default":function(str){var parser=new DOMParser();
return parser.parseFromString(str,"text/xml");
}})},defer:function(statics){if(qx.core.Variant.isSet("qx.client","mshtml")){var domDoc=["MSXML2.DOMDocument.6.0","MSXML2.DOMDocument.3.0"];
var httpReq=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0"];

for(var i=0,l=domDoc.length;i<l;i++){try{new ActiveXObject(domDoc[i]);
new ActiveXObject(httpReq[i]);
}catch(ex){continue;
}statics.DOMDOC=domDoc[i];
statics.XMLHTTP=httpReq[i];
break;
}}}});
qx.Class.define("qx.bom.element.Scroll",{statics:{intoViewX:function(element,stop,align){var parent=element.parentNode;
var doc=qx.dom.Node.getDocument(element);
var body=doc.body;
var parentLocation,parentLeft,parentRight;
var parentOuterWidth,parentClientWidth,parentScrollWidth;
var parentLeftBorder,parentRightBorder,parentScrollBarWidth;
var elementLocation,elementLeft,elementRight,elementWidth;
var leftOffset,rightOffset,scrollDiff;
var alignLeft=align==="left";
var alignRight=align==="right";
stop=stop?stop.parentNode:doc;
while(parent&&parent!=stop){if(parent.scrollWidth>parent.clientWidth&&(parent===body||qx.bom.element.Overflow.getY(parent)!="visible")){if(parent===body){parentLeft=parent.scrollLeft;
parentRight=parentLeft+qx.bom.Viewport.getWidth();
parentOuterWidth=qx.bom.Viewport.getWidth();
parentClientWidth=parent.clientWidth;
parentScrollWidth=parent.scrollWidth;
parentLeftBorder=0;
parentRightBorder=0;
parentScrollBarWidth=0;
}else{parentLocation=qx.bom.element.Location.get(parent);
parentLeft=parentLocation.left;
parentRight=parentLocation.right;
parentOuterWidth=parent.offsetWidth;
parentClientWidth=parent.clientWidth;
parentScrollWidth=parent.scrollWidth;
parentLeftBorder=parseInt(qx.bom.element.Style.get(parent,"borderLeftWidth"),10)||0;
parentRightBorder=parseInt(qx.bom.element.Style.get(parent,"borderRightWidth"),10)||0;
parentScrollBarWidth=parentOuterWidth-parentClientWidth-parentLeftBorder-parentRightBorder;
}elementLocation=qx.bom.element.Location.get(element);
elementLeft=elementLocation.left;
elementRight=elementLocation.right;
elementWidth=element.offsetWidth;
leftOffset=elementLeft-parentLeft-parentLeftBorder;
rightOffset=elementRight-parentRight+parentRightBorder;
scrollDiff=0;
if(alignLeft){scrollDiff=leftOffset;
}else if(alignRight){scrollDiff=rightOffset+parentScrollBarWidth;
}else if(leftOffset<0||elementWidth>parentClientWidth){scrollDiff=leftOffset;
}else if(rightOffset>0){scrollDiff=rightOffset+parentScrollBarWidth;
}parent.scrollLeft+=scrollDiff;
if(qx.bom.client.Engine.GECKO){qx.event.Registration.fireNonBubblingEvent(parent,"scroll");
}}
if(parent===body){break;
}parent=parent.parentNode;
}},intoViewY:function(element,stop,align){var parent=element.parentNode;
var doc=qx.dom.Node.getDocument(element);
var body=doc.body;
var parentLocation,parentTop,parentBottom;
var parentOuterHeight,parentClientHeight,parentScrollHeight;
var parentTopBorder,parentBottomBorder,parentScrollBarHeight;
var elementLocation,elementTop,elementBottom,elementHeight;
var topOffset,bottomOffset,scrollDiff;
var alignTop=align==="top";
var alignBottom=align==="bottom";
stop=stop?stop.parentNode:doc;
while(parent&&parent!=stop){if(parent.scrollHeight>parent.clientHeight&&(parent===body||qx.bom.element.Overflow.getY(parent)!="visible")){if(parent===body){parentTop=parent.scrollTop;
parentBottom=parentTop+qx.bom.Viewport.getHeight();
parentOuterHeight=qx.bom.Viewport.getHeight();
parentClientHeight=parent.clientHeight;
parentScrollHeight=parent.scrollHeight;
parentTopBorder=0;
parentBottomBorder=0;
parentScrollBarHeight=0;
}else{parentLocation=qx.bom.element.Location.get(parent);
parentTop=parentLocation.top;
parentBottom=parentLocation.bottom;
parentOuterHeight=parent.offsetHeight;
parentClientHeight=parent.clientHeight;
parentScrollHeight=parent.scrollHeight;
parentTopBorder=parseInt(qx.bom.element.Style.get(parent,"borderTopWidth"),10)||0;
parentBottomBorder=parseInt(qx.bom.element.Style.get(parent,"borderBottomWidth"),10)||0;
parentScrollBarHeight=parentOuterHeight-parentClientHeight-parentTopBorder-parentBottomBorder;
}elementLocation=qx.bom.element.Location.get(element);
elementTop=elementLocation.top;
elementBottom=elementLocation.bottom;
elementHeight=element.offsetHeight;
topOffset=elementTop-parentTop-parentTopBorder;
bottomOffset=elementBottom-parentBottom+parentBottomBorder;
scrollDiff=0;
if(alignTop){scrollDiff=topOffset;
}else if(alignBottom){scrollDiff=bottomOffset+parentScrollBarHeight;
}else if(topOffset<0||elementHeight>parentClientHeight){scrollDiff=topOffset;
}else if(bottomOffset>0){scrollDiff=bottomOffset+parentScrollBarHeight;
}parent.scrollTop+=scrollDiff;
if(qx.bom.client.Engine.GECKO){qx.event.Registration.fireNonBubblingEvent(parent,"scroll");
}}
if(parent===body){break;
}parent=parent.parentNode;
}},intoView:function(element,stop,alignX,alignY){this.intoViewX(element,stop,alignX);
this.intoViewY(element,stop,alignY);
}}});
qx.Class.define("qx.bom.element.Overflow",{statics:{__scrollbarSize:null,getScrollbarWidth:function(){if(this.__scrollbarSize!==null){return this.__scrollbarSize;
}var Style=qx.bom.element.Style;
var getStyleSize=function(el,propertyName){return parseInt(Style.get(el,propertyName))||0;
};
var getBorderRight=function(el){return (Style.get(el,"borderRightStyle")=="none"?0:getStyleSize(el,"borderRightWidth"));
};
var getBorderLeft=function(el){return (Style.get(el,"borderLeftStyle")=="none"?0:getStyleSize(el,"borderLeftWidth"));
};
var getInsetRight=qx.core.Variant.select("qx.client",{"mshtml":function(el){if(Style.get(el,"overflowY")=="hidden"||el.clientWidth==0){return getBorderRight(el);
}return Math.max(0,el.offsetWidth-el.clientLeft-el.clientWidth);
},"default":function(el){if(el.clientWidth==0){var ov=Style.get(el,"overflow");
var sbv=(ov=="scroll"||ov=="-moz-scrollbars-vertical"?16:0);
return Math.max(0,getBorderRight(el)+sbv);
}return Math.max(0,(el.offsetWidth-el.clientWidth-getBorderLeft(el)));
}});
var getScrollBarSizeRight=function(el){return getInsetRight(el)-getBorderRight(el);
};
var t=document.createElement("div");
var s=t.style;
s.height=s.width="100px";
s.overflow="scroll";
document.body.appendChild(t);
var c=getScrollBarSizeRight(t);
this.__scrollbarSize=c?c:16;
document.body.removeChild(t);
return this.__scrollbarSize;
},_compile:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(prop,value){if(value=="hidden"){value="-moz-scrollbars-none";
}return "overflow:"+value+";";
}:
function(prop,value){return prop+":"+value+";";
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(prop,value){return "overflow:"+value+";";
}:
function(prop,value){return prop+":"+value+";";
},"default":function(prop,value){return prop+":"+value+";";
}}),compileX:function(value){return this._compile("overflow-x",value);
},compileY:function(value){return this._compile("overflow-y",value);
},getX:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element,mode){var overflow=qx.bom.element.Style.get(element,"overflow",mode,false);

if(overflow==="-moz-scrollbars-none"){overflow="hidden";
}return overflow;
}:
function(element,mode){return qx.bom.element.Style.get(element,"overflowX",mode,false);
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,mode){return qx.bom.element.Style.get(element,"overflow",mode,false);
}:
function(element,mode){return qx.bom.element.Style.get(element,"overflowX",mode,false);
},"default":function(element,mode){return qx.bom.element.Style.get(element,"overflowX",mode,false);
}}),setX:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element,value){if(value=="hidden"){value="-moz-scrollbars-none";
}element.style.overflow=value;
}:
function(element,value){element.style.overflowX=value;
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,value){element.style.overflow=value;
}:
function(element,value){element.style.overflowX=value;
},"default":function(element,value){element.style.overflowX=value;
}}),resetX:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element){element.style.overflow="";
}:
function(element){element.style.overflowX="";
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,value){element.style.overflow="";
}:
function(element,value){element.style.overflowX="";
},"default":function(element){element.style.overflowX="";
}}),getY:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element,mode){var overflow=qx.bom.element.Style.get(element,"overflow",mode,false);

if(overflow==="-moz-scrollbars-none"){overflow="hidden";
}return overflow;
}:
function(element,mode){return qx.bom.element.Style.get(element,"overflowY",mode,false);
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,mode){return qx.bom.element.Style.get(element,"overflow",mode,false);
}:
function(element,mode){return qx.bom.element.Style.get(element,"overflowY",mode,false);
},"default":function(element,mode){return qx.bom.element.Style.get(element,"overflowY",mode,false);
}}),setY:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element,value){if(value==="hidden"){value="-moz-scrollbars-none";
}element.style.overflow=value;
}:
function(element,value){element.style.overflowY=value;
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,value){element.style.overflow=value;
}:
function(element,value){element.style.overflowY=value;
},"default":function(element,value){element.style.overflowY=value;
}}),resetY:qx.core.Variant.select("qx.client",{"gecko":qx.bom.client.Engine.VERSION<
1.8?
function(element){element.style.overflow="";
}:
function(element){element.style.overflowY="";
},"opera":qx.bom.client.Engine.VERSION<
9.5?
function(element,value){element.style.overflow="";
}:
function(element,value){element.style.overflowY="";
},"default":function(element){element.style.overflowY="";
}})}});
qx.Class.define("qx.bom.element.Clip",{statics:{compile:function(map){if(!map){return "clip:auto;";
}var left=map.left;
var top=map.top;
var width=map.width;
var height=map.height;
var right,bottom;

if(left==null){right=(width==null?"auto":width+"px");
left="auto";
}else{right=(width==null?"auto":left+width+"px");
left=left+"px";
}
if(top==null){bottom=(height==null?"auto":height+"px");
top="auto";
}else{bottom=(height==null?"auto":top+height+"px");
top=top+"px";
}return "clip:rect("+top+","+right+","+bottom+","+left+");";
},get:function(element,mode){var clip=qx.bom.element.Style.get(element,"clip",mode,false);
var left,top,width,height;
var right,bottom;

if(typeof clip==="string"&&clip!=="auto"&&clip!==""){clip=qx.lang.String.trim(clip);
if(/\((.*)\)/.test(clip)){var split=RegExp.$1.split(",");
top=qx.lang.String.trim(split[0]);
right=qx.lang.String.trim(split[1]);
bottom=qx.lang.String.trim(split[2]);
left=qx.lang.String.trim(split[3]);
if(left==="auto"){left=null;
}
if(top==="auto"){top=null;
}
if(right==="auto"){right=null;
}
if(bottom==="auto"){bottom=null;
}if(top!=null){top=parseInt(top,10);
}
if(right!=null){right=parseInt(right,10);
}
if(bottom!=null){bottom=parseInt(bottom,10);
}
if(left!=null){left=parseInt(left,10);
}if(right!=null&&left!=null){width=right-left;
}else if(right!=null){width=right;
}
if(bottom!=null&&top!=null){height=bottom-top;
}else if(bottom!=null){height=bottom;
}}else{throw new Error("Could not parse clip string: "+clip);
}}return {left:left||null,top:top||null,width:width||null,height:height||null};
},set:function(element,map){if(!map){element.style.clip="rect(auto,auto,auto,auto)";
return;
}var left=map.left;
var top=map.top;
var width=map.width;
var height=map.height;
var right,bottom;

if(left==null){right=(width==null?"auto":width+"px");
left="auto";
}else{right=(width==null?"auto":left+width+"px");
left=left+"px";
}
if(top==null){bottom=(height==null?"auto":height+"px");
top="auto";
}else{bottom=(height==null?"auto":top+height+"px");
top=top+"px";
}element.style.clip="rect("+top+","+right+","+bottom+","+left+")";
},reset:function(element){element.style.clip=qx.bom.client.Engine.MSHTML?"rect(auto)":"auto";
}}});
qx.Class.define("qx.bom.element.Cursor",{statics:{__map:qx.core.Variant.select("qx.client",{"mshtml":{"cursor":"hand","ew-resize":"e-resize","ns-resize":"n-resize","nesw-resize":"ne-resize","nwse-resize":"nw-resize"},"opera":{"col-resize":"e-resize","row-resize":"n-resize","ew-resize":"e-resize","ns-resize":"n-resize","nesw-resize":"ne-resize","nwse-resize":"nw-resize"},"default":{}}),compile:function(cursor){return "cursor:"+(this.__map[cursor]||cursor)+";";
},get:function(element,mode){return qx.bom.element.Style.get(element,"cursor",mode,false);
},set:function(element,value){element.style.cursor=this.__map[value]||value;
},reset:function(element){element.style.cursor="";
}}});
qx.Class.define("qx.bom.element.Opacity",{statics:{compile:qx.core.Variant.select("qx.client",{"mshtml":function(opacity){if(opacity>=1){return "";
}
if(opacity<0.00001){opacity=0;
}return "zoom:1;filter:alpha(opacity="+(opacity*100)+");";
},"gecko":function(opacity){if(opacity==1){opacity=0.999999;
}
if(qx.bom.client.Engine.VERSION<1.7){return "-moz-opacity:"+opacity+";";
}else{return "opacity:"+opacity+";";
}},"default":function(opacity){if(opacity==1){return "";
}return "opacity:"+opacity+";";
}}),set:qx.core.Variant.select("qx.client",{"mshtml":function(element,opacity){var filter=qx.bom.element.Style.get(element,"filter",qx.bom.element.Style.COMPUTED_MODE,false);
if(opacity>=1){element.style.filter=filter.replace(/alpha\([^\)]*\)/gi,"");
return;
}
if(opacity<0.00001){opacity=0;
}if(!element.currentStyle||!element.currentStyle.hasLayout){element.style.zoom=1;
}element.style.filter=filter.replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+opacity*100+")";
},"gecko":function(element,opacity){if(opacity==1){opacity=0.999999;
}
if(qx.bom.client.Engine.VERSION<1.7){element.style.MozOpacity=opacity;
}else{element.style.opacity=opacity;
}},"default":function(element,opacity){if(opacity==1){opacity="";
}element.style.opacity=opacity;
}}),reset:qx.core.Variant.select("qx.client",{"mshtml":function(element){var filter=qx.bom.element.Style.get(element,"filter",qx.bom.element.Style.COMPUTED_MODE,false);
element.style.filter=filter.replace(/alpha\([^\)]*\)/gi,"");
},"gecko":function(element){if(qx.bom.client.Engine.VERSION<1.7){element.style.MozOpacity="";
}else{element.style.opacity="";
}},"default":function(element){element.style.opacity="";
}}),get:qx.core.Variant.select("qx.client",{"mshtml":function(element,mode){var filter=qx.bom.element.Style.get(element,"filter",mode,false);

if(filter){var opacity=filter.match(/alpha\(opacity=(.*)\)/);

if(opacity&&opacity[1]){return parseFloat(opacity[1])/100;
}}return 1.0;
},"gecko":function(element,mode){var opacity=qx.bom.element.Style.get(element,qx.bom.client.Engine.VERSION<1.7?"MozOpacity":"opacity",mode,false);

if(opacity==0.999999){opacity=1.0;
}
if(opacity!=null){return parseFloat(opacity);
}return 1.0;
},"default":function(element,mode){var opacity=qx.bom.element.Style.get(element,"opacity",mode,false);

if(opacity!=null){return parseFloat(opacity);
}return 1.0;
}})}});
qx.Class.define("qx.bom.element.BoxSizing",{statics:{__styleProperties:qx.core.Variant.select("qx.client",{"mshtml":null,"webkit":["boxSizing","KhtmlBoxSizing","WebkitBoxSizing"],"gecko":["MozBoxSizing"],"opera":["boxSizing"]}),__cssProperties:qx.core.Variant.select("qx.client",{"mshtml":null,"webkit":["box-sizing","-khtml-box-sizing","-webkit-box-sizing"],"gecko":["-moz-box-sizing"],"opera":["box-sizing"]}),__nativeBorderBox:{tags:{button:true,select:true},types:{search:true,button:true,submit:true,reset:true,checkbox:true,radio:true}},__usesNativeBorderBox:function(element){var map=this.__nativeBorderBox;
return map.tags[element.tagName.toLowerCase()]||map.types[element.type];
},compile:qx.core.Variant.select("qx.client",{"mshtml":function(value){{qx.log.Logger.warn(this,"This client do not support the dynamic modification of the box-sizing property.");
qx.log.Logger.trace();
};
},"default":function(value){var props=this.__cssProperties;
var css="";

if(props){for(var i=0,l=props.length;i<l;i++){css+=props[i]+":"+value+";";
}}return css;
}}),get:qx.core.Variant.select("qx.client",{"mshtml":function(element){if(qx.bom.Document.isStandardMode(qx.dom.Node.getDocument(element))){if(!this.__usesNativeBorderBox(element)){return "content-box";
}}return "border-box";
},"default":function(element){var props=this.__styleProperties;
var value;

if(props){for(var i=0,l=props.length;i<l;i++){value=qx.bom.element.Style.get(element,props[i],null,false);

if(value!=null&&value!==""){return value;
}}}return "";
}}),set:qx.core.Variant.select("qx.client",{"mshtml":function(element,value){{qx.log.Logger.warn(this,"This client do not support the dynamic modification of the box-sizing property.");
};
},"default":function(element,value){var props=this.__styleProperties;

if(props){for(var i=0,l=props.length;i<l;i++){element.style[props[i]]=value;
}}}}),reset:function(element){this.set(element,"");
}}});
qx.Class.define("qx.bom.element.Style",{statics:{__detectVendorProperties:function(){var vendorProperties=["appearance","userSelect","textOverflow","borderImage"];
var styleNames={};
var style=document.documentElement.style;
var prefixes=['Moz','Webkit','Khtml','O','Ms'];

for(var i=0,l=vendorProperties.length;i<l;i++){var propName=vendorProperties[i];
var key=propName;

if(style[propName]){styleNames[key]=propName;
continue;
}propName=qx.lang.String.firstUp(propName);

for(var j=0,pl=prefixes.length;j<pl;j++){var prefixed=prefixes[j]+propName;

if(typeof style[prefixed]=='string'){styleNames[key]=prefixed;
break;
}}}this.__styleNames=styleNames;
this.__styleNames["userModify"]=qx.core.Variant.select("qx.client",{"gecko":"MozUserModify","webkit":"WebkitUserModify","default":"userSelect"});
this.__cssNames={};

for(var key in styleNames){this.__cssNames[key]=this.__hyphenate(styleNames[key]);
}this.__styleNames["float"]=qx.core.Variant.select("qx.client",{"mshtml":"styleFloat","default":"cssFloat"});
},__mshtmlPixel:{width:"pixelWidth",height:"pixelHeight",left:"pixelLeft",right:"pixelRight",top:"pixelTop",bottom:"pixelBottom"},__special:{clip:qx.bom.element.Clip,cursor:qx.bom.element.Cursor,opacity:qx.bom.element.Opacity,boxSizing:qx.bom.element.BoxSizing,overflowX:{set:qx.lang.Function.bind(qx.bom.element.Overflow.setX,qx.bom.element.Overflow),get:qx.lang.Function.bind(qx.bom.element.Overflow.getX,qx.bom.element.Overflow),reset:qx.lang.Function.bind(qx.bom.element.Overflow.resetX,qx.bom.element.Overflow),compile:qx.lang.Function.bind(qx.bom.element.Overflow.compileX,qx.bom.element.Overflow)},overflowY:{set:qx.lang.Function.bind(qx.bom.element.Overflow.setY,qx.bom.element.Overflow),get:qx.lang.Function.bind(qx.bom.element.Overflow.getY,qx.bom.element.Overflow),reset:qx.lang.Function.bind(qx.bom.element.Overflow.resetY,qx.bom.element.Overflow),compile:qx.lang.Function.bind(qx.bom.element.Overflow.compileY,qx.bom.element.Overflow)}},compile:function(map){var html=[];
var special=this.__special;
var names=this.__cssNames;
var name,value;

for(name in map){value=map[name];

if(value==null){continue;
}name=names[name]||name;
if(special[name]){html.push(special[name].compile(value));
}else{html.push(this.__hyphenate(name),":",value,";");
}}return html.join("");
},__hyphens:{},__hyphenate:function(propName){var hyphens=this.__hyphens;
var prop=hyphens[propName];

if(!prop){prop=hyphens[propName]=qx.lang.String.hyphenate(propName);
}return prop;
},setCss:qx.core.Variant.select("qx.client",{"mshtml":function(element,value){element.style.cssText=value;
},"default":function(element,value){element.setAttribute("style",value);
}}),getCss:qx.core.Variant.select("qx.client",{"mshtml":function(element){return element.style.cssText.toLowerCase();
},"default":function(element){return element.getAttribute("style");
}}),isPropertySupported:function(propertyName){return (this.__special[propertyName]||this.__styleNames[propertyName]||propertyName in document.documentElement.style);
},COMPUTED_MODE:1,CASCADED_MODE:2,LOCAL_MODE:3,set:function(element,name,value,smart){{qx.core.Assert.assertElement(element,"Invalid argument 'element'");
qx.core.Assert.assertString(name,"Invalid argument 'name'");

if(smart!==undefined){qx.core.Assert.assertBoolean(smart,"Invalid argument 'smart'");
}};
name=this.__styleNames[name]||name;
if(smart!==false&&this.__special[name]){return this.__special[name].set(element,value);
}else{element.style[name]=value!==null?value:"";
}},setStyles:function(element,styles,smart){{qx.core.Assert.assertElement(element,"Invalid argument 'element'");
qx.core.Assert.assertMap(styles,"Invalid argument 'styles'");

if(smart!==undefined){qx.core.Assert.assertBoolean(smart,"Invalid argument 'smart'");
}};
var styleNames=this.__styleNames;
var special=this.__special;
var style=element.style;

for(var key in styles){var value=styles[key];
var name=styleNames[key]||key;

if(value===undefined){if(smart!==false&&special[name]){special[name].reset(element);
}else{style[name]="";
}}else{if(smart!==false&&special[name]){special[name].set(element,value);
}else{style[name]=value!==null?value:"";
}}}},reset:function(element,name,smart){name=this.__styleNames[name]||name;
if(smart!==false&&this.__special[name]){return this.__special[name].reset(element);
}else{element.style[name]="";
}},get:qx.core.Variant.select("qx.client",{"mshtml":function(element,name,mode,smart){name=this.__styleNames[name]||name;
if(smart!==false&&this.__special[name]){return this.__special[name].get(element,mode);
}if(!element.currentStyle){return element.style[name]||"";
}switch(mode){case this.LOCAL_MODE:return element.style[name]||"";
case this.CASCADED_MODE:return element.currentStyle[name]||"";
default:var currentStyle=element.currentStyle[name]||"";
if(/^-?[\.\d]+(px)?$/i.test(currentStyle)){return currentStyle;
}var pixel=this.__mshtmlPixel[name];

if(pixel){var localStyle=element.style[name];
element.style[name]=currentStyle||0;
var value=element.style[pixel]+"px";
element.style[name]=localStyle;
return value;
}if(/^-?[\.\d]+(em|pt|%)?$/i.test(currentStyle)){throw new Error("Untranslated computed property value: "+name+". Only pixel values work well across different clients.");
}return currentStyle;
}},"default":function(element,name,mode,smart){name=this.__styleNames[name]||name;
if(smart!==false&&this.__special[name]){return this.__special[name].get(element,mode);
}switch(mode){case this.LOCAL_MODE:return element.style[name]||"";
case this.CASCADED_MODE:if(element.currentStyle){return element.currentStyle[name]||"";
}throw new Error("Cascaded styles are not supported in this browser!");
default:var doc=qx.dom.Node.getDocument(element);
var computed=doc.defaultView.getComputedStyle(element,null);
return computed?computed[name]:"";
}}})},defer:function(statics){statics.__detectVendorProperties();
}});
qx.Class.define("qx.bom.element.Location",{statics:{__style:function(elem,style){return qx.bom.element.Style.get(elem,style,qx.bom.element.Style.COMPUTED_MODE,false);
},__num:function(elem,style){return parseInt(qx.bom.element.Style.get(elem,style,qx.bom.element.Style.COMPUTED_MODE,false),10)||0;
},__computeScroll:function(elem){var left=0,top=0;
if(elem.getBoundingClientRect&&!qx.bom.client.Engine.OPERA){var win=qx.dom.Node.getWindow(elem);
left-=qx.bom.Viewport.getScrollLeft(win);
top-=qx.bom.Viewport.getScrollTop(win);
}else{var body=qx.dom.Node.getDocument(elem).body;
elem=elem.parentNode;
while(elem&&elem!=body){left+=elem.scrollLeft;
top+=elem.scrollTop;
elem=elem.parentNode;
}}return {left:left,top:top};
},__computeBody:qx.core.Variant.select("qx.client",{"mshtml":function(elem){var doc=qx.dom.Node.getDocument(elem);
var body=doc.body;
var left=0;
var top=0;
left-=body.clientLeft+doc.documentElement.clientLeft;
top-=body.clientTop+doc.documentElement.clientTop;

if(qx.bom.client.Feature.STANDARD_MODE){left+=this.__num(body,"borderLeftWidth");
top+=this.__num(body,"borderTopWidth");
}return {left:left,top:top};
},"webkit":function(elem){var doc=qx.dom.Node.getDocument(elem);
var body=doc.body;
var left=body.offsetLeft;
var top=body.offsetTop;
if(qx.bom.client.Engine.VERSION<530.17){left+=this.__num(body,"borderLeftWidth");
top+=this.__num(body,"borderTopWidth");
}return {left:left,top:top};
},"gecko":function(elem){var body=qx.dom.Node.getDocument(elem).body;
var left=body.offsetLeft;
var top=body.offsetTop;
if(qx.bom.client.Engine.VERSION<1.9){left+=this.__num(body,"marginLeft");
top+=this.__num(body,"marginTop");
}if(qx.bom.element.BoxSizing.get(body)!=="border-box"){left+=this.__num(body,"borderLeftWidth");
top+=this.__num(body,"borderTopWidth");
}return {left:left,top:top};
},"default":function(elem){var body=qx.dom.Node.getDocument(elem).body;
var left=body.offsetLeft;
var top=body.offsetTop;
return {left:left,top:top};
}}),__computeOffset:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(elem){var doc=qx.dom.Node.getDocument(elem);
if(elem.getBoundingClientRect){var rect=elem.getBoundingClientRect();
var left=rect.left;
var top=rect.top;
}else{var left=elem.offsetLeft;
var top=elem.offsetTop;
elem=elem.offsetParent;
var body=doc.body;
while(elem&&elem!=body){left+=elem.offsetLeft;
top+=elem.offsetTop;
left+=this.__num(elem,"borderLeftWidth");
top+=this.__num(elem,"borderTopWidth");
elem=elem.offsetParent;
}}return {left:left,top:top};
},"gecko":function(elem){if(elem.getBoundingClientRect){var rect=elem.getBoundingClientRect();
var left=Math.round(rect.left);
var top=Math.round(rect.top);
}else{var left=0;
var top=0;
var body=qx.dom.Node.getDocument(elem).body;
var box=qx.bom.element.BoxSizing;

if(box.get(elem)!=="border-box"){left-=this.__num(elem,"borderLeftWidth");
top-=this.__num(elem,"borderTopWidth");
}
while(elem&&elem!==body){left+=elem.offsetLeft;
top+=elem.offsetTop;
if(box.get(elem)!=="border-box"){left+=this.__num(elem,"borderLeftWidth");
top+=this.__num(elem,"borderTopWidth");
}if(elem.parentNode&&this.__style(elem.parentNode,"overflow")!="visible"){left+=this.__num(elem.parentNode,"borderLeftWidth");
top+=this.__num(elem.parentNode,"borderTopWidth");
}elem=elem.offsetParent;
}}return {left:left,top:top};
},"default":function(elem){var left=0;
var top=0;
var body=qx.dom.Node.getDocument(elem).body;
while(elem&&elem!==body){left+=elem.offsetLeft;
top+=elem.offsetTop;
elem=elem.offsetParent;
}return {left:left,top:top};
}}),get:function(elem,mode){if(elem.tagName=="BODY"){var location=this.__getBodyLocation(elem);
var left=location.left;
var top=location.top;
}else{var body=this.__computeBody(elem);
var offset=this.__computeOffset(elem);
var scroll=this.__computeScroll(elem);
var left=offset.left+body.left-scroll.left;
var top=offset.top+body.top-scroll.top;
}var right=left+elem.offsetWidth;
var bottom=top+elem.offsetHeight;

if(mode){if(mode=="padding"||mode=="scroll"){var overX=qx.bom.element.Overflow.getX(elem);

if(overX=="scroll"||overX=="auto"){right+=elem.scrollWidth-elem.offsetWidth+this.__num(elem,"borderLeftWidth")+this.__num(elem,"borderRightWidth");
}var overY=qx.bom.element.Overflow.getY(elem);

if(overY=="scroll"||overY=="auto"){bottom+=elem.scrollHeight-elem.offsetHeight+this.__num(elem,"borderTopWidth")+this.__num(elem,"borderBottomWidth");
}}
switch(mode){case "padding":left+=this.__num(elem,"paddingLeft");
top+=this.__num(elem,"paddingTop");
right-=this.__num(elem,"paddingRight");
bottom-=this.__num(elem,"paddingBottom");
case "scroll":left-=elem.scrollLeft;
top-=elem.scrollTop;
right-=elem.scrollLeft;
bottom-=elem.scrollTop;
case "border":left+=this.__num(elem,"borderLeftWidth");
top+=this.__num(elem,"borderTopWidth");
right-=this.__num(elem,"borderRightWidth");
bottom-=this.__num(elem,"borderBottomWidth");
break;
case "margin":left-=this.__num(elem,"marginLeft");
top-=this.__num(elem,"marginTop");
right+=this.__num(elem,"marginRight");
bottom+=this.__num(elem,"marginBottom");
break;
}}return {left:left,top:top,right:right,bottom:bottom};
},__getBodyLocation:qx.core.Variant.select("qx.client",{"default":function(body){var top=body.offsetTop+this.__num(body,"marginTop");
var left=body.offsetLeft+this.__num(body,"marginLeft");
return {left:left,top:top};
},"mshtml":function(body){var top=body.offsetTop;
var left=body.offsetLeft;

if(!((qx.bom.client.Engine.VERSION<8||qx.bom.client.Engine.DOCUMENT_MODE<8)&&!qx.bom.client.Feature.QUIRKS_MODE)){top+=this.__num(body,"marginTop");
left+=this.__num(body,"marginLeft");
}return {left:left,top:top};
},"gecko":function(body){var top=body.offsetTop+this.__num(body,"marginTop")+this.__num(body,"borderLeftWidth");
var left=body.offsetLeft+this.__num(body,"marginLeft")+this.__num(body,"borderTopWidth");
return {left:left,top:top};
}}),getLeft:function(elem,mode){return this.get(elem,mode).left;
},getTop:function(elem,mode){return this.get(elem,mode).top;
},getRight:function(elem,mode){return this.get(elem,mode).right;
},getBottom:function(elem,mode){return this.get(elem,mode).bottom;
},getRelative:function(elem1,elem2,mode1,mode2){var loc1=this.get(elem1,mode1);
var loc2=this.get(elem2,mode2);
return {left:loc1.left-loc2.left,top:loc1.top-loc2.top,right:loc1.right-loc2.right,bottom:loc1.bottom-loc2.bottom};
},getPosition:function(elem){return this.getRelative(elem,this.getOffsetParent(elem));
},getOffsetParent:function(element){var offsetParent=element.offsetParent||document.body;
var Style=qx.bom.element.Style;

while(offsetParent&&(!/^body|html$/i.test(offsetParent.tagName)&&Style.get(offsetParent,"position")==="static")){offsetParent=offsetParent.offsetParent;
}return offsetParent;
}}});
qx.Class.define("qx.bom.Selection",{statics:{getSelectionObject:qx.core.Variant.select("qx.client",{"mshtml":function(documentNode){return documentNode.selection;
},"default":function(documentNode){return qx.dom.Node.getWindow(documentNode).getSelection();
}}),get:qx.core.Variant.select("qx.client",{"mshtml":function(node){var rng=qx.bom.Range.get(qx.dom.Node.getDocument(node));
return rng.text;
},"default":function(node){if(this.__isInputOrTextarea(node)){return node.value.substring(node.selectionStart,node.selectionEnd);
}else{return this.getSelectionObject(qx.dom.Node.getDocument(node)).toString();
}}}),getLength:qx.core.Variant.select("qx.client",{"mshtml":function(node){var selectedValue=this.get(node);
var split=qx.util.StringSplit.split(selectedValue,/\r\n/);
return selectedValue.length-(split.length-1);
},"opera":function(node){var selectedValue,selectedLength,split;

if(this.__isInputOrTextarea(node)){var start=node.selectionStart;
var end=node.selectionEnd;
selectedValue=node.value.substring(start,end);
selectedLength=end-start;
}else{selectedValue=qx.bom.Selection.get(node);
selectedLength=selectedValue.length;
}split=qx.util.StringSplit.split(selectedValue,/\r\n/);
return selectedLength-(split.length-1);
},"default":function(node){if(this.__isInputOrTextarea(node)){return node.selectionEnd-node.selectionStart;
}else{return this.get(node).length;
}}}),getStart:qx.core.Variant.select("qx.client",{"mshtml":function(node){if(this.__isInputOrTextarea(node)){var documentRange=qx.bom.Range.get();
if(!node.contains(documentRange.parentElement())){return -1;
}var range=qx.bom.Range.get(node);
var len=node.value.length;
range.moveToBookmark(documentRange.getBookmark());
range.moveEnd('character',len);
return len-range.text.length;
}else{var range=qx.bom.Range.get(node);
var parentElement=range.parentElement();
var elementRange=qx.bom.Range.get();
elementRange.moveToElementText(parentElement);
var bodyRange=qx.bom.Range.get(qx.dom.Node.getBodyElement(node));
bodyRange.setEndPoint("StartToStart",range);
bodyRange.setEndPoint("EndToEnd",elementRange);
if(elementRange.compareEndPoints("StartToStart",bodyRange)==0){return 0;
}var moved;
var steps=0;

while(true){moved=bodyRange.moveStart("character",-1);
if(elementRange.compareEndPoints("StartToStart",bodyRange)==0){break;
}if(moved==0){break;
}else{steps++;
}}return ++steps;
}},"gecko|webkit":function(node){if(this.__isInputOrTextarea(node)){return node.selectionStart;
}else{var documentElement=qx.dom.Node.getDocument(node);
var documentSelection=this.getSelectionObject(documentElement);
if(documentSelection.anchorOffset<documentSelection.focusOffset){return documentSelection.anchorOffset;
}else{return documentSelection.focusOffset;
}}},"default":function(node){if(this.__isInputOrTextarea(node)){return node.selectionStart;
}else{return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).anchorOffset;
}}}),getEnd:qx.core.Variant.select("qx.client",{"mshtml":function(node){if(this.__isInputOrTextarea(node)){var documentRange=qx.bom.Range.get();
if(!node.contains(documentRange.parentElement())){return -1;
}var range=qx.bom.Range.get(node);
var len=node.value.length;
range.moveToBookmark(documentRange.getBookmark());
range.moveStart('character',-len);
return range.text.length;
}else{var range=qx.bom.Range.get(node);
var parentElement=range.parentElement();
var elementRange=qx.bom.Range.get();
elementRange.moveToElementText(parentElement);
var len=elementRange.text.length;
var bodyRange=qx.bom.Range.get(qx.dom.Node.getBodyElement(node));
bodyRange.setEndPoint("EndToEnd",range);
bodyRange.setEndPoint("StartToStart",elementRange);
if(elementRange.compareEndPoints("EndToEnd",bodyRange)==0){return len-1;
}var moved;
var steps=0;

while(true){moved=bodyRange.moveEnd("character",1);
if(elementRange.compareEndPoints("EndToEnd",bodyRange)==0){break;
}if(moved==0){break;
}else{steps++;
}}return len-(++steps);
}},"gecko|webkit":function(node){if(this.__isInputOrTextarea(node)){return node.selectionEnd;
}else{var documentElement=qx.dom.Node.getDocument(node);
var documentSelection=this.getSelectionObject(documentElement);
if(documentSelection.focusOffset>documentSelection.anchorOffset){return documentSelection.focusOffset;
}else{return documentSelection.anchorOffset;
}}},"default":function(node){if(this.__isInputOrTextarea(node)){return node.selectionEnd;
}else{return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).focusOffset;
}}}),__isInputOrTextarea:function(node){return qx.dom.Node.isElement(node)&&(node.nodeName.toLowerCase()=="input"||node.nodeName.toLowerCase()=="textarea");
},set:qx.core.Variant.select("qx.client",{"mshtml":function(node,start,end){var rng;
if(qx.dom.Node.isDocument(node)){node=node.body;
}
if(qx.dom.Node.isElement(node)||qx.dom.Node.isText(node)){switch(node.nodeName.toLowerCase()){case "input":case "textarea":case "button":if(end===undefined){end=node.value.length;
}
if(start>=0&&start<=node.value.length&&end>=0&&end<=node.value.length){rng=qx.bom.Range.get(node);
rng.collapse(true);
rng.moveStart("character",start);
rng.moveEnd("character",end-start);
rng.select();
return true;
}break;
case "#text":if(end===undefined){end=node.nodeValue.length;
}
if(start>=0&&start<=node.nodeValue.length&&end>=0&&end<=node.nodeValue.length){rng=qx.bom.Range.get(qx.dom.Node.getBodyElement(node));
rng.moveToElementText(node.parentNode);
rng.collapse(true);
rng.moveStart("character",start);
rng.moveEnd("character",end-start);
rng.select();
return true;
}break;
default:if(end===undefined){end=node.childNodes.length-1;
}if(node.childNodes[start]&&node.childNodes[end]){rng=qx.bom.Range.get(qx.dom.Node.getBodyElement(node));
rng.moveToElementText(node.childNodes[start]);
rng.collapse(true);
var newRng=qx.bom.Range.get(qx.dom.Node.getBodyElement(node));
newRng.moveToElementText(node.childNodes[end]);
rng.setEndPoint("EndToEnd",newRng);
rng.select();
return true;
}}}return false;
},"default":function(node,start,end){var nodeName=node.nodeName.toLowerCase();

if(qx.dom.Node.isElement(node)&&(nodeName=="input"||nodeName=="textarea")){if(end===undefined){end=node.value.length;
}if(start>=0&&start<=node.value.length&&end>=0&&end<=node.value.length){node.focus();
node.select();
node.setSelectionRange(start,end);
return true;
}}else{var validBoundaries=false;
var sel=qx.dom.Node.getWindow(node).getSelection();
var rng=qx.bom.Range.get(node);
if(qx.dom.Node.isText(node)){if(end===undefined){end=node.length;
}
if(start>=0&&start<node.length&&end>=0&&end<=node.length){validBoundaries=true;
}}else if(qx.dom.Node.isElement(node)){if(end===undefined){end=node.childNodes.length-1;
}
if(start>=0&&node.childNodes[start]&&end>=0&&node.childNodes[end]){validBoundaries=true;
}}else if(qx.dom.Node.isDocument(node)){node=node.body;

if(end===undefined){end=node.childNodes.length-1;
}
if(start>=0&&node.childNodes[start]&&end>=0&&node.childNodes[end]){validBoundaries=true;
}}
if(validBoundaries){if(!sel.isCollapsed){sel.collapseToStart();
}rng.setStart(node,start);
if(qx.dom.Node.isText(node)){rng.setEnd(node,end);
}else{rng.setEndAfter(node.childNodes[end]);
}if(sel.rangeCount>0){sel.removeAllRanges();
}sel.addRange(rng);
return true;
}}return false;
}}),setAll:function(node){return qx.bom.Selection.set(node,0);
},clear:qx.core.Variant.select("qx.client",{"mshtml":function(node){var sel=qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node));
var rng=qx.bom.Range.get(node);
var parent=rng.parentElement();
var documentRange=qx.bom.Range.get(qx.dom.Node.getDocument(node));
if(parent==documentRange.parentElement()&&parent==node){sel.empty();
}},"default":function(node){var sel=qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node));
var nodeName=node.nodeName.toLowerCase();
if(qx.dom.Node.isElement(node)&&(nodeName=="input"||nodeName=="textarea")){node.setSelectionRange(0,0);
qx.bom.Element.blur(node);
}else if(qx.dom.Node.isDocument(node)||nodeName=="body"){sel.collapse(node.body?node.body:node,0);
}else{var rng=qx.bom.Range.get(node);

if(!rng.collapsed){var compareNode;
var commonAncestor=rng.commonAncestorContainer;
if(qx.dom.Node.isElement(node)&&qx.dom.Node.isText(commonAncestor)){compareNode=commonAncestor.parentNode;
}else{compareNode=commonAncestor;
}
if(compareNode==node){sel.collapse(node,0);
}}}}})}});
qx.Class.define("qx.bom.Range",{statics:{get:qx.core.Variant.select("qx.client",{"mshtml":function(node){if(qx.dom.Node.isElement(node)){switch(node.nodeName.toLowerCase()){case "input":switch(node.type){case "text":case "password":case "hidden":case "button":case "reset":case "file":case "submit":return node.createTextRange();
break;
default:return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).createRange();
}break;
case "textarea":case "body":case "button":return node.createTextRange();
break;
default:return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).createRange();
}}else{if(node==null){node=window;
}return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).createRange();
}},"default":function(node){var doc=qx.dom.Node.getDocument(node);
var sel=qx.bom.Selection.getSelectionObject(doc);

if(sel.rangeCount>0){return sel.getRangeAt(0);
}else{return doc.createRange();
}}})}});
qx.Class.define("qx.util.StringSplit",{statics:{split:function(string,separator,limit){var flags="";
if(separator===undefined){return [string.toString()];
}else if(separator===null||separator.constructor!==RegExp){separator=new RegExp(String(separator).replace(/[.*+?^${}()|[\]\/\\]/g,"\\$&"),"g");
}else{flags=separator.toString().replace(/^[\S\s]+\//,"");

if(!separator.global){separator=new RegExp(separator.source,"g"+flags);
}}var separator2=new RegExp("^"+separator.source+"$",flags);
if(limit===undefined||+limit<0){limit=false;
}else{limit=Math.floor(+limit);

if(!limit){return [];
}}var match,output=[],lastLastIndex=0,i=0;

while((limit?i++<=limit:true)&&(match=separator.exec(string))){if((match[0].length===0)&&(separator.lastIndex>match.index)){separator.lastIndex--;
}
if(separator.lastIndex>lastLastIndex){if(match.length>1){match[0].replace(separator2,function(){for(var j=1;j<arguments.length-2;j++){if(arguments[j]===undefined){match[j]=undefined;
}}});
}output=output.concat(string.substring(lastLastIndex,match.index),(match.index===string.length?[]:match.slice(1)));
lastLastIndex=separator.lastIndex;
}
if(match[0].length===0){separator.lastIndex++;
}}return (lastLastIndex===string.length)?(separator.test("")?output:output.concat("")):(limit?output:output.concat(string.substring(lastLastIndex)));
}}});
qx.Class.define("qx.ui.core.queue.Widget",{statics:{__queue:{},remove:function(widget){delete this.__queue[widget.$$hash];
},add:function(widget){var queue=this.__queue;

if(queue[widget.$$hash]){return;
}queue[widget.$$hash]=widget;
qx.ui.core.queue.Manager.scheduleFlush("widget");
},flush:function(){var queue=this.__queue;
var obj;

for(var hash in queue){obj=queue[hash];
delete queue[hash];
obj.syncWidget();
}for(var hash in queue){return;
}this.__queue={};
}}});
qx.Class.define("qx.ui.core.queue.Visibility",{statics:{__queue:{},__data:{},remove:function(widget){var hash=widget.$$hash;
delete this.__data[hash];
delete this.__queue[hash];
},isVisible:function(widget){return this.__data[widget.$$hash]||false;
},__computeVisible:function(widget){var data=this.__data;
var hash=widget.$$hash;
var visible;
if(widget.isExcluded()){visible=false;
}else{var parent=widget.$$parent;

if(parent){visible=this.__computeVisible(parent);
}else{visible=widget.isRootWidget();
}}return data[hash]=visible;
},add:function(widget){var queue=this.__queue;

if(queue[widget.$$hash]){return;
}queue[widget.$$hash]=widget;
qx.ui.core.queue.Manager.scheduleFlush("visibility");
},flush:function(){var queue=this.__queue;
var data=this.__data;
for(var hash in queue){if(data[hash]!=null){queue[hash].addChildrenToQueue(queue);
}}var oldData={};

for(var hash in queue){oldData[hash]=data[hash];
data[hash]=null;
}for(var hash in queue){var widget=queue[hash];
delete queue[hash];
if(data[hash]==null){this.__computeVisible(widget);
}if(data[hash]&&data[hash]!=oldData[hash]){widget.checkAppearanceNeeds();
}}this.__queue={};
}}});
qx.Class.define("qx.ui.core.queue.Appearance",{statics:{__queue:{},remove:function(widget){delete this.__queue[widget.$$hash];
},add:function(widget){var queue=this.__queue;

if(queue[widget.$$hash]){return;
}queue[widget.$$hash]=widget;
qx.ui.core.queue.Manager.scheduleFlush("appearance");
},has:function(widget){return !!this.__queue[widget.$$hash];
},flush:function(){var Visibility=qx.ui.core.queue.Visibility;
var queue=this.__queue;
var obj;

for(var hash in queue){obj=queue[hash];
delete queue[hash];
if(Visibility.isVisible(obj)){obj.syncAppearance();
}else{obj.$$stateChanges=true;
}}}}});
qx.Class.define("qx.ui.core.queue.Dispose",{statics:{__queue:{},add:function(widget){var queue=this.__queue;

if(queue[widget.$$hash]){return;
}queue[widget.$$hash]=widget;
qx.ui.core.queue.Manager.scheduleFlush("dispose");
},flush:function(){var queue=this.__queue;

for(var hash in queue){var widget=queue[hash];
delete queue[hash];
widget.dispose();
}for(var hash in queue){return;
}this.__queue={};
}}});
qx.Class.define("qx.html.Decorator",{extend:qx.html.Element,construct:function(decorator,decoratorId){var styles={position:"absolute",top:0,left:0};

if(qx.bom.client.Feature.CSS_POINTER_EVENTS){styles.pointerEvents="none";
}this.base(arguments,null,styles);
this.__decorator=decorator;
this.__id=decoratorId||decorator.toHashCode();
this.useMarkup(decorator.getMarkup());
},members:{__id:null,__decorator:null,getId:function(){return this.__id;
},getDecorator:function(){return this.__decorator;
},resize:function(width,height){this.__decorator.resize(this.getDomElement(),width,height);
},tint:function(color){this.__decorator.tint(this.getDomElement(),color);
},getInsets:function(){return this.__decorator.getInsets();
}},destruct:function(){this.__decorator=null;
}});
qx.Class.define("qx.ui.core.EventHandler",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(){this.base(arguments);
this.__manager=qx.event.Registration.getManager(window);
},statics:{PRIORITY:qx.event.Registration.PRIORITY_FIRST,SUPPORTED_TYPES:{mousemove:1,mouseover:1,mouseout:1,mousedown:1,mouseup:1,click:1,dblclick:1,contextmenu:1,mousewheel:1,keyup:1,keydown:1,keypress:1,keyinput:1,capture:1,losecapture:1,focusin:1,focusout:1,focus:1,blur:1,activate:1,deactivate:1,appear:1,disappear:1,dragstart:1,dragend:1,dragover:1,dragleave:1,drop:1,drag:1,dragchange:1,droprequest:1},IGNORE_CAN_HANDLE:false},members:{__manager:null,__focusEvents:{focusin:1,focusout:1,focus:1,blur:1},__ignoreDisabled:{mouseover:1,mouseout:1,appear:1,disappear:1},canHandleEvent:function(target,type){return target instanceof qx.ui.core.Widget;
},_dispatchEvent:function(domEvent){var domTarget=domEvent.getTarget();
var widgetTarget=qx.ui.core.Widget.getWidgetByElement(domTarget);
var targetChanged=false;

while(widgetTarget&&widgetTarget.isAnonymous()){var targetChanged=true;
widgetTarget=widgetTarget.getLayoutParent();
}if(widgetTarget&&targetChanged&&domEvent.getType()=="activate"){widgetTarget.getContainerElement().activate();
}if(this.__focusEvents[domEvent.getType()]){widgetTarget=widgetTarget&&widgetTarget.getFocusTarget();
if(!widgetTarget){return;
}}if(domEvent.getRelatedTarget){var domRelatedTarget=domEvent.getRelatedTarget();
var widgetRelatedTarget=qx.ui.core.Widget.getWidgetByElement(domRelatedTarget);

while(widgetRelatedTarget&&widgetRelatedTarget.isAnonymous()){widgetRelatedTarget=widgetRelatedTarget.getLayoutParent();
}
if(widgetRelatedTarget){if(this.__focusEvents[domEvent.getType()]){widgetRelatedTarget=widgetRelatedTarget.getFocusTarget();
}if(widgetRelatedTarget===widgetTarget){return;
}}}var currentTarget=domEvent.getCurrentTarget();
var currentWidget=qx.ui.core.Widget.getWidgetByElement(currentTarget);

if(!currentWidget||currentWidget.isAnonymous()){return;
}if(this.__focusEvents[domEvent.getType()]){currentWidget=currentWidget.getFocusTarget();
}var type=domEvent.getType();

if(!currentWidget||!(currentWidget.isEnabled()||this.__ignoreDisabled[type])){return;
}var capture=domEvent.getEventPhase()==qx.event.type.Event.CAPTURING_PHASE;
var listeners=this.__manager.getListeners(currentWidget,type,capture);

if(!listeners||listeners.length===0){return;
}var widgetEvent=qx.event.Pool.getInstance().getObject(domEvent.constructor);
domEvent.clone(widgetEvent);
widgetEvent.setTarget(widgetTarget);
widgetEvent.setRelatedTarget(widgetRelatedTarget||null);
widgetEvent.setCurrentTarget(currentWidget);
var orig=domEvent.getOriginalTarget();

if(orig){var widgetOriginalTarget=qx.ui.core.Widget.getWidgetByElement(orig);

while(widgetOriginalTarget&&widgetOriginalTarget.isAnonymous()){widgetOriginalTarget=widgetOriginalTarget.getLayoutParent();
}widgetEvent.setOriginalTarget(widgetOriginalTarget);
}else{widgetEvent.setOriginalTarget(domTarget);
}for(var i=0,l=listeners.length;i<l;i++){var context=listeners[i].context||currentWidget;
listeners[i].handler.call(context,widgetEvent);
}if(widgetEvent.getPropagationStopped()){domEvent.stopPropagation();
}
if(widgetEvent.getDefaultPrevented()){domEvent.preventDefault();
}qx.event.Pool.getInstance().poolObject(widgetEvent);
},registerEvent:function(target,type,capture){var elem;

if(type==="focus"||type==="blur"){elem=target.getFocusElement();
}else if(type==="load"||type==="input"){elem=target.getContentElement();
}else{elem=target.getContainerElement();
}
if(elem){elem.addListener(type,this._dispatchEvent,this,capture);
}},unregisterEvent:function(target,type,capture){var elem;

if(type==="focus"||type==="blur"){elem=target.getFocusElement();
}else if(type==="load"||type==="input"){elem=target.getContentElement();
}else{elem=target.getContainerElement();
}
if(elem){elem.removeListener(type,this._dispatchEvent,this,capture);
}}},destruct:function(){this.__manager=null;
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.ui.layout.Abstract",{type:"abstract",extend:qx.core.Object,members:{__sizeHint:null,_invalidChildrenCache:null,__widget:null,invalidateLayoutCache:function(){this.__sizeHint=null;
},renderLayout:function(availWidth,availHeight){this.warn("Missing renderLayout() implementation!");
},getSizeHint:function(){if(this.__sizeHint){return this.__sizeHint;
}return this.__sizeHint=this._computeSizeHint();
},hasHeightForWidth:function(){return false;
},getHeightForWidth:function(width){this.warn("Missing getHeightForWidth() implementation!");
return null;
},_computeSizeHint:function(){return null;
},invalidateChildrenCache:function(){this._invalidChildrenCache=true;
},verifyLayoutProperty:function(item,name,value){},_clearSeparators:function(){var widget=this.__widget;

if(widget instanceof qx.ui.core.LayoutItem){widget.clearSeparators();
}},_renderSeparator:function(separator,bounds){this.__widget.renderSeparator(separator,bounds);
},connectToWidget:function(widget){if(widget&&this.__widget){throw new Error("It is not possible to manually set the connected widget.");
}this.__widget=widget;
this.invalidateChildrenCache();
},_getWidget:function(){return this.__widget;
},_applyLayoutChange:function(){if(this.__widget){this.__widget.scheduleLayoutUpdate();
}},_getLayoutChildren:function(){return this.__widget.getLayoutChildren();
}},destruct:function(){this.__widget=this.__sizeHint=null;
}});
qx.Class.define("qx.util.ResourceManager",{extend:qx.core.Object,type:"singleton",statics:{__registry:qx.$$resources||{},__urlPrefix:{}},members:{has:function(id){return !!this.self(arguments).__registry[id];
},getData:function(id){return this.self(arguments).__registry[id]||null;
},getImageWidth:function(id){var entry=this.self(arguments).__registry[id];
return entry?entry[0]:null;
},getImageHeight:function(id){var entry=this.self(arguments).__registry[id];
return entry?entry[1]:null;
},getImageFormat:function(id){var entry=this.self(arguments).__registry[id];
return entry?entry[2]:null;
},isClippedImage:function(id){var entry=this.self(arguments).__registry[id];
return entry&&entry.length>4;
},toUri:function(id){if(id==null){return id;
}var entry=this.self(arguments).__registry[id];

if(!entry){return id;
}
if(typeof entry==="string"){var lib=entry;
}else{var lib=entry[3];
if(!lib){return id;
}}var urlPrefix="";

if(qx.core.Variant.isSet("qx.client","mshtml")&&qx.bom.client.Feature.SSL){urlPrefix=this.self(arguments).__urlPrefix[lib];
}return urlPrefix+qx.$$libraries[lib].resourceUri+"/"+id;
}},defer:function(statics){if(qx.core.Variant.isSet("qx.client","mshtml")){if(qx.bom.client.Feature.SSL){for(var lib in qx.$$libraries){var resourceUri;

if(qx.$$libraries[lib].resourceUri){resourceUri=qx.$$libraries[lib].resourceUri;
}else{statics.__urlPrefix[lib]="";
continue;
}if(resourceUri.match(/^\/\//)!=null){statics.__urlPrefix[lib]=window.location.protocol;
}else if(resourceUri.match(/^\.\//)!=null){var url=document.URL;
statics.__urlPrefix[lib]=url.substring(0,url.lastIndexOf("/")+1);
}else if(resourceUri.match(/^http/)!=null){}else{var index=window.location.href.indexOf("?");
var href;

if(index==-1){href=window.location.href;
}else{href=window.location.href.substring(0,index);
}statics.__urlPrefix[lib]=href.substring(0,href.lastIndexOf("/")+1);
}}}}}});
qx.Class.define("qx.bom.element.Decoration",{statics:{DEBUG:false,__warnings:{},__enableAlphaFix:qx.core.Variant.isSet("qx.client","mshtml"),__alphaFixRepeats:qx.core.Variant.select("qx.client",{"mshtml":{"scale-x":true,"scale-y":true,"scale":true,"no-repeat":true},"default":null}),__repeatToTagname:{"scale-x":"img","scale-y":"img","scale":"img","repeat":"div","no-repeat":"div","repeat-x":"div","repeat-y":"div"},update:function(element,source,repeat,style){var tag=this.getTagName(repeat,source);

if(tag!=element.tagName.toLowerCase()){throw new Error("Image modification not possible because elements could not be replaced at runtime anymore!");
}var ret=this.getAttributes(source,repeat,style);

if(tag==="img"){element.src=ret.src;
}if(element.style.backgroundPosition!=""&&ret.style.backgroundPosition===undefined){ret.style.backgroundPosition=null;
}if(element.style.clip!=""&&ret.style.clip===undefined){ret.style.clip=null;
}var Style=qx.bom.element.Style;
Style.setStyles(element,ret.style);
if(this.__enableAlphaFix){try{element.filters["DXImageTransform.Microsoft.AlphaImageLoader"].apply();
}catch(e){}}},create:function(source,repeat,style){var tag=this.getTagName(repeat,source);
var ret=this.getAttributes(source,repeat,style);
var css=qx.bom.element.Style.compile(ret.style);

if(tag==="img"){return '<img src="'+ret.src+'" style="'+css+'"/>';
}else{return '<div style="'+css+'"></div>';
}},getTagName:function(repeat,source){if(qx.core.Variant.isSet("qx.client","mshtml")){if(source&&this.__enableAlphaFix&&this.__alphaFixRepeats[repeat]&&qx.lang.String.endsWith(source,".png")){return "div";
}}return this.__repeatToTagname[repeat];
},getAttributes:function(source,repeat,style){if(!style){style={};
}
if(!style.position){style.position="absolute";
}
if(qx.core.Variant.isSet("qx.client","mshtml")){style.fontSize=0;
style.lineHeight=0;
}else if(qx.core.Variant.isSet("qx.client","webkit")){style.WebkitUserDrag="none";
}var format=qx.util.ResourceManager.getInstance().getImageFormat(source)||qx.io.ImageLoader.getFormat(source);
{if(source!=null&&format==null){qx.log.Logger.warn("ImageLoader: Not recognized format of external image '"+source+"'!");
}};
var result;
if(this.__enableAlphaFix&&this.__alphaFixRepeats[repeat]&&format==="png"){result=this.__processAlphaFix(style,repeat,source);
}else{if(repeat==="scale"){result=this.__processScale(style,repeat,source);
}else if(repeat==="scale-x"||repeat==="scale-y"){result=this.__processScaleXScaleY(style,repeat,source);
}else{result=this.__processRepeats(style,repeat,source);
}}return result;
},__normalizeWidthHeight:function(style,width,height){if(style.width==null&&width!=null){style.width=width+"px";
}
if(style.height==null&&height!=null){style.height=height+"px";
}return style;
},__getDimension:function(source){var width=qx.util.ResourceManager.getInstance().getImageWidth(source)||qx.io.ImageLoader.getWidth(source);
var height=qx.util.ResourceManager.getInstance().getImageHeight(source)||qx.io.ImageLoader.getHeight(source);
return {width:width,height:height};
},__processAlphaFix:function(style,repeat,source){var dimension=this.__getDimension(source);
style=this.__normalizeWidthHeight(style,dimension.width,dimension.height);
var sizingMethod=repeat=="no-repeat"?"crop":"scale";
var filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+qx.util.ResourceManager.getInstance().toUri(source)+"', sizingMethod='"+sizingMethod+"')";
style.filter=filter;
style.backgroundImage=style.backgroundRepeat="";
return {style:style};
},__processScale:function(style,repeat,source){var uri=qx.util.ResourceManager.getInstance().toUri(source);
var dimension=this.__getDimension(source);
style=this.__normalizeWidthHeight(style,dimension.width,dimension.height);
return {src:uri,style:style};
},__processScaleXScaleY:function(style,repeat,source){var ResourceManager=qx.util.ResourceManager.getInstance();
var clipped=ResourceManager.isClippedImage(source);
var dimension=this.__getDimension(source);

if(clipped){var data=ResourceManager.getData(source);
var uri=ResourceManager.toUri(data[4]);

if(repeat==="scale-x"){style=this.__getStylesForClippedScaleX(style,data,dimension.height);
}else{style=this.__getStylesForClippedScaleY(style,data,dimension.width);
}return {src:uri,style:style};
}else{{this.__checkForPotentialClippedImage(source);
};

if(repeat=="scale-x"){style.height=dimension.height==null?null:dimension.height+"px";
}else if(repeat=="scale-y"){style.width=dimension.width==null?null:dimension.width+"px";
}var uri=ResourceManager.toUri(source);
return {src:uri,style:style};
}},__getStylesForClippedScaleX:function(style,data,height){var imageHeight=qx.util.ResourceManager.getInstance().getImageHeight(data[4]);
style.clip={top:-data[6],height:height};
style.height=imageHeight+"px";
if(style.top!=null){style.top=(parseInt(style.top,10)+data[6])+"px";
}else if(style.bottom!=null){style.bottom=(parseInt(style.bottom,10)+height-imageHeight-data[6])+"px";
}return style;
},__getStylesForClippedScaleY:function(style,data,width){var imageWidth=qx.util.ResourceManager.getInstance().getImageWidth(data[4]);
style.clip={left:-data[5],width:width};
style.width=imageWidth+"px";
if(style.left!=null){style.left=(parseInt(style.left,10)+data[5])+"px";
}else if(style.right!=null){style.right=(parseInt(style.right,10)+width-imageWidth-data[5])+"px";
}return style;
},__processRepeats:function(style,repeat,source){var clipped=qx.util.ResourceManager.getInstance().isClippedImage(source);
var dimension=this.__getDimension(source);
if(clipped&&repeat!=="repeat"){var data=qx.util.ResourceManager.getInstance().getData(source);
var bg=qx.bom.element.Background.getStyles(data[4],repeat,data[5],data[6]);

for(var key in bg){style[key]=bg[key];
}
if(dimension.width!=null&&style.width==null&&(repeat=="repeat-y"||repeat==="no-repeat")){style.width=dimension.width+"px";
}
if(dimension.height!=null&&style.height==null&&(repeat=="repeat-x"||repeat==="no-repeat")){style.height=dimension.height+"px";
}return {style:style};
}else{{if(repeat!=="repeat"){this.__checkForPotentialClippedImage(source);
}};
style=this.__normalizeWidthHeight(style,dimension.width,dimension.height);
style=this.__getStylesForSingleRepeat(style,source,repeat);
return {style:style};
}},__getStylesForSingleRepeat:function(style,source,repeat){var top=null;
var left=null;

if(style.backgroundPosition){var backgroundPosition=style.backgroundPosition.split(" ");
left=parseInt(backgroundPosition[0]);

if(isNaN(left)){left=backgroundPosition[0];
}top=parseInt(backgroundPosition[1]);

if(isNaN(top)){top=backgroundPosition[1];
}}var bg=qx.bom.element.Background.getStyles(source,repeat,left,top);

for(var key in bg){style[key]=bg[key];
}if(style.filter){style.filter="";
}return style;
},__checkForPotentialClippedImage:function(source){if(this.DEBUG&&qx.util.ResourceManager.getInstance().has(source)&&source.indexOf("qx/icon")==-1){if(!this.__warnings[source]){qx.log.Logger.debug("Potential clipped image candidate: "+source);
this.__warnings[source]=true;
}}},isAlphaImageLoaderEnabled:qx.core.Variant.select("qx.client",{"mshtml":function(){return qx.bom.element.Decoration.__enableAlphaFix;
},"default":function(){return false;
}})}});
qx.Bootstrap.define("qx.io.ImageLoader",{statics:{__data:{},__defaultSize:{width:null,height:null},__knownImageTypesRegExp:/\.(png|gif|jpg|jpeg|bmp)\b/i,isLoaded:function(source){var entry=this.__data[source];
return !!(entry&&entry.loaded);
},isFailed:function(source){var entry=this.__data[source];
return !!(entry&&entry.failed);
},isLoading:function(source){var entry=this.__data[source];
return !!(entry&&entry.loading);
},getFormat:function(source){var entry=this.__data[source];
return entry?entry.format:null;
},getSize:function(source){var entry=this.__data[source];
return entry?
{width:entry.width,height:entry.height}:this.__defaultSize;
},getWidth:function(source){var entry=this.__data[source];
return entry?entry.width:null;
},getHeight:function(source){var entry=this.__data[source];
return entry?entry.height:null;
},load:function(source,callback,context){var entry=this.__data[source];

if(!entry){entry=this.__data[source]={};
}if(callback&&!context){context=window;
}if(entry.loaded||entry.loading||entry.failed){if(callback){if(entry.loading){entry.callbacks.push(callback,context);
}else{callback.call(context,source,entry);
}}}else{entry.loading=true;
entry.callbacks=[];

if(callback){entry.callbacks.push(callback,context);
}var el=new Image();
var boundCallback=qx.lang.Function.listener(this.__onload,this,el,source);
el.onload=boundCallback;
el.onerror=boundCallback;
el.src=source;
}},__onload:qx.event.GlobalError.observeMethod(function(event,element,source){var entry=this.__data[source];
if(event.type==="load"){entry.loaded=true;
entry.width=this.__getWidth(element);
entry.height=this.__getHeight(element);
var result=this.__knownImageTypesRegExp.exec(source);

if(result!=null){entry.format=result[1];
}}else{entry.failed=true;
}element.onload=element.onerror=null;
var callbacks=entry.callbacks;
delete entry.loading;
delete entry.callbacks;
for(var i=0,l=callbacks.length;i<l;i+=2){callbacks[i].call(callbacks[i+1],source,entry);
}}),__getWidth:qx.core.Variant.select("qx.client",{"gecko":function(element){return element.naturalWidth;
},"default":function(element){return element.width;
}}),__getHeight:qx.core.Variant.select("qx.client",{"gecko":function(element){return element.naturalHeight;
},"default":function(element){return element.height;
}})}});
qx.Class.define("qx.bom.element.Background",{statics:{__tmpl:["background-image:url(",null,");","background-position:",null,";","background-repeat:",null,";"],__emptyStyles:{backgroundImage:null,backgroundPosition:null,backgroundRepeat:null},__computePosition:function(left,top){var Engine=qx.bom.client.Engine;

if(Engine.GECKO&&Engine.VERSION<1.9&&left==top&&typeof left=="number"){top+=0.01;
}
if(left){var leftCss=(typeof left=="number")?left+"px":left;
}else{leftCss="0";
}
if(top){var topCss=(typeof top=="number")?top+"px":top;
}else{topCss="0";
}return leftCss+" "+topCss;
},compile:function(source,repeat,left,top){var position=this.__computePosition(left,top);
var backgroundImageUrl=qx.util.ResourceManager.getInstance().toUri(source);
var tmpl=this.__tmpl;
tmpl[1]=backgroundImageUrl;
tmpl[4]=position;
tmpl[7]=repeat;
return tmpl.join("");
},getStyles:function(source,repeat,left,top){if(!source){return this.__emptyStyles;
}var position=this.__computePosition(left,top);
var backgroundImageUrl=qx.util.ResourceManager.getInstance().toUri(source);
var map={backgroundPosition:position,backgroundImage:"url("+backgroundImageUrl+")"};

if(repeat!=null){map.backgroundRepeat=repeat;
}return map;
},set:function(element,source,repeat,left,top){var styles=this.getStyles(source,repeat,left,top);

for(var prop in styles){element.style[prop]=styles[prop];
}}}});
qx.Class.define("qx.html.Image",{extend:qx.html.Element,members:{_applyProperty:function(name,value){this.base(arguments,name,value);

if(name==="source"){var elem=this.getDomElement();
var styles=this.getAllStyles();

if(this.getNodeName()=="div"&&this.getStyle("backgroundImage")){styles.backgroundPosition=null;
styles.backgroundRepeat=null;
}var source=this._getProperty("source");
var scale=this._getProperty("scale");
var repeat=scale?"scale":"no-repeat";
qx.bom.element.Decoration.update(elem,source,repeat,styles);
}},_createDomElement:function(){var scale=this._getProperty("scale");
var repeat=scale?"scale":"no-repeat";

if(qx.core.Variant.isSet("qx.client","mshtml")){var source=this._getProperty("source");
this.setNodeName(qx.bom.element.Decoration.getTagName(repeat,source));
}else{this.setNodeName(qx.bom.element.Decoration.getTagName(repeat));
}return this.base(arguments);
},_copyData:function(fromMarkup){return this.base(arguments,true);
},setSource:function(value){this._setProperty("source",value);
return this;
},getSource:function(){return this._getProperty("source");
},resetSource:function(){if(qx.core.Variant.isSet("qx.client","webkit")){this._setProperty("source",qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif"));
}else{this._removeProperty("source",true);
}return this;
},setScale:function(value){this._setProperty("scale",value);
return this;
},getScale:function(){return this._getProperty("scale");
}}});
qx.Class.define("qx.ui.basic.Image",{extend:qx.ui.core.Widget,construct:function(source){this.__contentElements={};
this.base(arguments);

if(source){this.setSource(source);
}},properties:{source:{check:"String",init:null,nullable:true,event:"changeSource",apply:"_applySource",themeable:true},scale:{check:"Boolean",init:false,themeable:true,apply:"_applyScale"},appearance:{refine:true,init:"image"},allowShrinkX:{refine:true,init:false},allowShrinkY:{refine:true,init:false},allowGrowX:{refine:true,init:false},allowGrowY:{refine:true,init:false}},members:{__width:null,__height:null,__mode:null,__contentElements:null,getContentElement:function(){return this.__getSuitableContentElement();
},_createContentElement:function(){return this.__getSuitableContentElement();
},_getContentHint:function(){return {width:this.__width||0,height:this.__height||0};
},_applyEnabled:function(value,old){this.base(arguments,value,old);

if(this.getSource()){this._styleSource();
}},_applySource:function(value){this._styleSource();
},_applyScale:function(value){this._styleSource();
},__setMode:function(mode){this.__mode=mode;
},__getMode:function(){if(this.__mode==null){var source=this.getSource();
var isPng=false;

if(source!=null){isPng=qx.lang.String.endsWith(source,".png");
}
if(this.getScale()&&isPng&&qx.bom.element.Decoration.isAlphaImageLoaderEnabled()){this.__mode="alphaScaled";
}else if(this.getScale()){this.__mode="scaled";
}else{this.__mode="nonScaled";
}}return this.__mode;
},__createSuitableContentElement:function(mode){var scale;
var tagName;

if(mode=="alphaScaled"){scale=true;
tagName="div";
}else if(mode=="nonScaled"){scale=false;
tagName="div";
}else{scale=true;
tagName="img";
}var element=new qx.html.Image(tagName);
element.setScale(scale);
element.setStyles({"overflowX":"hidden","overflowY":"hidden"});
return element;
},__getSuitableContentElement:function(){var mode=this.__getMode();

if(this.__contentElements[mode]==null){this.__contentElements[mode]=this.__createSuitableContentElement(mode);
}return this.__contentElements[mode];
},_styleSource:function(){var source=qx.util.AliasManager.getInstance().resolve(this.getSource());

if(!source){this.getContentElement().resetSource();
return;
}this.__checkForContentElementSwitch(source);
if(qx.util.ResourceManager.getInstance().has(source)){this.__setManagedImage(this.getContentElement(),source);
}else if(qx.io.ImageLoader.isLoaded(source)){this.__setUnmanagedImage(this.getContentElement(),source);
}else{this.__loadUnmanagedImage(this.getContentElement(),source);
}},__checkForContentElementSwitch:qx.core.Variant.select("qx.client",{"mshtml":function(source){var alphaImageLoader=qx.bom.element.Decoration.isAlphaImageLoaderEnabled();
var isPng=qx.lang.String.endsWith(source,".png");

if(alphaImageLoader&&isPng){if(this.getScale()&&this.__getMode()!="alphaScaled"){this.__setMode("alphaScaled");
}else if(!this.getScale()&&this.__getMode()!="nonScaled"){this.__setMode("nonScaled");
}}else{if(this.getScale()&&this.__getMode()!="scaled"){this.__setMode("scaled");
}else if(!this.getScale()&&this.__getMode()!="nonScaled"){this.__setMode("nonScaled");
}}this.__checkForContentElementReplacement(this.__getSuitableContentElement());
},"default":function(source){if(this.getScale()&&this.__getMode()!="scaled"){this.__setMode("scaled");
}else if(!this.getScale()&&this.__getMode("nonScaled")){this.__setMode("nonScaled");
}this.__checkForContentElementReplacement(this.__getSuitableContentElement());
}}),__checkForContentElementReplacement:function(elementToAdd){var container=this.getContainerElement();
var currentContentElement=container.getChild(0);

if(currentContentElement!=elementToAdd){if(currentContentElement!=null){var pixel="px";
var styles={};
var innerSize=this.getInnerSize();

if(innerSize!=null){styles.width=innerSize.width+pixel;
styles.height=innerSize.height+pixel;
}var insets=this.getInsets();
styles.left=insets.left+pixel;
styles.top=insets.top+pixel;
styles.zIndex=10;
elementToAdd.setStyles(styles,true);
elementToAdd.setSelectable(this.getSelectable());
}container.removeAt(0);
container.addAt(elementToAdd,0);
}},__setManagedImage:function(el,source){var ResourceManager=qx.util.ResourceManager.getInstance();
if(!this.getEnabled()){var disabled=source.replace(/\.([a-z]+)$/,"-disabled.$1");

if(ResourceManager.has(disabled)){source=disabled;
this.addState("replacement");
}else{this.removeState("replacement");
}}if(el.getSource()===source){return;
}el.setSource(source);
this.__updateContentHint(ResourceManager.getImageWidth(source),ResourceManager.getImageHeight(source));
},__setUnmanagedImage:function(el,source){var ImageLoader=qx.io.ImageLoader;
el.setSource(source);
var width=ImageLoader.getWidth(source);
var height=ImageLoader.getHeight(source);
this.__updateContentHint(width,height);
},__loadUnmanagedImage:function(el,source){var ImageLoader=qx.io.ImageLoader;
{if(!qx.lang.String.startsWith(source.toLowerCase(),"http")){var self=this.self(arguments);

if(!self.__warned){self.__warned={};
}
if(!self.__warned[source]){this.debug("try to load a unmanaged relative image: "+source);
self.__warned[source]=true;
}}};
if(!ImageLoader.isFailed(source)){ImageLoader.load(source,this.__loaderCallback,this);
}else{if(el!=null){el.resetSource();
}}},__loaderCallback:function(source,imageInfo){if(this.$$disposed===true){return;
}if(source!==qx.util.AliasManager.getInstance().resolve(this.getSource())){return;
}if(imageInfo.failed){this.warn("Image could not be loaded: "+source);
}this._styleSource();
},__updateContentHint:function(width,height){if(width!==this.__width||height!==this.__height){this.__width=width;
this.__height=height;
qx.ui.core.queue.Layout.add(this);
}}},destruct:function(){this._disposeMap("__contentElements");
}});
qx.Class.define("qx.ui.core.DragDropCursor",{extend:qx.ui.basic.Image,include:qx.ui.core.MPlacement,type:"singleton",construct:function(){this.base(arguments);
this.setZIndex(1e8);
this.setDomMove(true);
var root=this.getApplicationRoot();
root.add(this,{left:-1000,top:-1000});
},properties:{appearance:{refine:true,init:"dragdrop-cursor"},action:{check:["alias","copy","move"],apply:"_applyAction",nullable:true}},members:{_applyAction:function(value,old){if(old){this.removeState(old);
}
if(value){this.addState(value);
}}}});
qx.Class.define("qx.event.Idle",{extend:qx.core.Object,type:"singleton",construct:function(){this.base(arguments);
var timer=new qx.event.Timer(this.getTimeoutInterval());
timer.addListener("interval",this._onInterval,this);
timer.start();
this.__timer=timer;
},events:{"interval":"qx.event.type.Event"},properties:{timeoutInterval:{check:"Number",init:100,apply:"_applyTimeoutInterval"}},members:{__timer:null,_applyTimeoutInterval:function(value){this.__timer.setInterval(value);
},_onInterval:function(){this.fireEvent("interval");
}},destruct:function(){if(this.__timer){this.__timer.stop();
}this.__timer=null;
}});
qx.Class.define("qx.util.placement.Placement",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__defaultAxis=new qx.util.placement.DirectAxis();
},properties:{axisX:{check:"qx.util.placement.AbstractAxis"},axisY:{check:"qx.util.placement.AbstractAxis"},edge:{check:["top","right","bottom","left"],init:"top"},align:{check:["top","right","bottom","left"],init:"right"}},statics:{__instance:null,compute:function(size,area,target,offsets,position,modeX,modeY){this.__instance=this.__instance||new qx.util.placement.Placement();
var splitted=position.split("-");
var edge=splitted[0];
var align=splitted[1];
this.__instance.set({axisX:this.__getAxis(modeX),axisY:this.__getAxis(modeY),edge:edge,align:align});
return this.__instance.compute(size,area,target,offsets);
},__direct:null,__keepAlign:null,__bestFit:null,__getAxis:function(mode){switch(mode){case "direct":this.__direct=this.__direct||new qx.util.placement.DirectAxis();
return this.__direct;
case "keep-align":this.__keepAlign=this.__keepAlign||new qx.util.placement.KeepAlignAxis();
return this.__keepAlign;
case "best-fit":this.__bestFit=this.__bestFit||new qx.util.placement.BestFitAxis();
return this.__bestFit;
default:throw new Error("Invalid 'mode' argument!'");
}}},members:{__defaultAxis:null,compute:function(size,area,target,offsets){{this.assertObject(size,"size");
this.assertNumber(size.width,"size.width");
this.assertNumber(size.height,"size.height");
this.assertObject(area,"area");
this.assertNumber(area.width,"area.width");
this.assertNumber(area.height,"area.height");
this.assertObject(target,"target");
this.assertNumber(target.top,"target.top");
this.assertNumber(target.right,"target.right");
this.assertNumber(target.bottom,"target.bottom");
this.assertNumber(target.left,"target.left");
this.assertObject(offsets,"offsets");
this.assertNumber(offsets.top,"offsets.top");
this.assertNumber(offsets.right,"offsets.right");
this.assertNumber(offsets.bottom,"offsets.bottom");
this.assertNumber(offsets.left,"offsets.left");
};
var axisX=this.getAxisX()||this.__defaultAxis;
var left=axisX.computeStart(size.width,{start:target.left,end:target.right},{start:offsets.left,end:offsets.right},area.width,this.__getPositionX());
var axisY=this.getAxisY()||this.__defaultAxis;
var top=axisY.computeStart(size.height,{start:target.top,end:target.bottom},{start:offsets.top,end:offsets.bottom},area.height,this.__getPositionY());
return {left:left,top:top};
},__getPositionX:function(){var edge=this.getEdge();
var align=this.getAlign();

if(edge=="left"){return "edge-start";
}else if(edge=="right"){return "edge-end";
}else if(align=="left"){return "align-start";
}else if(align=="right"){return "align-end";
}},__getPositionY:function(){var edge=this.getEdge();
var align=this.getAlign();

if(edge=="top"){return "edge-start";
}else if(edge=="bottom"){return "edge-end";
}else if(align=="top"){return "align-start";
}else if(align=="bottom"){return "align-end";
}}},destruct:function(){this._disposeObjects('__defaultAxis');
}});
qx.Class.define("qx.util.placement.AbstractAxis",{extend:qx.core.Object,members:{computeStart:function(size,target,offsets,areaSize,position){throw new Error("abstract method call!");
},_moveToEdgeAndAlign:function(size,target,offsets,position){switch(position){case "edge-start":return target.start-offsets.end-size;
case "edge-end":return target.end+offsets.start;
case "align-start":return target.start+offsets.start;
case "align-end":return target.end-offsets.end-size;
}},_isInRange:function(start,size,areaSize){return start>=0&&start+size<=areaSize;
}}});
qx.Class.define("qx.util.placement.DirectAxis",{extend:qx.util.placement.AbstractAxis,members:{computeStart:function(size,target,offsets,areaSize,position){return this._moveToEdgeAndAlign(size,target,offsets,position);
}}});
qx.Class.define("qx.util.placement.KeepAlignAxis",{extend:qx.util.placement.AbstractAxis,members:{computeStart:function(size,target,offsets,areaSize,position){var start=this._moveToEdgeAndAlign(size,target,offsets,position);
var range1End,range2Start;

if(this._isInRange(start,size,areaSize)){return start;
}
if(position=="edge-start"||position=="edge-end"){range1End=target.start-offsets.end;
range2Start=target.end+offsets.start;
}else{range1End=target.end-offsets.end;
range2Start=target.start+offsets.start;
}
if(range1End>areaSize-range2Start){start=range1End-size;
}else{start=range2Start;
}return start;
}}});
qx.Class.define("qx.util.placement.BestFitAxis",{extend:qx.util.placement.AbstractAxis,members:{computeStart:function(size,target,offsets,areaSize,position){var start=this._moveToEdgeAndAlign(size,target,offsets,position);

if(this._isInRange(start,size,areaSize)){return start;
}
if(start<0){start=Math.min(0,areaSize-size);
}
if(start+size>areaSize){start=Math.max(0,areaSize-size);
}return start;
}}});
qx.Class.define("qx.ui.popup.Manager",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__objects={};
qx.event.Registration.addListener(document.documentElement,"mousedown",this.__onMouseDown,this,true);
qx.bom.Element.addListener(window,"blur",this.hideAll,this);
},members:{__objects:null,add:function(obj){{if(!(obj instanceof qx.ui.popup.Popup)){throw new Error("Object is no popup: "+obj);
}};
this.__objects[obj.$$hash]=obj;
this.__updateIndexes();
},remove:function(obj){{if(!(obj instanceof qx.ui.popup.Popup)){throw new Error("Object is no popup: "+obj);
}};
var reg=this.__objects;

if(reg){delete reg[obj.$$hash];
this.__updateIndexes();
}},hideAll:function(){var reg=this.__objects;

if(reg){for(var hash in reg){reg[hash].exclude();
}}},__updateIndexes:function(){var min=1e7;
var reg=this.__objects;

for(var hash in reg){reg[hash].setZIndex(min++);
}},__onMouseDown:function(e){var target=qx.ui.core.Widget.getWidgetByElement(e.getTarget());
var reg=this.__objects;

for(var hash in reg){var obj=reg[hash];

if(!obj.getAutoHide()||target==obj||qx.ui.core.Widget.contains(obj,target)){continue;
}obj.exclude();
}}},destruct:function(){qx.event.Registration.removeListener(document.documentElement,"mousedown",this.__onMouseDown,this,true);
this._disposeMap("__objects");
}});
qx.Class.define("qx.ui.layout.Grow",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){this.assert(false,"The property '"+name+"' is not supported by the Grow layout!");
},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var child,size,width,height;
for(var i=0,l=children.length;i<l;i++){child=children[i];
size=child.getSizeHint();
width=availWidth;

if(width<size.minWidth){width=size.minWidth;
}else if(width>size.maxWidth){width=size.maxWidth;
}height=availHeight;

if(height<size.minHeight){height=size.minHeight;
}else if(height>size.maxHeight){height=size.maxHeight;
}child.renderLayout(0,0,width,height);
}},_computeSizeHint:function(){var children=this._getLayoutChildren();
var child,size;
var neededWidth=0,neededHeight=0;
var minWidth=0,minHeight=0;
var maxWidth=Infinity,maxHeight=Infinity;
for(var i=0,l=children.length;i<l;i++){child=children[i];
size=child.getSizeHint();
neededWidth=Math.max(neededWidth,size.width);
neededHeight=Math.max(neededHeight,size.height);
minWidth=Math.max(minWidth,size.minWidth);
minHeight=Math.max(minHeight,size.minHeight);
maxWidth=Math.min(maxWidth,size.maxWidth);
maxHeight=Math.min(maxHeight,size.maxHeight);
}return {width:neededWidth,height:neededHeight,minWidth:minWidth,minHeight:minHeight,maxWidth:maxWidth,maxHeight:maxHeight};
}}});
qx.Class.define("qx.ui.basic.Atom",{extend:qx.ui.core.Widget,construct:function(label,icon){{this.assertArgumentsCount(arguments,0,2);
};
this.base(arguments);
this._setLayout(new qx.ui.layout.Atom());

if(label!=null){this.setLabel(label);
}
if(icon!=null){this.setIcon(icon);
}},properties:{appearance:{refine:true,init:"atom"},label:{apply:"_applyLabel",nullable:true,check:"String",event:"changeLabel"},rich:{check:"Boolean",init:false,apply:"_applyRich"},icon:{check:"String",apply:"_applyIcon",nullable:true,themeable:true,event:"changeIcon"},gap:{check:"Integer",nullable:false,event:"changeGap",apply:"_applyGap",themeable:true,init:4},show:{init:"both",check:["both","label","icon"],themeable:true,inheritable:true,apply:"_applyShow",event:"changeShow"},iconPosition:{init:"left",check:["top","right","bottom","left"],themeable:true,apply:"_applyIconPosition"},center:{init:false,check:"Boolean",themeable:true,apply:"_applyCenter"}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "label":control=new qx.ui.basic.Label(this.getLabel());
control.setAnonymous(true);
control.setRich(this.getRich());
this._add(control);

if(this.getLabel()==null||this.getShow()==="icon"){control.exclude();
}break;
case "icon":control=new qx.ui.basic.Image(this.getIcon());
control.setAnonymous(true);
this._addAt(control,0);

if(this.getIcon()==null||this.getShow()==="label"){control.exclude();
}break;
}return control||this.base(arguments,id);
},_forwardStates:{focused:true,hovered:true},_handleLabel:function(){if(this.getLabel()==null||this.getShow()==="icon"){this._excludeChildControl("label");
}else{this._showChildControl("label");
}},_handleIcon:function(){if(this.getIcon()==null||this.getShow()==="label"){this._excludeChildControl("icon");
}else{this._showChildControl("icon");
}},_applyLabel:function(value,old){var label=this.getChildControl("label",true);

if(label){label.setValue(value);
}this._handleLabel();
},_applyRich:function(value,old){var label=this.getChildControl("label",true);

if(label){label.setRich(value);
}},_applyIcon:function(value,old){var icon=this.getChildControl("icon",true);

if(icon){icon.setSource(value);
}this._handleIcon();
},_applyGap:function(value,old){this._getLayout().setGap(value);
},_applyShow:function(value,old){this._handleLabel();
this._handleIcon();
},_applyIconPosition:function(value,old){this._getLayout().setIconPosition(value);
},_applyCenter:function(value,old){this._getLayout().setCenter(value);
}}});
qx.Class.define("qx.ui.layout.Atom",{extend:qx.ui.layout.Abstract,properties:{gap:{check:"Integer",init:4,apply:"_applyLayoutChange"},iconPosition:{check:["left","top","right","bottom"],init:"left",apply:"_applyLayoutChange"},center:{check:"Boolean",init:false,apply:"_applyLayoutChange"}},members:{verifyLayoutProperty:function(item,name,value){this.assert(false,"The property '"+name+"' is not supported by the Atom layout!");
},renderLayout:function(availWidth,availHeight){var Util=qx.ui.layout.Util;
var iconPosition=this.getIconPosition();
var children=this._getLayoutChildren();
var length=children.length;
var left,top,width,height;
var child,hint;
var gap=this.getGap();
var center=this.getCenter();
if(iconPosition==="bottom"||iconPosition==="right"){var start=length-1;
var end=-1;
var increment=-1;
}else{var start=0;
var end=length;
var increment=1;
}if(iconPosition=="top"||iconPosition=="bottom"){if(center){var allocatedHeight=0;

for(var i=start;i!=end;i+=increment){height=children[i].getSizeHint().height;

if(height>0){allocatedHeight+=height;

if(i!=start){allocatedHeight+=gap;
}}}top=Math.round((availHeight-allocatedHeight)/2);
}else{top=0;
}
for(var i=start;i!=end;i+=increment){child=children[i];
hint=child.getSizeHint();
width=Math.min(hint.maxWidth,Math.max(availWidth,hint.minWidth));
height=hint.height;
left=Util.computeHorizontalAlignOffset("center",width,availWidth);
child.renderLayout(left,top,width,height);
if(height>0){top+=height+gap;
}}}else{var remainingWidth=availWidth;
var shrinkTarget=null;
var count=0;

for(var i=start;i!=end;i+=increment){child=children[i];
width=child.getSizeHint().width;

if(width>0){if(!shrinkTarget&&child instanceof qx.ui.basic.Label){shrinkTarget=child;
}else{remainingWidth-=width;
}count++;
}}
if(count>1){var gapSum=(count-1)*gap;
remainingWidth-=gapSum;
}
if(shrinkTarget){var hint=shrinkTarget.getSizeHint();
var shrinkTargetWidth=Math.max(hint.minWidth,Math.min(remainingWidth,hint.maxWidth));
remainingWidth-=shrinkTargetWidth;
}
if(center&&remainingWidth>0){left=Math.round(remainingWidth/2);
}else{left=0;
}
for(var i=start;i!=end;i+=increment){child=children[i];
hint=child.getSizeHint();
height=Math.min(hint.maxHeight,Math.max(availHeight,hint.minHeight));

if(child===shrinkTarget){width=shrinkTargetWidth;
}else{width=hint.width;
}top=Util.computeVerticalAlignOffset("middle",hint.height,availHeight);
child.renderLayout(left,top,width,height);
if(width>0){left+=width+gap;
}}}},_computeSizeHint:function(){var children=this._getLayoutChildren();
var length=children.length;
var hint,result;
if(length===1){var hint=children[0].getSizeHint();
result={width:hint.width,height:hint.height,minWidth:hint.minWidth,minHeight:hint.minHeight};
}else{var minWidth=0,width=0;
var minHeight=0,height=0;
var iconPosition=this.getIconPosition();
var gap=this.getGap();

if(iconPosition==="top"||iconPosition==="bottom"){var count=0;

for(var i=0;i<length;i++){hint=children[i].getSizeHint();
width=Math.max(width,hint.width);
minWidth=Math.max(minWidth,hint.minWidth);
if(hint.height>0){height+=hint.height;
minHeight+=hint.minHeight;
count++;
}}
if(count>1){var gapSum=(count-1)*gap;
height+=gapSum;
minHeight+=gapSum;
}}else{var count=0;

for(var i=0;i<length;i++){hint=children[i].getSizeHint();
height=Math.max(height,hint.height);
minHeight=Math.max(minHeight,hint.minHeight);
if(hint.width>0){width+=hint.width;
minWidth+=hint.minWidth;
count++;
}}
if(count>1){var gapSum=(count-1)*gap;
width+=gapSum;
minWidth+=gapSum;
}}result={minWidth:minWidth,width:width,minHeight:minHeight,height:height};
}return result;
}}});
qx.Class.define("qx.ui.layout.Util",{statics:{PERCENT_VALUE:/[0-9]+(?:\.[0-9]+)?%/,computeFlexOffsets:function(flexibles,avail,used){var child,key,flexSum,flexStep;
var grow=avail>used;
var remaining=Math.abs(avail-used);
var roundingOffset,currentOffset;
var result={};

for(key in flexibles){child=flexibles[key];
result[key]={potential:grow?child.max-child.value:child.value-child.min,flex:grow?child.flex:1/child.flex,offset:0};
}while(remaining!=0){flexStep=Infinity;
flexSum=0;

for(key in result){child=result[key];

if(child.potential>0){flexSum+=child.flex;
flexStep=Math.min(flexStep,child.potential/child.flex);
}}if(flexSum==0){break;
}flexStep=Math.min(remaining,flexStep*flexSum)/flexSum;
roundingOffset=0;

for(key in result){child=result[key];

if(child.potential>0){currentOffset=Math.min(remaining,child.potential,Math.ceil(flexStep*child.flex));
roundingOffset+=currentOffset-flexStep*child.flex;

if(roundingOffset>=1){roundingOffset-=1;
currentOffset-=1;
}child.potential-=currentOffset;

if(grow){child.offset+=currentOffset;
}else{child.offset-=currentOffset;
}remaining-=currentOffset;
}}}return result;
},computeHorizontalAlignOffset:function(align,width,availWidth,marginLeft,marginRight){if(marginLeft==null){marginLeft=0;
}
if(marginRight==null){marginRight=0;
}var value=0;

switch(align){case "left":value=marginLeft;
break;
case "right":value=availWidth-width-marginRight;
break;
case "center":value=Math.round((availWidth-width)/2);
if(value<marginLeft){value=marginLeft;
}else if(value<marginRight){value=Math.max(marginLeft,availWidth-width-marginRight);
}break;
}return value;
},computeVerticalAlignOffset:function(align,height,availHeight,marginTop,marginBottom){if(marginTop==null){marginTop=0;
}
if(marginBottom==null){marginBottom=0;
}var value=0;

switch(align){case "top":value=marginTop;
break;
case "bottom":value=availHeight-height-marginBottom;
break;
case "middle":value=Math.round((availHeight-height)/2);
if(value<marginTop){value=marginTop;
}else if(value<marginBottom){value=Math.max(marginTop,availHeight-height-marginBottom);
}break;
}return value;
},collapseMargins:function(varargs){var max=0,min=0;

for(var i=0,l=arguments.length;i<l;i++){var value=arguments[i];

if(value<0){min=Math.min(min,value);
}else if(value>0){max=Math.max(max,value);
}}return max+min;
},computeHorizontalGaps:function(children,spacing,collapse){if(spacing==null){spacing=0;
}var gaps=0;

if(collapse){gaps+=children[0].getMarginLeft();

for(var i=1,l=children.length;i<l;i+=1){gaps+=this.collapseMargins(spacing,children[i-1].getMarginRight(),children[i].getMarginLeft());
}gaps+=children[l-1].getMarginRight();
}else{for(var i=1,l=children.length;i<l;i+=1){gaps+=children[i].getMarginLeft()+children[i].getMarginRight();
}gaps+=(spacing*(l-1));
}return gaps;
},computeVerticalGaps:function(children,spacing,collapse){if(spacing==null){spacing=0;
}var gaps=0;

if(collapse){gaps+=children[0].getMarginTop();

for(var i=1,l=children.length;i<l;i+=1){gaps+=this.collapseMargins(spacing,children[i-1].getMarginBottom(),children[i].getMarginTop());
}gaps+=children[l-1].getMarginBottom();
}else{for(var i=1,l=children.length;i<l;i+=1){gaps+=children[i].getMarginTop()+children[i].getMarginBottom();
}gaps+=(spacing*(l-1));
}return gaps;
},computeHorizontalSeparatorGaps:function(children,spacing,separator){var instance=qx.theme.manager.Decoration.getInstance().resolve(separator);
var insets=instance.getInsets();
var width=insets.left+insets.right;
var gaps=0;

for(var i=0,l=children.length;i<l;i++){var child=children[i];
gaps+=child.getMarginLeft()+child.getMarginRight();
}gaps+=(spacing+width+spacing)*(l-1);
return gaps;
},computeVerticalSeparatorGaps:function(children,spacing,separator){var instance=qx.theme.manager.Decoration.getInstance().resolve(separator);
var insets=instance.getInsets();
var height=insets.top+insets.bottom;
var gaps=0;

for(var i=0,l=children.length;i<l;i++){var child=children[i];
gaps+=child.getMarginTop()+child.getMarginBottom();
}gaps+=(spacing+height+spacing)*(l-1);
return gaps;
},arrangeIdeals:function(beginMin,beginIdeal,beginMax,endMin,endIdeal,endMax){if(beginIdeal<beginMin||endIdeal<endMin){if(beginIdeal<beginMin&&endIdeal<endMin){beginIdeal=beginMin;
endIdeal=endMin;
}else if(beginIdeal<beginMin){endIdeal-=(beginMin-beginIdeal);
beginIdeal=beginMin;
if(endIdeal<endMin){endIdeal=endMin;
}}else if(endIdeal<endMin){beginIdeal-=(endMin-endIdeal);
endIdeal=endMin;
if(beginIdeal<beginMin){beginIdeal=beginMin;
}}}
if(beginIdeal>beginMax||endIdeal>endMax){if(beginIdeal>beginMax&&endIdeal>endMax){beginIdeal=beginMax;
endIdeal=endMax;
}else if(beginIdeal>beginMax){endIdeal+=(beginIdeal-beginMax);
beginIdeal=beginMax;
if(endIdeal>endMax){endIdeal=endMax;
}}else if(endIdeal>endMax){beginIdeal+=(endIdeal-endMax);
endIdeal=endMax;
if(beginIdeal>beginMax){beginIdeal=beginMax;
}}}return {begin:beginIdeal,end:endIdeal};
}}});
qx.Interface.define("qx.ui.form.IStringForm",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){return arguments.length==1;
},resetValue:function(){},getValue:function(){}}});
qx.Class.define("qx.ui.basic.Label",{extend:qx.ui.core.Widget,implement:[qx.ui.form.IStringForm],construct:function(value){this.base(arguments);

if(value!=null){this.setValue(value);
}{};
},properties:{rich:{check:"Boolean",init:false,event:"changeRich",apply:"_applyRich"},wrap:{check:"Boolean",init:true,apply:"_applyWrap"},value:{check:"String",apply:"_applyValue",event:"changeValue",nullable:true},buddy:{check:"qx.ui.core.Widget",apply:"_applyBuddy",nullable:true,init:null},textAlign:{check:["left","center","right"],nullable:true,themeable:true,apply:"_applyTextAlign",event:"changeTextAlign"},appearance:{refine:true,init:"label"},selectable:{refine:true,init:false},allowGrowX:{refine:true,init:false},allowGrowY:{refine:true,init:false},allowShrinkY:{refine:true,init:false}},members:{__font:null,__invalidContentSize:null,__buddyEnabledBinding:null,__clickListenerId:null,_getContentHint:function(){if(this.__invalidContentSize){this.__contentSize=this.__computeContentSize();
delete this.__invalidContentSize;
}return {width:this.__contentSize.width,height:this.__contentSize.height};
},_hasHeightForWidth:function(){return this.getRich()&&this.getWrap();
},_applySelectable:function(value){if(qx.core.Variant.isSet("qx.client","gecko")){if(value&&!this.isRich()){{this.warn("Only rich labels are selectable in browsers with Gecko engine!");
};
return;
}}this.base(arguments,value);
if(qx.core.Variant.isSet("qx.client","webkit")){this.getContainerElement().setStyle("userSelect",value?"text":"none");
this.getContentElement().setStyle("userSelect",value?"text":"none");
}},_getContentHeightForWidth:function(width){if(!this.getRich()&&!this.getWrap()){return null;
}return this.__computeContentSize(width).height;
},_createContentElement:function(){return new qx.html.Label;
},_applyTextAlign:function(value,old){this.getContentElement().setStyle("textAlign",value);
},_applyTextColor:function(value,old){if(value){this.getContentElement().setStyle("color",qx.theme.manager.Color.getInstance().resolve(value));
}else{this.getContentElement().removeStyle("color");
}},__contentSize:{width:0,height:0},_applyFont:function(value,old){var styles;

if(value){this.__font=qx.theme.manager.Font.getInstance().resolve(value);
styles=this.__font.getStyles();
}else{this.__font=null;
styles=qx.bom.Font.getDefaultStyles();
}this.getContentElement().setStyles(styles);
this.__invalidContentSize=true;
qx.ui.core.queue.Layout.add(this);
},__computeContentSize:function(width){var Label=qx.bom.Label;
var font=this.getFont();
var styles=font?this.__font.getStyles():qx.bom.Font.getDefaultStyles();
var content=this.getValue()||"A";
var rich=this.getRich();
return rich?Label.getHtmlSize(content,styles,width):Label.getTextSize(content,styles);
},_applyBuddy:function(value,old){if(old!=null){old.removeBinding(this.__buddyEnabledBinding);
this.__buddyEnabledBinding=null;
this.removeListenerById(this.__clickListenerId);
this.__clickListenerId=null;
}
if(value!=null){this.__buddyEnabledBinding=value.bind("enabled",this,"enabled");
this.__clickListenerId=this.addListener("click",value.focus,value);
}},_applyRich:function(value){this.getContentElement().setRich(value);
this.__invalidContentSize=true;
qx.ui.core.queue.Layout.add(this);
},_applyWrap:function(value,old){if(value&&!this.isRich()){{this.warn("Only rich labels support wrap.");
};
}},_onChangeLocale:null,_applyValue:function(value,old){this.getContentElement().setValue(value);
this.__invalidContentSize=true;
qx.ui.core.queue.Layout.add(this);
this.fireDataEvent("changeContent",value,old);
}},destruct:function(){{};
if(this.__buddyEnabledBinding!=null){var buddy=this.getBuddy();

if(buddy!=null&&!buddy.isDisposed()){buddy.removeBinding(this.__buddyEnabledBinding);
}}this.__font=this.__buddyEnabledBinding=null;
}});
qx.Class.define("qx.html.Label",{extend:qx.html.Element,members:{__rich:null,_applyProperty:function(name,value){this.base(arguments,name,value);

if(name=="value"){var element=this.getDomElement();
qx.bom.Label.setValue(element,value);
}},_createDomElement:function(){var rich=this.__rich;
var el=qx.bom.Label.create(this._content,rich);
return el;
},_copyData:function(fromMarkup){return this.base(arguments,true);
},setRich:function(value){var element=this.getDomElement();

if(element){throw new Error("The label mode cannot be modified after initial creation");
}value=!!value;

if(this.__rich==value){return;
}this.__rich=value;
return this;
},setValue:function(value){this._setProperty("value",value);
return this;
},getValue:function(){return this._getProperty("value");
},setContent:function(value){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use the setValue() method instead.");
return this.setValue(value);
},getContent:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use the getValue() method instead.");
return this.getValue();
}}});
qx.Class.define("qx.bom.Label",{statics:{__styles:{fontFamily:1,fontSize:1,fontWeight:1,fontStyle:1,lineHeight:1},__prepareText:function(){var el=this.__createMeasureElement(false);
document.body.insertBefore(el,document.body.firstChild);
return this._textElement=el;
},__prepareHtml:function(){var el=this.__createMeasureElement(true);
document.body.insertBefore(el,document.body.firstChild);
return this._htmlElement=el;
},__createMeasureElement:function(html){var el=qx.bom.Element.create("div");
var style=el.style;
style.width=style.height="auto";
style.left=style.top="-1000px";
style.visibility="hidden";
style.position="absolute";
style.overflow="visible";

if(html){style.whiteSpace="normal";
}else{style.whiteSpace="nowrap";

if(qx.core.Variant.isSet("qx.client","gecko")){var inner=document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul","label");
var style=inner.style;
style.padding="0";

for(var key in this.__styles){style[key]="inherit";
}el.appendChild(inner);
}}return el;
},__getStyles:function(html){var styles={};

if(html){styles.whiteSpace="normal";
}else if(qx.core.Variant.isSet("qx.client","gecko")){styles.display="block";
}else{styles.overflow="hidden";
styles.whiteSpace="nowrap";
styles.textOverflow="ellipsis";
styles.userSelect="none";
if(qx.core.Variant.isSet("qx.client","opera")){styles.OTextOverflow="ellipsis";
}}return styles;
},create:function(content,html,win){if(!win){win=window;
}
if(html){var el=win.document.createElement("div");
el.useHtml=true;
}else if(qx.core.Variant.isSet("qx.client","gecko")){var el=win.document.createElement("div");
var xulel=win.document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul","label");
var style=xulel.style;
style.cursor="inherit";
style.color="inherit";
style.overflow="hidden";
style.maxWidth="100%";
style.padding="0";
for(var key in this.__styles){xulel.style[key]="inherit";
}xulel.setAttribute("crop","end");
el.appendChild(xulel);
}else{var el=win.document.createElement("div");
qx.bom.element.Style.setStyles(el,this.__getStyles(html));
}
if(content){this.setValue(el,content);
}return el;
},setValue:function(element,value){value=value||"";

if(element.useHtml){element.innerHTML=value;
}else if(qx.core.Variant.isSet("qx.client","gecko")){element.firstChild.setAttribute("value",value);
}else{qx.bom.element.Attribute.set(element,"text",value);
}},getValue:function(element){if(element.useHtml){return element.innerHTML;
}else if(qx.core.Variant.isSet("qx.client","gecko")){return element.firstChild.getAttribute("value")||"";
}else{return qx.bom.element.Attribute.get(element,"text");
}},getHtmlSize:function(content,styles,width){var element=this._htmlElement||this.__prepareHtml();
element.style.width=width!==undefined?width+"px":"auto";
element.innerHTML=content;
return this.__measureSize(element,styles);
},getTextSize:function(text,styles){var element=this._textElement||this.__prepareText();

if(qx.core.Variant.isSet("qx.client","gecko")){element.firstChild.setAttribute("value",text);
}else{qx.bom.element.Attribute.set(element,"text",text);
}return this.__measureSize(element,styles);
},__measureSize:function(element,styles){var keys=this.__styles;

if(!styles){styles={};
}
for(var key in keys){element.style[key]=styles[key]||"";
}var size=qx.bom.element.Dimension.getSize(element);

if(qx.core.Variant.isSet("qx.client","gecko")){if(!qx.bom.client.Platform.WIN){size.width++;
}}return size;
},setContent:function(element,value){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use the setValue() method instead.");
this.setValue(element,value);
},getContent:function(element){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use the getValue() method instead.");
return this.getValue(element);
}}});
qx.Class.define("qx.bom.element.Dimension",{statics:{getWidth:qx.core.Variant.select("qx.client",{"gecko":function(element){if(element.getBoundingClientRect){var rect=element.getBoundingClientRect();
return Math.round(rect.right)-Math.round(rect.left);
}else{return element.offsetWidth;
}},"default":function(element){return element.offsetWidth;
}}),getHeight:qx.core.Variant.select("qx.client",{"gecko":function(element){if(element.getBoundingClientRect){var rect=element.getBoundingClientRect();
return Math.round(rect.bottom)-Math.round(rect.top);
}else{return element.offsetHeight;
}},"default":function(element){return element.offsetHeight;
}}),getSize:function(element){return {width:this.getWidth(element),height:this.getHeight(element)};
},__hiddenScrollbars:{visible:true,hidden:true},getContentWidth:function(element){var Style=qx.bom.element.Style;
var overflowX=qx.bom.element.Overflow.getX(element);
var paddingLeft=parseInt(Style.get(element,"paddingLeft")||"0px",10);
var paddingRight=parseInt(Style.get(element,"paddingRight")||"0px",10);

if(this.__hiddenScrollbars[overflowX]){return element.clientWidth-paddingLeft-paddingRight;
}else{if(element.clientWidth>=element.scrollWidth){return Math.max(element.clientWidth,element.scrollWidth)-paddingLeft-paddingRight;
}else{var width=element.scrollWidth-paddingLeft;
var Engine=qx.bom.client.Engine;

if(Engine.NAME==="mshtml"&&Engine.VERSION==6){width-=paddingRight;
}return width;
}}},getContentHeight:function(element){var Style=qx.bom.element.Style;
var overflowY=qx.bom.element.Overflow.getY(element);
var paddingTop=parseInt(Style.get(element,"paddingTop")||"0px",10);
var paddingBottom=parseInt(Style.get(element,"paddingBottom")||"0px",10);

if(this.__hiddenScrollbars[overflowY]){return element.clientHeight-paddingTop-paddingBottom;
}else{if(element.clientHeight>=element.scrollHeight){return Math.max(element.clientHeight,element.scrollHeight)-paddingTop-paddingBottom;
}else{var height=element.scrollHeight-paddingTop;
var Engine=qx.bom.client.Engine;

if(Engine.NAME==="mshtml"&&Engine.VERSION==6){height-=paddingBottom;
}return height;
}}},getContentSize:function(element){return {width:this.getContentWidth(element),height:this.getContentHeight(element)};
}}});
qx.Interface.define("qx.ui.form.IForm",{events:{"changeEnabled":"qx.event.type.Data","changeValid":"qx.event.type.Data","changeInvalidMessage":"qx.event.type.Data","changeRequired":"qx.event.type.Data"},members:{setEnabled:function(enabled){return arguments.length==1;
},getEnabled:function(){},setRequired:function(required){return arguments.length==1;
},getRequired:function(){},setValid:function(valid){return arguments.length==1;
},getValid:function(){},setInvalidMessage:function(message){return arguments.length==1;
},getInvalidMessage:function(){}}});
qx.Class.define("qx.application.Inline",{extend:qx.application.AbstractGui,members:{_createRootWidget:function(){return new qx.ui.root.Page(document);
}}});
qx.Mixin.define("qx.ui.core.MBlocker",{construct:function(){this.__blocker=new qx.ui.core.Blocker(this);
},properties:{blockerColor:{check:"Color",init:null,nullable:true,apply:"_applyBlockerColor",themeable:true},blockerOpacity:{check:"Number",init:1,apply:"_applyBlockerOpacity",themeable:true}},members:{__blocker:null,_applyBlockerColor:function(value,old){this.__blocker.setColor(value);
},_applyBlockerOpacity:function(value,old){this.__blocker.setOpacity(value);
},block:function(){this.__blocker.block();
},isBlocked:function(){return this.__blocker.isBlocked();
},unblock:function(){this.__blocker.unblock();
},forceUnblock:function(){this.__blocker.forceUnblock();
},blockContent:function(zIndex){this.__blocker.blockContent(zIndex);
},isContentBlocked:function(){return this.__blocker.isContentBlocked();
},unblockContent:function(){this.__blocker.unblockContent();
},forceUnblockContent:function(){this.__blocker.forceUnblockContent();
},_getContentBlocker:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'getBlocker().getContentBlockerElement()' instead.");
return this.__blocker.getContentBlockerElement();
},_getBlocker:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'getBlocker().getBlockerElement()' instead.");
return this.__blocker.getBlockerElement();
},getBlocker:function(){return this.__blocker;
}},destruct:function(){this._disposeObjects("__blocker");
}});
qx.Mixin.define("qx.ui.window.MDesktop",{properties:{activeWindow:{check:"qx.ui.window.Window",apply:"_applyActiveWindow",init:null,nullable:true}},members:{__windows:null,__manager:null,getWindowManager:function(){if(!this.__manager){this.setWindowManager(new qx.ui.window.Window.DEFAULT_MANAGER_CLASS());
}return this.__manager;
},supportsMaximize:function(){return true;
},setWindowManager:function(manager){if(this.__manager){this.__manager.setDesktop(null);
}manager.setDesktop(this);
this.__manager=manager;
},_onChangeActive:function(e){if(e.getData()){this.setActiveWindow(e.getTarget());
}else if(this.getActiveWindow()==e.getTarget()){this.setActiveWindow(null);
}},_applyActiveWindow:function(value,old){this.getWindowManager().changeActiveWindow(value,old);

if(value){value.setActive(true);
}
if(old){old.resetActive();
}},_onChangeModal:function(e){this.getWindowManager().updateStack();
},_onChangeVisibility:function(){this.getWindowManager().updateStack();
},_afterAddChild:function(win){if(qx.Class.isDefined("qx.ui.window.Window")&&win instanceof qx.ui.window.Window){this._addWindow(win);
}},_addWindow:function(win){if(!qx.lang.Array.contains(this.getWindows(),win)){this.getWindows().push(win);
win.addListener("changeActive",this._onChangeActive,this);
win.addListener("changeModal",this._onChangeModal,this);
win.addListener("changeVisibility",this._onChangeVisibility,this);
}
if(win.getActive()){this.setActiveWindow(win);
}this.getWindowManager().updateStack();
},_afterRemoveChild:function(win){if(qx.Class.isDefined("qx.ui.window.Window")&&win instanceof qx.ui.window.Window){this._removeWindow(win);
}},_removeWindow:function(win){qx.lang.Array.remove(this.getWindows(),win);
win.removeListener("changeActive",this._onChangeActive,this);
win.removeListener("changeModal",this._onChangeModal,this);
win.removeListener("changeVisibility",this._onChangeVisibility,this);
this.getWindowManager().updateStack();
},getWindows:function(){if(!this.__windows){this.__windows=[];
}return this.__windows;
}},destruct:function(){this._disposeArray("__windows");
this._disposeObjects("__manager");
}});
qx.Class.define("qx.ui.root.Abstract",{type:"abstract",extend:qx.ui.core.Widget,include:[qx.ui.core.MChildrenHandling,qx.ui.core.MBlocker,qx.ui.window.MDesktop],construct:function(){this.base(arguments);
qx.ui.core.FocusHandler.getInstance().addRoot(this);
qx.ui.core.queue.Visibility.add(this);
this.initNativeHelp();
},properties:{appearance:{refine:true,init:"root"},enabled:{refine:true,init:true},focusable:{refine:true,init:true},globalCursor:{check:"String",nullable:true,themeable:true,apply:"_applyGlobalCursor",event:"changeGlobalCursor"},nativeContextMenu:{refine:true,init:false},nativeHelp:{check:"Boolean",init:false,apply:"_applyNativeHelp"}},members:{__globalCursorStyleSheet:null,isRootWidget:function(){return true;
},getLayout:function(){return this._getLayout();
},_applyGlobalCursor:qx.core.Variant.select("qx.client",{"mshtml":function(value,old){},"default":function(value,old){var Stylesheet=qx.bom.Stylesheet;
var sheet=this.__globalCursorStyleSheet;

if(!sheet){this.__globalCursorStyleSheet=sheet=Stylesheet.createElement();
}Stylesheet.removeAllRules(sheet);

if(value){Stylesheet.addRule(sheet,"*",qx.bom.element.Cursor.compile(value).replace(";","")+" !important");
}}}),_applyNativeContextMenu:function(value,old){if(value){this.removeListener("contextmenu",this._onNativeContextMenu,this,true);
}else{this.addListener("contextmenu",this._onNativeContextMenu,this,true);
}},_onNativeContextMenu:function(e){if(e.getTarget().getNativeContextMenu()){return;
}e.preventDefault();
},_applyNativeHelp:qx.core.Variant.select("qx.client",{"mshtml":function(value,old){if(old===false){qx.bom.Event.removeNativeListener(document,"help",qx.lang.Function.returnFalse);
}
if(value===false){qx.bom.Event.addNativeListener(document,"help",qx.lang.Function.returnFalse);
}},"default":function(){}})},destruct:function(){this.__globalCursorStyleSheet=null;
},defer:function(statics,members){qx.ui.core.MChildrenHandling.remap(members);
}});
qx.Class.define("qx.ui.root.Page",{extend:qx.ui.root.Abstract,construct:function(doc){this.__doc=doc;
this.base(arguments);
this._setLayout(new qx.ui.layout.Basic());
this.setZIndex(10000);
qx.ui.core.queue.Layout.add(this);
this.addListener("resize",this.__onResize,this);
qx.ui.core.FocusHandler.getInstance().connectTo(this);
},members:{__timer:null,__doc:null,_createContainerElement:function(){var elem=this.__doc.createElement("div");
this.__doc.body.appendChild(elem);
var root=new qx.html.Root(elem);
root.setStyles({position:"absolute",textAlign:"left"});
root.setAttribute("$$widget",this.toHashCode());
if(qx.core.Variant.isSet("qx.client","gecko")){root.setAttribute("qxIsRootPage",1);
}return root;
},_createContentElement:function(){return new qx.html.Element("div");
},_computeSizeHint:function(){var width=qx.bom.Document.getWidth(this._window);
var height=qx.bom.Document.getHeight(this._window);
return {minWidth:width,width:width,maxWidth:width,minHeight:height,height:height,maxHeight:height};
},__onResize:function(e){this.getContainerElement().setStyles({width:0,height:0});
this.getContentElement().setStyles({width:0,height:0});
},supportsMaximize:function(){return false;
},_applyPadding:function(value,old,name){if(value&&(name=="paddingTop"||name=="paddingLeft")){throw new Error("The root widget does not support 'left', or 'top' paddings!");
}this.base(arguments,value,old,name);
},_applyDecorator:function(value,old){this.base(arguments,value,old);

if(!value){return;
}var insets=this.getDecoratorElement().getInsets();

if(insets.left||insets.top){throw new Error("The root widget does not support decorators with 'left', or 'top' insets!");
}}},destruct:function(){this.__doc=null;
}});
qx.Class.define("qx.ui.core.Blocker",{extend:qx.core.Object,construct:function(widget){this.base(arguments);
this._widget=widget;
this._isPageRoot=(qx.Class.isDefined("qx.ui.root.Page")&&widget instanceof qx.ui.root.Page);

if(this._isPageRoot){widget.addListener("resize",this.__onResize,this);
}this.__activeElements=[];
this.__focusElements=[];
this.__contentBlockerCount=[];
},properties:{color:{check:"Color",init:null,nullable:true,apply:"_applyColor",themeable:true},opacity:{check:"Number",init:1,apply:"_applyOpacity",themeable:true}},members:{__blocker:null,__blockerCount:0,__contentBlocker:null,__contentBlockerCount:null,__activeElements:null,__focusElements:null,__oldAnonymous:null,__anonymousCounter:0,__timer:null,_isPageRoot:false,_widget:null,__onResize:function(e){var data=e.getData();

if(this.isContentBlocked()){this.getContentBlockerElement().setStyles({width:data.width,height:data.height});
}
if(this.isBlocked()){this.getBlockerElement().setStyles({width:data.width,height:data.height});
}},_applyColor:function(value,old){var color=qx.theme.manager.Color.getInstance().resolve(value);
this.__setBlockersStyle("backgroundColor",color);
},_applyOpacity:function(value,old){this.__setBlockersStyle("opacity",value);
},__setBlockersStyle:function(key,value){var blockers=[];
this.__blocker&&blockers.push(this.__blocker);
this.__contentBlocker&&blockers.push(this.__contentBlocker);

for(var i=0;i<blockers.length;i++){blockers[i].setStyle(key,value);
}},_saveAndSetAnonymousState:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"This method is not needed anymore.");
this.__anonymousCounter+=1;

if(this.__anonymousCounter==1){this.__oldAnonymous=this._widget.getAnonymous();
this._widget.setAnonymous(true);
}},_restoreAnonymousState:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"This method is not needed anymore.");
this.__anonymousCounter-=1;

if(this.__anonymousCounter==0){this._widget.setAnonymous(this.__oldAnonymous);
}},_backupActiveWidget:function(){var focusHandler=qx.event.Registration.getManager(window).getHandler(qx.event.handler.Focus);
this.__activeElements.push(focusHandler.getActive());
this.__focusElements.push(focusHandler.getFocus());

if(this._widget.isFocusable()){this._widget.focus();
}},_restoreActiveWidget:function(){var activeElementsLength=this.__activeElements.length;

if(activeElementsLength>0){var widget=this.__activeElements[activeElementsLength-1];

if(widget){qx.bom.Element.activate(widget);
}this.__activeElements.pop();
}var focusElementsLength=this.__focusElements.length;

if(focusElementsLength>0){var widget=this.__focusElements[focusElementsLength-1];

if(widget){qx.bom.Element.focus(this.__focusElements[focusElementsLength-1]);
}this.__focusElements.pop();
}},__createBlockerElement:function(){return new qx.html.Blocker(this.getColor(),this.getOpacity());
},_getBlocker:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'getBlockerElement' instead.");
return this.getBlockerElement();
},getBlockerElement:function(){if(!this.__blocker){this.__blocker=this.__createBlockerElement();
this.__blocker.setStyle("zIndex",15);
this._widget.getContainerElement().add(this.__blocker);
this.__blocker.exclude();
}return this.__blocker;
},block:function(){this.__blockerCount++;

if(this.__blockerCount<2){this._backupActiveWidget();
var blocker=this.getBlockerElement();
blocker.include();
blocker.activate();
blocker.addListener("deactivate",this.__activateBlockerElement,this);
blocker.addListener("keypress",this.__stopTabEvent,this);
blocker.addListener("keydown",this.__stopTabEvent,this);
blocker.addListener("keyup",this.__stopTabEvent,this);
}},isBlocked:function(){return this.__blockerCount>0;
},unblock:function(){if(!this.isBlocked()){return;
}this.__blockerCount--;

if(this.__blockerCount<1){this.__unblock();
}},forceUnblock:function(){if(!this.isBlocked()){return;
}this.__blockerCount=0;
this.__unblock();
},__unblock:function(){this._restoreActiveWidget();
var blocker=this.getBlockerElement();
blocker.removeListener("deactivate",this.__activateBlockerElement,this);
blocker.removeListener("keypress",this.__stopTabEvent,this);
blocker.removeListener("keydown",this.__stopTabEvent,this);
blocker.removeListener("keyup",this.__stopTabEvent,this);
blocker.exclude();
},_getContentBlocker:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'getContentBlockerElement' instead.");
return this.getContentBlockerElement();
},getContentBlockerElement:function(){if(!this.__contentBlocker){this.__contentBlocker=this.__createBlockerElement();
this._widget.getContentElement().add(this.__contentBlocker);
this.__contentBlocker.exclude();
}return this.__contentBlocker;
},blockContent:function(zIndex){var blocker=this.getContentBlockerElement();
blocker.setStyle("zIndex",zIndex);
this.__contentBlockerCount.push(zIndex);

if(this.__contentBlockerCount.length<2){blocker.include();

if(this._isPageRoot){if(!this.__timer){this.__timer=new qx.event.Timer(300);
this.__timer.addListener("interval",this.__syncBlocker,this);
}this.__timer.start();
this.__syncBlocker();
}}},isContentBlocked:function(){return this.__contentBlockerCount.length>0;
},unblockContent:function(){if(!this.isContentBlocked()){return;
}this.__contentBlockerCount.pop();
var zIndex=this.__contentBlockerCount[this.__contentBlockerCount.length-1];
var contentBlocker=this.getContentBlockerElement();
contentBlocker.setStyle("zIndex",zIndex);

if(this.__contentBlockerCount.length<1){this.__unblockContent();
}},forceUnblockContent:function(){if(!this.isContentBlocked()){return;
}this.__contentBlockerCount=[];
var contentBlocker=this.getContentBlockerElement();
contentBlocker.setStyle("zIndex",null);
this.__unblockContent();
},__unblockContent:function(){this.getContentBlockerElement().exclude();

if(this._isPageRoot){this.__timer.stop();
}},__syncBlocker:function(){var containerEl=this._widget.getContainerElement().getDomElement();
var doc=qx.dom.Node.getDocument(containerEl);
this.getContentBlockerElement().setStyles({height:doc.documentElement.scrollHeight+"px",width:doc.documentElement.scrollWidth+"px"});
},__stopTabEvent:function(e){if(e.getKeyIdentifier()=="Tab"){e.stop();
}},__activateBlockerElement:function(){this.getBlockerElement().activate();
}},destruct:function(){if(this._isPageRoot){this._widget.removeListener("resize",this.__onResize,this);
}this._disposeObjects("__contentBlocker","__blocker","__timer");
this.__oldAnonymous=this.__activeElements=this.__focusElements=this._widget=this.__contentBlockerCount=null;
}});
qx.Class.define("qx.html.Blocker",{extend:qx.html.Element,construct:function(backgroundColor,opacity){var backgroundColor=backgroundColor?qx.theme.manager.Color.getInstance().resolve(backgroundColor):null;
var styles={position:"absolute",width:"100%",height:"100%",opacity:opacity||0,backgroundColor:backgroundColor};
if(qx.core.Variant.isSet("qx.client","mshtml")){styles.backgroundImage="url("+qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif")+")";
styles.backgroundRepeat="repeat";
}this.base(arguments,"div",styles);
this.addListener("mousedown",this._stopPropagation,this);
this.addListener("mouseup",this._stopPropagation,this);
this.addListener("click",this._stopPropagation,this);
this.addListener("dblclick",this._stopPropagation,this);
this.addListener("mousemove",this._stopPropagation,this);
this.addListener("mouseover",this._stopPropagation,this);
this.addListener("mouseout",this._stopPropagation,this);
this.addListener("mousewheel",this._stopPropagation,this);
this.addListener("contextmenu",this._stopPropagation,this);
this.addListener("appear",this.__refreshCursor,this);
this.addListener("disappear",this.__refreshCursor,this);
},members:{_stopPropagation:function(e){e.stopPropagation();
},__refreshCursor:function(){var currentCursor=this.getStyle("cursor");
this.setStyle("cursor",null,true);
this.setStyle("cursor",currentCursor,true);
}}});
qx.Class.define("qx.ui.core.FocusHandler",{extend:qx.core.Object,type:"singleton",construct:function(){this.base(arguments);
this.__roots={};
},members:{__roots:null,__activeChild:null,__focusedChild:null,__currentRoot:null,connectTo:function(root){root.addListener("keypress",this.__onKeyPress,this);
root.addListener("focusin",this._onFocusIn,this,true);
root.addListener("focusout",this._onFocusOut,this,true);
root.addListener("activate",this._onActivate,this,true);
root.addListener("deactivate",this._onDeactivate,this,true);
},addRoot:function(widget){this.__roots[widget.$$hash]=widget;
},removeRoot:function(widget){delete this.__roots[widget.$$hash];
},getActiveWidget:function(){return this.__activeChild;
},isActive:function(widget){return this.__activeChild==widget;
},getFocusedWidget:function(){return this.__focusedChild;
},isFocused:function(widget){return this.__focusedChild==widget;
},isFocusRoot:function(widget){return !!this.__roots[widget.$$hash];
},_onActivate:function(e){var target=e.getTarget();
this.__activeChild=target;
var root=this.__findFocusRoot(target);

if(root!=this.__currentRoot){this.__currentRoot=root;
}},_onDeactivate:function(e){var target=e.getTarget();

if(this.__activeChild==target){this.__activeChild=null;
}},_onFocusIn:function(e){var target=e.getTarget();

if(target!=this.__focusedChild){this.__focusedChild=target;
target.visualizeFocus();
}},_onFocusOut:function(e){var target=e.getTarget();

if(target==this.__focusedChild){this.__focusedChild=null;
target.visualizeBlur();
}},__onKeyPress:function(e){if(e.getKeyIdentifier()!="Tab"){return;
}
if(!this.__currentRoot){return;
}e.stopPropagation();
e.preventDefault();
var current=this.__focusedChild;

if(!e.isShiftPressed()){var next=current?this.__getWidgetAfter(current):this.__getFirstWidget();
}else{var next=current?this.__getWidgetBefore(current):this.__getLastWidget();
}if(next){next.tabFocus();
}},__findFocusRoot:function(widget){var roots=this.__roots;

while(widget){if(roots[widget.$$hash]){return widget;
}widget=widget.getLayoutParent();
}return null;
},__compareTabOrder:function(widget1,widget2){if(widget1===widget2){return 0;
}var tab1=widget1.getTabIndex()||0;
var tab2=widget2.getTabIndex()||0;

if(tab1!=tab2){return tab1-tab2;
}var el1=widget1.getContainerElement().getDomElement();
var el2=widget2.getContainerElement().getDomElement();
var Location=qx.bom.element.Location;
var loc1=Location.get(el1);
var loc2=Location.get(el2);
if(loc1.top!=loc2.top){return loc1.top-loc2.top;
}if(loc1.left!=loc2.left){return loc1.left-loc2.left;
}var z1=widget1.getZIndex();
var z2=widget2.getZIndex();

if(z1!=z2){return z1-z2;
}return 0;
},__getFirstWidget:function(){return this.__getFirst(this.__currentRoot,null);
},__getLastWidget:function(){return this.__getLast(this.__currentRoot,null);
},__getWidgetAfter:function(widget){var root=this.__currentRoot;

if(root==widget){return this.__getFirstWidget();
}
while(widget&&widget.getAnonymous()){widget=widget.getLayoutParent();
}
if(widget==null){return [];
}var result=[];
this.__collectAllAfter(root,widget,result);
result.sort(this.__compareTabOrder);
var len=result.length;
return len>0?result[0]:this.__getFirstWidget();
},__getWidgetBefore:function(widget){var root=this.__currentRoot;

if(root==widget){return this.__getLastWidget();
}
while(widget&&widget.getAnonymous()){widget=widget.getLayoutParent();
}
if(widget==null){return [];
}var result=[];
this.__collectAllBefore(root,widget,result);
result.sort(this.__compareTabOrder);
var len=result.length;
return len>0?result[len-1]:this.__getLastWidget();
},__collectAllAfter:function(parent,widget,result){var children=parent.getLayoutChildren();
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];
if(!(child instanceof qx.ui.core.Widget)){continue;
}
if(!this.isFocusRoot(child)&&child.isEnabled()&&child.isVisible()){if(child.isTabable()&&this.__compareTabOrder(widget,child)<0){result.push(child);
}this.__collectAllAfter(child,widget,result);
}}},__collectAllBefore:function(parent,widget,result){var children=parent.getLayoutChildren();
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];
if(!(child instanceof qx.ui.core.Widget)){continue;
}
if(!this.isFocusRoot(child)&&child.isEnabled()&&child.isVisible()){if(child.isTabable()&&this.__compareTabOrder(widget,child)>0){result.push(child);
}this.__collectAllBefore(child,widget,result);
}}},__getFirst:function(parent,firstWidget){var children=parent.getLayoutChildren();
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];
if(!(child instanceof qx.ui.core.Widget)){continue;
}if(!this.isFocusRoot(child)&&child.isEnabled()&&child.isVisible()){if(child.isTabable()){if(firstWidget==null||this.__compareTabOrder(child,firstWidget)<0){firstWidget=child;
}}firstWidget=this.__getFirst(child,firstWidget);
}}return firstWidget;
},__getLast:function(parent,lastWidget){var children=parent.getLayoutChildren();
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];
if(!(child instanceof qx.ui.core.Widget)){continue;
}if(!this.isFocusRoot(child)&&child.isEnabled()&&child.isVisible()){if(child.isTabable()){if(lastWidget==null||this.__compareTabOrder(child,lastWidget)>0){lastWidget=child;
}}lastWidget=this.__getLast(child,lastWidget);
}}return lastWidget;
}},destruct:function(){this._disposeMap("__roots");
this.__focusedChild=this.__activeChild=this.__currentRoot=null;
}});
qx.Class.define("qx.bom.Stylesheet",{statics:{includeFile:function(href,doc){if(!doc){doc=document;
}var el=doc.createElement("link");
el.type="text/css";
el.rel="stylesheet";
el.href=qx.util.ResourceManager.getInstance().toUri(href);
var head=doc.getElementsByTagName("head")[0];
head.appendChild(el);
},createElement:qx.core.Variant.select("qx.client",{"mshtml":function(text){var sheet=document.createStyleSheet();

if(text){sheet.cssText=text;
}return sheet;
},"default":function(text){var elem=document.createElement("style");
elem.type="text/css";

if(text){elem.appendChild(document.createTextNode(text));
}document.getElementsByTagName("head")[0].appendChild(elem);
return elem.sheet;
}}),addRule:qx.core.Variant.select("qx.client",{"mshtml":function(sheet,selector,entry){sheet.addRule(selector,entry);
},"default":function(sheet,selector,entry){sheet.insertRule(selector+"{"+entry+"}",sheet.cssRules.length);
}}),removeRule:qx.core.Variant.select("qx.client",{"mshtml":function(sheet,selector){var rules=sheet.rules;
var len=rules.length;

for(var i=len-1;i>=0;--i){if(rules[i].selectorText==selector){sheet.removeRule(i);
}}},"default":function(sheet,selector){var rules=sheet.cssRules;
var len=rules.length;

for(var i=len-1;i>=0;--i){if(rules[i].selectorText==selector){sheet.deleteRule(i);
}}}}),removeAllRules:qx.core.Variant.select("qx.client",{"mshtml":function(sheet){var rules=sheet.rules;
var len=rules.length;

for(var i=len-1;i>=0;i--){sheet.removeRule(i);
}},"default":function(sheet){var rules=sheet.cssRules;
var len=rules.length;

for(var i=len-1;i>=0;i--){sheet.deleteRule(i);
}}}),addImport:qx.core.Variant.select("qx.client",{"mshtml":function(sheet,url){sheet.addImport(url);
},"default":function(sheet,url){sheet.insertRule('@import "'+url+'";',sheet.cssRules.length);
}}),removeImport:qx.core.Variant.select("qx.client",{"mshtml":function(sheet,url){var imports=sheet.imports;
var len=imports.length;

for(var i=len-1;i>=0;i--){if(imports[i].href==url){sheet.removeImport(i);
}}},"default":function(sheet,url){var rules=sheet.cssRules;
var len=rules.length;

for(var i=len-1;i>=0;i--){if(rules[i].href==url){sheet.deleteRule(i);
}}}}),removeAllImports:qx.core.Variant.select("qx.client",{"mshtml":function(sheet){var imports=sheet.imports;
var len=imports.length;

for(var i=len-1;i>=0;i--){sheet.removeImport(i);
}},"default":function(sheet){var rules=sheet.cssRules;
var len=rules.length;

for(var i=len-1;i>=0;i--){if(rules[i].type==rules[i].IMPORT_RULE){sheet.deleteRule(i);
}}}})}});
qx.Class.define("qx.ui.layout.Basic",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){this.assert(name=="left"||name=="top","The property '"+name+"' is not supported by the Basic layout!");
this.assertInteger(value);
},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var child,size,props,left,top;
for(var i=0,l=children.length;i<l;i++){child=children[i];
size=child.getSizeHint();
props=child.getLayoutProperties();
left=(props.left||0)+child.getMarginLeft();
top=(props.top||0)+child.getMarginTop();
child.renderLayout(left,top,size.width,size.height);
}},_computeSizeHint:function(){var children=this._getLayoutChildren();
var child,size,props;
var neededWidth=0,neededHeight=0;
var localWidth,localHeight;
for(var i=0,l=children.length;i<l;i++){child=children[i];
size=child.getSizeHint();
props=child.getLayoutProperties();
localWidth=size.width+(props.left||0)+child.getMarginLeft()+child.getMarginRight();
localHeight=size.height+(props.top||0)+child.getMarginTop()+child.getMarginBottom();

if(localWidth>neededWidth){neededWidth=localWidth;
}
if(localHeight>neededHeight){neededHeight=localHeight;
}}return {width:neededWidth,height:neededHeight};
}}});
qx.Class.define("qx.html.Root",{extend:qx.html.Element,construct:function(elem){this.base(arguments);

if(elem!=null){this.useElement(elem);
}},members:{useElement:function(elem){this.base(arguments,elem);
this.setRoot(true);
qx.html.Element._modified[this.$$hash]=this;
}}});
qx.Class.define("qx.application.Standalone",{extend:qx.application.AbstractGui,members:{_createRootWidget:function(){return new qx.ui.root.Application(document);
}}});
qx.Class.define("qx.ui.root.Application",{extend:qx.ui.root.Abstract,construct:function(doc){this.__window=qx.dom.Node.getWindow(doc);
this.__doc=doc;
this.base(arguments);
qx.event.Registration.addListener(this.__window,"resize",this._onResize,this);
this._setLayout(new qx.ui.layout.Canvas());
qx.ui.core.queue.Layout.add(this);
qx.ui.core.FocusHandler.getInstance().connectTo(this);
this.getContentElement().disableScrolling();
},members:{__window:null,__doc:null,_createContainerElement:function(){var doc=this.__doc;
if(qx.core.Variant.isSet("qx.client","webkit")){if(!doc.body){alert("The application could not be started due to a missing body tag in the HTML file!");
}}var hstyle=doc.documentElement.style;
var bstyle=doc.body.style;
hstyle.overflow=bstyle.overflow="hidden";
hstyle.padding=hstyle.margin=bstyle.padding=bstyle.margin="0px";
hstyle.width=hstyle.height=bstyle.width=bstyle.height="100%";
var elem=doc.createElement("div");
doc.body.appendChild(elem);
var root=new qx.html.Root(elem);
root.setStyle("position","absolute");
root.setAttribute("$$widget",this.toHashCode());
return root;
},_onResize:function(e){qx.ui.core.queue.Layout.add(this);
},_computeSizeHint:function(){var width=qx.bom.Viewport.getWidth(this.__window);
var height=qx.bom.Viewport.getHeight(this.__window);
return {minWidth:width,width:width,maxWidth:width,minHeight:height,height:height,maxHeight:height};
},_applyPadding:function(value,old,name){if(value&&(name=="paddingTop"||name=="paddingLeft")){throw new Error("The root widget does not support 'left', or 'top' paddings!");
}this.base(arguments,value,old,name);
},_applyDecorator:function(value,old){this.base(arguments,value,old);

if(!value){return;
}var insets=this.getDecoratorElement().getInsets();

if(insets.left||insets.top){throw new Error("The root widget does not support decorators with 'left', or 'top' insets!");
}}},destruct:function(){this.__window=this.__doc=null;
}});
qx.Class.define("qx.ui.layout.Canvas",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){var layoutProperties={top:1,left:1,bottom:1,right:1,width:1,height:1,edge:1};
this.assert(layoutProperties[name]==1,"The property '"+name+"' is not supported by the Canvas layout!");

if(name=="width"||name=="height"){this.assertMatch(value,qx.ui.layout.Util.PERCENT_VALUE);
}else{if(typeof value==="number"){this.assertInteger(value);
}else if(qx.lang.Type.isString(value)){this.assertMatch(value,qx.ui.layout.Util.PERCENT_VALUE);
}else{this.fail("Bad format of layout property '"+name+"': "+value+". The value must be either an integer or an percent string.");
}}},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var child,size,props;
var left,top,right,bottom,width,height;
var marginTop,marginRight,marginBottom,marginLeft;

for(var i=0,l=children.length;i<l;i++){child=children[i];
size=child.getSizeHint();
props=child.getLayoutProperties();
marginTop=child.getMarginTop();
marginRight=child.getMarginRight();
marginBottom=child.getMarginBottom();
marginLeft=child.getMarginLeft();
left=props.left!=null?props.left:props.edge;

if(qx.lang.Type.isString(left)){left=Math.round(parseFloat(left)*availWidth/100);
}right=props.right!=null?props.right:props.edge;

if(qx.lang.Type.isString(right)){right=Math.round(parseFloat(right)*availWidth/100);
}top=props.top!=null?props.top:props.edge;

if(qx.lang.Type.isString(top)){top=Math.round(parseFloat(top)*availHeight/100);
}bottom=props.bottom!=null?props.bottom:props.edge;

if(qx.lang.Type.isString(bottom)){bottom=Math.round(parseFloat(bottom)*availHeight/100);
}if(left!=null&&right!=null){width=availWidth-left-right-marginLeft-marginRight;
if(width<size.minWidth){width=size.minWidth;
}else if(width>size.maxWidth){width=size.maxWidth;
}left+=marginLeft;
}else{width=props.width;

if(width==null){width=size.width;
}else{width=Math.round(parseFloat(width)*availWidth/100);
if(width<size.minWidth){width=size.minWidth;
}else if(width>size.maxWidth){width=size.maxWidth;
}}
if(right!=null){left=availWidth-width-right-marginRight-marginLeft;
}else if(left==null){left=marginLeft;
}else{left+=marginLeft;
}}if(top!=null&&bottom!=null){height=availHeight-top-bottom-marginTop-marginBottom;
if(height<size.minHeight){height=size.minHeight;
}else if(height>size.maxHeight){height=size.maxHeight;
}top+=marginTop;
}else{height=props.height;

if(height==null){height=size.height;
}else{height=Math.round(parseFloat(height)*availHeight/100);
if(height<size.minHeight){height=size.minHeight;
}else if(height>size.maxHeight){height=size.maxHeight;
}}
if(bottom!=null){top=availHeight-height-bottom-marginBottom-marginTop;
}else if(top==null){top=marginTop;
}else{top+=marginTop;
}}child.renderLayout(left,top,width,height);
}},_computeSizeHint:function(){var neededWidth=0,neededMinWidth=0;
var neededHeight=0,neededMinHeight=0;
var width,minWidth;
var height,minHeight;
var children=this._getLayoutChildren();
var child,props,hint;
var left,top,right,bottom;

for(var i=0,l=children.length;i<l;i++){child=children[i];
props=child.getLayoutProperties();
hint=child.getSizeHint();
var marginX=child.getMarginLeft()+child.getMarginRight();
var marginY=child.getMarginTop()+child.getMarginBottom();
width=hint.width+marginX;
minWidth=hint.minWidth+marginX;
left=props.left!=null?props.left:props.edge;

if(left&&typeof left==="number"){width+=left;
minWidth+=left;
}right=props.right!=null?props.right:props.edge;

if(right&&typeof right==="number"){width+=right;
minWidth+=right;
}neededWidth=Math.max(neededWidth,width);
neededMinWidth=Math.max(neededMinWidth,minWidth);
height=hint.height+marginY;
minHeight=hint.minHeight+marginY;
top=props.top!=null?props.top:props.edge;

if(top&&typeof top==="number"){height+=top;
minHeight+=top;
}bottom=props.bottom!=null?props.bottom:props.edge;

if(bottom&&typeof bottom==="number"){height+=bottom;
minHeight+=bottom;
}neededHeight=Math.max(neededHeight,height);
neededMinHeight=Math.max(neededMinHeight,minHeight);
}return {width:neededWidth,minWidth:neededMinWidth,height:neededHeight,minHeight:neededMinHeight};
}}});
qx.Class.define("qx.application.Native",{extend:qx.core.Object,implement:[qx.application.IApplication],members:{main:function(){},finalize:function(){},close:function(){},terminate:function(){}}});
qx.Class.define("qx.bom.element.Class",{statics:{__splitter:/\s+/g,__trim:/^\s+|\s+$/g,add:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,name){element.classList.add(name);
return name;
},"default":function(element,name){if(!this.has(element,name)){element.className+=(element.className?" ":"")+name;
}return name;
}}),addClasses:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,classes){for(var i=0;i<classes.length;i++){element.classList.add(classes[i]);
}return element.className;
},"default":function(element,classes){var keys={};
var result;
var old=element.className;

if(old){result=old.split(this.__splitter);

for(var i=0,l=result.length;i<l;i++){keys[result[i]]=true;
}
for(var i=0,l=classes.length;i<l;i++){if(!keys[classes[i]]){result.push(classes[i]);
}}}else{result=classes;
}return element.className=result.join(" ");
}}),get:function(element){return element.className;
},has:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,name){return element.classList.contains(name);
},"default":function(element,name){var regexp=new RegExp("(^|\\s)"+name+"(\\s|$)");
return regexp.test(element.className);
}}),remove:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,name){element.classList.remove(name);
return name;
},"default":function(element,name){var regexp=new RegExp("(^|\\s)"+name+"(\\s|$)");
element.className=element.className.replace(regexp,"$2");
return name;
}}),removeClasses:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,classes){for(var i=0;i<classes.length;i++){element.classList.remove(classes[i]);
}return element.className;
},"default":function(element,classes){var reg=new RegExp("\\b"+classes.join("\\b|\\b")+"\\b","g");
return element.className=element.className.replace(reg,"").replace(this.__trim,"").replace(this.__splitter," ");
}}),replace:function(element,oldName,newName){this.remove(element,oldName);
return this.add(element,newName);
},toggle:qx.lang.Object.select(qx.bom.client.Feature.HTML5_CLASSLIST?"native":"default",{"native":function(element,name,toggle){if(toggle===undefined){element.classList.toggle(name);
}else{toggle?this.add(element,name):this.remove(element,name);
}return name;
},"default":function(element,name,toggle){if(toggle==null){toggle=!this.has(element,name);
}toggle?this.add(element,name):this.remove(element,name);
return name;
}})}});
qx.Class.define("qx.bom.client.Transport",{statics:{getMaxConcurrentRequestCount:function(){var maxConcurrentRequestCount;
var Engine=qx.bom.client.Engine;
var versionParts=Engine.FULLVERSION.split(".");
var versionMain=0;
var versionMajor=0;
var versionMinor=0;
if(versionParts[0]){versionMain=versionParts[0];
}if(versionParts[1]){versionMajor=versionParts[1];
}if(versionParts[2]){versionMinor=versionParts[2];
}if(window.maxConnectionsPerServer){maxConcurrentRequestCount=window.maxConnectionsPerServer;
}else if(Engine.OPERA){maxConcurrentRequestCount=8;
}else if(Engine.WEBKIT){maxConcurrentRequestCount=4;
}else if(Engine.GECKO&&((versionMain>1)||((versionMain==1)&&(versionMajor>9))||((versionMain==1)&&(versionMajor==9)&&(versionMinor>=1)))){maxConcurrentRequestCount=6;
}else{maxConcurrentRequestCount=2;
}return maxConcurrentRequestCount;
}}});
qx.Class.define("qx.bom.client.Flash",{statics:{AVAILABLE:false,FULLVERSION:"0.0.0",REVISION:"0",VERSION:0.0,EXPRESSINSTALL:false,STRICT_SECURITY_MODEL:false,_cachedSupportsVersion:{},supportsVersion:function(input){if(typeof this._cachedSupportsVersion[input]==="boolean"){return this._cachedSupportsVersion[input];
}else{var splitInput=input.split(".");
var system=this.FULLVERSION.split(".");

for(var i=0;i<splitInput.length;i++){var diff=parseInt(system[i])-parseInt(splitInput[i]);

if(diff>0){return (this._cachedSupportsVersion[input]=true);
}else if(diff<0){return (this._cachedSupportsVersion[input]=false);
}}return (this._cachedSupportsVersion[input]=true);
}},__init:qx.core.Variant.select("qx.client",{"mshtml":function(){if(!window.ActiveXObject){return;
}var full=[0,0,0];
var fp6Crash=false;

try{var obj=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
}catch(ex){try{var obj=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");
full=[6,0,21];
obj.AllowScriptAccess="always";
}catch(ex){if(full[0]==6){fp6Crash=true;
}}
if(!fp6Crash){try{obj=new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
}catch(ex){}}}
if(!fp6Crash&&typeof obj=="object"){var info=obj.GetVariable("$version");

if(typeof info!="undefined"){info=info.split(" ")[1].split(",");
full[0]=parseInt(info[0],10);
full[1]=parseInt(info[1],10);
full[2]=parseInt(info[2],10);
}}this.__store(full);
},"default":function(){if(!navigator.plugins||typeof navigator.plugins["Shockwave Flash"]!=="object"){return;
}var full=[0,0,0];
var desc=navigator.plugins["Shockwave Flash"].description;

if(typeof desc!="undefined"){desc=desc.replace(/^.*\s+(\S+\s+\S+$)/,"$1");
full[0]=parseInt(desc.replace(/^(.*)\..*$/,"$1"),10);
full[1]=parseInt(desc.replace(/^.*\.(.*)\s.*$/,"$1"),10);
full[2]=/r/.test(desc)?parseInt(desc.replace(/^.*r(.*)$/,"$1"),10):0;
}this.__store(full);
}}),__store:function(full){this.FULLVERSION=full.join(".");
this.VERSION=parseFloat(full);
this.AVAILABLE=this.VERSION>0;
this.REVISION=full[full.length-1];

if(full[0]<10){this.STRICT_SECURITY_MODEL=this.supportsVersion("9.0.151");
}else{this.STRICT_SECURITY_MODEL=this.supportsVersion("10.0.12");
}var platform=qx.bom.client.Platform;
this.EXPRESSINSTALL=(platform.WIN||platform.MAC)&&this.supportsVersion("6.0.65");
}},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.event.handler.Iframe",{extend:qx.core.Object,implement:qx.event.IEventHandler,statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{load:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:false,onevent:qx.event.GlobalError.observeMethod(function(target){qx.event.Registration.fireEvent(target,"load");
})},members:{canHandleEvent:function(target,type){return target.tagName.toLowerCase()==="iframe";
},registerEvent:function(target,type,capture){},unregisterEvent:function(target,type,capture){}},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.bom.Iframe",{statics:{DEFAULT_ATTRIBUTES:{onload:"qx.event.handler.Iframe.onevent(this)",frameBorder:0,frameSpacing:0,marginWidth:0,marginHeight:0,hspace:0,vspace:0,border:0,allowTransparency:true},create:function(attributes,win){var attributes=attributes?qx.lang.Object.clone(attributes):{};
var initValues=qx.bom.Iframe.DEFAULT_ATTRIBUTES;

for(var key in initValues){if(attributes[key]==null){attributes[key]=initValues[key];
}}return qx.bom.Element.create("iframe",attributes,win);
},getWindow:qx.core.Variant.select("qx.client",{"mshtml|gecko":function(iframe){try{return iframe.contentWindow;
}catch(ex){return null;
}},"default":function(iframe){try{var doc=this.getDocument(iframe);
return doc?doc.defaultView:null;
}catch(ex){return null;
}}}),getDocument:qx.core.Variant.select("qx.client",{"mshtml":function(iframe){try{var win=this.getWindow(iframe);
return win?win.document:null;
}catch(ex){return null;
}},"default":function(iframe){try{return iframe.contentDocument;
}catch(ex){return null;
}}}),getBody:function(iframe){try{var doc=this.getDocument(iframe);
return doc?doc.getElementsByTagName("body")[0]:null;
}catch(ex){return null;
}},setSource:function(iframe,source){try{if(this.getWindow(iframe)&&qx.dom.Hierarchy.isRendered(iframe)){try{if(qx.core.Variant.isSet("qx.client","webkit")&&qx.bom.client.Platform.MAC){var contentWindow=this.getContentWindow();

if(contentWindow){contentWindow.stop();
}}this.getWindow(iframe).location.replace(source);
}catch(ex){iframe.src=source;
}}else{iframe.src=source;
}}catch(ex){qx.log.Logger.warn("Iframe source could not be set!");
}},queryCurrentUrl:function(iframe){var doc=this.getDocument(iframe);

try{if(doc&&doc.location){return doc.location.href;
}}catch(ex){}return null;
}}});
qx.Class.define("qx.bom.htmlarea.manager.UndoRedo",{extend:qx.core.Object,construct:function(commandManager,editorInstance){this.base(arguments);
this.__commandManager=commandManager;
this.__editorInstance=editorInstance;
this.__undoStack=[];
this.__redoStack=[];
this._commands=null;
this.__doc=null;
this.__registeredHandler={};
this.__knownActionTypes={command:true,content:true,custom:true};
this.__populateCommandList();
this.__handleKeyPress=qx.lang.Function.bind(this._handleKeyPress,this);
this.__handleMouseUp=qx.lang.Function.bind(this._handleMouseUp,this);

if(qx.core.Variant.isSet("qx.client","mshtml")){this.__handleMouseDown=qx.lang.Function.bind(this._handleMouseDown,this);
}},members:{__redoPossible:false,__undoPossible:false,__contentChange:false,__knownActionTypes:null,__registeredHandler:null,__commandManager:null,__doc:null,__undoStack:null,__redoStack:null,__editorInstance:null,__handleKeyPress:null,__handleMouseUp:null,__handleMouseDown:null,__currentContent:null,setContentDocument:function(doc){this.__doc=doc;
this.__commandManager.setContentDocument(doc);
qx.event.Registration.addListener(doc.body,"keypress",this.__handleKeyPress,this);
qx.event.Registration.addListener(doc.body,"mouseup",this.__handleMouseUp,this);

if(qx.core.Variant.isSet("qx.client","mshtml")){qx.event.Registration.addListener(doc.body,"mousedown",this.__handleMouseDown,this,true);
}},insertParagraphOnLinebreak:function(){return this.__commandManager.insertParagraphOnLinebreak();
},execute:function(command,value){var result;
command=command.toLowerCase();
if(this._commands[command]){if(this._commands[command].passthrough){result=this.__commandManager.execute(command,value);
}else{result=this[command].call(this);
}}else{if(qx.core.Variant.isSet("qx.client","mshtml")||qx.core.Variant.isSet("qx.client","webkit")){this.__collectUndoInfo(command,value,this.__commandManager.getCommandObject(command));
result=this.__commandManager.execute(command,value);
if(!result){this.__undoStack.pop();
}}else{result=this.__commandManager.execute(command,value);

if(result){this.__collectUndoInfo(command,value,this.__commandManager.getCommandObject(command));
}}
if(command=="undo"&&this.__undoStack.length==0){this.__undoPossible=false;
this.__fireUndoRedoStateEvent();
}else if(command=="redo"&&this.__redoStack.length==0){this.__redoPossible=false;
this.__fireUndoRedoStateEvent();
}}this.__contentChange=false;
return result;
},addUndoStep:function(command,value,commandObject){this.__collectUndoInfo(command,value,commandObject);
},registerHandler:function(actionType,undoHandler,redoHandler,context){this.__registeredHandler[actionType]={undo:undoHandler,redo:redoHandler,context:context};
},isUndoPossible:function(){return this.__undoPossible;
},undo:function(){var result;

if(this.__contentChange){this.__addAdditionalContentUndoStep();
}if(this.__undoStack.length>0){var undoStep=this.__undoStack.pop();

if(this.__knownActionTypes[undoStep.actionType.toLowerCase()]){switch(undoStep.actionType){case "Command":result=this.__undoCommand(undoStep);
break;
case "Content":result=this.__undoContent(undoStep);
break;
case "Internal":result=this.__undoInternal(undoStep);
break;
case "Custom":result=this.__undoCustom(undoStep);
break;
}}else if(this.__registeredHandler[undoStep.actionType]){var handler=this.__registeredHandler[undoStep.actionType];
result=handler.undo.call(handler.context?handler.context:this,undoStep);
this.__addToRedoStack(undoStep);
}else{this.error("actionType "+undoStep.actionType+" is not managed! Please provide a handler method!");
}this.__redoPossible=true;
this.__fireUndoRedoStateEvent();
return result;
}},__undoCustom:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(undoInfo){var currentContent=this.__doc.body.innerHTML;
var oldContent=undoInfo.content;
this.__doc.body.innerHTML=oldContent;
var redoAction=undoInfo;
redoAction.content=currentContent;
this.__addToRedoStack(redoAction);
return true;
},"default":function(undoInfo){var redoAction=undoInfo;
var Style=qx.bom.element.Style;
switch(undoInfo.command){case "backgroundcolor":redoAction.parameter=[Style.get(this.__doc.body,"backgroundColor")];
break;
case "backgroundimage":redoAction.parameter=[Style.get(this.__doc.body,"backgroundImage"),Style.get(this.__doc.body,"backgroundRepeat"),Style.get(this.__doc.body,"backgroundPosition")];
break;
}this.__addToRedoStack(redoAction);
if(undoInfo.command=="inserthyperlink"){if(qx.core.Variant.isSet("qx.client","gecko")){var linkId="qx_link"+this.__commandManager.__hyperLinkId;
var link=this.__doc.getElementById(linkId);

if(link){link.parentNode.removeChild(link);
return true;
}else{return false;
}}}else{return this.__commandManager.execute(undoInfo.command,undoInfo.value);
}}}),__undoCommand:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(undoInfo){},"default":function(undoInfo){this.__addToRedoStack(undoInfo);

if(qx.core.Variant.isSet("qx.client","gecko")){if(undoInfo.command=="inserthtml"&&undoInfo.value==qx.bom.htmlarea.HtmlArea.EMPTY_DIV&&this.__checkForNextUndoStep("inserthtml","insertParagraph")){this.__executeExtraUndoStep();
}}return this.__performUndo();
}}),__checkForNextUndoStep:function(command,value){if(this.__undoStack.length>0){var nextUndoStep=this.__undoStack[this.__undoStack.length-1];
return (nextUndoStep.command==command&&nextUndoStep.value==value);
}return false;
},__executeExtraUndoStep:function(){this.__performUndo();

if(this.__undoStack.length>0){var nextUndoStep=this.__undoStack.pop();
this.__addToRedoStack(nextUndoStep);
}},__undoInternal:function(undoInfo){this.__addToRedoStack(undoInfo);
return this.__performUndo();
},__undoContent:qx.core.Variant.select("qx.client",{"gecko":function(undoInfo){this.__addToRedoStack(undoInfo);

try{return this.__performUndo();
}catch(error){{this.error("execCommand failed! Details: "+error);
};
}},"mshtml|webkit":function(undoInfo){},"default":function(undoInfo){this.__addToRedoStack(undoInfo);
return this.__performUndo();
}}),__performUndo:function(){try{return this.__doc.execCommand("Undo",false,null);
}catch(e){return false;
}},isRedoPossible:function(){return this.__redoPossible;
},redo:function(){if(this.__redoPossible){var result;
if(this.__redoStack.length>0){var redoStep=this.__redoStack.pop();

if(this.__knownActionTypes[redoStep.actionType.toLowerCase()]){switch(redoStep.actionType){case "Command":result=this.__redoCommand(redoStep);
break;
case "Content":result=this.__redoContent(redoStep);
break;
case "Internal":result=this.__redoInternal(redoStep);
break;
case "Custom":result=this.__redoCustom(redoStep);
break;
}}else if(this.__registeredHandler[redoStep.actionType]){var handler=this.__registeredHandler[redoStep.actionType];
result=handler.redo.call(handler.context?handler.context:this,redoStep);
this.__addToUndoStack(redoStep);
}else{this.error("actionType "+redoStep.actionType+" is not managed! Please provide a handler method!");
}this.__undoPossible=true;
this.__fireUndoRedoStateEvent();
}return result;
}},__redoCustom:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(redoInfo){var currentContent=this.__doc.body.innerHTML;
var newContent=redoInfo.content;
this.__doc.body.innerHTML=newContent;
var undoInfo=redoInfo;
undoInfo.content=currentContent;
this.__addToUndoStack(undoInfo);
return true;
},"default":function(redoInfo){this.__addToUndoStack(redoInfo);
return this.__performRedo();
}}),__redoCommand:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(redoInfo){},"default":function(redoInfo){this.__addToUndoStack(redoInfo);
var result=this.__performRedo();

if(qx.core.Variant.isSet("qx.client","gecko")){if(this.__checkForNextRedoStep("inserthtml",qx.bom.htmlarea.HtmlArea.EMPTY_DIV)){var focusedParagraph=this.__getFocusedParagraph();
this.__executeExtraRedoStep();

if(focusedParagraph!=null){this.__correctCaretPositionAfterRedo(focusedParagraph);
}}}return result;
}}),__checkForNextRedoStep:function(command,value){if(this.__redoStack.length>0){var nextRedoStep=this.__redoStack[this.__redoStack.length-1];
return (nextRedoStep.command==command&&nextRedoStep.value==value);
}return false;
},__getFocusedParagraph:function(){if(this.__editorInstance==null){return null;
}var selection=this.__editorInstance.getSelection();
var focusNode=selection?selection.focusNode:null;

if(focusNode==null){return null;
}
try{while(focusNode.nodeName.toLowerCase()!="p"){focusNode=focusNode.parentNode;

if(!focusNode||qx.dom.Node.isNodeName(focusNode,"body")){return null;
}}}catch(exc){return null;
}
if(focusNode!=null&&qx.dom.Node.isNodeName(focusNode,"p")){return focusNode;
}else{return null;
}},__executeExtraRedoStep:function(){var nextRedoStep=this.__redoStack.pop();
this.__addToUndoStack(nextRedoStep);
this.__performRedo();
},__correctCaretPositionAfterRedo:qx.core.Variant.select("qx.client",{"gecko":function(currentParagraph){if(currentParagraph==this.__editorInstance.getContentBody().lastChild){return;
}var nodeToSelect=currentParagraph.firstChild;

while(nodeToSelect.firstChild){nodeToSelect=nodeToSelect.firstChild;
}var selection=this.__editorInstance.getSelection();
var range=this.__editorInstance.getRange();

if(selection&&range){range.selectNode(nodeToSelect);
selection.addRange(range);
range.collapse(true);
}},"default":qx.lang.Function.empty}),__redoInternal:function(redoInfo){this.__addToUndoStack(redoInfo);
return this.__performRedo();
},__redoContent:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(redoInfo){},"default":function(redoInfo){this.__addToUndoStack(redoInfo);
return this.__performRedo();
}}),__performRedo:function(){try{return this.__doc.execCommand("Redo",false,null);
}catch(e){return false;
}},__populateCommandList:function(){this._commands={undo:{passthrough:false},redo:{passthrough:false}};
this.__commandManager.getCommandObject("backgroundcolor").customUndo=true;
this.__commandManager.getCommandObject("backgroundimage").customUndo=true;

if(qx.core.Variant.isSet("qx.client","gecko")){}},__collectUndoInfo:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(command,value,commandObject){var undoObject=this.getUndoRedoObject();
undoObject.commandObject=commandObject;
undoObject.command=command;
undoObject.value=value;
undoObject.actionType="Custom";
undoObject.content=this.__doc.body.innerHTML;
this.__updateUndoStack(undoObject);
},"default":function(command,value,commandObject){if(this.__editorInstance==null){return;
}var undoObject=this.getUndoRedoObject();
undoObject.commandObject=commandObject;
undoObject.command=command;
undoObject.value=value;
undoObject.actionType="Custom";
var sel=this.__editorInstance.getSelection();

if(commandObject.customUndo){var parameters=[];

switch(command){case "backgroundcolor":parameters.push(qx.bom.element.Style.get(this.__doc.body,"backgroundColor"));
break;
case "backgroundimage":parameters.push(qx.bom.element.Style.get(this.__doc.body,"backgroundImage"),qx.bom.element.Style.get(this.__doc.body,"backgroundRepeat"),qx.bom.element.Style.get(this.__doc.body,"backgroundPosition"));
break;
case "inserthyperlink":if(sel&&!sel.isCollapsed){undoObject.actionType="Command";
}break;
}undoObject.parameter=parameters;
}else{if(qx.core.Variant.isSet("qx.client","gecko")){if(sel&&sel.isCollapsed){switch(command){case "insertorderedlist":case "insertunorderedlist":case "justifyright":case "inserthtml":case "insertimage":undoObject.actionType="Command";
break;
default:return;
}}else{undoObject.actionType="Command";
}}else{undoObject.actionType="Command";
}}this.__updateUndoStack(undoObject);
}}),__updateUndoStack:function(changeInfo){if(this.__contentChange){this.__addAdditionalContentUndoStep();
}this.__addToUndoStack(changeInfo);
this.__redoPossible=false;
this.__redoStack=[];
this.__fireUndoRedoStateEvent();
},__addAdditionalContentUndoStep:function(){var lastUndoStep=this.__undoStack[this.__undoStack.length-1];

if(lastUndoStep==null||lastUndoStep.actionType!="Content"){var undoObject=this.getUndoRedoObject();
undoObject.actionType="Content";

if(qx.core.Variant.isSet("qx.client","mshtml")||qx.core.Variant.isSet("qx.client","webkit")){undoObject.content=this.__currentContent;
undoObject.actionType="Custom";
this.__currentContent=null;
}this.__addToUndoStack(undoObject);
this.__contentChange=false;
}},getUndoRedoObject:function(){return {actionType:null,commandObject:null,command:null,value:null,parameter:null,range:null,marker:null,content:null};
},__addToUndoStack:function(changeInfo){if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug("ADD TO UNDO STACK");
this.debug(changeInfo.actionType+" "+changeInfo.command+" "+changeInfo.value);
}this.__undoStack.push(changeInfo);
},__addToRedoStack:function(changeInfo){if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug("ADD TO REDO STACK");
this.debug(changeInfo.actionType+" "+changeInfo.command+" "+changeInfo.value);
}this.__redoStack.push(changeInfo);
},_handleKeyPress:function(e){var keyIdentifier=e.getKeyIdentifier().toLowerCase();
var isCtrlPressed=e.isCtrlPressed();

switch(keyIdentifier){case "control":case "left":case "right":case "up":case "down":case "pageup":case "pagedown":case "home":case "end":case "enter":break;
case "a":case "b":case "i":case "u":case "k":case "y":case "z":if(!isCtrlPressed){this.__markContentChange();
}break;
default:this.__redoPossible=false;
this.__redoStack=[];
this.__markContentChange();
}},__markContentChange:function(){if(!this.__contentChange){this.__contentChange=true;
this.__undoPossible=true;
if(qx.core.Variant.isSet("qx.client","mshtml")||qx.core.Variant.isSet("qx.client","webkit")){this.__currentContent=this.__doc.body.innerHTML;
}this.__fireUndoRedoStateEvent();
}},__selectedNode:null,_handleMouseDown:qx.core.Variant.select("qx.client",{"mshtml":function(e){var checkNode=e.getOriginalTarget();

if(qx.dom.Node.isElement(checkNode)&&(qx.dom.Node.isNodeName(checkNode,"img")||qx.dom.Node.isNodeName(checkNode,"table"))){this.__selectedNode={node:checkNode,content:checkNode.outerHTML};
}else{this.__selectedNode=null;
}},"default":function(e){return true;
}}),_handleMouseUp:qx.core.Variant.select("qx.client",{"gecko":function(e){if(this.__editorInstance==null){return;
}var sel=this.__editorInstance.getSelection();

if(!sel){this.__selectedNode=null;
return;
}var anchorNode=sel.anchorNode;
var checkNode=anchorNode.childNodes[sel.anchorOffset];
if(qx.dom.Node.isNodeName(checkNode,"img")){if(this.__selectedNode==null){this.__selectedNode=checkNode.cloneNode(true);
}else{if(this.__selectedNode.style.width!=checkNode.style.width||this.__selectedNode.style.height!=checkNode.style.height){this.__addInternalUndoStep();
this.__selectedNode=checkNode.cloneNode(true);
}}}else if(qx.dom.Node.isNodeName(anchorNode,"td")||qx.dom.Node.isNodeName(anchorNode.parentNode,"td")){var tableNode=anchorNode.parentNode;

while(qx.dom.Node.isNodeName(tableNode,"table")){tableNode=tableNode.parentNode;
}if(this.__selectedNode==null){this.__selectedNode=tableNode.cloneNode(true);
}else{qx.event.Timer.once(function(){if(tableNode.style.width!=this.__selectedNode.style.width||tableNode.style.height!=this.__selectedNode.style.height||tableNode.innerHTML!=this.__selectedNode.innerHTML){this.__addInternalUndoStep();
this.__selectedNode=tableNode.cloneNode(true);
}},this,0);
}}else{this.__selectedNode=null;
}},"default":function(e){var checkNode=e.srcElement;

if(this.__selectedNode!=null){if(checkNode.nodeType==1){if(checkNode==this.__selectedNode.node){if(checkNode.outerHTML!=this.__selectedNode.content){this.__selectedNode.content=checkNode.outerHTML;
this.__addInternalUndoStep();
}}else{for(var i=0,j=checkNode.childNodes.length;i<j;i++){if(checkNode.childNodes[i]==this.__selectedNode.node){if(checkNode.childNodes[i].outerHTML!=this.__selectedNode.content){this.__selectedNode.content=checkNode.childNodes[i].outerHTML;
this.__addInternalUndoStep();
}}}}}else{this.__selectedNode=null;
}}}}),__addInternalUndoStep:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(){this.__collectUndoInfo("Internal",null,null);
},"default":function(){var undoStep=this.getUndoRedoObject();
undoStep.actionType="Internal";
this.__addToUndoStack(undoStep);
}}),__fireUndoRedoStateEvent:function(){qx.event.Timer.once(function(e){if(this.__editorInstance!=null){var data={undo:this.isUndoPossible()?0:-1,redo:this.isRedoPossible()?0:-1};
this.__editorInstance.fireDataEvent("undoRedoState",data);
}},this,200);
}},destruct:function(){try{qx.event.Registration.removeListener(this.__doc.body,"keypress",this.__handleKeyPress);
qx.event.Registration.removeListener(this.__doc,"mouseup",this.__handleMouseUp);

if(qx.core.Variant.isSet("qx.client","mshtml")){qx.event.Registration.removeListener(this.__doc,"mousedown",this.__handleMouseDown);
}}catch(e){}this._disposeObjects("__commandManager");
this.__editorInstance=this.__undoStack=this.__redoStack=this._commands=this.__doc=null;
this.__knownActionTypes=this.__registeredHandler=null;
}});
qx.Class.define("qx.bom.htmlarea.HtmlArea",{extend:qx.core.Object,construct:function(element,value,styleInformation,source){this.base(arguments);
var uri=source||qx.util.ResourceManager.getInstance().toUri("qx/static/blank.html");
this.__connectToDomElement(element);
this.__initDocumentSkeletonParts();
this._createAndAddIframe(uri);
this._addIframeLoadListener();
this.__styleInformation=qx.bom.htmlarea.HtmlArea.__formatStyleInformation(styleInformation);
if(qx.lang.Type.isString(value)){this.__value=value;
}if(qx.core.Variant.isSet("qx.client","opera")){var contentWindow=qx.dom.Node.getWindow(element);
var keyEventHandler=qx.event.Registration.getManager(contentWindow).getHandler(qx.event.handler.Keyboard);
keyEventHandler._keyCodeToIdentifierMap[35]="#";
keyEventHandler._keyCodeToIdentifierMap[45]="-";
keyEventHandler._keyCodeToIdentifierMap[112]="P";
keyEventHandler._keyCodeToIdentifierMap[115]="S";
keyEventHandler._keyCodeToIdentifierMap[120]="X";
}this.__commandManager=this.__createStackCommandManager();
},events:{"load":"qx.event.type.Event","loadingError":"qx.event.type.Data","messengerContent":"qx.event.type.Data","cursorContext":"qx.event.type.Data","ready":"qx.event.type.Event","readyAfterInvalid":"qx.event.type.Event","focused":"qx.event.type.Event","focusOut":"qx.event.type.Event","contextmenu":"qx.event.type.Data","undoRedoState":"qx.event.type.Data"},statics:{simpleLinebreak:"<br>",EMPTY_DIV:"<div></div>",GetWordsRegExp:/([^\u0000-\u0040\u005b-\u005f\u007b-\u007f]|['])+/g,CleanupWordsRegExp:/[\u0000-\u0040]/gi,hotkeyInfo:{bold:{method:"setBold"},italic:{method:"setItalic"},underline:{method:"setUnderline"},undo:{method:"undo"},redo:{method:"redo"}},__formatStyleInformation:function(styleInformation){if(styleInformation==null||styleInformation==""){return "";
}else if(typeof styleInformation=="object"){var str="";

for(var i in styleInformation){str+=i+" { "+styleInformation[i]+" }";
}return str;
}else{return styleInformation;
}},__parseStyle:function(str){var map={};
var a=str.split(";");
var i;

for(i=0;i<a.length;i++){var style=a[i],sep=style.indexOf(":");

if(sep===-1){continue;
}var name=qx.lang.String.trim(style.substring(0,sep));
var value=qx.lang.String.trim(style.substring(sep+1,style.length));

if(name&&value){map[name]=value;
}}return map;
},__getHtml:function(root,outputRoot,skipHtmlEncoding,postProcess){var html=[];

switch(root.nodeType){case 1:case 11:var i;
var tag=root.tagName.toLowerCase();
var attributes={};
var styles={};
var closed=(!(root.hasChildNodes()||qx.bom.htmlarea.HtmlArea.__needsClosingTag(root)));

if(outputRoot){if(qx.core.Variant.isSet("qx.client","mshtml")){if(tag=="div"&&root.className&&root.className=="placeholder"){for(i=root.firstChild;i;i=i.nextSibling){html.push(qx.bom.htmlarea.HtmlArea.__getHtml(i,true,skipHtmlEncoding,postProcess));
}return html.join("");
}}var attrs=root.attributes;
var len=attrs.length;
var a;

if(qx.core.Variant.isSet("qx.client","gecko")){if(tag=="span"&&len==1&&attrs[0].name=="_moz_dirty"&&root.childNodes.length==0){return "";
}}
for(i=0;i<len;i++){a=attrs[i];
if(!a.specified){continue;
}var name=qx.dom.Node.getName(a);
var value=a.nodeValue;
if(/(_moz|contenteditable)/.test(name)){continue;
}
if(name!="style"){if(qx.bom.client.Engine.MSHTML){if(name=="id"&&root.getAttribute("old_id")){value=root.getAttribute("old_id");
}else if(!isNaN(value)){value=root.getAttribute(name);
}else{value=a.nodeValue;
}}else{value=a.nodeValue;
}}else{value=root.style.cssText;
}
if(/(_moz|^$)/.test(value)){continue;
}if(name=="old_id"){continue;
}if(!value){continue;
}if(name=="id"&&value=="__elementToFocus__"){continue;
}if(name.charAt(0)==="$"){continue;
}attributes[name]=value;
}if(attributes.style!==undefined){styles=qx.bom.htmlarea.HtmlArea.__parseStyle(attributes.style);
delete attributes.style;
}if(postProcess){var info={domElement:root,tag:tag,attributes:attributes,styles:styles};
postProcess(info);
info.domElement=null;
tag=info.tag;
}if(tag){html.push("<",tag);
for(var name in attributes){var value=attributes[name];
html.push(" ",name,'="',value.toString().replace(new RegExp('"',"g"),"'"),'"');
}if(!qx.lang.Object.isEmpty(styles)){html.push(' style="');

for(var name in styles){var value=styles[name];
html.push(name,":",value.toString().replace(new RegExp('"',"g"),"'"),";");
}html.push('"');
}html.push(closed?" />":">");
}}for(i=root.firstChild;i;i=i.nextSibling){html.push(qx.bom.htmlarea.HtmlArea.__getHtml(i,true,skipHtmlEncoding,postProcess));
}if(outputRoot&&!closed&&tag){html.push("</",tag,">");
}break;
case 3:html.push(skipHtmlEncoding?root.data:qx.bom.htmlarea.HtmlArea.__htmlEncode(root.data));
break;
case 8:html.push("<!--",root.data,"-->");
break;
}return html.join("");
},closingTags:" SCRIPT STYLE DIV SPAN TR TD TBODY TABLE EM STRONG FONT A P B I U STRIKE H1 H2 H3 H4 H5 H6 ",__needsClosingTag:function(el){return (qx.bom.htmlarea.HtmlArea.closingTags.indexOf(" "+el.tagName+" ")!=-1);
},__htmlEncode:function(s){s=s.replace(/&/ig,"&amp;");
s=s.replace(/</ig,"&lt;");
s=s.replace(/>/ig,"&gt;");
s=s.replace(/\x22/ig,"&quot;");
s=s.replace(/\xA9/ig,"&copy;");
return s;
},isBlockNode:function(node){if(!qx.dom.Node.isElement(node)){return false;
}node=qx.dom.Node.getName(node);
return /^(body|form|textarea|fieldset|ul|ol|dl|li|div|p|h[1-6]|quote|pre|table|thead|tbody|tfoot|tr|td|th|iframe|address|blockquote)$/.test(node);
},isParagraphParent:function(node){if(!qx.dom.Node.isElement(node)){return false;
}node=qx.dom.Node.getName(node);
return /^(body|td|th|caption|fieldset|div)$/.test(node);
},isHeadlineNode:function(node){if(!qx.dom.Node.isElement(node)){return false;
}var nodeName=qx.dom.Node.getName(node);
return /^h[1-6]$/.test(nodeName);
}},properties:{contentType:{check:"String",init:"xhtml"},messengerMode:{check:"Boolean",init:false},insertParagraphOnLinebreak:{check:"Boolean",init:true},insertLinebreakOnCtrlEnter:{check:"Boolean",init:true},postProcess:{check:"Function",nullable:true,init:null},useUndoRedo:{check:"Boolean",init:true},nativeContextMenu:{check:"Boolean",init:false},defaultFontFamily:{check:"String",init:"Verdana"},defaultFontSize:{check:"Integer",init:4}},members:{__widget:null,__isReady:false,__isInvalid:false,__isLoaded:false,__isEditable:false,__isFirstLineSelected:false,__commandManager:null,__stackCommandManager:null,__currentEvent:null,__storedSelectedHtml:null,__iframe:null,__styleInformation:null,__documentSkeletonParts:null,__savedRange:null,__fireCursorContextOnNextInput:false,__mouseUpOnBody:false,__connectToDomElement:function(element){if(qx.dom.Node.isElement(element)&&qx.dom.Node.isNodeName(element,"div")){this.__widget=element;
}},_createAndAddIframe:function(uri){this.__iframe=qx.bom.Iframe.create();
qx.bom.Iframe.setSource(this.__iframe,uri);
if(qx.core.Variant.isSet("qx.client","mshtml")){qx.bom.element.Attribute.set(this.__iframe,"hideFocus","true");
}else{qx.bom.element.Style.set(this.__iframe,"outline","none");
}qx.bom.element.Style.setStyles(this.__iframe,{width:"100%",height:"100%"});
qx.dom.Element.insertBegin(this.__iframe,this.__widget);
},_getIframeDocument:function(){return qx.bom.Iframe.getDocument(this.__iframe);
},_getIframeWindow:function(){return qx.bom.Iframe.getWindow(this.__iframe);
},_addIframeLoadListener:function(){qx.event.Registration.addListener(this.__iframe,"load",this._loaded,this);
},__initDocumentSkeletonParts:function(){this.__documentSkeletonParts={"xhtml":{doctype:'<!'+'DOCTYPE html PUBLIC "-/'+'/W3C/'+'/DTD XHTML 1.0 Transitional/'+'/EN" "http:/'+'/www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',html:'<html xmlns="http:/'+'/www.w3.org/1999/xhtml" xml:lang="en" lang="en">',meta:'<title></title><meta http-equiv="Content-type" content="text/html; charset=UTF-8" />',style:qx.core.Variant.select("qx.client",{"mshtml":'html { margin:0px; padding:0px; } '+'body { font-size: 100.01%; font-family:Verdana, Geneva, Arial, Helvetica, sans-serif; width:100%; height:100%; background-color:transparent; overflow:auto; background-image:none; margin:0px; padding:5px; } ',"default":'html { width:100%; height:100%; margin:0px; padding:0px; overflow-y:auto; overflow-x:auto; } '+'body { font-size:100.01%; font-family:Verdana, Geneva, Arial, Helvetica, sans-serif; background-color:transparent; overflow:visible; background-image:none; margin:0px; padding:5px; } '}),contentStyle:'p { margin:0px; padding:0px; }',body:'<body>',footer:'</body></html>'}};
},__value:"",getIframeObject:function(){return this.__iframe;
},getCommandManager:function(){return this.__commandManager;
},setValue:function(value){if(qx.lang.Type.isString(value)){this.__value=value;
var doc=this._getIframeDocument();

if(doc&&doc.body){doc.body.innerHTML=this.__generateDefaultContent(value);
}}},__generateDefaultContent:function(value){var bogusNode="";

if(qx.core.Variant.isSet("qx.client","gecko")){if(qx.bom.client.Browser.VERSION<=2){bogusNode+='<br _moz_editor_bogus_node="TRUE" _moz_dirty=""/>';
}}var zeroWidthNoBreakSpace=value.length==0?"\ufeff":"";
var idForFontElement=qx.core.Variant.isSet("qx.client","gecko|webkit")?'id="__elementToFocus__"':'';
var defaultContent='<p>'+'<span style="font-family:'+this.getDefaultFontFamily()+'">'+'<font '+idForFontElement+' size="'+this.getDefaultFontSize()+'">'+bogusNode+value+zeroWidthNoBreakSpace+'</font>'+'</span>'+'</p>';
return defaultContent;
},getValue:function(){return this.__value;
},getComputedValue:function(skipHtmlEncoding){return this.getHtml(skipHtmlEncoding);
},getCompleteHtml:function(){var skeletonParts=this.__documentSkeletonParts[this.getContentType()];
var completeHtml=skeletonParts.html+'<head>'+skeletonParts.meta+'<style type="text/css">'+skeletonParts.contentStyle+'</style>'+'</head>';
completeHtml+="<body style='"+this.__getBodyStyleToExport()+"'>";
completeHtml+=this.getHtml()+'</body></html>';
return completeHtml;
},__getBodyStyleToExport:function(){var stylesToExport=["backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","fontFamily","fontSize","marginTop","marginBottom","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight"];
var Style=qx.bom.element.Style;
var body=this.getContentBody();
var bodyStyle={};
var styleAttribute,styleValue;
var modeToUse=qx.bom.client.Engine.MSHTML?2:1;

for(var i=0,j=stylesToExport.length;i<j;i++){styleAttribute=stylesToExport[i];
styleValue=Style.get(body,styleAttribute,modeToUse);

if(styleValue!==undefined&&styleValue!=""){bodyStyle[styleAttribute]=styleValue;
}}return qx.bom.element.Style.compile(bodyStyle);
},getContentDocument:function(){if(this.__isReady){return this._getIframeDocument();
}},getContentBody:function(){if(this.__isReady){return this._getIframeDocument().body;
}},getContentWindow:function(){if(this.__isReady){return this._getIframeWindow();
}},getWords:function(node){if(!node){node=this.getContentBody();
}
if(!node){return [];
}var nodeClone=node.cloneNode(true);
nodeClone.innerHTML=nodeClone.innerHTML.replace(/>/gi,"> ");
nodeClone.innerHTML=nodeClone.innerHTML.replace(/\n/gi," ");
nodeClone.innerHTML=nodeClone.innerHTML.replace(/<!--.*-->/gi,"");
var text=qx.core.Variant.isSet("qx.client","mshtml|opera")?nodeClone.innerText:nodeClone.textContent;
var words=text.match(qx.bom.htmlarea.HtmlArea.GetWordsRegExp);
return !words?[]:words;
},getWordsWithElement:function(){var list=this.getTextNodes();
var result={};
var i,j,words,element,word;

for(var i=0,len1=list.length;i<len1;++i){element=list[i];
words=element.nodeValue.split(" ");

for(var j=0,len2=words.length;j<len2;++j){word=this._cleanupWord(words[j]);

if(word!=null&&word.length>1){if(!result[word]){result[word]=[];
}result[word].push(element);
}}}return result;
},_cleanupWord:function(word){if(!word){return null;
}return word.replace(qx.bom.htmlarea.HtmlArea.CleanupWordsRegExp,"");
},getTextNodes:function(){return this._fetchTextNodes(this.getContentBody());
},_fetchTextNodes:function(element){var result=[];
var tmp;
if(element.hasChildNodes){for(var i=0;i<element.childNodes.length;i++){tmp=this._fetchTextNodes(element.childNodes[i]);
qx.lang.Array.append(result,tmp);
}}if(element.nodeType==3){if(element.nodeValue.length>1){result.push(element);
}}return result;
},__loadCounter:0,__waitForDocumentReady:function(){var doc=this._getIframeDocument();
if(!doc){this.__loadCounter++;

if(this.__loadCounter>5){this.error('cant load HtmlArea. Document is not available. '+doc);
this.fireDataEvent("loadingError");
}else{{this.error('document not available, try again...');
};
qx.event.Timer.once(function(){this.__waitForDocumentReady();
},this,0);
}}else{this.__loadCounter=0;
this._onDocumentIsReady();
}},_loaded:function(e){if(this.__isLoaded){return;
}
if(this.__isInvalid){this.__resetEditorToValidState();
return;
}if(qx.core.Variant.isSet("qx.client","mshtml")){this.__waitForDocumentReady();
}else{this._onDocumentIsReady();
}},isReady:function(){return this.__isReady;
},_onDocumentIsReady:function(){var cm=new qx.bom.htmlarea.manager.Command(this);

if(this.getUseUndoRedo()){cm=new qx.bom.htmlarea.manager.UndoRedo(cm,this);
}this.__isLoaded=true;
if(qx.core.Variant.isSet("qx.client","mshtml")){this.setEditable(true);
}this.__renderContent();

if(!qx.core.Variant.isSet("qx.client","opera")){this.__addListeners();
}if(!qx.core.Variant.isSet("qx.client","mshtml")){this.setEditable(true);
}this.__isReady=true;
this.__commandManager=cm;
cm.setContentDocument(this._getIframeDocument());
this.__processStackedCommands();
if(qx.core.Variant.isSet("qx.client","opera")){this.__addListeners();
}this.fireEvent("ready");
},forceEditable:qx.core.Variant.select("qx.client",{"gecko":function(){var doc=this._getIframeDocument();

if(doc){if(qx.bom.client.Engine.VERSION>="1.9"){doc.designMode="Off";
doc.body.contentEditable=false;
doc.body.contentEditable=true;
}else{doc.body.contentEditable=true;
this.__setDesignMode(true);
}}},"default":qx.lang.Function.empty}),invalidateEditor:qx.core.Variant.select("qx.client",{"gecko":function(){this.__isLoaded=false;
this.__isReady=false;
this.__isInvalid=true;
},"default":function(){}}),__resetEditorToValidState:qx.core.Variant.select("qx.client",{"gecko":function(){this.__renderContent();
this.__addListeners();
this.__commandManager.setContentDocument(this._getIframeDocument());
this.setEditable(true);
this.forceEditable();
this.__isLoaded=true;
this.__isReady=true;
this.__isInvalid=false;
this.fireEvent("readyAfterInvalid");
},"default":function(){}}),__getElementStyleAsString:function(elem){var style="";

if(!elem){return style;
}
try{var styleAttrib=elem.getAttribute("style");

if(!styleAttrib){return style;
}if(qx.core.Variant.isSet("qx.client","mshtml")){style=styleAttrib.cssText;
}else{style=styleAttrib;
}}catch(exc){this.error("can't extract style from elem. ");
}return style;
},__generateDocumentSkeleton:function(value){var overflow=qx.bom.client.Engine.GECKO?" html, body {overflow-x: visible; } ":"";
var skeletonParts=this.__documentSkeletonParts[this.getContentType()];
var head='<head>'+skeletonParts.meta+'<style type="text/css">'+overflow+skeletonParts.style+skeletonParts.contentStyle+this.__styleInformation+'</style>'+'</head>';
var content=skeletonParts.body+value;
return skeletonParts.html+head+content+skeletonParts.footer;
},__renderContent:function(){var value=this.__generateDefaultContent(this.getValue());

if(qx.lang.Type.isString(value)){var doc=this._getIframeDocument();

try{doc.open("text/html",true);
doc.write(this.__generateDocumentSkeleton(value));
doc.close();
}catch(e){this.error("cant open document on source '"+qx.bom.Iframe.queryCurrentUrl(this.__iframe)+"'",e);
this.fireDataEvent("loadingError",e);
}}},__addListeners:function(){this.__addKeyListeners();
this.__addMouseListeners();
this.__addFocusListeners();
},__addKeyListeners:function(){var Registration=qx.event.Registration;
var doc=this._getIframeDocument();
Registration.addListener(doc.body,"keypress",this._handleKeyPress,this);
Registration.addListener(doc.body,"keyup",this._handleKeyUp,this);
Registration.addListener(doc.body,"keydown",this._handleKeyDown,this);
},__addFocusListeners:function(){var Registration=qx.event.Registration;
var doc=this._getIframeDocument();
var focusBlurTarget=qx.bom.client.Engine.WEBKIT?this._getIframeWindow():doc.body;
Registration.addListener(focusBlurTarget,"focus",this._handleFocusEvent,this);
Registration.addListener(focusBlurTarget,"blur",this._handleBlurEvent,this);
Registration.addListener(doc,"focusout",this._handleFocusOutEvent,this);
},__addMouseListeners:function(){var Registration=qx.event.Registration;
var doc=this._getIframeDocument();
var mouseEventName=qx.bom.client.Engine.MSHTML?"click":"mouseup";
Registration.addListener(doc.body,mouseEventName,this._handleMouseUpOnBody,this);
Registration.addListener(doc.documentElement,mouseEventName,this._handleMouseUpOnDocument,this);
Registration.addListener(doc.documentElement,"contextmenu",this._handleContextMenuEvent,this);
},__createStackCommandManager:function(){if(this.__stackCommandManager==null){this.__stackCommandManager={execute:function(command,value){this.stackedCommands=true;
this.commandStack.push({command:command,value:value});
},commandStack:[],stackedCommands:false};
}this.__stackCommandManager.stackedCommands=false;
return this.__stackCommandManager;
},__processStackedCommands:function(){var manager=this.__stackCommandManager;

if(manager!=null&&manager.stackedCommands){var commandStack=manager.commandStack;

if(commandStack!=null){for(var i=0,j=commandStack.length;i<j;i++){this.__commandManager.execute(commandStack[i].command,commandStack[i].value);
}}}},__setDesignMode:function(onOrOff){var doc=this._getIframeDocument();

if(this.__isLoaded&&doc){try{if(qx.core.Variant.isSet("qx.client","gecko")){doc.designMode=(onOrOff!==false)?'Off':'On';
}doc.designMode=(onOrOff!==false)?'On':'Off';
}catch(e){}}},setEditable:function(value){if(this.__isLoaded){this.__setDesignMode(true);
if(qx.core.Variant.isSet("qx.client","gecko")){try{var doc=this._getIframeDocument();
doc.execCommand("styleWithCSS",false,true);
}catch(ex){try{var doc=this._getIframeDocument();
doc.execCommand("useCSS",false,false);
}catch(ex){if(!this.__isReady){this.error("Failed to enable rich edit functionality");
this.fireDataEvent("loadingError",ex);
}else{throw new Error("Failed to enable rich edit functionality");
}}}}this.__isEditable=value;
}},getEditable:function(){return this.__isEditable;
},isEditable:function(){return this.__isEditable;
},__controlPressed:false,_handleKeyUp:function(e){var keyIdentifier=e.getKeyIdentifier().toLowerCase();
this.__currentEvent=e;

if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug(e.getType()+" | "+keyIdentifier);
}if(qx.core.Variant.isSet("qx.client","mshtml|webkit")){if(this.__controlPressed){switch(keyIdentifier){case "enter":if(this.getInsertLinebreakOnCtrlEnter()){if(qx.core.Variant.isSet("qx.client","webkit")){this.__insertWebkitLineBreak();
e.preventDefault();
e.stopPropagation();
}else{var rng=this.__createRange(this.getSelection());

if(rng){rng.collapse(true);
rng.pasteHTML('<br/><div class="placeholder"></div>');
}}this.__startExamineCursorContext();
}break;
case "control":this.__controlPressed=false;
return;
break;
}}}else if(qx.core.Variant.isSet("qx.client","gecko")){switch(keyIdentifier){case "left":case "right":case "up":case "down":case "pageup":case "pagedown":case "delete":case "end":case "backspace":this.__isFirstLineSelected=(this.getFocusNode()==this.getContentBody().firstChild);
break;
}}},__insertWebkitLineBreak:function(){var sel=this.getSelection();
var helperString="";
if(sel&&(sel.focusNode.textContent==""||sel.focusNode.parentElement.tagName=="LI")){helperString="<br class='webkit-block-placeholder' />";
}this.__commandManager.execute("inserthtml",helperString+qx.bom.htmlarea.HtmlArea.simpleLinebreak);
},_handleKeyDown:qx.core.Variant.select("qx.client",{"mshtml|webkit":function(e){var keyIdentifier=e.getKeyIdentifier().toLowerCase();

if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){}if(this.__controlPressed&&(keyIdentifier=="z"||keyIdentifier=="y"||keyIdentifier=="b"||keyIdentifier=="u"||keyIdentifier=="i"||keyIdentifier=="k")){e.preventDefault();
e.stopPropagation();
}if(keyIdentifier=="control"){this.__controlPressed=true;
}},"default":function(e){}}),_handleKeyPress:function(e){var doc=this.getContentDocument();
var keyIdentifier=e.getKeyIdentifier().toLowerCase();
var isCtrlPressed=e.isCtrlPressed();
var isShiftPressed=e.isShiftPressed();
this.__currentEvent=e;

if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug(e.getType()+" | "+keyIdentifier);
}if(this.__fireCursorContextOnNextInput){var fireEvent=!(qx.core.Variant.isSet("qx.client","mshtml")&&keyIdentifier=="enter")||!(qx.core.Variant.isSet("qx.client","gecko")&&keyIdentifier=="enter");

if(fireEvent){this.__startExamineCursorContext();
this.__fireCursorContextOnNextInput=false;
}}
switch(keyIdentifier){case "enter":if(!isShiftPressed&&!isCtrlPressed&&this.getMessengerMode()){e.preventDefault();
e.stopPropagation();
var dataEvent=new qx.event.type.Data("messengerContent",this.getComputedValue());
this.dispatchEvent(dataEvent,true);
this.resetHtml();
}if(isCtrlPressed){if(!this.getInsertLinebreakOnCtrlEnter()){return;
}e.preventDefault();
e.stopPropagation();

if(qx.core.Variant.isSet("qx.client","gecko")){if(this.__isSelectionWithinWordBoundary()){this.insertHtml("<br />");
this.__startExamineCursorContext();
return;
}this.insertHtml("<br /><div id='placeholder'></div>");
}else if(qx.core.Variant.isSet("qx.client","opera")){var sel=this.getSelection();
var rng=this.__createRange(sel);

if(sel&&rng){var brNode=doc.createElement("br");
rng.collapse(true);
rng.insertNode(brNode);
rng.collapse(true);
rng.selectNode(brNode);
sel.addRange(rng);
rng.collapse(true);
}}this.__startExamineCursorContext();
}if(qx.core.Variant.isSet("qx.client","mshtml")){if(!this.getInsertParagraphOnLinebreak()){if(this.__commandManager.execute("inserthtml",qx.bom.htmlarea.HtmlArea.simpleLinebreak)){this.__startExamineCursorContext();
e.preventDefault();
e.stopPropagation();
}}}else if(qx.core.Variant.isSet("qx.client","gecko")){if(this.getInsertParagraphOnLinebreak()&&!isShiftPressed&&!isCtrlPressed){var sel=this.getSelection();

if(sel){var selNode=sel.focusNode;
if(this.__isSelectionWithinWordBoundary()){this.__startExamineCursorContext();
return;
}if(this.__isFocusNodeAnElement()){this.__startExamineCursorContext();
return;
}while(!qx.dom.Node.isNodeName(selNode,"body")){if(qx.dom.Node.isNodeName(selNode,"li")){this.__startExamineCursorContext();
return;
}selNode=selNode.parentNode;
}}this.__commandManager.insertParagraphOnLinebreak();
e.preventDefault();
e.stopPropagation();
this.__startExamineCursorContext();
this.__fireCursorContextOnNextInput=true;
}}else if(qx.core.Variant.isSet("qx.client","webkit")){if(this.getInsertParagraphOnLinebreak()&&isShiftPressed){this.__insertWebkitLineBreak();
e.preventDefault();
e.stopPropagation();
this.__startExamineCursorContext();
}}break;
case "up":if(qx.bom.client.Engine.GECKO&&qx.bom.client.Engine.FULLVERSION<1.9&&isShiftPressed){var sel=this.getSelection();
if(sel&&sel.focusNode==doc.body.firstChild){if(this.__isFirstLineSelected){if(sel.focusOffset!=0){sel.extend(sel.focusNode,0);
}}}}this.__startExamineCursorContext();
break;
case "home":if(qx.bom.client.Engine.GECKO&&qx.bom.client.Engine.FULLVERSION<1.9){if(isCtrlPressed){var sel=this.getSelection();
if(isShiftPressed){if(sel&&(sel.focusOffset!=0)||(sel.focusNode!=doc.body.firstChild)){sel.extend(doc.body.firstChild,0);
}}else{var elements=null;
var currentItem;
if(doc){elements=doc.evaluate("//text()[string-length(normalize-space(.))>0]",doc.body,null,XPathResult.ANY_TYPE,null);
}
if(elements&&sel){while(currentItem=elements.iterateNext()){if(currentItem&&currentItem.parentNode&&currentItem.parentNode.tagName!="STYLE"){try{sel.extend(currentItem,0);

if(!this.isSelectionCollapsed()){sel.collapseToStart();
}}catch(e){}break;
}}}}}}this.__startExamineCursorContext();
break;
case "left":case "right":case "down":case "pageup":case "pagedown":case "delete":case "end":case "backspace":this.__startExamineCursorContext();
break;
case "b":if(isCtrlPressed){this.__executeHotkey('bold',true);
}break;
case "i":case "k":if(isCtrlPressed){this.__executeHotkey('italic',true);
}break;
case "u":if(isCtrlPressed){this.__executeHotkey('underline',true);
}break;
case "z":if(isCtrlPressed&&!isShiftPressed){this.__executeHotkey('undo',true);
}else if(isCtrlPressed&&isShiftPressed){this.__executeHotkey('redo',true);
}break;
case "y":if(isCtrlPressed){this.__executeHotkey('redo',true);
}break;
case "a":if(isCtrlPressed){this.selectAll();
}break;
}this.__currentEvent=null;
},__executeHotkey:function(hotkeyIdentifier,preventDefault){var method=null;
var hotkeyInfo=qx.bom.htmlarea.HtmlArea.hotkeyInfo;

if(hotkeyInfo[hotkeyIdentifier]){method=hotkeyInfo[hotkeyIdentifier].method;
}
if(method!=null&&this[method]){this[method]();

if(preventDefault){this.__currentEvent.preventDefault();
this.__currentEvent.stopPropagation();
}
if(this.isSelectionCollapsed()){this.__fireCursorContextOnNextInput=true;
}this.__startExamineCursorContext();
}},_handleFocusEvent:function(e){this.__storedSelectedHtml=null;

if(qx.core.Variant.isSet("qx.client","gecko|webkit")){var elementToFocus=this.getContentDocument().getElementById("__elementToFocus__");

if(elementToFocus){qx.bom.element.Attribute.reset(elementToFocus,"id");
}}this.fireEvent("focused");
},_handleBlurEvent:function(e){this.__value=this.getComputedValue();
},_handleFocusOutEvent:function(e){this.__controlPressed=false;

if(this.__storedSelectedHtml==null){this.__storedSelectedHtml=this.getSelectedHtml();
}this.fireEvent("focusOut");
},_handleMouseUpOnBody:function(e){if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug("handleMouse "+e.getType());
}this.__mouseUpOnBody=true;
this.__startExamineCursorContext();
},_handleMouseUpOnDocument:qx.core.Variant.select("qx.client",{"mshtml":qx.lang.Function.empty,"default":function(e){if(!this.__mouseUpOnBody){qx.bom.Element.activate(this.getContentBody());
}this.__mouseUpOnBody=false;
}}),_handleContextMenuEvent:function(e){if(!this.getNativeContextMenu()){var relX=e.getViewportLeft();
var relY=e.getViewportTop();
var absX=qx.bom.element.Location.getLeft(this.__widget)+relX;
var absY=qx.bom.element.Location.getTop(this.__widget)+relY;
var data={x:absX,y:absY,relX:relX,relY:relY,target:e.getTarget()};
e.preventDefault();
e.stopPropagation();
qx.event.Timer.once(function(){this.fireDataEvent("contextmenu",data);
},this,0);
}},isLoaded:function(){return this.__isLoaded;
},insertHtml:function(value){return this.__commandManager.execute("inserthtml",value);
},removeFormat:function(){return this.__commandManager.execute("removeformat");
},setBold:function(){return this.__commandManager.execute("bold");
},setItalic:function(){return this.__commandManager.execute("italic");
},setUnderline:function(){return this.__commandManager.execute("underline");
},setStrikeThrough:function(){return this.__commandManager.execute("strikethrough");
},setFontSize:function(value){return this.__commandManager.execute("fontsize",value);
},setFontFamily:function(value){return this.__commandManager.execute("fontfamily",value);
},setTextColor:function(value){return this.__commandManager.execute("textcolor",value);
},setTextBackgroundColor:function(value){return this.__commandManager.execute("textbackgroundcolor",value);
},setJustifyLeft:function(){return this.__commandManager.execute("justifyleft");
},setJustifyCenter:function(){return this.__commandManager.execute("justifycenter");
},setJustifyRight:function(){return this.__commandManager.execute("justifyright");
},setJustifyFull:function(){return this.__commandManager.execute("justifyfull");
},insertIndent:function(){return this.__commandManager.execute("indent");
},insertOutdent:function(){return this.__commandManager.execute("outdent");
},insertOrderedList:function(){return this.__commandManager.execute("insertorderedlist");
},insertUnorderedList:function(){return this.__commandManager.execute("insertunorderedlist");
},insertHorizontalRuler:function(){return this.__commandManager.execute("inserthorizontalrule");
},insertImage:function(attributes){return this.__commandManager.execute("insertimage",attributes);
},insertHyperLink:function(url){return this.__commandManager.execute("inserthyperlink",url);
},removeBackgroundColor:function(){this.__commandManager.execute("backgroundcolor","transparent");
},setBackgroundColor:function(value){this.__commandManager.execute("backgroundcolor",value);
},removeBackgroundImage:function(){this.__commandManager.execute("backgroundimage");
},setBackgroundImage:function(url,repeat,position){return this.__commandManager.execute("backgroundimage",[url,repeat,position]);
},selectAll:function(){return this.__commandManager.execute("selectall");
},undo:function(){if(this.getUseUndoRedo()){return this.__commandManager.execute("undo");
}else{return true;
}},redo:function(){if(this.getUseUndoRedo()){return this.__commandManager.execute("redo");
}else{return true;
}},resetHtml:function(){var doc=this._getIframeDocument();
while(doc.body.firstChild){doc.body.removeChild(doc.body.firstChild);
}if(qx.bom.client.Engine.GECKO){doc.body.innerHTML="<p>&nbsp;</p>";
}else if(qx.bom.client.Engine.WEBKIT){var sel=this.getSelection();
var rng=doc.createRange();

if(rng&&sel){sel.addRange(rng);
}}},getHtml:function(skipHtmlEncoding){var doc=this._getIframeDocument();

if(doc==null){return null;
}return qx.bom.htmlarea.HtmlArea.__getHtml(doc.body,false,skipHtmlEncoding,this.getPostProcess());
},containsOnlyPlaceholder:qx.core.Variant.select("qx.client",{"mshtml":function(){var doc=this._getIframeDocument();
return (doc.body.innerHTML=="<P>&nbsp;</P>");
},"default":qx.lang.Function.returnFalse}),_selectElement:function(element){var selection=this.getContentWindow().getSelection();
var range=this.getContentDocument().createRange();
range.setStart(element,0);
selection.removeAllRanges();
selection.addRange(range);
},focusContent:qx.core.Variant.select("qx.client",{"gecko":function(){var contentDocument=this.getContentDocument();
var elementToFocus=contentDocument.getElementById("__elementToFocus__");
this.getContentWindow().focus();
qx.bom.Element.focus(this.getContentBody());

if(elementToFocus){this._selectElement(elementToFocus);
}else{this.__checkForContentAndSetDefaultContent();
}},"webkit":function(){qx.bom.Element.focus(this.getContentWindow());
qx.bom.Element.focus(this.getContentBody());
var elementToFocus=this.getContentDocument().getElementById("__elementToFocus__");

if(elementToFocus){qx.bom.element.Attribute.reset(elementToFocus,"id");
}this.__checkForContentAndSetDefaultContent();
},"opera":function(){qx.bom.Element.focus(this.getContentWindow());
qx.bom.Element.focus(this.getContentBody());
this.__checkForContentAndSetDefaultContent();
},"default":function(){qx.bom.Element.focus(this.getContentBody());
this.__checkForContentAndSetDefaultContent();
}}),__checkForContentAndSetDefaultContent:function(){if(!this.__isContentAvailable()){this.__resetToDefaultContentAndSelect();
}},__isContentAvailable:qx.core.Variant.select("qx.client",{"gecko":function(){var childs=this.getContentBody().childNodes;

if(childs.length==0){return false;
}else if(childs.length==1){return !(childs[0]&&qx.dom.Node.isNodeName(childs[0],"br")&&qx.bom.element.Attribute.get(childs[0],"_moz_dirty")!=null);
}else{return true;
}},"webkit":function(){var childs=this.getContentBody().childNodes;

if(childs.length==0){return false;
}else if(childs.length==1){return !(childs[0]&&qx.dom.Node.isNodeName(childs[0],"br"));
}else{return true;
}},"default":function(){var childs=this.getContentBody().childNodes;

if(childs.length==0){return false;
}else if(childs.length==1){return !(childs[0]&&qx.dom.Node.isNodeName(childs[0],"p")&&childs[0].firstChild==null);
}else{return true;
}}}),__resetToDefaultContentAndSelect:qx.core.Variant.select("qx.client",{"gecko|webkit":function(){this.getContentDocument().body.innerHTML=this.__generateDefaultContent("");
var elementToFocus=this.getContentDocument().getElementById("__elementToFocus__");
qx.bom.element.Attribute.reset(elementToFocus,"id");
this._selectElement(elementToFocus);
},"default":function(){var firstParagraph=qx.dom.Hierarchy.getFirstDescendant(this.getContentBody());

if(qx.dom.Node.isNodeName(firstParagraph,"p")){qx.bom.element.Style.set(firstParagraph,"font-family",this.getDefaultFontFamily());
qx.bom.element.Style.set(firstParagraph,"font-size",this.getDefaultFontSize());
}}}),getContextInformation:function(){return this.__examineCursorContext();
},__startExamineCursorContext:function(){qx.event.Timer.once(function(e){var contextInfo=this.__examineCursorContext();
this.fireDataEvent("cursorContext",contextInfo);
},this,200);
},__examineCursorContext:function(){if(this._processingExamineCursorContext||this.getEditable()==false){return;
}this._processingExamineCursorContext=true;

if(!this.__isContentAvailable()){this.__resetToDefaultContentAndSelect();
}var focusNode=this.getFocusNode();

if(focusNode==null){return;
}
if(qx.dom.Node.isText(focusNode)){focusNode=focusNode.parentNode;
}var doc=this._getIframeDocument();
var focusNodeStyle=qx.core.Variant.isSet("qx.client","mshtml")?focusNode.currentStyle:doc.defaultView.getComputedStyle(focusNode,null);
var isBold=false;
var isItalic=false;
var isUnderline=false;
var isStrikeThrough=false;
var unorderedList=false;
var orderedList=false;
var justifyLeft=false;
var justifyCenter=false;
var justifyRight=false;
var justifyFull=false;
var fontSize=null;
var computedFontSize=null;
var fontFamily=null;

if(focusNodeStyle!=null){if(qx.core.Variant.isSet("qx.client","mshtml")){isItalic=focusNodeStyle.fontStyle=="italic";
isUnderline=focusNodeStyle.textDecoration.indexOf("underline")!==-1;
isStrikeThrough=focusNodeStyle.textDecoration.indexOf("line-through")!==-1;
fontSize=focusNodeStyle.fontSize;
fontFamily=focusNodeStyle.fontFamily;
justifyLeft=focusNodeStyle.textAlign=="left";
justifyCenter=focusNodeStyle.textAlign=="center";
justifyRight=focusNodeStyle.textAlign=="right";
justifyFull=focusNodeStyle.textAlign=="justify";
}else{isItalic=focusNodeStyle.getPropertyValue("font-style")=="italic";
isUnderline=focusNodeStyle.getPropertyValue("text-decoration").indexOf("underline")!==-1;
isStrikeThrough=focusNodeStyle.getPropertyValue("text-decoration").indexOf("line-through")!==-1;
fontSize=focusNodeStyle.getPropertyValue("font-size");
fontFamily=focusNodeStyle.getPropertyValue("font-family");
justifyLeft=focusNodeStyle.getPropertyValue("text-align")=="left";
justifyCenter=focusNodeStyle.getPropertyValue("text-align")=="center";
justifyRight=focusNodeStyle.getPropertyValue("text-align")=="right";
justifyFull=focusNodeStyle.getPropertyValue("text-align")=="justify";
}
if(qx.core.Variant.isSet("qx.client","mshtml|opera")){isBold=focusNodeStyle.fontWeight==700;
}else{isBold=focusNodeStyle.getPropertyValue("font-weight")=="bold"||qx.dom.Node.isNodeName(focusNode,"b");
}}var node=focusNode;
if(node!=null&&node.parentNode!=null&&!qx.dom.Node.isDocument(node.parentNode)){while(node!=null&&!qx.dom.Node.isNodeName(node,"body")){var nodename=qx.dom.Node.getName(node);

if(nodename=="ol"){orderedList=true;
break;
}else if(nodename=="ul"){unorderedList=true;
break;
}
if(computedFontSize==null||computedFontSize==""){computedFontSize=qx.bom.element.Attribute.get(node,'size');
}node=node.parentNode;
}}var eventMap={bold:isBold?1:0,italic:isItalic?1:0,underline:isUnderline?1:0,strikethrough:isStrikeThrough?1:0,fontSize:(computedFontSize==null)?fontSize:computedFontSize,fontFamily:fontFamily,insertUnorderedList:unorderedList?1:0,insertOrderedList:orderedList?1:0,justifyLeft:justifyLeft?1:0,justifyCenter:justifyCenter?1:0,justifyRight:justifyRight?1:0,justifyFull:justifyFull?1:0};
this._processingExamineCursorContext=false;
return eventMap;
},getSelection:qx.core.Variant.select("qx.client",{"mshtml":function(){return this._getIframeDocument()?this._getIframeDocument().selection:null;
},"default":function(){return this._getIframeWindow()?this._getIframeWindow().getSelection():null;
}}),isSelectionCollapsed:qx.core.Variant.select("qx.client",{"mshtml":function(){return this.getSelection()&&this.getSelection().type=="None";
},"default":function(){return this.getSelection()&&this.getSelection().isCollapsed;
}}),getSelectedText:qx.core.Variant.select("qx.client",{"mshtml":function(){return this.getRange()?this.getRange().text:"";
},"default":function(){return this.getRange()?this.getRange().toString():"";
}}),getSelectedHtml:function(){if(this.__storedSelectedHtml!=null){return this.__storedSelectedHtml;
}var range=this.getRange();

if(!range){return "";
}else{return this.__getRangeContents(range);
}},__getRangeContents:qx.core.Variant.select("qx.client",{"mshtml":function(range){if(!range){return "";
}return range.item?range.item(0).outerHTML:range.htmlText;
},"default":function(range){var doc=this._getIframeDocument();

if(doc&&range){try{var tmpBody=doc.createElement("body");
tmpBody.appendChild(range.cloneContents());
return tmpBody.innerHTML;
}catch(exc){}return range+"";
}return "";
}}),clearSelection:qx.core.Variant.select("qx.client",{"mshtml":function(){var sel=this.getSelection();

if(sel){sel.empty();
}},"default":function(){var sel=this.getSelection();

if(sel){sel.collapseToStart();
}}}),__isSelectionWithinWordBoundary:qx.core.Variant.select("qx.client",{"gecko":function(){var sel=this.getSelection();
var focusNode=this.getFocusNode();
return sel&&this.isSelectionCollapsed()&&focusNode!=null&&qx.dom.Node.isText(focusNode)&&sel.anchorOffset<focusNode.length;
},"default":function(){return false;
}}),__isFocusNodeAnElement:qx.core.Variant.select("qx.client",{"gecko":function(){return qx.dom.Node.isElement(this.getFocusNode());
},"default":function(){return false;
}}),getRange:function(){return this.__createRange(this.getSelection());
},__createRange:qx.core.Variant.select("qx.client",{"mshtml":function(sel){var doc=this._getIframeDocument();

if(sel){try{return sel.createRange();
}catch(ex){return doc?doc.body.createTextRange():null;
}}else{return doc?doc.body.createTextRange():null;
}},"default":function(sel){var doc=this._getIframeDocument();

if(sel){try{return sel.getRangeAt(0);
}catch(ex){return doc?doc.createRange():null;
}}else{return doc?doc.createRange():null;
}}}),saveRange:qx.core.Variant.select("qx.client",{"mshtml":function(){this.__savedRange=this.getRange();
},"default":function(){}}),getSavedRange:qx.core.Variant.select("qx.client",{"mshtml":function(){return this.__savedRange;
},"default":function(){}}),resetSavedRange:qx.core.Variant.select("qx.client",{"mshtml":function(){this.__savedRange=null;
},"default":function(){}}),getFocusNode:qx.core.Variant.select("qx.client",{"mshtml":function(){var sel=this.getSelection();
var rng;

switch(sel.type){case "Text":case "None":rng=this.__createRange(sel);

if(rng){rng.collapse(false);
return rng.parentElement();
}else{return null;
}break;
case "Control":rng=this.__createRange(sel);

if(rng){try{rng.collapse(false);
}catch(ex){}return rng.item(0);
}else{return null;
}break;
default:return this._getIframeDocument().body;
}},"default":function(){var sel=this.getSelection();

if(sel&&sel.focusNode){return sel.focusNode;
}return this._getIframeDocument().body;
}})},settings:{"qx.bom.htmlarea.HtmlArea.debug":"off"},destruct:function(){try{var doc=this._getIframeDocument();
var Registration=qx.event.Registration;
Registration.removeListener(doc.body,"keypress",this._handleKeyPress,this);
Registration.removeListener(doc.body,"keyup",this._handleKeyUp,this);
Registration.removeListener(doc.body,"keydown",this._handleKeyDown,this);
var focusBlurTarget=qx.bom.client.Engine.WEBKIT?this._getIframeWindow():doc.body;
Registration.removeListener(focusBlurTarget,"focus",this._handleFocusEvent);
Registration.removeListener(focusBlurTarget,"blur",this._handleBlurEvent);
Registration.removeListener(doc,"focusout",this._handleFocusOutEvent);
var mouseEventName=qx.bom.client.Engine.MSHTML?"click":"mouseup";
Registration.removeListener(doc.body,mouseEventName,this._handleMouseUpOnBody,this);
Registration.removeListener(doc.documentElement,mouseEventName,this._handleMouseUpOnDocument,this);
Registration.removeListener(doc.documentElement,"contextmenu",this._handleContextMenuEvent,this);
}catch(ex){}this._disposeObjects("__commandManager");
this.__documentSkeletonParts=this.__iframe=this.__widget=this.__stackCommandManager=null;
}});
qx.Class.define("qx.dom.Element",{statics:{hasChild:function(parent,child){return child.parentNode===parent;
},hasChildren:function(element){return !!element.firstChild;
},hasChildElements:function(element){element=element.firstChild;

while(element){if(element.nodeType===1){return true;
}element=element.nextSibling;
}return false;
},getParentElement:function(element){return element.parentNode;
},isInDom:function(element,win){if(!win){win=window;
}var domElements=win.document.getElementsByTagName(element.nodeName);

for(var i=0,l=domElements.length;i<l;i++){if(domElements[i]===element){return true;
}}return false;
},insertAt:function(node,parent,index){var ref=parent.childNodes[index];

if(ref){parent.insertBefore(node,ref);
}else{parent.appendChild(node);
}return true;
},insertBegin:function(node,parent){if(parent.firstChild){this.insertBefore(node,parent.firstChild);
}else{parent.appendChild(node);
}},insertEnd:function(node,parent){parent.appendChild(node);
},insertBefore:function(node,ref){ref.parentNode.insertBefore(node,ref);
return true;
},insertAfter:function(node,ref){var parent=ref.parentNode;

if(ref==parent.lastChild){parent.appendChild(node);
}else{return this.insertBefore(node,ref.nextSibling);
}return true;
},remove:function(node){if(!node.parentNode){return false;
}node.parentNode.removeChild(node);
return true;
},removeChild:function(node,parent){if(node.parentNode!==parent){return false;
}parent.removeChild(node);
return true;
},removeChildAt:function(index,parent){var child=parent.childNodes[index];

if(!child){return false;
}parent.removeChild(child);
return true;
},replaceChild:function(newNode,oldNode){if(!oldNode.parentNode){return false;
}oldNode.parentNode.replaceChild(newNode,oldNode);
return true;
},replaceAt:function(newNode,index,parent){var oldNode=parent.childNodes[index];

if(!oldNode){return false;
}parent.replaceChild(newNode,oldNode);
return true;
}}});
qx.Class.define("qx.bom.htmlarea.manager.Command",{extend:qx.core.Object,construct:function(editorInstance){this.base(arguments);
this.__editorInstance=editorInstance;
this.__doc=null;
this._commands=null;
this.__populateCommandList();
this.__invalidFocusCommands={"Bold":true,"Italic":true,"Underline":true,"StrikeThrough":true};
this.__fontSizeNames=[10,12,16,18,24,32,48];
this.__hyperLinkId=0;
},statics:{__backgroundPosition:"|top|bottom|center|left|right|right top|left top|left bottom|right bottom|",__backgroundRepeat:"repeat repeat-x repeat-y no-repeat"},members:{__doc:null,__editorInstance:null,__startTyping:false,__invalidFocusCommands:null,__fontSizeNames:null,__hyperLinkId:null,setContentDocument:function(doc){this.__doc=doc;
},getCommandObject:function(commandName){if(this._commands[commandName]){return this._commands[commandName];
}else{return null;
}},__populateCommandList:function(){this._commands={bold:{useBuiltin:true,identifier:"Bold",method:null},italic:{useBuiltin:true,identifier:"Italic",method:null},underline:{useBuiltin:true,identifier:"Underline",method:null},strikethrough:{useBuiltin:true,identifier:"StrikeThrough",method:null},fontfamily:{useBuiltin:true,identifier:"FontName",method:null},fontsize:{useBuiltin:false,identifier:"FontSize",method:"__setFontSize"},textcolor:{useBuiltin:true,identifier:"ForeColor",method:null},textbackgroundcolor:{useBuiltin:false,identifier:null,method:"__setTextBackgroundColor"},backgroundcolor:{useBuiltin:false,identifier:null,method:"__setBackgroundColor"},backgroundimage:{useBuiltin:false,identifier:null,method:"__setBackgroundImage"},justifyleft:{useBuiltin:false,identifier:"JustifyLeft",method:"__setTextAlign"},justifyright:{useBuiltin:false,identifier:"JustifyRight",method:"__setTextAlign"},justifycenter:{useBuiltin:false,identifier:"JustifyCenter",method:"__setTextAlign"},justifyfull:{useBuiltin:false,identifier:"JustifyFull",method:"__setTextAlign"},indent:{useBuiltin:true,identifier:"Indent",method:null},outdent:{useBuiltin:true,identifier:"Outdent",method:null},copy:{useBuiltin:true,identifier:"Copy",method:null},cut:{useBuiltin:true,identifier:"Cut",method:null},paste:{useBuiltin:true,identifier:"Paste",method:null},insertorderedlist:{useBuiltin:false,identifier:"InsertOrderedList",method:"__insertList"},insertunorderedlist:{useBuiltin:false,identifier:"InsertUnorderedList",method:"__insertList"},inserthorizontalrule:{useBuiltin:false,identifier:"InsertHtml",method:"__insertHr"},insertimage:{useBuiltin:false,identifier:"InsertImage",method:"__insertImage"},inserthyperlink:{useBuiltin:false,identifier:"CreateLink",method:"__insertHyperLink"},selectall:{useBuiltin:false,identifier:"SelectAll",method:"__selectAll"},selectedtext:{useBuiltin:false,identifier:null,method:"__getSelectedText"},selectedhtml:{useBuiltin:false,identifier:null,method:"__getSelectedHtml"},inserthtml:{useBuiltin:false,identifier:"InsertHtml",method:"__insertHtml"},resethtml:{useBuiltin:false,identifier:null,method:"__resetHtml"},gethtml:{useBuiltin:false,identifier:null,method:"__getHtml"},removeformat:{useBuiltin:true,identifier:"RemoveFormat",method:null}};
},execute:function(command,value){if(!this.__editorInstance.isReady()){this.error("editor not ready! '"+command+"':'"+value+"'");
return false;
}command=command.toLowerCase();
value=value!=null?value:null;
if(this._commands[command]){var result;
var commandObject=this._commands[command];
if(!(qx.bom.client.Engine.WEBKIT&&(command=="indent"||command=="outdent"))){if(this.__paragraphMissing()){this.__insertHelperParagraph();
}}if(commandObject.useBuiltin){result=this.__executeCommand(commandObject.identifier,false,value);
}else{if(commandObject.method!=null&&this[commandObject.method]){result=this[commandObject.method].call(this,value,commandObject);
}else{this.error("The method '"+commandObject.method+"' you calling to execute the command '"+command+"' is not available!");
}}this.__editorInstance.resetSavedRange();
return result;
}else{this.error("Command "+command+" is currently not supported!");
}},__paragraphMissing:function(){var Node=qx.dom.Node;
var focusNode=this.__editorInstance.getFocusNode();
var insideBlockElement=false;
var bodyIsFocusNode=false;

if(focusNode){if(Node.isText(focusNode)){var parents=qx.dom.Hierarchy.getAncestors(focusNode);

for(var i=0,j=parents.length;i<j;i++){if(Node.isNodeName(parents[i],"p")||qx.bom.htmlarea.HtmlArea.isHeadlineNode(parents[i])){insideBlockElement=true;
break;
}}}else if(Node.isNodeName(focusNode,"body")){bodyIsFocusNode=true;
}}return bodyIsFocusNode||!insideBlockElement;
},__insertHelperParagraph:function(){this.__executeCommand("formatBlock",false,"p");
},__executeCommand:function(command,ui,value){try{var execCommandTarget=this.__doc;
var emptyRange=false;
var range=this.__editorInstance.getRange();
this.__doc.body.focus();
if(qx.core.Variant.isSet("qx.client","mshtml")){if(command!="selectall"){range.select();
if(((range.text)&&(range.text.length>0))||((range.length==1)&&(range.item(0))&&(range.item(0).tagName=="IMG"))){execCommandTarget=range;
}else{execCommandTarget=this.__doc;
}}if((qx.core.Variant.isSet("qx.client","mshtml"))&&(this.__invalidFocusCommands[command])){if(range.text==""){emptyRange=true;
}}}var result=execCommandTarget.execCommand(command,ui,value);

if(emptyRange&&range.text!=""){range.collapse();
}
if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug("execCommand "+command+" with value "+value+" succeded");
}this.__startTyping=false;
}catch(ex){if(true&&qx.core.Setting.get("qx.bom.htmlarea.HtmlArea.debug")=="on"){this.debug("execCommand "+command+" with value "+value+" failed");
}return false;
}return result;
},__getTargetRange:qx.core.Variant.select("qx.client",{"mshtml":function(){var editor=this.__editorInstance;
var range=editor.getSavedRange()!=null?editor.getSavedRange():editor.getRange();
return range;
},"default":function(){return this.__editorInstance.getRange();
}}),__insertHtml:qx.core.Variant.select("qx.client",{"mshtml":function(value,commandObject){var result;
if(value==qx.bom.htmlarea.HtmlArea.simpleLinebreak){return this.__insertBrOnLinebreak();
}else{this.__doc.body.focus();
var sel=this.__editorInstance.getSelection();
var range=this.__getTargetRange();
if(range&&sel&&sel.type!="Control"){try{range.pasteHTML(value);
range.collapse(false);
range.select();
result=true;
}catch(e){}}else{result=false;
}this.__editorInstance.resetSavedRange();
return result;
}},"default":function(value,commandObject){this.__doc.body.focus();
return this.__doc.execCommand(commandObject.identifier,false,value);
}}),insertParagraphOnLinebreak:qx.core.Variant.select("qx.client",{"gecko":function(){var helperStyleStructure=this.__getCurrentStylesGrouped();
var paragraphStyle=this.__generateParagraphStyle(helperStyleStructure);
var helperStyle=this.__generateHelperString(helperStyleStructure);
var spanId="__placeholder__"+Date.parse(new Date());
var paragraphId="__paragraph__"+Date.parse(new Date());
var htmlToInsert='';
var helperString='<span id="'+spanId+'"></span>';
htmlToInsert+=helperString;
htmlToInsert+='<p id="'+paragraphId+'" '+paragraphStyle+'>';
htmlToInsert+=helperStyle+'</p>';
this.__editorInstance.getCommandManager().addUndoStep("inserthtml","insertParagraph",this.getCommandObject("inserthtml"));
this.execute("inserthtml",htmlToInsert);
this.__hideSuperfluousParagraph();
qx.bom.element.Attribute.reset(this.__doc.getElementById(spanId),"id");
var paragraphNode=this.__doc.getElementById(paragraphId);

if(paragraphNode.previousSibling.innerHTML==helperString){var helperNodeFragment=this.__generateHelperNodes();
var brNode=this.__doc.createElement("br");
var mozDirty=this.__doc.createAttribute("_moz_dirty");
mozDirty.nodeValue="";
brNode.setAttributeNode(mozDirty);
var type=this.__doc.createAttribute("type");
type.nodeValue="_moz";
brNode.setAttributeNode(type);
paragraphNode.previousSibling.appendChild(helperNodeFragment);
paragraphNode.previousSibling.appendChild(brNode);
}qx.bom.element.Attribute.reset(paragraphNode,"id");
return true;
},"webkit":function(){var styles=this.getCurrentStyles();
var elementStyleString="";
var relevantStyles={"background-color":true,"text-align":true};
for(var style in styles){if(relevantStyles[style]){elementStyleString+=style+":"+styles[style]+";";
}}this.__editorInstance.insertHtml("<p style='"+elementStyleString+"'><br class='webkit-block-placeholder' />");
},"default":qx.lang.Function.empty}),__generateParagraphStyle:qx.core.Variant.select("qx.client",{"gecko":function(currentStylesGrouped){var paragraphStyle='style="';
var childElement=currentStylesGrouped.child;
if(childElement["text-align"]){paragraphStyle+='text-align:'+childElement["text-align"]+';';
delete currentStylesGrouped.child["text-align"];
}if(childElement["font-family"]){paragraphStyle+='font-family:'+childElement["font-family"]+';';
delete currentStylesGrouped.child["font-family"];
}var paddingsToApply={"padding-top":true,"padding-bottom":true,"padding-left":true,"padding-right":true};
var marginsToApply={"margin-top":true,"margin-bottom":true,"margin-left":true,"margin-right":true};

for(var styleAttribute in childElement){if(paddingsToApply[styleAttribute]||marginsToApply[styleAttribute]){paragraphStyle+=styleAttribute+':'+childElement[styleAttribute]+';';
delete currentStylesGrouped.child[styleAttribute];
}}paragraphStyle+='"';
return paragraphStyle;
},"default":function(){return "";
}}),__hideSuperfluousParagraph:qx.core.Variant.select("qx.client",{"gecko":function(){var sel=this.__editorInstance.getSelection();

if(!sel||!sel.focusNode){return;
}var focusNode=sel.focusNode;
var traversalNode=sel.focusNode;

while(!qx.dom.Node.isNodeName(traversalNode,"p")){traversalNode=traversalNode.parentNode;
}var prevSiblingId=traversalNode.previousSibling.id;
var nextSiblingId=traversalNode.nextSibling?traversalNode.nextSibling.id:null;

if(qx.lang.String.startsWith(prevSiblingId,"__paragraph__")&&prevSiblingId==nextSiblingId){var nextParagraph=traversalNode.nextSibling;
var rng=this.__editorInstance.getRange();
rng.selectNode(nextParagraph);
sel.addRange(rng);
var htmlToInsert=qx.bom.htmlarea.HtmlArea.EMPTY_DIV;
this.__editorInstance.getCommandManager().addUndoStep("inserthtml",htmlToInsert,this.getCommandObject("inserthtml"));
this.execute("inserthtml",htmlToInsert);
var secondRange=this.__editorInstance.getRange();

if(focusNode){while(focusNode&&focusNode.firstChild&&qx.dom.Node.isElement(focusNode.firstChild)){focusNode=focusNode.firstChild;
}}secondRange.selectNode(focusNode);
sel.addRange(secondRange);
secondRange.collapse(true);
}},"default":qx.lang.Function.empty}),__insertBrOnLinebreak:qx.core.Variant.select("qx.client",{"mshtml":function(){var rng=this.__editorInstance.getRange();
if(rng&&!qx.dom.Node.isNodeName(rng.parentElement(),"li")){rng.pasteHTML(qx.bom.htmlarea.HtmlArea.simpleLinebreak);
rng.collapse(false);
rng.select();
return true;
}return false;
},"default":function(){return false;
}}),__setTextAlign:function(value,commandObject){var commandTarget=qx.core.Variant.isSet("qx.client","mshtml")?this.__editorInstance.getRange():this.__doc;
return commandTarget.execCommand(commandObject.identifier,false,value);
},__insertList:function(value,commandObject){if(qx.core.Variant.isSet("qx.client","mshtml")){var focusNode=this.__editorInstance.getFocusNode();
this.__manualOutdent(focusNode);
}this.__doc.body.focus();
var returnValue=this.__doc.execCommand(commandObject.identifier,false,value);

if(qx.core.Variant.isSet("qx.client","webkit")){var focusNode=this.__editorInstance.getFocusNode();
this.__manualOutdent(focusNode.parentNode);
}return returnValue;
},__manualOutdent:function(startNode){var blockquotes=[];
var parent=startNode.parentNode;

while(qx.dom.Node.isNodeName(parent,"blockquote")){blockquotes.push(parent);
parent=parent.parentNode;
}if(blockquotes.length>0){parent.appendChild(startNode);
parent.removeChild(blockquotes[blockquotes.length-1]);
}},__insertImage:qx.core.Variant.select("qx.client",{"gecko":function(attributes,commandObject){if(attributes.src){this.__doc.execCommand(commandObject.identifier,false,attributes.src);
delete attributes.src;
var sel=this.__editorInstance.getSelection();
if(sel){var anchorNode=sel.anchorNode;
var offset=sel.anchorOffset;
var img=anchorNode.childNodes[offset-1];
var attrNode;

for(var attribute in attributes){attrNode=this.__doc.createAttribute(attribute);
attrNode.nodeValue=attributes[attribute];
img.setAttributeNode(attrNode);
}var formatElements={"font":true,"span":true};
var startNode=null;
var sibling=true;
if(qx.dom.Node.isElement(img.previousSibling)&&formatElements[qx.dom.Node.getName(img.previousSibling)]){startNode=img.previousSibling;
}else if(formatElements[qx.dom.Node.getName(img.parentNode)]){startNode=img.parentNode;
sibling=false;
}var documentFragment=this.__doc.createDocumentFragment();
var inline;

if(sibling&&startNode!=null){var formatElements=this.__generateImageFormatElements(startNode);
documentFragment.appendChild(formatElements.root);
inline=formatElements.inline;
}else{inline=this.__doc.createElement("span");
documentFragment.appendChild(inline);
}var inlineText=this.__doc.createTextNode("");
inline.appendChild(inlineText);
var imageParent=img.parentNode;
if(img==imageParent.lastChild){imageParent.appendChild(documentFragment);
}else{imageParent.insertBefore(documentFragment,img.nextSibling);
}var rng=this.__editorInstance.getRange();
rng.selectNodeContents(inline);
}return true;
}else{return false;
}},"mshtml":function(attributes,commandObject){var result=false;
var img="<img ";

for(var attrName in attributes){img+=attrName+"='"+attributes[attrName]+"' ";
}img+="/>";
var sel=this.__editorInstance.getSelection();
var currRange=this.__getTargetRange();
if(sel&&sel.type!="Control"){try{currRange.select();
currRange.pasteHTML(img);
result=true;
}catch(e){}}this.__editorInstance.resetSavedRange();
return result;
},"default":function(attributes,commandObject){if(attributes.src){var img="<img ";

for(var attrName in attributes){img+=attrName+"='"+attributes[attrName]+"' ";
}img+="/>";
return this.__doc.execCommand("InsertHtml",false,img);
}else{return false;
}}}),__generateImageFormatElements:function(startNode){while(startNode.firstChild&&startNode.firstChild.nodeType==1){startNode=startNode.firstChild;
}var grouped=this.__getCurrentStylesGrouped(startNode);
var root,inlineStyle,legacyFont;
var styles="";
var parent=null;
var inline=null;
var child=grouped.child;

while(child){inline=this.__doc.createElement(child["legacy-font-size"]?"font":"span");
inlineStyle=this.__doc.createAttribute("style");
inline.setAttributeNode(inlineStyle);
for(var styleKey in child){if(styleKey!="child"&&styleKey!="legacy-font-size"){styles+=styleKey+":"+child[styleKey]+";";
}else if(styleKey=="legacy-font-size"){legacyFont=this.__doc.createAttribute("size");
legacyFont.nodeValue=child[styleKey];
inline.setAttributeNode(legacyFont);
}}inlineStyle.nodeValue=styles;

if(parent!=null){parent.appendChild(inline);
}else{root=inline;
}parent=inline;
child=child.child;
styles="";
}return {root:root,inline:inline};
},__insertHyperLink:qx.core.Variant.select("qx.client",{"gecko|opera":function(url,commandObject){var sel=this.__editorInstance.getSelection();
var rng=this.__editorInstance.getRange();
if(sel.isCollapsed){var linkId="qx_link"+(++this.__hyperLinkId);
var linkNode=this.__doc.createElement("a");
var hrefAttr=this.__doc.createAttribute("href");
var idAttr=this.__doc.createAttribute("id");
var linkText=this.__doc.createTextNode(url);
idAttr.nodeValue=linkId;
linkNode.setAttributeNode(idAttr);
hrefAttr.nodeValue=url;
linkNode.setAttributeNode(hrefAttr);
linkNode.appendChild(linkText);
rng.insertNode(linkNode);
rng.selectNode(linkNode);
sel.collapseToEnd();
return true;
}else{return this.__doc.execCommand(commandObject.identifier,false,url);
}},"mshtml":function(url,commandObject){try{var result;
var range=this.__getTargetRange();
var editor=this.__editorInstance;
var range=editor.getSavedRange()!=null?editor.getSavedRange():editor.getRange();

if(range!=null&&range.text!=""){result=range.execCommand(commandObject.identifier,false,url);
}else{result=this.__insertHtml(' <a href="'+url+'">'+url+'</a> ',commandObject);
}this.__editorInstance.resetSavedRange();
return result;
}catch(e){{this.error("inserthyperlink failed!");
};
return false;
}},"default":function(url,commandObject){return this.__doc.execCommand(commandObject.identifier,false,url);
}}),__insertHr:function(value,commandObject){var htmlText="<hr />";
if(qx.core.Variant.isSet("qx.client","gecko")){htmlText+=this.__generateHelperString();
}return this.__insertHtml(htmlText,commandObject);
},__generateHelperString:function(groupedStyles){var formatString="";
var spanBegin='<span style="';
var closings=[];
var structure=typeof groupedStyles!=="undefined"?groupedStyles:this.__getCurrentStylesGrouped();
var child=structure.child;
var legacyFont=false;
if(qx.lang.Object.isEmpty(child)){return "";
}
while(child){legacyFont=child["legacy-font-size"]!=null;
formatString+=legacyFont?'<font style="':spanBegin;

for(var style in child){formatString+=(style!="child"&&style!="legacy-font-size")?style+':'+child[style]+';':"";
}formatString+=legacyFont?'" size="'+child["legacy-font-size"]+'">':'">';
closings.unshift(legacyFont?"</font>":"</span>");
child=child.child;
}if(closings.length==1&&closings[0]=="</font>"){formatString+="<span></span>";
}for(var i=0,j=closings.length;i<j;i++){formatString+=closings[i];
}return formatString;
},__generateHelperNodes:function(){var fragment=this.__doc.createDocumentFragment();
var structure=this.__getCurrentStylesGrouped();
var parent=fragment;
var child=structure.child;
var element;
var legacyFont=false;

while(child){legacyFont=child["legacy-font-size"]!=null;
element=this.__doc.createElement(legacyFont?"font":"span");
parent.appendChild(element);
for(var style in child){if(style!="child"&&style!="legacy-font-size"){qx.bom.element.Style.set(element,style,child[style]);
}}
if(legacyFont){var sizeAttr=this.__doc.createAttribute("size");
sizeAttr.nodeValue=child["legacy-font-size"];
element.setAttributeNode(sizeAttr);
}parent=element;
child=child.child;
}return fragment;
},__getCurrentStylesGrouped:function(elem){var grouped={};
var child=null;
var collectedStyles=this.getCurrentStyles(elem);
child=grouped.child={};

for(var attribute in collectedStyles){if(attribute!="text-decoration"){child[attribute]=collectedStyles[attribute];
}}if(collectedStyles["text-decoration"]){var textDecorations=collectedStyles["text-decoration"];
for(var i=0,j=textDecorations.length;i<j;i++){if(child==null){child=grouped.child={};
}else{child=child.child={};
}child['color']=textDecorations[i]['color'];
child['text-decoration']=textDecorations[i]['text-decoration'];
}}if(collectedStyles['color']&&collectedStyles['text-decoration']){child=child.child={};
child['color']=collectedStyles['color'];
}return grouped;
},getCurrentStyles:function(element){if(element==null){var sel=this.__editorInstance.getSelection();

if(!sel||sel.focusNode==null){return {};
}element=(sel.focusNode.nodeType==3)?sel.focusNode.parentNode:sel.focusNode;
}var parents=qx.dom.Hierarchy.getAncestors(element);
var elementAndParents=qx.lang.Array.insertBefore(parents,element,parents[0]);
var collectedStyles=this.__collectStylesOfElementCollection(elementAndParents);
var resultMap=this.__processCollectedStyles(collectedStyles,elementAndParents);
return resultMap;
},__collectStylesOfElementCollection:function(elementCollection){var collectedStyles={};
var styleAttribute,element;

for(var i=0,j=elementCollection.length;i<j;i++){element=elementCollection[i];

for(var k=0,l=element.style.length;k<l;k++){styleAttribute=element.style[k];

if(styleAttribute.length>0&&typeof collectedStyles[styleAttribute]==="undefined"){collectedStyles[styleAttribute]=element.style.getPropertyValue(styleAttribute);
}}if(element.tagName.toUpperCase()=="FONT"&&element.size&&collectedStyles["legacy-font-size"]===undefined){collectedStyles["legacy-font-size"]=element.size;
}}if(collectedStyles["legacy-font-size"]&&collectedStyles["font-size"]){delete collectedStyles["font-size"];
}return collectedStyles;
},__processCollectedStyles:function(collectedStyles,elementAndParents){var element=elementAndParents[0];
var elementComputedStyle=this.__editorInstance.getContentWindow().getComputedStyle(element,null);
var styleValue;
var resultMap={};

for(var style in collectedStyles){if(style!="legacy-font-size"){styleValue=elementComputedStyle.getPropertyValue(style);
}else{styleValue=collectedStyles[style];
}if(style=="background-color"&&styleValue=="transparent"){resultMap[style]=this.__getBackgroundColor(elementAndParents);
}else if(style=="text-decoration"){resultMap[style]=this.__getTextDecorations(elementAndParents);
}else{resultMap[style]=styleValue;
}}return resultMap;
},__getTextDecorations:function(parents){var decorationValue,colorValue,parentDecoration;
var decorationValues=[];
var editorWindow=this.__editorInstance.getContentWindow();

for(var i=0,j=parents.length;i<j;i++){parentDecoration=editorWindow.getComputedStyle(parents[i],null);
decorationValue=parentDecoration.getPropertyValue("text-decoration");
colorValue=parentDecoration.getPropertyValue("color");
if(decorationValue!="none"){decorationValues.push({'text-decoration':decorationValue,'color':colorValue});
}}return decorationValues;
},__getBackgroundColor:function(parents){var elem,parentDecoration,parentStyleValue;

for(var i=0;i<parents.length;i++){elem=parents[i];
parentDecoration=this.__editorInstance.getContentWindow().getComputedStyle(elem,null);
parentStyleValue=parentDecoration.getPropertyValue("background-color");
if(parentStyleValue!="transparent"){return parentStyleValue;
}}},__setFontSize:function(value,commandObject){var sel=this.__editorInstance.getSelection();
var rng=(qx.core.Variant.isSet("qx.client","mshtml"))?this.__editorInstance.getRange():rng=sel.getRangeAt(0);
var lists=[];
var listEntrySelected;
var listTypes=["OL","UL"];
var tmp,i,j,element;
element=(qx.core.Variant.isSet("qx.client","mshtml"))?rng.parentElement():rng.commonAncestorContainer;
if(element.tagName=="BODY"){for(var i=0;i<listTypes.length;i++){tmp=element.getElementsByTagName(listTypes[i]);

for(var j=0;j<tmp.length;j++){if(tmp[j]){lists.push(tmp[j]);
}}}}else if(qx.lang.Array.contains(listTypes,element.tagName)){lists.push(element);
}
if(lists.length>0){for(var i=0;i<lists.length;i++){var listElement=lists[i];
listEntrySelected=(qx.core.Variant.isSet("qx.client","mshtml"))?
((listElement==element)||(element.tagName=="BODY")):
sel.containsNode(listElement,false);
for(j=0;j<listElement.childNodes.length;j++){var listEntryElement=listElement.childNodes[j];
if(listEntrySelected||
(sel.focusNode.nodeValue&&qx.dom.Hierarchy.contains(listEntryElement,sel.focusNode)&&(sel.focusOffset==sel.focusNode.nodeValue.length))||
(qx.dom.Hierarchy.contains(listEntryElement,sel.anchorNode)&&(sel.anchorOffset==0))||
(sel.containsNode(listEntryElement,false))){listEntryElement.style.fontSize=(this.__fontSizeNames[value]||value)+"px";
}}}}else{var parentElement=(qx.core.Variant.isSet("qx.client","mshtml"))?element:sel.focusNode;
var parents=qx.dom.Hierarchy.getAncestors(parentElement);

for(i=0;i<parents.length;i++){if(parents[i].tagName=="LI"){if(((qx.core.Variant.isSet("qx.client","gecko"))&&
((sel.anchorOffset==0)&&
(sel.focusNode.nodeValue&&(sel.focusOffset==sel.focusNode.nodeValue.length))&&
qx.dom.Hierarchy.contains(parents[i].firstChild,sel.anchorNode)&&
qx.dom.Hierarchy.contains(parents[i].lastChild,sel.focusNode)))||
((qx.core.Variant.isSet("qx.client","mshtml"))&&(rng.htmlText==parents[i].innerHTML))){parents[i].style.fontSize=(this.__fontSizeNames[value]||value)+"px";
}break;
}}}if(qx.core.Variant.isSet("qx.client","mshtml")){this.__doc.body.focus();
this.__editorInstance.getRange().select();
return this.__doc.execCommand("FontSize",false,value);
}else if(qx.core.Variant.isSet("qx.client","gecko")){var parent=rng.commonAncestorContainer;
if(parent.nodeType===1){var spans=parent.getElementsByTagName("span");

for(i=0;i<spans.length;i++){if(spans[i].style.fontSize){spans[i].style.fontSize=null;
}}}}return this.__doc.execCommand("FontSize",false,value);
},__setTextBackgroundColor:qx.core.Variant.select("qx.client",{"mshtml":function(value,commandObject){this.__doc.body.focus();
return this.__doc.execCommand("BackColor",false,value);
},"gecko|opera":function(value,commandObject){this.__doc.body.focus();
return this.__doc.execCommand("HiliteColor",false,value);
},"webkit":function(value,commandObject){var sel=this.__editorInstance.getSelection();
var rng=this.__editorInstance.getRange();
if(!sel||!sel.isCollapsed){this.__doc.body.focus();
this.__doc.execCommand("BackColor",false,value);
if(sel){sel.collapseToEnd();
}return true;
}else{var right=sel.anchorOffset;
var left=sel.anchorOffset;
var rng=sel.getRangeAt(0);
var anchor=sel.anchorNode;
while(left>0){if(anchor.nodeValue.charCodeAt(left)==160||anchor.nodeValue.charCodeAt(left)==32){break;
}else{left--;
}}while(right<anchor.nodeValue.length){if(anchor.nodeValue.charCodeAt(right)==160||anchor.nodeValue.charCodeAt(right)==32){break;
}else{right++;
}}rng.setStart(sel.anchorNode,sel.anchorNode.nodeValue.charAt(left)==" "?left+1:left);
rng.setEnd(sel.anchorNode,right);
sel.addRange(rng);
this.__doc.body.focus();
this.__doc.execCommand("BackColor",false,value);
sel.collapseToEnd();
return true;
}}}),__setBackgroundColor:function(value,commandObject){value=value!=null&&typeof value=="string"?value:"transparent";
qx.bom.element.Style.set(this.__doc.body,"backgroundColor",value);
return true;
},__setBackgroundImage:function(value,commandObject){var url,repeat,position;
var Command=qx.bom.htmlarea.manager.Command;

if(value==null){url=null;
}else{url=value[0];
repeat=value[1];
position=value[2];
}if(url==null||typeof url!="string"){qx.bom.element.Style.set(this.__doc.body,"backgroundImage","");
qx.bom.element.Style.set(this.__doc.body,"backgroundRepeat","");
qx.bom.element.Style.set(this.__doc.body,"backgroundPosition","");
return true;
}else{if(url.search(/^url.*\(/)==-1){url="url("+url+")";
}}if(repeat!=null&&!qx.lang.String.contains(Command.__backgroundRepeat,repeat)){{this.error("The value '"+repeat+"' is not allowed for parameter 'repeat'. Possible values are '"+Command.__backgroundRepeat+"'");
};
return false;
}else{repeat="no-repeat";
}
if(position!=null){if(qx.lang.Type.isString(position)&&!qx.lang.String.contains(Command.__backgroundPosition,'|'+position+'|')){{this.error("The value '"+position+"' is not allowed for parameter 'position'. Possible values are '"+Command.__backgroundPosition+"'");
};
return false;
}else{if(qx.lang.Type.isArray(position)&&position.length==2){position=position[0]+" "+position[1];
}else{{this.error("If an array is provided for parameter 'position' it has to define two elements!");
};
return false;
}}}else{position="top";
}qx.bom.element.Style.set(this.__doc.body,"backgroundImage",url);
qx.bom.element.Style.set(this.__doc.body,"backgroundRepeat",repeat);
qx.bom.element.Style.set(this.__doc.body,"backgroundPosition",position);
return true;
},__selectAll:qx.core.Variant.select("qx.client",{"mshtml":function(value,commandObject){var rng=this.__doc.body.createTextRange();
rng.select();
return true;
},"default":function(value,commandObject){return this.__executeCommand(commandObject.identifier,false,value);
}}),__getSelectedText:function(){return this.__editorInstance.getSelectedText();
},__getSelectedHtml:function(){return this.__editorInstance.getSelectedHtml();
},__setUnderline:qx.core.Variant.select("qx.client",{"webkit":function(value,commandObject){var contextMap=this.__editorInstance.getContextInformation();
var focusNode=this.__editorInstance.getFocusNode();
if(contextMap.underline){focusNode.style.textDecoration="none";
}else{if(contextMap.strikethrough){var helper=this.__doc.createElement("span");
qx.bom.element.Style.set(helper,"textDecoration","underline");
focusNode.appendChild(helper);
var sel=this.__editorInstance.getSelection();

if(sel){sel.extend(helper,0);

if(!sel.isCollapsed){sel.collapseToEnd();
}}}else{focusNode.style.textDecoration="underline";
}}return true;
},"default":function(value,commandObject){return this.__executeCommand(commandObject.identifier,false,value);
}}),__setStrikeThrough:qx.core.Variant.select("qx.client",{"webkit":function(value,commandObject){var focusNode=this.__editorInstance.getFocusNode();
var helper=this.__doc.createElement("span");
qx.bom.element.Style.set(helper,"textDecoration","line-through");
focusNode.appendChild(helper);
var sel=this.__editorInstance.getSelection();

if(sel){sel.extend(helper,0);

if(!sel.isCollapsed){sel.collapseToEnd();
}}return true;
},"default":function(value,commandObject){return this.__executeCommand(commandObject.identifier,false,value);
}})},destruct:function(){this.__doc=this.__editorInstance=this._commands=this.__invalidFocusCommands=this.__fontSizeNames=null;
}});
qx.Class.define("qx.bom.Window",{statics:{__blocker:null,__blockerWindow:null,__timer:null,__modalOptions:{"top":"dialogTop",left:"dialogLeft",width:"dialogWidth",height:"dialogHeight",scrollbars:"scroll",resizable:"resizable"},__modelessOptions:{"top":1,left:1,width:1,height:1,dependent:1,resizable:1,status:1,location:1,menubar:1,scrollbars:1,toolbar:1},__isCapableToOpenModalWindows:function(){return window.showModalDialog!=null;
},open:function(url,name,options,modal,useNativeModalDialog){if(url==null){url="javascript:/";
}
if(name==null){name="qxNativeWindow"+new Date().getTime();
}
if(useNativeModalDialog==null){useNativeModalDialog=true;
}var configurationString=this.__generateConfigurationString(options,modal&&useNativeModalDialog);

if(modal){if(this.__isCapableToOpenModalWindows()&&useNativeModalDialog){return window.showModalDialog(url,[window.self],configurationString);
}else{this.getBlocker().block();

if(this.__timer==null){this.__timer=new qx.event.Timer(500);
this.__timer.addListener("interval",this.__checkForUnblocking,this);
this.__timer.start();
}else{this.__timer.restart();
}this.__blockerWindow=window.open(url,name,configurationString);
return this.__blockerWindow;
}}else{return window.open(url,name,configurationString);
}},__generateConfigurationString:function(options,modality){var configurationString;
var value;
var configuration=[];

if(modality&&this.__isCapableToOpenModalWindows()){for(var key in options){if(qx.bom.Window.__modalOptions[key]){var suffix="";

if(key!="scrollbars"&&key!="resizable"){suffix="px";
}value=qx.bom.Window.__modalOptions[key]+":"+options[key]+suffix;
configuration.push(value);
}else{qx.log.Logger.warn("Option '"+key+"' is not supported for modal windows.");
}}configurationString=configuration.join(";");
}else{for(var key in options){if(qx.bom.Window.__modelessOptions[key]){if(qx.lang.Type.isBoolean(options[key])){value=key+"="+(options[key]?"yes":"no");
}else{value=key+"="+options[key];
}configuration.push(value);
}else{qx.log.Logger.warn("Option '"+key+"' is not supported for native windows.");
}}configurationString=configuration.join(",");
}return configurationString;
},__checkForUnblocking:function(){if(this.isClosed(this.__blockerWindow)){this.getBlocker().unblock();
this.__timer.stop();
}},getBlocker:function(){if(this.__blocker==null){this.__blocker=new qx.bom.Blocker;
}return this.__blocker;
},close:function(win){if(win){return win.close();
}},isClosed:function(win){var closed=true;

if(win){try{closed=win.closed;
}catch(ex){}}return closed;
},moveTo:function(win,top,left){if(!qx.bom.Window.isClosed(win)){try{win.moveTo(left,top);
}catch(ex){qx.log.Logger.error("Cross-Domain Scripting problem: Could not move window!",ex);
}}},resizeTo:function(win,width,height){if(!qx.bom.Window.isClosed(win)){try{win.resizeTo(width,height);
}catch(ex){qx.log.Logger.error("Cross-Domain Scripting problem: Could not resize window!",ex);
}}}}});
qx.Class.define("qx.bom.Blocker",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__init();
},members:{__iframeElement:null,__blockerElement:null,__blockedElement:null,__isActive:false,__defaultZIndex:10000,__defaultBlockerOpacity:0,__defaultBlockerColor:"transparent",block:function(element){if(!this.__isActive){this.__blockedElement=element;
var styles=this.__calculateStyles();
this.__styleAndInsertBlocker(styles);
this.__isActive=true;
}},unblock:function(){if(this.__isActive){this.__removeBlocker();
this.__isActive=false;
}},isBlocked:function(){return this.__isActive;
},getBlockerElement:function(){return this.__blockerElement;
},setBlockerColor:function(color){qx.bom.element.Style.set(this.__blockerElement,"backgroundColor",color);
},getBlockerColor:function(){return qx.bom.element.Style.get(this.__blockerElement,"backgroundColor");
},setBlockerOpacity:function(opacity){qx.bom.element.Opacity.set(this.__blockerElement,opacity);
},getBlockerOpacity:function(){return qx.bom.element.Opacity.get(this.__blockerElement);
},setBlockerZIndex:function(zIndex){qx.bom.element.Style.set(this.__blockerElement,"zIndex",zIndex);
},getBlockerZIndex:function(){return qx.bom.element.Style.get(this.__blockerElement,"zIndex");
},__init:function(){this.__setupBlockerElement();

if(qx.core.Variant.isSet("qx.client","mshtml")){this.__setupIframeElement();
}qx.event.Registration.addListener(window,"resize",this.__onResize,this);
},__setupBlockerElement:function(){this.__blockerElement=qx.bom.Element.create("div");
qx.bom.element.Style.setStyles(this.__blockerElement,{display:"block",opacity:this.__defaultBlockerOpacity,backgroundColor:this.__defaultBlockerColor});
this.setBlockerZIndex(this.__defaultZIndex);
},__setupIframeElement:function(){this.__iframeElement=qx.bom.Iframe.create();
qx.bom.element.Attribute.set(this.__iframeElement,"allowTransparency",false);
qx.bom.element.Attribute.set(this.__iframeElement,"src","javascript:false;");
qx.bom.element.Style.setStyles(this.__iframeElement,{display:"block",opacity:this.__defaultBlockerOpacity});
},__calculateStyles:function(){var styles={position:"absolute"};

if(this.__isWholeDocumentBlockTarget()){styles.left="0px";
styles.top="0px";
styles.right=null;
styles.bottom=null;
styles.width=qx.bom.Document.getWidth()+"px";
styles.height=qx.bom.Document.getHeight()+"px";
}else{styles.width=qx.bom.element.Dimension.getWidth(this.__blockedElement)+"px";
styles.height=qx.bom.element.Dimension.getHeight(this.__blockedElement)+"px";
styles.left=qx.bom.element.Location.getLeft(this.__blockedElement)+"px";
styles.top=qx.bom.element.Location.getTop(this.__blockedElement)+"px";
}return styles;
},__styleAndInsertBlocker:function(styles){var target=document.body;
qx.bom.element.Style.setStyles(this.__blockerElement,styles);
qx.dom.Element.insertEnd(this.__blockerElement,target);

if(qx.core.Variant.isSet("qx.client","mshtml")){styles.zIndex=this.getBlockerZIndex()-1;
qx.bom.element.Style.setStyles(this.__iframeElement,styles);
qx.dom.Element.insertEnd(this.__iframeElement,document.body);
}},__removeBlocker:function(){qx.dom.Element.remove(this.__blockerElement);

if(qx.core.Variant.isSet("qx.client","mshtml")){qx.dom.Element.remove(this.__iframeElement);
}},__onResize:function(e){if(this.__isWholeDocumentBlockTarget()){this.__resizeBlocker({width:"0px",height:"0px"});
qx.event.Timer.once(function(){var dimension={width:qx.bom.Document.getWidth()+"px",height:qx.bom.Document.getHeight()+"px"};
this.__resizeBlocker(dimension);
},this,0);
}},__resizeBlocker:function(dimension){qx.bom.element.Style.setStyles(this.__blockerElement,dimension);

if(qx.core.Variant.isSet("qx.client","mshtml")){qx.bom.element.Style.setStyles(this.__iframeElement,dimension);
}},__isWholeDocumentBlockTarget:function(){return (this.__blockedElement==null||qx.dom.Node.isWindow(this.__blockedElement)||qx.dom.Node.isDocument(this.__blockedElement));
}},destruct:function(){qx.event.Registration.removeListener(window,"resize",this.__onResize,this);
this.__iframeElement=this.__blockerElement=this.__blockedElement=null;
}});
qx.Class.define("qx.bom.Lifecycle",{statics:{onReady:function(callback,context){var Registration=qx.event.Registration;
var appHandler=Registration.getManager(window).getHandler(qx.event.handler.Application);
if(appHandler&&appHandler.isApplicationReady()){callback.call(context);
}else{Registration.addListener(window,"ready",callback,context);
}},onShutdown:function(callback,context){qx.event.Registration.addListener(window,"shutdown",callback,context);
}}});
qx.Class.define("qx.bom.History",{extend:qx.core.Object,type:"abstract",construct:function(){this.base(arguments);
this._baseUrl=window.location.href.split('#')[0]+'#';
this.__titles={};
this._setInitialState();
},events:{"request":"qx.event.type.Data"},statics:{SUPPORTS_HASH_CHANGE_EVENT:(qx.bom.client.Engine.MSHTML&&document.documentMode>=8)||(!qx.bom.client.Engine.MSHTML&&document.documentMode&&"onhashchange" in window),getInstance:function(){if(!this.$$instance){if(this.SUPPORTS_HASH_CHANGE_EVENT){this.$$instance=new qx.bom.NativeHistory();
}else if(qx.core.Variant.isSet("qx.client","mshtml")){this.$$instance=new qx.bom.IframeHistory();
}else{this.$$instance=new qx.bom.NativeHistory();
}}return this.$$instance;
}},properties:{title:{check:"String",event:"changeTitle",nullable:true,apply:"_applyTitle"},state:{check:"String",event:"changeState",nullable:true,apply:"_applyState"}},members:{__titles:null,_applyState:function(value,old){this._writeState(value);
},_setInitialState:function(){this.setState(this._readState());
},_encode:function(value){if(qx.lang.Type.isString(value)){return encodeURIComponent(value);
}return "";
},_decode:function(value){if(qx.lang.Type.isString(value)){return decodeURIComponent(value);
}return "";
},_applyTitle:function(title){if(title!=null){document.title=title||"";
}},addToHistory:function(state,newTitle){if(!qx.lang.Type.isString(state)){state=state+"";
}
if(qx.lang.Type.isString(newTitle)){this.setTitle(newTitle);
this.__titles[state]=newTitle;
}
if(this.getState()!==state){this._writeState(state);
}},navigateBack:function(){qx.event.Timer.once(function(){history.back();
},0);
},navigateForward:function(){qx.event.Timer.once(function(){history.forward();
},0);
},_onHistoryLoad:function(state){this.setState(state);
this.fireDataEvent("request",state);

if(this.__titles[state]!=null){this.setTitle(this.__titles[state]);
}},_readState:function(){throw new Error("Abstract method call");
},_writeState:function(){throw new Error("Abstract method call");
},_setHash:function(value){var url=this._baseUrl+(value||"");
var loc=window.location;

if(url!=loc.href){loc.href=url;
}},_getHash:function(){var hash=/#(.*)$/.exec(window.location.href);
return hash&&hash[1]?hash[1]:"";
},setTimeoutInterval:function(value){{qx.core.Assert.assertNumber(value,"Invalid attribute 'value'.");
qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'timeoutInterval' has been deprecated. The history manager"+"now uses 'qx.event.Idle' for polling.");
};
},getTimeoutInterval:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'timeoutInterval' has been deprecated. The history manager"+"now uses 'qx.event.Idle' for polling.");
};
return 100;
},resetTimeoutInterval:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The property 'timeoutInterval' has been deprecated. The history manager"+"now uses 'qx.event.Idle' for polling.");
};
}},destruct:function(){this.__titles=null;
}});
qx.Class.define("qx.bom.NativeHistory",{extend:qx.bom.History,construct:function(){this.base(arguments);
this.__attachListeners();
},members:{__checkOnHashChange:null,__attachListeners:function(){if(qx.bom.History.SUPPORTS_HASH_CHANGE_EVENT){this.__checkOnHashChange=qx.lang.Function.bind(this.__onHashChange,this);
qx.bom.Event.addNativeListener(window,"hashchange",this.__checkOnHashChange);
}else{qx.event.Idle.getInstance().addListener("interval",this.__onHashChange,this);
}},__detatchListeners:function(){if(qx.bom.History.SUPPORTS_HASH_CHANGE_EVENT){qx.bom.Event.removeNativeListener(window,"hashchange",this.__checkOnHashChange);
}else{qx.event.Idle.getInstance().removeListener("interval",this.__onHashChange,this);
}},__onHashChange:function(){var currentState=this._readState();

if(qx.lang.Type.isString(currentState)&&currentState!=this.getState()){this._onHistoryLoad(currentState);
}},_readState:function(){return this._decode(this._getHash());
},_writeState:qx.core.Variant.select("qx.client",{"opera":function(state){qx.event.Timer.once(function(){this._setHash(this._encode(state));
},this,0);
},"default":function(state){this._setHash(this._encode(state));
}})},destruct:function(){this.__detatchListeners();
}});
if(qx.core.Variant.isSet("qx.client","mshtml")){qx.Class.define("qx.bom.IframeHistory",{extend:qx.bom.History,construct:function(){this.base(arguments);
this.__initTimer();
},members:{__iframe:null,__iframeReady:false,__locationState:null,_setInitialState:function(){this.base(arguments);
this.__locationState=this._getHash();
},_setHash:function(value){this.base(arguments,value);
this.__locationState=this._encode(value);
},_readState:function(){if(!this.__iframeReady){return this._decode(this._getHash());
}var doc=this.__iframe.contentWindow.document;
var elem=doc.getElementById("state");
return elem?this._decode(elem.innerText):"";
},_writeState:function(state){var state=this._encode(state);
this._setHash(state);
this.__locationState=state;

try{var doc=this.__iframe.contentWindow.document;
doc.open();
doc.write('<html><body><div id="state">'+state+'</div></body></html>');
doc.close();
}catch(ex){}},__initTimer:function(){this.__initIframe(function(){qx.event.Idle.getInstance().addListener("interval",this.__onHashChange,this);
});
},__onHashChange:function(e){var currentState=null;
var locationState=this._getHash();

if(!this.__isCurrentLocationState(locationState)){currentState=this.__storeLocationState(locationState);
}else{currentState=this._readState();
}
if(qx.lang.Type.isString(currentState)&&currentState!=this.getState()){this._onHistoryLoad(currentState);
}},__storeLocationState:function(locationState){locationState=this._decode(locationState);
this._writeState(locationState);
return locationState;
},__isCurrentLocationState:function(locationState){return qx.lang.Type.isString(locationState)&&locationState==this.__locationState;
},__initIframe:function(handler){this.__iframe=this.__createIframe();
document.body.appendChild(this.__iframe);
this.__waitForIFrame(function(){this._writeState(this.getState());

if(handler){handler.call(this);
}},this);
},__createIframe:function(){var iframe=qx.bom.Iframe.create({src:qx.util.ResourceManager.getInstance().toUri("qx/static/blank.html")});
iframe.style.visibility="hidden";
iframe.style.position="absolute";
iframe.style.left="-1000px";
iframe.style.top="-1000px";
return iframe;
},__waitForIFrame:function(callback,context,retry){if(typeof retry==="undefined"){retry=0;
}
if(!this.__iframe.contentWindow||!this.__iframe.contentWindow.document){if(retry>20){throw new Error("can't initialize iframe");
}qx.event.Timer.once(function(){this.__waitForIFrame(callback,context,++retry);
},this,10);
return;
}this.__iframeReady=true;
callback.call(context||window);
}},destruct:function(){this.__iframe=null;
qx.event.Idle.getInstance().addListener("interval",this.__onHashChange,this);
}});
}qx.Class.define("qx.bom.Html",{statics:{__fixNonDirectlyClosableHelper:function(all,front,tag){return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all:front+"></"+tag+">";
},__convertMap:{opt:[1,"<select multiple='multiple'>","</select>"],leg:[1,"<fieldset>","</fieldset>"],table:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],def:qx.core.Variant.select("qx.client",{"mshtml":[1,"div<div>","</div>"],"default":null})},__convertHtmlString:function(html,context){var div=context.createElement("div");
html=html.replace(/(<(\w+)[^>]*?)\/>/g,this.__fixNonDirectlyClosableHelper);
var tags=html.replace(/^\s+/,"").substring(0,5).toLowerCase();
var wrap,map=this.__convertMap;

if(!tags.indexOf("<opt")){wrap=map.opt;
}else if(!tags.indexOf("<leg")){wrap=map.leg;
}else if(tags.match(/^<(thead|tbody|tfoot|colg|cap)/)){wrap=map.table;
}else if(!tags.indexOf("<tr")){wrap=map.tr;
}else if(!tags.indexOf("<td")||!tags.indexOf("<th")){wrap=map.td;
}else if(!tags.indexOf("<col")){wrap=map.col;
}else{wrap=map.def;
}if(wrap){div.innerHTML=wrap[1]+html+wrap[2];
var depth=wrap[0];

while(depth--){div=div.lastChild;
}}else{div.innerHTML=html;
}if(qx.core.Variant.isSet("qx.client","mshtml")){var hasBody=/<tbody/i.test(html);
var tbody=!tags.indexOf("<table")&&!hasBody?div.firstChild&&div.firstChild.childNodes:wrap[1]=="<table>"&&!hasBody?div.childNodes:[];

for(var j=tbody.length-1;j>=0;--j){if(tbody[j].tagName.toLowerCase()==="tbody"&&!tbody[j].childNodes.length){tbody[j].parentNode.removeChild(tbody[j]);
}}if(/^\s/.test(html)){div.insertBefore(context.createTextNode(html.match(/^\s*/)[0]),div.firstChild);
}}return qx.lang.Array.fromCollection(div.childNodes);
},clean:function(objs,context,fragment){context=context||document;
if(typeof context.createElement==="undefined"){context=context.ownerDocument||context[0]&&context[0].ownerDocument||document;
}if(!fragment&&objs.length===1&&typeof objs[0]==="string"){var match=/^<(\w+)\s*\/?>$/.exec(objs[0]);

if(match){return [context.createElement(match[1])];
}}var obj,ret=[];

for(var i=0,l=objs.length;i<l;i++){obj=objs[i];
if(typeof obj==="string"){obj=this.__convertHtmlString(obj,context);
}if(obj.nodeType){ret.push(obj);
}else if(obj instanceof qx.type.BaseArray){ret.push.apply(ret,Array.prototype.slice.call(obj,0));
}else if(obj.toElement){ret.push(obj.toElement());
}else{ret.push.apply(ret,obj);
}}if(fragment){var scripts=[],LArray=qx.lang.Array,elem,temp;

for(var i=0;ret[i];i++){elem=ret[i];

if(elem.nodeType==1&&elem.tagName.toLowerCase()==="script"&&(!elem.type||elem.type.toLowerCase()==="text/javascript")){if(elem.parentNode){elem.parentNode.removeChild(ret[i]);
}scripts.push(elem);
}else{if(elem.nodeType===1){temp=LArray.fromCollection(elem.getElementsByTagName("script"));
ret.splice.apply(ret,[i+1,0].concat(temp));
}fragment.appendChild(elem);
}}return scripts;
}return ret;
}}});
qx.Class.define("qx.type.BaseArray",{extend:Array,construct:function(length){},members:{toArray:null,valueOf:null,pop:null,push:null,reverse:null,shift:null,sort:null,splice:null,unshift:null,concat:null,join:null,slice:null,toString:null,indexOf:null,lastIndexOf:null,forEach:null,filter:null,map:null,some:null,every:null}});
(function(){function createStackConstructor(stack){if(qx.core.Variant.isSet("qx.client","mshtml")){Stack.prototype={length:0,$$isArray:true};
var args="pop.push.reverse.shift.sort.splice.unshift.join.slice".split(".");

for(var length=args.length;length;){Stack.prototype[args[--length]]=Array.prototype[args[length]];
}}var slice=Array.prototype.slice;
Stack.prototype.concat=function(){var constructor=this.slice(0);

for(var i=0,length=arguments.length;i<length;i++){var copy;

if(arguments[i] instanceof Stack){copy=slice.call(arguments[i],0);
}else if(arguments[i] instanceof Array){copy=arguments[i];
}else{copy=[arguments[i]];
}constructor.push.apply(constructor,copy);
}return constructor;
};
Stack.prototype.toString=function(){return slice.call(this,0).toString();
};
Stack.prototype.toLocaleString=function(){return slice.call(this,0).toLocaleString();
};
Stack.prototype.constructor=Stack;
Stack.prototype.indexOf=qx.lang.Core.arrayIndexOf;
Stack.prototype.lastIndexOf=qx.lang.Core.arrayLastIndexOf;
Stack.prototype.forEach=qx.lang.Core.arrayForEach;
Stack.prototype.some=qx.lang.Core.arraySome;
Stack.prototype.every=qx.lang.Core.arrayEvery;
var filter=qx.lang.Core.arrayFilter;
var map=qx.lang.Core.arrayMap;
Stack.prototype.filter=function(){var ret=new this.constructor;
ret.push.apply(ret,filter.apply(this,arguments));
return ret;
};
Stack.prototype.map=function(){var ret=new this.constructor;
ret.push.apply(ret,map.apply(this,arguments));
return ret;
};
Stack.prototype.slice=function(){var ret=new this.constructor;
ret.push.apply(ret,Array.prototype.slice.apply(this,arguments));
return ret;
};
Stack.prototype.splice=function(){var ret=new this.constructor;
ret.push.apply(ret,Array.prototype.splice.apply(this,arguments));
return ret;
};
Stack.prototype.toArray=function(){return Array.prototype.slice.call(this,0);
};
Stack.prototype.valueOf=function(){return this.length;
};
return Stack;
}function Stack(length){if(arguments.length===1&&typeof length==="number"){this.length=-1<length&&length===length>>.5?length:this.push(length);
}else if(arguments.length){this.push.apply(this,arguments);
}}function PseudoArray(){}PseudoArray.prototype=[];
Stack.prototype=new PseudoArray;
Stack.prototype.length=0;
qx.type.BaseArray=createStackConstructor(Stack);
})();
qx.Class.define("qx.bom.Selector",{statics:{query:null,matches:null}});
(function(){var chunker=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,done=0,toString=Object.prototype.toString,hasDuplicate=false,baseHasDuplicate=true;
var arr=[0,0];
arr.sort(function(){baseHasDuplicate=false;
return 0;
});
var Sizzle=function(selector,context,results,seed){results=results||[];
var origContext=context=context||document;

if(context.nodeType!==1&&context.nodeType!==9){return [];
}
if(!selector||typeof selector!=="string"){return results;
}var parts=[],m,set,checkSet,check,extra,prune=true,contextXML=isXML(context),soFar=selector;
while((chunker.exec(""),m=chunker.exec(soFar))!==null){soFar=m[3];
parts.push(m[1]);

if(m[2]){extra=m[3];
break;
}}
if(parts.length>1&&origPOS.exec(selector)){if(parts.length===2&&Expr.relative[parts[0]]){set=posProcess(parts[0]+parts[1],context);
}else{set=Expr.relative[parts[0]]?[context]:Sizzle(parts.shift(),context);

while(parts.length){selector=parts.shift();

if(Expr.relative[selector])selector+=parts.shift();
set=posProcess(selector,set);
}}}else{if(!seed&&parts.length>1&&context.nodeType===9&&!contextXML&&Expr.match.ID.test(parts[0])&&!Expr.match.ID.test(parts[parts.length-1])){var ret=Sizzle.find(parts.shift(),context,contextXML);
context=ret.expr?Sizzle.filter(ret.expr,ret.set)[0]:ret.set[0];
}
if(context){var ret=seed?
{expr:parts.pop(),set:makeArray(seed)}:Sizzle.find(parts.pop(),parts.length===1&&(parts[0]==="~"||parts[0]==="+")&&context.parentNode?context.parentNode:context,contextXML);
set=ret.expr?Sizzle.filter(ret.expr,ret.set):ret.set;

if(parts.length>0){checkSet=makeArray(set);
}else{prune=false;
}
while(parts.length){var cur=parts.pop(),pop=cur;

if(!Expr.relative[cur]){cur="";
}else{pop=parts.pop();
}
if(pop==null){pop=context;
}Expr.relative[cur](checkSet,pop,contextXML);
}}else{checkSet=parts=[];
}}
if(!checkSet){checkSet=set;
}
if(!checkSet){throw "Syntax error, unrecognized expression: "+(cur||selector);
}
if(toString.call(checkSet)==="[object Array]"){if(!prune){results.push.apply(results,checkSet);
}else if(context&&context.nodeType===1){for(var i=0;checkSet[i]!=null;i++){if(checkSet[i]&&(checkSet[i]===true||checkSet[i].nodeType===1&&contains(context,checkSet[i]))){results.push(set[i]);
}}}else{for(var i=0;checkSet[i]!=null;i++){if(checkSet[i]&&checkSet[i].nodeType===1){results.push(set[i]);
}}}}else{makeArray(checkSet,results);
}
if(extra){Sizzle(extra,origContext,results,seed);
Sizzle.uniqueSort(results);
}return results;
};
Sizzle.uniqueSort=function(results){if(sortOrder){hasDuplicate=baseHasDuplicate;
results.sort(sortOrder);

if(hasDuplicate){for(var i=1;i<results.length;i++){if(results[i]===results[i-1]){results.splice(i--,1);
}}}}return results;
};
Sizzle.matches=function(expr,set){return Sizzle(expr,null,null,set);
};
Sizzle.find=function(expr,context,isXML){var set,match;

if(!expr){return [];
}
for(var i=0,l=Expr.order.length;i<l;i++){var type=Expr.order[i],match;

if((match=Expr.leftMatch[type].exec(expr))){var left=match[1];
match.splice(1,1);

if(left.substr(left.length-1)!=="\\"){match[1]=(match[1]||"").replace(/\\/g,"");
set=Expr.find[type](match,context,isXML);

if(set!=null){expr=expr.replace(Expr.match[type],"");
break;
}}}}
if(!set){set=context.getElementsByTagName("*");
}return {set:set,expr:expr};
};
Sizzle.filter=function(expr,set,inplace,not){var old=expr,result=[],curLoop=set,match,anyFound,isXMLFilter=set&&set[0]&&isXML(set[0]);

while(expr&&set.length){for(var type in Expr.filter){if((match=Expr.match[type].exec(expr))!=null){var filter=Expr.filter[type],found,item;
anyFound=false;

if(curLoop==result){result=[];
}
if(Expr.preFilter[type]){match=Expr.preFilter[type](match,curLoop,inplace,result,not,isXMLFilter);

if(!match){anyFound=found=true;
}else if(match===true){continue;
}}
if(match){for(var i=0;(item=curLoop[i])!=null;i++){if(item){found=filter(item,match,i,curLoop);
var pass=not^!!found;

if(inplace&&found!=null){if(pass){anyFound=true;
}else{curLoop[i]=false;
}}else if(pass){result.push(item);
anyFound=true;
}}}}
if(found!==undefined){if(!inplace){curLoop=result;
}expr=expr.replace(Expr.match[type],"");

if(!anyFound){return [];
}break;
}}}if(expr==old){if(anyFound==null){throw "Syntax error, unrecognized expression: "+expr;
}else{break;
}}old=expr;
}return curLoop;
};
var Expr=Sizzle.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(elem){return elem.getAttribute("href");
}},relative:{"+":function(checkSet,part,isXML){var isPartStr=typeof part==="string",isTag=isPartStr&&!/\W/.test(part),isPartStrNotTag=isPartStr&&!isTag;

if(isTag&&!isXML){part=part.toUpperCase();
}
for(var i=0,l=checkSet.length,elem;i<l;i++){if((elem=checkSet[i])){while((elem=elem.previousSibling)&&elem.nodeType!==1){}checkSet[i]=isPartStrNotTag||elem&&elem.nodeName===part?elem||false:elem===part;
}}
if(isPartStrNotTag){Sizzle.filter(part,checkSet,true);
}},">":function(checkSet,part,isXML){var isPartStr=typeof part==="string";

if(isPartStr&&!/\W/.test(part)){part=isXML?part:part.toUpperCase();

for(var i=0,l=checkSet.length;i<l;i++){var elem=checkSet[i];

if(elem){var parent=elem.parentNode;
checkSet[i]=parent.nodeName===part?parent:false;
}}}else{for(var i=0,l=checkSet.length;i<l;i++){var elem=checkSet[i];

if(elem){checkSet[i]=isPartStr?elem.parentNode:elem.parentNode===part;
}}
if(isPartStr){Sizzle.filter(part,checkSet,true);
}}},"":function(checkSet,part,isXML){var doneName=done++,checkFn=dirCheck;

if(!/\W/.test(part)){var nodeCheck=part=isXML?part:part.toUpperCase();
checkFn=dirNodeCheck;
}checkFn("parentNode",part,doneName,checkSet,nodeCheck,isXML);
},"~":function(checkSet,part,isXML){var doneName=done++,checkFn=dirCheck;

if(typeof part==="string"&&!/\W/.test(part)){var nodeCheck=part=isXML?part:part.toUpperCase();
checkFn=dirNodeCheck;
}checkFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML);
}},find:{ID:function(match,context,isXML){if(typeof context.getElementById!=="undefined"&&!isXML){var m=context.getElementById(match[1]);
return m?[m]:[];
}},NAME:function(match,context,isXML){if(typeof context.getElementsByName!=="undefined"){var ret=[],results=context.getElementsByName(match[1]);

for(var i=0,l=results.length;i<l;i++){if(results[i].getAttribute("name")===match[1]){ret.push(results[i]);
}}return ret.length===0?null:ret;
}},TAG:function(match,context){return context.getElementsByTagName(match[1]);
}},preFilter:{CLASS:function(match,curLoop,inplace,result,not,isXML){match=" "+match[1].replace(/\\/g,"")+" ";

if(isXML){return match;
}
for(var i=0,elem;(elem=curLoop[i])!=null;i++){if(elem){if(not^(elem.className&&(" "+elem.className+" ").indexOf(match)>=0)){if(!inplace)result.push(elem);
}else if(inplace){curLoop[i]=false;
}}}return false;
},ID:function(match){return match[1].replace(/\\/g,"");
},TAG:function(match,curLoop){for(var i=0;curLoop[i]===false;i++){}return curLoop[i]&&isXML(curLoop[i])?match[1]:match[1].toUpperCase();
},CHILD:function(match){if(match[1]=="nth"){var test=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(match[2]=="even"&&"2n"||match[2]=="odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);
match[2]=(test[1]+(test[2]||1))-0;
match[3]=test[3]-0;
}match[0]=done++;
return match;
},ATTR:function(match,curLoop,inplace,result,not,isXML){var name=match[1].replace(/\\/g,"");

if(!isXML&&Expr.attrMap[name]){match[1]=Expr.attrMap[name];
}
if(match[2]==="~="){match[4]=" "+match[4]+" ";
}return match;
},PSEUDO:function(match,curLoop,inplace,result,not){if(match[1]==="not"){if((chunker.exec(match[3])||"").length>1||/^\w/.test(match[3])){match[3]=Sizzle(match[3],null,null,curLoop);
}else{var ret=Sizzle.filter(match[3],curLoop,inplace,true^not);

if(!inplace){result.push.apply(result,ret);
}return false;
}}else if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match[0])){return true;
}return match;
},POS:function(match){match.unshift(true);
return match;
}},filters:{enabled:function(elem){return elem.disabled===false&&elem.type!=="hidden";
},disabled:function(elem){return elem.disabled===true;
},checked:function(elem){return elem.checked===true;
},selected:function(elem){elem.parentNode.selectedIndex;
return elem.selected===true;
},parent:function(elem){return !!elem.firstChild;
},empty:function(elem){return !elem.firstChild;
},has:function(elem,i,match){return !!Sizzle(match[3],elem).length;
},header:function(elem){return /h\d/i.test(elem.nodeName);
},text:function(elem){return "text"===elem.type;
},radio:function(elem){return "radio"===elem.type;
},checkbox:function(elem){return "checkbox"===elem.type;
},file:function(elem){return "file"===elem.type;
},password:function(elem){return "password"===elem.type;
},submit:function(elem){return "submit"===elem.type;
},image:function(elem){return "image"===elem.type;
},reset:function(elem){return "reset"===elem.type;
},button:function(elem){return "button"===elem.type||elem.nodeName.toUpperCase()==="BUTTON";
},input:function(elem){return /input|select|textarea|button/i.test(elem.nodeName);
}},setFilters:{first:function(elem,i){return i===0;
},last:function(elem,i,match,array){return i===array.length-1;
},even:function(elem,i){return i%2===0;
},odd:function(elem,i){return i%2===1;
},lt:function(elem,i,match){return i<match[3]-0;
},gt:function(elem,i,match){return i>match[3]-0;
},nth:function(elem,i,match){return match[3]-0==i;
},eq:function(elem,i,match){return match[3]-0==i;
}},filter:{PSEUDO:function(elem,match,i,array){var name=match[1],filter=Expr.filters[name];

if(filter){return filter(elem,i,match,array);
}else if(name==="contains"){return (elem.textContent||elem.innerText||"").indexOf(match[3])>=0;
}else if(name==="not"){var not=match[3];

for(var i=0,l=not.length;i<l;i++){if(not[i]===elem){return false;
}}return true;
}},CHILD:function(elem,match){var type=match[1],node=elem;

switch(type){case 'only':case 'first':while((node=node.previousSibling)){if(node.nodeType===1)return false;
}
if(type=='first')return true;
node=elem;
case 'last':while((node=node.nextSibling)){if(node.nodeType===1)return false;
}return true;
case 'nth':var first=match[2],last=match[3];

if(first==1&&last==0){return true;
}var doneName=match[0],parent=elem.parentNode;

if(parent&&(parent.sizcache!==doneName||!elem.nodeIndex)){var count=0;

for(node=parent.firstChild;node;node=node.nextSibling){if(node.nodeType===1){node.nodeIndex=++count;
}}parent.sizcache=doneName;
}var diff=elem.nodeIndex-last;

if(first==0){return diff==0;
}else{return (diff%first==0&&diff/first>=0);
}}},ID:function(elem,match){return elem.nodeType===1&&elem.getAttribute("id")===match;
},TAG:function(elem,match){return (match==="*"&&elem.nodeType===1)||elem.nodeName===match;
},CLASS:function(elem,match){return (" "+(elem.className||elem.getAttribute("class"))+" ").indexOf(match)>-1;
},ATTR:function(elem,match){var name=match[1],result=Expr.attrHandle[name]?Expr.attrHandle[name](elem):elem[name]!=null?elem[name]:elem.getAttribute(name),value=result+"",type=match[2],check=match[4];
return result==null?type==="!=":type==="="?value===check:type==="*="?value.indexOf(check)>=0:type==="~="?(" "+value+" ").indexOf(check)>=0:!check?value&&result!==false:type==="!="?value!=check:type==="^="?value.indexOf(check)===0:type==="$="?value.substr(value.length-check.length)===check:type==="|="?value===check||value.substr(0,check.length+1)===check+"-":false;
},POS:function(elem,match,i,array){var name=match[2],filter=Expr.setFilters[name];

if(filter){return filter(elem,i,match,array);
}}}};
var origPOS=Expr.match.POS;

for(var type in Expr.match){Expr.match[type]=new RegExp(Expr.match[type].source+/(?![^\[]*\])(?![^\(]*\))/.source);
Expr.leftMatch[type]=new RegExp(/(^(?:.|\r|\n)*?)/.source+Expr.match[type].source);
}var makeArray=function(array,results){array=Array.prototype.slice.call(array,0);

if(results){results.push.apply(results,array);
return results;
}return array;
};
try{Array.prototype.slice.call(document.documentElement.childNodes,0);
}catch(e){makeArray=function(array,results){var ret=results||[];

if(toString.call(array)==="[object Array]"){Array.prototype.push.apply(ret,array);
}else{if(typeof array.length==="number"){for(var i=0,l=array.length;i<l;i++){ret.push(array[i]);
}}else{for(var i=0;array[i];i++){ret.push(array[i]);
}}}return ret;
};
}var sortOrder;

if(document.documentElement.compareDocumentPosition){sortOrder=function(a,b){if(!a.compareDocumentPosition||!b.compareDocumentPosition){if(a==b){hasDuplicate=true;
}return 0;
}var ret=a.compareDocumentPosition(b)&4?-1:a===b?0:1;

if(ret===0){hasDuplicate=true;
}return ret;
};
}else if("sourceIndex" in document.documentElement){sortOrder=function(a,b){if(!a.sourceIndex||!b.sourceIndex){if(a==b){hasDuplicate=true;
}return 0;
}var ret=a.sourceIndex-b.sourceIndex;

if(ret===0){hasDuplicate=true;
}return ret;
};
}else if(document.createRange){sortOrder=function(a,b){if(!a.ownerDocument||!b.ownerDocument){if(a==b){hasDuplicate=true;
}return 0;
}var aRange=a.ownerDocument.createRange(),bRange=b.ownerDocument.createRange();
aRange.setStart(a,0);
aRange.setEnd(a,0);
bRange.setStart(b,0);
bRange.setEnd(b,0);
var ret=aRange.compareBoundaryPoints(Range.START_TO_END,bRange);

if(ret===0){hasDuplicate=true;
}return ret;
};
}(function(){var form=document.createElement("div"),id="script"+(new Date).getTime();
form.innerHTML="<a name='"+id+"'/>";
var root=document.documentElement;
root.insertBefore(form,root.firstChild);
if(!!document.getElementById(id)){Expr.find.ID=function(match,context,isXML){if(typeof context.getElementById!=="undefined"&&!isXML){var m=context.getElementById(match[1]);
return m?m.id===match[1]||typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id").nodeValue===match[1]?[m]:undefined:[];
}};
Expr.filter.ID=function(elem,match){var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");
return elem.nodeType===1&&node&&node.nodeValue===match;
};
}root.removeChild(form);
root=form=null;
})();
(function(){var div=document.createElement("div");
div.appendChild(document.createComment(""));
if(div.getElementsByTagName("*").length>0){Expr.find.TAG=function(match,context){var results=context.getElementsByTagName(match[1]);
if(match[1]==="*"){var tmp=[];

for(var i=0;results[i];i++){if(results[i].nodeType===1){tmp.push(results[i]);
}}results=tmp;
}return results;
};
}div.innerHTML="<a href='#'></a>";

if(div.firstChild&&typeof div.firstChild.getAttribute!=="undefined"&&div.firstChild.getAttribute("href")!=="#"){Expr.attrHandle.href=function(elem){return elem.getAttribute("href",2);
};
}div=null;
})();

if(document.querySelectorAll)(function(){var oldSizzle=Sizzle,div=document.createElement("div");
div.innerHTML="<p class='TEST'></p>";
if(div.querySelectorAll&&div.querySelectorAll(".TEST").length===0){return;
}Sizzle=function(query,context,extra,seed){context=context||document;
if(!seed&&context.nodeType===9&&!isXML(context)){try{return makeArray(context.querySelectorAll(query),extra);
}catch(e){}}return oldSizzle(query,context,extra,seed);
};

for(var prop in oldSizzle){Sizzle[prop]=oldSizzle[prop];
}div=null;
})();

if(document.getElementsByClassName&&document.documentElement.getElementsByClassName)(function(){var div=document.createElement("div");
div.innerHTML="<div class='test e'></div><div class='test'></div>";
if(div.getElementsByClassName("e").length===0)return;
div.lastChild.className="e";

if(div.getElementsByClassName("e").length===1)return;
Expr.order.splice(1,0,"CLASS");
Expr.find.CLASS=function(match,context,isXML){if(typeof context.getElementsByClassName!=="undefined"&&!isXML){return context.getElementsByClassName(match[1]);
}};
div=null;
})();
function dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var sibDir=dir=="previousSibling"&&!isXML;

for(var i=0,l=checkSet.length;i<l;i++){var elem=checkSet[i];

if(elem){if(sibDir&&elem.nodeType===1){elem.sizcache=doneName;
elem.sizset=i;
}elem=elem[dir];
var match=false;

while(elem){if(elem.sizcache===doneName){match=checkSet[elem.sizset];
break;
}
if(elem.nodeType===1&&!isXML){elem.sizcache=doneName;
elem.sizset=i;
}
if(elem.nodeName===cur){match=elem;
break;
}elem=elem[dir];
}checkSet[i]=match;
}}}function dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var sibDir=dir=="previousSibling"&&!isXML;

for(var i=0,l=checkSet.length;i<l;i++){var elem=checkSet[i];

if(elem){if(sibDir&&elem.nodeType===1){elem.sizcache=doneName;
elem.sizset=i;
}elem=elem[dir];
var match=false;

while(elem){if(elem.sizcache===doneName){match=checkSet[elem.sizset];
break;
}
if(elem.nodeType===1){if(!isXML){elem.sizcache=doneName;
elem.sizset=i;
}
if(typeof cur!=="string"){if(elem===cur){match=true;
break;
}}else if(Sizzle.filter(cur,[elem]).length>0){match=elem;
break;
}}elem=elem[dir];
}checkSet[i]=match;
}}}var contains=document.compareDocumentPosition?
function(a,b){return a.compareDocumentPosition(b)&16;
}:
function(a,b){return a!==b&&(a.contains?a.contains(b):true);
};
var isXML=function(elem){return elem.nodeType===9&&elem.documentElement.nodeName!=="HTML"||!!elem.ownerDocument&&elem.ownerDocument.documentElement.nodeName!=="HTML";
};
var posProcess=function(selector,context){var tmpSet=[],later="",match,root=context.nodeType?[context]:context;
while((match=Expr.match.PSEUDO.exec(selector))){later+=match[0];
selector=selector.replace(Expr.match.PSEUDO,"");
}selector=Expr.relative[selector]?selector+"*":selector;

for(var i=0,l=root.length;i<l;i++){Sizzle(selector,root[i],tmpSet);
}return Sizzle.filter(later,tmpSet);
};
var Selector=qx.bom.Selector;
Selector.query=function(selector,context){return Sizzle(selector,context);
};
Selector.matches=function(selector,set){return Sizzle(selector,null,null,set);
};
})();
qx.Class.define("qx.bom.Cookie",{statics:{get:function(key){var start=document.cookie.indexOf(key+"=");
var len=start+key.length+1;

if((!start)&&(key!=document.cookie.substring(0,key.length))){return null;
}
if(start==-1){return null;
}var end=document.cookie.indexOf(";",len);

if(end==-1){end=document.cookie.length;
}return unescape(document.cookie.substring(len,end));
},set:function(key,value,expires,path,domain,secure){var cookie=[key,"=",escape(value)];

if(expires){var today=new Date();
today.setTime(today.getTime());
cookie.push(";expires=",new Date(today.getTime()+(expires*1000*60*60*24)).toGMTString());
}
if(path){cookie.push(";path=",path);
}
if(domain){cookie.push(";domain=",domain);
}
if(secure){cookie.push(";secure");
}document.cookie=cookie.join("");
},del:function(key,path,domain){if(!qx.bom.Cookie.get(key)){return;
}var cookie=[key,"="];

if(path){cookie.push(";path=",path);
}
if(domain){cookie.push(";domain=",domain);
}cookie.push(";expires=Thu, 01-Jan-1970 00:00:01 GMT");
document.cookie=cookie.join("");
}}});
qx.Class.define("qx.event.handler.Input",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(){this.base(arguments);
this._onChangeCheckedWrapper=qx.lang.Function.listener(this._onChangeChecked,this);
this._onChangeValueWrapper=qx.lang.Function.listener(this._onChangeValue,this);
this._onInputWrapper=qx.lang.Function.listener(this._onInput,this);
this._onPropertyWrapper=qx.lang.Function.listener(this._onProperty,this);
if(qx.core.Variant.isSet("qx.client","opera")){this._onKeyDownWrapper=qx.lang.Function.listener(this._onKeyDown,this);
this._onKeyUpWrapper=qx.lang.Function.listener(this._onKeyUp,this);
this._onBlurWrapper=qx.lang.Function.listener(this._onBlur,this);
}},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{input:1,change:1},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:false},members:{__enter:false,__onInputTimeoutId:null,__oldValue:null,canHandleEvent:function(target,type){var lower=target.tagName.toLowerCase();

if(type==="input"&&(lower==="input"||lower==="textarea")){return true;
}
if(type==="change"&&(lower==="input"||lower==="textarea"||lower==="select")){return true;
}return false;
},registerEvent:qx.core.Variant.select("qx.client",{"mshtml":function(target,type,capture){if(!target.__inputHandlerAttached){var tag=target.tagName.toLowerCase();
var elementType=target.type;

if(elementType==="text"||elementType==="password"||tag==="textarea"||elementType==="checkbox"||elementType==="radio"){qx.bom.Event.addNativeListener(target,"propertychange",this._onPropertyWrapper);
}
if(elementType!=="checkbox"&&elementType!=="radio"){qx.bom.Event.addNativeListener(target,"change",this._onChangeValueWrapper);
}
if(elementType==="text"||elementType==="password"){this._onKeyPressWrapped=qx.lang.Function.listener(this._onKeyPress,this,target);
qx.bom.Event.addNativeListener(target,"keypress",this._onKeyPressWrapped);
}target.__inputHandlerAttached=true;
}},"default":function(target,type,capture){if(type==="input"){this.__registerInputListener(target);
}else if(type==="change"){if(target.type==="radio"||target.type==="checkbox"){qx.bom.Event.addNativeListener(target,"change",this._onChangeCheckedWrapper);
}else{qx.bom.Event.addNativeListener(target,"change",this._onChangeValueWrapper);
}if(qx.core.Variant.isSet("qx.client","opera")){if(target.type==="text"||target.type==="password"){this._onKeyPressWrapped=qx.lang.Function.listener(this._onKeyPress,this,target);
qx.bom.Event.addNativeListener(target,"keypress",this._onKeyPressWrapped);
}}}}}),__registerInputListener:qx.core.Variant.select("qx.client",{"mshtml":null,"webkit":function(target){var tag=target.tagName.toLowerCase();
if(qx.bom.client.Engine.VERSION<532&&tag=="textarea"){qx.bom.Event.addNativeListener(target,"keypress",this._onInputWrapper);
}qx.bom.Event.addNativeListener(target,"input",this._onInputWrapper);
},"opera":function(target){qx.bom.Event.addNativeListener(target,"keyup",this._onKeyUpWrapper);
qx.bom.Event.addNativeListener(target,"keydown",this._onKeyDownWrapper);
qx.bom.Event.addNativeListener(target,"blur",this._onBlurWrapper);
qx.bom.Event.addNativeListener(target,"input",this._onInputWrapper);
},"default":function(target){qx.bom.Event.addNativeListener(target,"input",this._onInputWrapper);
}}),unregisterEvent:qx.core.Variant.select("qx.client",{"mshtml":function(target,type){if(target.__inputHandlerAttached){var tag=target.tagName.toLowerCase();
var elementType=target.type;

if(elementType==="text"||elementType==="password"||tag==="textarea"||elementType==="checkbox"||elementType==="radio"){qx.bom.Event.removeNativeListener(target,"propertychange",this._onPropertyWrapper);
}
if(elementType!=="checkbox"&&elementType!=="radio"){qx.bom.Event.removeNativeListener(target,"change",this._onChangeValueWrapper);
}
if(elementType==="text"||elementType==="password"){qx.bom.Event.removeNativeListener(target,"keypress",this._onKeyPressWrapped);
}
try{delete target.__inputHandlerAttached;
}catch(ex){target.__inputHandlerAttached=null;
}}},"default":function(target,type){if(type==="input"){this.__registerInputListener(target);
}else if(type==="change"){if(target.type==="radio"||target.type==="checkbox"){qx.bom.Event.removeNativeListener(target,"change",this._onChangeCheckedWrapper);
}else{qx.bom.Event.removeNativeListener(target,"change",this._onChangeValueWrapper);
}}
if(qx.core.Variant.isSet("qx.client","opera")){if(target.type==="text"||target.type==="password"){qx.bom.Event.removeNativeListener(target,"keypress",this._onKeyPressWrapped);
}}}}),__unregisterInputListener:qx.core.Variant.select("qx.client",{"mshtml":null,"webkit":function(target){var tag=target.tagName.toLowerCase();
if(qx.bom.client.Engine.VERSION<532&&tag=="textarea"){qx.bom.Event.removeNativeListener(target,"keypress",this._onInputWrapper);
}qx.bom.Event.removeNativeListener(target,"input",this._onInputWrapper);
},"opera":function(target){qx.bom.Event.removeNativeListener(target,"keyup",this._onKeyUpWrapper);
qx.bom.Event.removeNativeListener(target,"keydown",this._onKeyDownWrapper);
qx.bom.Event.removeNativeListener(target,"blur",this._onBlurWrapper);
qx.bom.Event.removeNativeListener(target,"input",this._onInputWrapper);
},"default":function(target){qx.bom.Event.removeNativeListener(target,"input",this._onInputWrapper);
}}),_onKeyPress:qx.core.Variant.select("qx.client",{"mshtml|opera":function(e,target){if(e.keyCode===13){if(target.value!==this.__oldValue){this.__oldValue=target.value;
qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[target.value]);
}}},"default":null}),_onKeyDown:qx.core.Variant.select("qx.client",{"opera":function(e){if(e.keyCode===13){this.__enter=true;
}},"default":null}),_onKeyUp:qx.core.Variant.select("qx.client",{"opera":function(e){if(e.keyCode===13){this.__enter=false;
}},"default":null}),_onBlur:qx.core.Variant.select("qx.client",{"opera":function(e){if(this.__onInputTimeoutId){window.clearTimeout(this.__onInputTimeoutId);
}},"default":null}),_onInput:qx.event.GlobalError.observeMethod(function(e){var target=e.target;
if(!this.__enter){if(qx.core.Variant.isSet("qx.client","opera")){this.__onInputTimeoutId=window.setTimeout(function(){qx.event.Registration.fireEvent(target,"input",qx.event.type.Data,[target.value]);
},0);
}else{qx.event.Registration.fireEvent(target,"input",qx.event.type.Data,[target.value]);
}}}),_onChangeValue:qx.event.GlobalError.observeMethod(function(e){var target=e.target||e.srcElement;
var data=target.value;

if(target.type==="select-multiple"){var data=[];

for(var i=0,o=target.options,l=o.length;i<l;i++){if(o[i].selected){data.push(o[i].value);
}}}qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[data]);
}),_onChangeChecked:qx.event.GlobalError.observeMethod(function(e){var target=e.target;

if(target.type==="radio"){if(target.checked){qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[target.value]);
}}else{qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[target.checked]);
}}),_onProperty:qx.core.Variant.select("qx.client",{"mshtml":qx.event.GlobalError.observeMethod(function(e){var target=e.target||e.srcElement;
var prop=e.propertyName;

if(prop==="value"&&(target.type==="text"||target.type==="password"||target.tagName.toLowerCase()==="textarea")){if(!target.__inValueSet){qx.event.Registration.fireEvent(target,"input",qx.event.type.Data,[target.value]);
}}else if(prop==="checked"){if(target.type==="checkbox"){qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[target.checked]);
}else if(target.checked){qx.event.Registration.fireEvent(target,"change",qx.event.type.Data,[target.value]);
}}}),"default":function(){}})},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.bom.Input",{statics:{__types:{text:1,textarea:1,select:1,checkbox:1,radio:1,password:1,hidden:1,submit:1,image:1,file:1,search:1,reset:1,button:1},create:function(type,attributes,win){{qx.core.Assert.assertKeyInMap(type,this.__types,"Unsupported input type.");
};
var attributes=attributes?qx.lang.Object.clone(attributes):{};
var tag;

if(type==="textarea"||type==="select"){tag=type;
}else{tag="input";
attributes.type=type;
}return qx.bom.Element.create(tag,attributes,win);
},setValue:function(element,value){var tag=element.nodeName.toLowerCase();
var type=element.type;
var Array=qx.lang.Array;
var Type=qx.lang.Type;

if(typeof value==="number"){value+="";
}
if((type==="checkbox"||type==="radio")){if(Type.isArray(value)){element.checked=Array.contains(value,element.value);
}else{element.checked=element.value==value;
}}else if(tag==="select"){var isArray=Type.isArray(value);
var options=element.options;
var subel,subval;

for(var i=0,l=options.length;i<l;i++){subel=options[i];
subval=subel.getAttribute("value");

if(subval==null){subval=subel.text;
}subel.selected=isArray?Array.contains(value,subval):value==subval;
}
if(isArray&&value.length==0){element.selectedIndex=-1;
}}else if(type==="text"&&qx.core.Variant.isSet("qx.client","mshtml")){element.__inValueSet=true;
element.value=value;
element.__inValueSet=null;
}else{element.value=value;
}},getValue:function(element){var tag=element.nodeName.toLowerCase();

if(tag==="option"){return (element.attributes.value||{}).specified?element.value:element.text;
}
if(tag==="select"){var index=element.selectedIndex;
if(index<0){return null;
}var values=[];
var options=element.options;
var one=element.type=="select-one";
var clazz=qx.bom.Input;
var value;
for(var i=one?index:0,max=one?index+1:options.length;i<max;i++){var option=options[i];

if(option.selected){value=clazz.getValue(option);
if(one){return value;
}values.push(value);
}}return values;
}else{return (element.value||"").replace(/\r/g,"");
}},setWrap:qx.core.Variant.select("qx.client",{"mshtml":function(element,wrap){element.wrap=wrap?"soft":"off";
},"gecko|webkit":function(element,wrap){var wrapValue=wrap?"soft":"off";
var styleValue=wrap?"":"auto";
element.setAttribute("wrap",wrapValue);
element.style.overflow=styleValue;
},"default":function(element,wrap){element.style.whiteSpace=wrap?"normal":"nowrap";
}})}});
qx.Class.define("qx.bom.Request",{extend:qx.core.Object,construct:function(){this.__headers={};
this.__xmlhttp=this.__createNative();
},statics:{UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},members:{__async:null,__stateListener:null,__xmlhttp:null,__timeoutListener:null,__timeoutHandle:null,__aborted:null,__lastFired:null,__headers:null,readyState:0,responseText:"",responseXML:null,status:0,statusText:"",timeout:0,onreadystatechange:function(){},ontimeout:function(){},onload:function(){},onerror:function(){},onabort:function(){},open:function(method,url,async,username,password){if(async==null){async=true;
}this.__async=async;
this.__stateListener=qx.lang.Function.bind(this.__onNativeReadyStateChange,this);
this.__timeoutListener=qx.lang.Function.bind(this.__onNativeTimeout,this);
this.__xmlhttp.onreadystatechange=this.__stateListener;
if(arguments.length>4){this.__xmlhttp.open(method,url,async,username,password);
}else if(arguments.length>3){this.__xmlhttp.open(method,url,async,username);
}else{this.__xmlhttp.open(method,url,async);
}if(qx.core.Variant.isSet("qx.client","gecko")){if(!async){this.readyState=qx.bom.Request.OPENED;
this.__fireReadyStateChange();
}}},send:function(data){var headers=this.__headers;
if(data&&data.nodeType){data=window.XMLSerializer?new XMLSerializer().serializeToString(data):data.xml;

if(!headers["Content-Type"]){headers["Content-Type"]="application/xml";
}}for(var label in headers){this.__xmlhttp.setRequestHeader(label,headers[label]);
}if(this.timeout!=null&&this.timeout>0){this.__timeoutHandle=window.setTimeout(this.__timeoutListener,this.timeout);
}this.__xmlhttp.send(data);
if(qx.core.Variant.isSet("qx.client","gecko")){if(!this.__async){this.readyState=qx.bom.Request.OPENED;
this.__synchronizeValues(this);
while(this.readyState<qx.bom.Request.DONE){this.readyState++;
this.__fireReadyStateChange();
if(this.__aborted){return;
}}}}},isSuccessful:function(){var status=this.status;
return status===304||(status>=200&&status<300);
},abort:function(){if(this.__timeoutHandle){window.clearTimeout(this.__timeoutHandle);
}this.__abortHelper();
this.onabort();
this.dispose();
},__onNativeReadyStateChange:qx.event.GlobalError.observeMethod(function(){if(qx.core.Variant.isSet("qx.client","gecko")){if(!this.__async){return;
}}this.readyState=this.__xmlhttp.readyState;
this.__synchronizeValues();
if(this.__aborted){this.readyState=qx.bom.Request.UNSENT;
return ;
}if(this.readyState==qx.bom.Request.DONE&&this.__timeoutHandle){window.clearTimeout(this.__timeoutHandle);
}this.__fireReadyStateChange();
if(this.readyState==qx.bom.Request.DONE){this.dispose();
}}),__onNativeTimeout:qx.event.GlobalError.observeMethod(function(){this.__abortHelper();
this.ontimeout();
this.dispose();
}),getAllResponseHeaders:function(){try{return this.__xmlhttp.getAllResponseHeaders();
}catch(ex){return null;
}},getResponseHeader:function(label){try{return this.__xmlhttp.getResponseHeader(label);
}catch(ex){return null;
}},setRequestHeader:function(label,value){if(value==null){delete this.__headers[label];
}else{this.__headers[label]=value;
}},removeRequestHeader:function(label,value){delete this.__headers[label];
},getRequestHeader:function(label){return this.__headers[label]||null;
},__abortHelper:function(){this.__synchronizeValues();
if(this.readyState>qx.bom.Request.UNSENT){this.__aborted=true;
}this.__xmlhttp.abort();
},__createNative:qx.core.Variant.select("qx.client",{"default":function(){return new XMLHttpRequest;
},"mshtml":function(){if(window.ActiveXObject&&qx.xml.Document.XMLHTTP){return new ActiveXObject(qx.xml.Document.XMLHTTP);
}
if(window.XMLHttpRequest){return new XMLHttpRequest;
}}}),__fireReadyStateChange:function(){if(this.__lastFired===this.readyState){return;
}this.onreadystatechange();
this.__lastFired=this.readyState;
if(this.readyState===4){if(this.isSuccessful()){this.onload();
}else{this.onerror();
}}},__getDocument:function(){var doc=this.__xmlhttp.responseXML;

if(qx.core.Variant.isSet("qx.client","mshtml")){if(doc&&!doc.documentElement&&this.__xmlhttp.getResponseHeader("Content-Type").match(/[^\/]+\/[^\+]+\+xml/)){doc=new ActiveXObject(qx.xml.Document.DOMDOC);
doc.loadXML(this.__xmlhttp.responseText);
}if(doc&&doc.parseError!=0){return null;
}}else if(!doc.documentElement||doc.documentElement.tagName=="parsererror"){return null;
}return doc;
},__synchronizeValues:function(){var xmlhttp=this.__xmlhttp;

try{this.responseText=xmlhttp.responseText;
}catch(ex){}
try{this.responseXML=this.__getDocument();
}catch(ex){}
try{this.status=xmlhttp.status;
}catch(ex){}
try{this.statusText=xmlhttp.statusText;
}catch(ex){}if(qx.core.Variant.isSet("qx.client","mshtml")){if(this.status===1223){this.status=204;
}}if(!this.status&&location.protocol==="file:"){this.status=204;
}}},destruct:function(){if(this.__timeoutHandle){window.clearTimeout(this.__timeoutHandle);
this.__timeoutHandle=null;
}if(this.__xmlhttp){this.__xmlhttp.onreadystatechange=qx.lang.Function.empty;
this.__xmlhttp=null;
}this.onreadystatechange=this.onload=this.onerror=this.onabort=null;
this.__stateListener=null;
this.__headers=null;
}});
qx.Class.define("qx.bom.Vml",{statics:{create:function(type,attributes,win){var win=win||window;
var el=win.document.createElement("v:"+(type||"shape"));

if(attributes){for(var key in attributes){el.setAttribute(key,attributes[key]);
}}return el;
},createImage:function(source,width,height,xOffset,yOffset,imageWidth,imageHeight){var shape=qx.bom.Vml.create("rect",{"stroked":"False"});
var fill=qx.bom.Vml.create("fill",{"type":"tile"});
shape.appendChild(fill);

if(source||width||height){this.updateImage(shape,source,width,height,xOffset,yOffset,imageWidth,imageHeight);
}return shape;
},updateImage:function(image,source,width,height,xOffset,yOffset,imageWidth,imageHeight){var Style=qx.bom.element.Style;
var Attribute=qx.bom.element.Attribute;
Style.set(image,"width",width,false);
Style.set(image,"height",height,false);
var fill=image.firstChild;
Attribute.set(fill,"src",source,false);
var xOrigin=xOffset?(-xOffset)/(imageWidth):0;
var yOrigin=yOffset?(-yOffset)/(imageHeight):0;
Attribute.set(fill,"origin",xOrigin.toFixed(2)+","+yOrigin,false);
}},defer:function(statics){if(qx.core.Variant.isSet("qx.client","mshtml")){qx.bom.Stylesheet.createElement("v\\: * { behavior:url(#default#VML);display:inline-block; }");

if(!document.namespaces["v"]){document.namespaces.add("v","urn:schemas-microsoft-com:vml");
}}}});
qx.Class.define("qx.bom.Shortcut",{extend:qx.core.Object,construct:function(shortcut){this.base(arguments);
this.__modifier={};
this.__key=null;

if(shortcut!=null){this.setShortcut(shortcut);
}this.initEnabled();
},events:{"execute":"qx.event.type.Data"},properties:{enabled:{init:true,check:"Boolean",event:"changeEnabled",apply:"_applyEnabled"},shortcut:{check:"String",apply:"_applyShortcut",nullable:true},autoRepeat:{check:"Boolean",init:false}},members:{__modifier:"",__key:"",execute:function(target){this.fireDataEvent("execute",target);
},__onKeyDown:function(event){if(this.getEnabled()&&this.__matchesKeyEvent(event)){if(!this.isAutoRepeat()){this.execute(event.getTarget());
}event.stop();
}},__onKeyPress:function(event){if(this.getEnabled()&&this.__matchesKeyEvent(event)){if(this.isAutoRepeat()){this.execute(event.getTarget());
}event.stop();
}},_applyEnabled:function(value,old){if(value){qx.event.Registration.addListener(document.documentElement,"keydown",this.__onKeyDown,this);
qx.event.Registration.addListener(document.documentElement,"keypress",this.__onKeyPress,this);
}else{qx.event.Registration.removeListener(document.documentElement,"keydown",this.__onKeyDown,this);
qx.event.Registration.removeListener(document.documentElement,"keypress",this.__onKeyPress,this);
}},_applyShortcut:function(value,old){if(value){if(value.search(/[\s]+/)!=-1){var msg="Whitespaces are not allowed within shortcuts";
this.error(msg);
throw new Error(msg);
}this.__modifier={"Control":false,"Shift":false,"Meta":false,"Alt":false};
this.__key=null;
var index;
var a=[];

while(value.length>0&&index!=-1){index=value.search(/[-+]+/);
a.push((value.length==1||index==-1)?value:value.substring(0,index));
value=value.substring(index+1);
}var al=a.length;

for(var i=0;i<al;i++){var identifier=this.__normalizeKeyIdentifier(a[i]);

switch(identifier){case "Control":case "Shift":case "Meta":case "Alt":this.__modifier[identifier]=true;
break;
case "Unidentified":var msg="Not a valid key name for a shortcut: "+a[i];
this.error(msg);
throw msg;
default:if(this.__key){var msg="You can only specify one non modifier key!";
this.error(msg);
throw msg;
}this.__key=identifier;
}}}return true;
},matchesKeyEvent:function(e){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"This message will be made private.");
return this.__matchesKeyEvent(e);
},__matchesKeyEvent:function(e){var key=this.__key;

if(!key){return ;
}if((!this.__modifier.Shift&&e.isShiftPressed())||(this.__modifier.Shift&&!e.isShiftPressed())||(!this.__modifier.Control&&e.isCtrlPressed())||(this.__modifier.Control&&!e.isCtrlPressed())||(!this.__modifier.Meta&&e.isMetaPressed())||(this.__modifier.Meta&&!e.isMetaPressed())||(!this.__modifier.Alt&&e.isAltPressed())||(this.__modifier.Alt&&!e.isAltPressed())){return false;
}
if(key==e.getKeyIdentifier()){return true;
}return false;
},__oldKeyNameToKeyIdentifierMap:{esc:"Escape",ctrl:"Control",print:"PrintScreen",del:"Delete",pageup:"PageUp",pagedown:"PageDown",numlock:"NumLock",numpad_0:"0",numpad_1:"1",numpad_2:"2",numpad_3:"3",numpad_4:"4",numpad_5:"5",numpad_6:"6",numpad_7:"7",numpad_8:"8",numpad_9:"9",numpad_divide:"/",numpad_multiply:"*",numpad_minus:"-",numpad_plus:"+"},__normalizeKeyIdentifier:function(keyName){var KeyHandler=qx.event.handler.Keyboard;
var keyIdentifier="Unidentified";

if(KeyHandler.isValidKeyIdentifier(keyName)){return keyName;
}
if(keyName.length==1&&keyName>="a"&&keyName<="z"){return keyName.toUpperCase();
}keyName=keyName.toLowerCase();
var keyIdentifier=this.__oldKeyNameToKeyIdentifierMap[keyName]||qx.lang.String.firstUp(keyName);

if(KeyHandler.isValidKeyIdentifier(keyIdentifier)){return keyIdentifier;
}else{return "Unidentified";
}},toString:function(){var key=this.__key;
var str=[];

for(var modifier in this.__modifier){if(this.__modifier[modifier]){str.push(qx.locale.Key.getKeyName("short",modifier));
}}
if(key){str.push(qx.locale.Key.getKeyName("short",key));
}return str.join("+");
}},destruct:function(){this.setEnabled(false);
this.__modifier=this.__key=null;
}});
qx.Class.define("qx.bom.client.Locale",{statics:{LOCALE:"",VARIANT:"",__init:function(){var locale=(navigator.userLanguage||navigator.language).toLowerCase();
var variant="";
var index=locale.indexOf("-");

if(index!=-1){variant=locale.substr(index+1);
locale=locale.substr(0,index);
}this.LOCALE=locale;
this.VARIANT=variant;
}},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.type.BaseString",{extend:Object,construct:function(txt){var txt=txt||"";
this.__txt=txt;
this.length=txt.length;
},members:{$$isString:true,length:0,__txt:null,toString:function(){return this.__txt;
},charAt:null,valueOf:null,charCodeAt:null,concat:null,indexOf:null,lastIndexOf:null,match:null,replace:null,search:null,slice:null,split:null,substr:null,substring:null,toLowerCase:null,toUpperCase:null,toHashCode:function(){return qx.core.ObjectRegistry.toHashCode(this);
},toLocaleLowerCase:null,toLocaleUpperCase:null,base:function(args,varags){return qx.core.Object.prototype.base.apply(this,arguments);
}},defer:function(statics,members){{qx.Class.include(statics,qx.core.MAssert);
};
var mappedFunctions=['charAt','charCodeAt','concat','indexOf','lastIndexOf','match','replace','search','slice','split','substr','substring','toLowerCase','toUpperCase','toLocaleLowerCase','toLocaleUpperCase'];
members.valueOf=members.toString;

if(new statics("").valueOf()==null){delete members.valueOf;
}
for(var i=0,l=mappedFunctions.length;i<l;i++){members[mappedFunctions[i]]=String.prototype[mappedFunctions[i]];
}}});
qx.Class.define("qx.locale.LocalizedString",{extend:qx.type.BaseString,construct:function(translation,messageId,args){this.base(arguments,translation);
this.__messageId=messageId;
this.__args=args;
},members:{__messageId:null,__args:null,translate:function(){return qx.locale.Manager.getInstance().translate(this.__messageId,this.__args);
}}});
qx.Class.define("qx.locale.Manager",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__translations=qx.$$translations||{};
this.__locales=qx.$$locales||{};
var clazz=qx.bom.client.Locale;
var locale=clazz.LOCALE;
var variant=clazz.VARIANT;

if(variant!==""){locale+="_"+variant;
}this.setLocale(locale||this.__defaultLocale);
},statics:{tr:function(messageId,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,1);
return qx.locale.Manager.getInstance().translate(messageId,args);
},trn:function(singularMessageId,pluralMessageId,count,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,3);
if(count!=1){return qx.locale.Manager.getInstance().translate(pluralMessageId,args);
}else{return qx.locale.Manager.getInstance().translate(singularMessageId,args);
}},trc:function(hint,messageId,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,2);
return qx.locale.Manager.getInstance().translate(messageId,args);
},marktr:function(messageId){return messageId;
}},properties:{locale:{check:"String",nullable:true,apply:"_applyLocale",event:"changeLocale"}},members:{__defaultLocale:"C",__locale:null,__language:null,__translations:null,__locales:null,getLanguage:function(){return this.__language;
},getTerritory:function(){return this.getLocale().split("_")[1]||"";
},getAvailableLocales:function(){var locales=[];

for(var locale in this.__locales){if(locale!=this.__defaultLocale){locales.push(locale);
}}return locales;
},__extractLanguage:function(locale){var language;
var pos=locale.indexOf("_");

if(pos==-1){language=locale;
}else{language=locale.substring(0,pos);
}return language;
},_applyLocale:function(value,old){this.__locale=value;
this.__language=this.__extractLanguage(value);
},addTranslation:function(languageCode,translationMap){var catalog=this.__translations;

if(catalog[languageCode]){for(var key in translationMap){catalog[languageCode][key]=translationMap[key];
}}else{catalog[languageCode]=translationMap;
}},addLocale:function(localeCode,translationMap){var catalog=this.__locales;

if(catalog[localeCode]){for(var key in translationMap){catalog[localeCode][key]=translationMap[key];
}}else{catalog[localeCode]=translationMap;
}},translate:function(messageId,args,locale){var catalog=this.__translations;
return this.__lookupAndExpand(catalog,messageId,args,locale);
},localize:function(messageId,args,locale){var catalog=this.__locales;
return this.__lookupAndExpand(catalog,messageId,args,locale);
},__lookupAndExpand:function(catalog,messageId,args,locale){var txt;

if(!catalog){return messageId;
}
if(locale){var language=this.__extractLanguage(locale);
}else{locale=this.__locale;
language=this.__language;
}if(!txt&&catalog[locale]){txt=catalog[locale][messageId];
}if(!txt&&catalog[language]){txt=catalog[language][messageId];
}if(!txt&&catalog[this.__defaultLocale]){txt=catalog[this.__defaultLocale][messageId];
}
if(!txt){txt=messageId;
}
if(args.length>0){var translatedArgs=[];

for(var i=0;i<args.length;i++){var arg=args[i];

if(arg&&arg.translate){translatedArgs[i]=arg.translate();
}else{translatedArgs[i]=arg;
}}txt=qx.lang.String.format(txt,translatedArgs);
}{};
return txt;
}},destruct:function(){this.__translations=this.__locales=null;
}});
qx.Class.define("qx.locale.Key",{statics:{getKeyName:function(size,keyIdentifier,locale){{qx.core.Assert.assertInArray(size,["short","full"]);
};
var key="key_"+size+"_"+keyIdentifier;
if(qx.bom.client.Platform.MAC&&keyIdentifier=="Control"){key+="_Mac";
}var localizedKey=qx.locale.Manager.getInstance().translate(key,[],locale);

if(localizedKey==key){return qx.locale.Key._keyNames[key]||keyIdentifier;
}else{return localizedKey;
}}},defer:function(statics,members,properties){var keyNames={};
var Manager=qx.locale.Manager;
keyNames[Manager.marktr("key_short_Backspace")]="Backspace";
keyNames[Manager.marktr("key_short_Tab")]="Tab";
keyNames[Manager.marktr("key_short_Space")]="Space";
keyNames[Manager.marktr("key_short_Enter")]="Enter";
keyNames[Manager.marktr("key_short_Shift")]="Shift";
keyNames[Manager.marktr("key_short_Control")]="Ctrl";
keyNames[Manager.marktr("key_short_Control_Mac")]="Ctrl";
keyNames[Manager.marktr("key_short_Alt")]="Alt";
keyNames[Manager.marktr("key_short_CapsLock")]="Caps";
keyNames[Manager.marktr("key_short_Meta")]="Meta";
keyNames[Manager.marktr("key_short_Escape")]="Esc";
keyNames[Manager.marktr("key_short_Left")]="Left";
keyNames[Manager.marktr("key_short_Up")]="Up";
keyNames[Manager.marktr("key_short_Right")]="Right";
keyNames[Manager.marktr("key_short_Down")]="Down";
keyNames[Manager.marktr("key_short_PageUp")]="PgUp";
keyNames[Manager.marktr("key_short_PageDown")]="PgDn";
keyNames[Manager.marktr("key_short_End")]="End";
keyNames[Manager.marktr("key_short_Home")]="Home";
keyNames[Manager.marktr("key_short_Insert")]="Ins";
keyNames[Manager.marktr("key_short_Delete")]="Del";
keyNames[Manager.marktr("key_short_NumLock")]="Num";
keyNames[Manager.marktr("key_short_PrintScreen")]="Print";
keyNames[Manager.marktr("key_short_Scroll")]="Scroll";
keyNames[Manager.marktr("key_short_Pause")]="Pause";
keyNames[Manager.marktr("key_short_Win")]="Win";
keyNames[Manager.marktr("key_short_Apps")]="Apps";
keyNames[Manager.marktr("key_full_Backspace")]="Backspace";
keyNames[Manager.marktr("key_full_Tab")]="Tabulator";
keyNames[Manager.marktr("key_full_Space")]="Space";
keyNames[Manager.marktr("key_full_Enter")]="Enter";
keyNames[Manager.marktr("key_full_Shift")]="Shift";
keyNames[Manager.marktr("key_full_Control")]="Control";
keyNames[Manager.marktr("key_full_Control_Mac")]="Control";
keyNames[Manager.marktr("key_full_Alt")]="Alt";
keyNames[Manager.marktr("key_full_CapsLock")]="CapsLock";
keyNames[Manager.marktr("key_full_Meta")]="Meta";
keyNames[Manager.marktr("key_full_Escape")]="Escape";
keyNames[Manager.marktr("key_full_Left")]="Left";
keyNames[Manager.marktr("key_full_Up")]="Up";
keyNames[Manager.marktr("key_full_Right")]="Right";
keyNames[Manager.marktr("key_full_Down")]="Down";
keyNames[Manager.marktr("key_full_PageUp")]="PageUp";
keyNames[Manager.marktr("key_full_PageDown")]="PageDown";
keyNames[Manager.marktr("key_full_End")]="End";
keyNames[Manager.marktr("key_full_Home")]="Home";
keyNames[Manager.marktr("key_full_Insert")]="Insert";
keyNames[Manager.marktr("key_full_Delete")]="Delete";
keyNames[Manager.marktr("key_full_NumLock")]="NumLock";
keyNames[Manager.marktr("key_full_PrintScreen")]="PrintScreen";
keyNames[Manager.marktr("key_full_Scroll")]="Scroll";
keyNames[Manager.marktr("key_full_Pause")]="Pause";
keyNames[Manager.marktr("key_full_Win")]="Win";
keyNames[Manager.marktr("key_full_Apps")]="Apps";
statics._keyNames=keyNames;
}});
(function(){var setter=function(clazz,method){return function(arg1,arg2,arg3,arg4,arg5,arg6){var length=this.length;

if(length>0){var ptn=clazz[method];

for(var i=0;i<length;i++){if(this[i].nodeType===1){ptn.call(clazz,this[i],arg1,arg2,arg3,arg4,arg5,arg6);
}}}return this;
};
};
var getter=function(clazz,method){return function(arg1,arg2,arg3,arg4,arg5,arg6){if(this.length>0){var ret=this[0].nodeType===1?clazz[method](this[0],arg1,arg2,arg3,arg4,arg5,arg6):null;

if(ret&&ret.nodeType){return this.__pushStack([ret]);
}else{return ret;
}}return null;
};
};
qx.Class.define("qx.bom.Collection",{extend:qx.type.BaseArray,statics:{query:function(selector,context){var arr=qx.bom.Selector.query(selector,context);
return qx.lang.Array.cast(arr,qx.bom.Collection);
},id:function(id){var elem=document.getElementById(id);
if(elem&&elem.id!=id){return qx.bom.Collection.query("#"+id);
}return new qx.bom.Collection(elem);
},html:function(html,context){var arr=qx.bom.Html.clean([html],context);
return qx.lang.Array.cast(arr,qx.bom.Collection);
},__expr:/^[^<]*(<(.|\s)+>)[^>]*$|^#([\w-]+)$/,create:function(input,context){var Collection=qx.bom.Collection;
if(input.nodeType){return new Collection(input);
}else if(typeof input==="string"){var match=Collection.__expr.exec(input);

if(match){return match[1]?Collection.html(match[1],context):Collection.id(match[3].substring(1));
}else{return Collection.query(input,context);
}}else{return qx.lang.Array.cast(input,qx.bom.Collection);
}}},members:{__prevObject:null,setAttribute:setter(qx.bom.element.Attribute,"set"),resetAttribute:setter(qx.bom.element.Attribute,"reset"),getAttribute:getter(qx.bom.element.Attribute,"get"),addClass:setter(qx.bom.element.Class,"add"),getClass:getter(qx.bom.element.Class,"get"),hasClass:getter(qx.bom.element.Class,"has"),removeClass:setter(qx.bom.element.Class,"remove"),replaceClass:setter(qx.bom.element.Class,"replace"),toggleClass:setter(qx.bom.element.Class,"toggle"),setValue:setter(qx.bom.Input,"setValue"),getValue:getter(qx.bom.Input,"getValue"),setStyle:setter(qx.bom.element.Style,"set"),setStyles:setter(qx.bom.element.Style,"setStyles"),resetStyle:setter(qx.bom.element.Style,"reset"),getStyle:getter(qx.bom.element.Style,"get"),setCss:setter(qx.bom.element.Style,"setCss"),getCss:setter(qx.bom.element.Style,"getCss"),getOffset:getter(qx.bom.element.Location,"get"),getPosition:getter(qx.bom.element.Location,"getPosition"),getOffsetParent:getter(qx.bom.element.Location,"getOffsetParent"),setScrollLeft:function(value){var Node=qx.dom.Node;

for(var i=0,l=this.length,obj;i<l;i++){obj=this[i];

if(Node.isElement(obj)){obj.scrollLeft=value;
}else if(Node.isWindow(obj)){obj.scrollTo(value,this.getScrollTop(obj));
}else if(Node.isDocument(obj)){Node.getWindow(obj).scrollTo(value,this.getScrollTop(obj));
}}return this;
},setScrollTop:function(value){var Node=qx.dom.Node;

for(var i=0,l=this.length,obj;i<l;i++){obj=this[i];

if(Node.isElement(obj)){obj.scrollTop=value;
}else if(Node.isWindow(obj)){obj.scrollTo(this.getScrollLeft(obj),value);
}else if(Node.isDocument(obj)){Node.getWindow(obj).scrollTo(this.getScrollLeft(obj),value);
}}return this;
},getScrollLeft:function(){var obj=this[0];

if(!obj){return null;
}var Node=qx.dom.Node;

if(Node.isWindow(obj)||Node.isDocument(obj)){return qx.bom.Viewport.getScrollLeft();
}return obj.scrollLeft;
},getScrollTop:function(){var obj=this[0];

if(!obj){return null;
}var Node=qx.dom.Node;

if(Node.isWindow(obj)||Node.isDocument(obj)){return qx.bom.Viewport.getScrollTop();
}return obj.scrollTop;
},getWidth:function(){var obj=this[0];
var Node=qx.dom.Node;

if(obj){if(Node.isElement(obj)){return qx.bom.element.Dimension.getWidth(obj);
}else if(Node.isDocument(obj)){return qx.bom.Document.getWidth(Node.getWindow(obj));
}else if(Node.isWindow(obj)){return qx.bom.Viewport.getWidth(obj);
}}return null;
},getContentWidth:function(){var obj=this[0];

if(qx.dom.Node.isElement(obj)){return qx.bom.element.Dimension.getContentWidth(obj);
}return null;
},getHeight:function(){var obj=this[0];
var Node=qx.dom.Node;

if(obj){if(Node.isElement(obj)){return qx.bom.element.Dimension.getHeight(obj);
}else if(Node.isDocument(obj)){return qx.bom.Document.getHeight(Node.getWindow(obj));
}else if(Node.isWindow(obj)){return qx.bom.Viewport.getHeight(obj);
}}return null;
},getContentHeight:function(){var obj=this[0];

if(qx.dom.Node.isElement(obj)){return qx.bom.element.Dimension.getContentHeight(obj);
}return null;
},addListener:setter(qx.bom.Element,"addListener"),removeListener:setter(qx.bom.Element,"removeListener"),eq:function(index){return this.slice(index,+index+1);
},filter:function(selector,context){var res;

if(qx.lang.Type.isFunction(selector)){res=qx.type.BaseArray.prototype.filter.call(this,selector,context);
}else{res=qx.bom.Selector.matches(selector,this);
}return this.__pushStack(res);
},is:function(selector){return !!selector&&qx.bom.Selector.matches(selector,this).length>0;
},__simple:/^.[^:#\[\.,]*$/,not:function(selector){if(this.__simple.test(selector)){var res=qx.bom.Selector.matches(":not("+selector+")",this);
return this.__pushStack(res);
}var res=qx.bom.Selector.matches(selector,this);
return this.filter(function(value){return res.indexOf(value)===-1;
});
},add:function(selector,context){var res=qx.bom.Selector.query(selector,context);
var arr=qx.lang.Array.unique(this.concat(res));
return this.__pushStack(arr);
},children:function(selector){var children=[];

for(var i=0,l=this.length;i<l;i++){children.push.apply(children,qx.dom.Hierarchy.getChildElements(this[i]));
}
if(selector){children=qx.bom.Selector.matches(selector,children);
}return this.__pushStack(children);
},closest:function(selector){var arr=new qx.bom.Collection(1);
var Selector=qx.bom.Selector;
var ret=this.map(function(current){while(current&&current.ownerDocument){arr[0]=current;

if(Selector.matches(selector,arr).length>0){return current;
}current=current.parentNode;
}});
return this.__pushStack(qx.lang.Array.unique(ret));
},contents:function(){var res=[];
var lang=qx.lang.Array;

for(var i=0,l=this.length;i<l;i++){res.push.apply(res,lang.fromCollection(this[i].childNodes));
}return this.__pushStack(res);
},find:function(selector){var Selector=qx.bom.Selector;
if(this.length===1){return this.__pushStack(Selector.query(selector,this[0]));
}else{var ret=[];

for(var i=0,l=this.length;i<l;i++){ret.push.apply(ret,Selector.query(selector,this[i]));
}return this.__pushStack(qx.lang.Array.unique(ret));
}},next:function(selector){var Hierarchy=qx.dom.Hierarchy;
var ret=this.map(Hierarchy.getNextElementSibling,Hierarchy);
if(selector){ret=qx.bom.Selector.matches(selector,ret);
}return this.__pushStack(ret);
},nextAll:function(selector){return this.__hierarchyHelper("getNextSiblings",selector);
},prev:function(selector){var Hierarchy=qx.dom.Hierarchy;
var ret=this.map(Hierarchy.getPreviousElementSibling,Hierarchy);
if(selector){ret=qx.bom.Selector.matches(selector,ret);
}return this.__pushStack(ret);
},prevAll:function(selector){return this.__hierarchyHelper("getPreviousSiblings",selector);
},parent:function(selector){var Element=qx.dom.Element;
var ret=qx.lang.Array.unique(this.map(Element.getParentElement,Element));
if(selector){ret=qx.bom.Selector.matches(selector,ret);
}return this.__pushStack(ret);
},parents:function(selector){return this.__hierarchyHelper("getAncestors",selector);
},siblings:function(selector){return this.__hierarchyHelper("getSiblings",selector);
},__hierarchyHelper:function(method,selector){var all=[];
var Hierarchy=qx.dom.Hierarchy;

for(var i=0,l=this.length;i<l;i++){all.push.apply(all,Hierarchy[method](this[i]));
}var ret=qx.lang.Array.unique(all);
if(selector){ret=qx.bom.Selector.matches(selector,ret);
}return this.__pushStack(ret);
},__pushStack:function(arr){var coll=new qx.bom.Collection;
coll.__prevObject=this;
arr=Array.prototype.slice.call(arr,0);
coll.push.apply(coll,arr);
return coll;
},andSelf:function(){return this.add(this.__prevObject);
},end:function(){return this.__prevObject||new qx.bom.Collection();
},__manipulate:function(args,callback){var element=this[0];
var doc=element.ownerDocument||element;
var fragment=doc.createDocumentFragment();
var scripts=qx.bom.Html.clean(args,doc,fragment);
var first=fragment.firstChild;
if(first){var last=this.length-1;

for(var i=0,l=last;i<l;i++){callback.call(this,this[i],fragment.cloneNode(true));
}callback.call(this,this[last],fragment);
}if(scripts){var script;
var Loader=qx.io.ScriptLoader;
var Func=qx.lang.Function;

for(var i=0,l=scripts.length;i<l;i++){script=scripts[i];
if(script.src){Loader.get().load(script.src);
}else{Func.globalEval(script.text||script.textContent||script.innerHTML||"");
}if(script.parentNode){script.parentNode.removeChild(script);
}}}return this;
},__manipulateTo:function(args,original){var Selector=qx.bom.Selector;
var Lang=qx.lang.Array;
var col=[];

for(var i=0,l=args.length;i<l;i++){{if(typeof args[i]!=="string"){throw new Error("Invalid argument for selector query: "+args[i]);
}};
col.push.apply(col,Selector.query(args[i]));
}col=Lang.cast(Lang.unique(col),qx.bom.Collection);
for(var i=0,il=this.length;i<il;i++){col[original](this[i]);
}return this;
},append:function(varargs){return this.__manipulate(arguments,this.__appendCallback);
},prepend:function(varargs){return this.__manipulate(arguments,this.__prependCallback);
},__appendCallback:function(rel,child){rel.appendChild(child);
},__prependCallback:function(rel,child){rel.insertBefore(child,rel.firstChild);
},appendTo:function(varargs){return this.__manipulateTo(arguments,"append");
},prependTo:function(varargs){return this.__manipulateTo(arguments,"prepend");
},before:function(varargs){return this.__manipulate(arguments,this.__beforeCallback);
},after:function(varargs){return this.__manipulate(arguments,this.__afterCallback);
},__beforeCallback:function(rel,child){rel.parentNode.insertBefore(child,rel);
},__afterCallback:function(rel,child){rel.parentNode.insertBefore(child,rel.nextSibling);
},insertBefore:function(varargs){return this.__manipulateTo(arguments,"before");
},insertAfter:function(varargs){return this.__manipulateTo(arguments,"after");
},wrapAll:function(content){var first=this[0];

if(first){var wrap=qx.bom.Collection.create(content,first.ownerDocument).clone();
if(first.parentNode){first.parentNode.insertBefore(wrap[0],first);
}wrap.map(this.__getInnerHelper).append(this);
}return this;
},__getInnerHelper:function(elem){while(elem.firstChild){elem=elem.firstChild;
}return elem;
},wrapInner:function(content){var helper=new qx.bom.Collection(1);

for(var i=0,l=this.length;i<l;i++){helper[0]=this[i];
helper.contents().wrapAll(content);
}return this;
},wrap:function(content){var helper=new qx.bom.Collection(1);
for(var i=0,l=this.length;i<l;i++){helper[0]=this[i];
helper.wrapAll(content);
}return this;
},replaceWith:function(content){return this.after(content).remove();
},replaceAll:function(varargs){return this.__manipulateTo(arguments,"replaceWith");
},remove:function(selector){var coll=this;

if(selector){coll=this.filter(selector);

if(coll.length==0){return this;
}}for(var i=0,il=coll.length,current;i<il;i++){current=coll[i];

if(current.parentNode){current.parentNode.removeChild(current);
}}return coll;
},destroy:function(selector){if(this.length==0){return this;
}var Selector=qx.bom.Selector;
var coll=this;

if(selector){coll=this.filter(selector);

if(coll.length==0){return this;
}}var Manager=qx.event.Registration.getManager(this[0]);

for(var i=0,l=coll.length,current,inner;i<l;i++){current=coll[i];
Manager.removeAllListeners(current);
inner=Selector.query("*",current);

for(var j=0,jl=inner.length;j<jl;j++){Manager.removeAllListeners(inner[j]);
}if(current.parentNode){current.parentNode.removeChild(current);
}}if(selector){coll.end();
qx.lang.Array.exclude(this,coll);
}else{this.length=0;
}return this;
},empty:function(){var Collection=qx.bom.Collection;

for(var i=0,l=this.length;i<l;i++){Collection.query(">*",this[i]).destroy();
while(this.firstChild){this.removeChild(this.firstChild);
}}return this;
},clone:function(events){var Element=qx.bom.Element;
return events?
this.map(function(elem){return Element.clone(elem,true);
}):this.map(Element.clone,Element);
}},defer:function(statics,members){if(window.$==null){window.$=statics.create;
}}});
})();
qx.Bootstrap.define("qx.io.ScriptLoader",{construct:function(){this.__oneventWrapped=qx.Bootstrap.bind(this.__onevent,this);
this.__elem=document.createElement("script");
},members:{__running:null,__callback:null,__context:null,__oneventWrapped:null,__elem:null,load:function(url,callback,context){if(this.__running){throw new Error("Another request is still running!");
}this.__running=true;
var head=document.getElementsByTagName("head")[0];
var script=this.__elem;
this.__callback=callback||null;
this.__context=context||window;
script.type="text/javascript";
script.onerror=script.onload=script.onreadystatechange=this.__oneventWrapped;
script.src=url;
setTimeout(function(){head.appendChild(script);
},0);
},abort:function(){if(this.__running){this.dispose("abort");
}},dispose:function(status){if(this._disposed){return;
}this._disposed=true;
var script=this.__elem;
script.onerror=script.onload=script.onreadystatechange=null;
var scriptParent=script.parentNode;

if(scriptParent){scriptParent.removeChild(script);
}delete this.__running;
if(this.__callback){if(qx.core.Variant.isSet("qx.client","mshtml|webkit")){var self=this;
setTimeout(qx.event.GlobalError.observeMethod(function(){self.__callback.call(self.__context,status);
delete self.__callback;
}),0);
}else{this.__callback.call(this.__context,status);
delete this.__callback;
}}},__onevent:qx.event.GlobalError.observeMethod(qx.core.Variant.select("qx.client",{"mshtml":function(e){var state=this.__elem.readyState;

if(state=="loaded"){this.dispose("success");
}else if(state=="complete"){this.dispose("success");
}else{return;
}},"opera":function(e){if(qx.Bootstrap.isString(e)||e.type==="error"){return this.dispose("fail");
}else if(e.type==="load"){return this.dispose("success");
}else{return;
}},"default":function(e){if(qx.Bootstrap.isString(e)||e.type==="error"){this.dispose("fail");
}else if(e.type==="load"){this.dispose("success");
}else if(e.type==="readystatechange"&&(e.target.readyState==="complete"||e.target.readyState==="loaded")){this.dispose("success");
}else{return;
}}}))}});
qx.Class.define("qx.bom.Flash",{statics:{_flashObjects:{},create:function(element,attributes,variables,params,win){if(!win){win=window;
}{qx.core.Assert.assertElement(element,"Invalid parameter 'element'.");
qx.core.Assert.assertMap(attributes,"Invalid parameter 'attributes'.");
qx.core.Assert.assertString(attributes.movie,"Invalid attribute 'movie'.");
qx.core.Assert.assertString(attributes.id,"Invalid attribute 'id'.");

if(!qx.dom.Element.isInDom(element,win)){qx.log.Logger.warn(this,"The parent DOM element isn't in DOM! The External Interface doesn't work in IE!");
}};

if(!attributes.width){attributes.width="100%";
}
if(!attributes.height){attributes.height="100%";
}params=params?qx.lang.Object.clone(params):{};

if(!params["movie"]){params["movie"]=attributes.movie;
}attributes["data"]=attributes.movie;
delete attributes.movie;
if(variables){for(var name in variables){if(typeof params.flashvars!="undefined"){params.flashvars+="&"+name+"="+variables[name];
}else{params.flashvars=name+"="+variables[name];
}}}var flash=this.__createSwf(element,attributes,params,win);
this._flashObjects[attributes.id]=flash;
return flash;
},destroy:qx.core.Variant.select("qx.client",{"mshtml":function(element,win){element=this.__getFlashObject(element);

if(element.readyState==4){this.__destroyObjectInIE(element);
}else{if(!win){win=window;
}qx.bom.Event.addNativeListener(win,"load",function(){qx.bom.Flash.__destroyObjectInIE(element);
});
}},"default":function(element,win){element=this.__getFlashObject(element);
element.parentNode.removeChild(element);
delete this._flashObjects[element.id];
}}),__getFlashObject:function(element){if(!element){throw new Error("DOM element is null or undefined!");
}
if(element.tagName.toLowerCase()!=="object"){element=element.firstChild;
}
if(!element||element.tagName.toLowerCase()!=="object"){throw new Error("DOM element has or is not a flash object!");
}return element;
},__destroyObjectInIE:qx.core.Variant.select("qx.client",{"mshtml":qx.event.GlobalError.observeMethod(function(element){for(var i in element){if(typeof element[i]=="function"){element[i]=null;
}}element.parentNode.removeChild(element);
delete this._flashObjects[element.id];
}),"default":null}),__fixOutOfMemoryError:qx.event.GlobalError.observeMethod(function(){for(var key in qx.bom.Flash._flashObjects){qx.bom.Flash.destroy(qx.bom.Flash._flashObjects[key]);
}window.__flash_unloadHandler=function(){};
window.__flash_savedUnloadHandler=function(){};
window.detachEvent("onbeforeunload",qx.bom.Flash.__fixOutOfMemoryError);
}),__createSwf:qx.core.Variant.select("qx.client",{"mshtml":function(element,attributes,params,win){params.movie=attributes.data;
delete attributes.data;
delete attributes.classid;
var paramsStr="";

for(name in params){paramsStr+='<param name="'+name+'" value="'+params[name]+'" />';
}if(attributes.id){element.innerHTML='<object id="'+attributes.id+'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">'+paramsStr+'</object>';
delete attributes.id;
}else{element.innerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">'+paramsStr+'</object>';
}for(var name in attributes){element.firstChild.setAttribute(name,attributes[name]);
}return element.firstChild;
},"default":function(element,attributes,params,win){delete attributes.classid;
delete params.movie;
var swf=qx.bom.Element.create("object",attributes,win);
swf.setAttribute("type","application/x-shockwave-flash");
var param;

for(var name in params){param=qx.bom.Element.create("param",{},win);
param.setAttribute("name",name);
param.setAttribute("value",params[name]);
swf.appendChild(param);
}element.appendChild(swf);
return swf;
}})},defer:function(statics){if(qx.core.Variant.isSet("qx.client","mshtml")){qx.bom.Event.addNativeListener(window,"beforeunload",statics.__fixOutOfMemoryError);
}}});
qx.Bootstrap.define("qx.bom.client.Version",{statics:{NAME:"unknown",TITLE:"unknown 0.0",VERSION:0.0},defer:function(statics){var agent=navigator.userAgent;
var name,version;
if(/Presto[\s\/]([0-9]+\.[0-9\.]+)/.test(agent)){name="presto";
version=parseFloat(RegExp.$1,10);

if(version>=2.4){version=4;
}else if(version>=2.2){version=3;
}else if(version>=2.1){version=2;
}else{version=1;
}}else if(/Opera[\s\/]([0-9]+)\.([0-9])/.test(agent)){name="presto";
version=parseFloat(RegExp.$1+"."+RegExp.$2,10);

if(version>=9.7){version=3;
}else if(version>=9.5){version=2;
}else{version=1;
}}else if(/AppleWebKit\/([^ ]+)/.test(agent)){name="webkit";
version=RegExp.$1;
var invalidCharacter=RegExp("[^\\.0-9]").exec(version);

if(invalidCharacter){version=version.slice(0,invalidCharacter.index);
}version=parseFloat(version,10);

if(version>=526){version=4;
}else if(version>=525){version=3;
}else if(version>=522){version=2;
}else{version=1;
}}else if(/rv\:([^\);]+)(\)|;)/.test(agent)){name="gecko";
version=RegExp.$1;

if(version>="1.9.2"){version=6;
}else if(version>="1.9.1"){version=5;
}else if(version>="1.9"){version=4;
}else if(version>="1.8.1"){version=3;
}else if(version>="1.8"){version=2;
}else if(version>="1.7"){version=1;
}else{version=0;
}}else if(/MSIE\s+([^\);]+)(\)|;)/.test(agent)){name="trident";
version=parseInt(RegExp.$1,10);
version=Math.max(version-4,0);
}else{return ;
}statics.NAME=name;
statics.VERSION=version;
statics.TITLE=name+" "+version;
}});
qx.Class.define("qx.bom.String",{statics:{TO_CHARCODE:{"quot":34,"amp":38,"lt":60,"gt":62,"nbsp":160,"iexcl":161,"cent":162,"pound":163,"curren":164,"yen":165,"brvbar":166,"sect":167,"uml":168,"copy":169,"ordf":170,"laquo":171,"not":172,"shy":173,"reg":174,"macr":175,"deg":176,"plusmn":177,"sup2":178,"sup3":179,"acute":180,"micro":181,"para":182,"middot":183,"cedil":184,"sup1":185,"ordm":186,"raquo":187,"frac14":188,"frac12":189,"frac34":190,"iquest":191,"Agrave":192,"Aacute":193,"Acirc":194,"Atilde":195,"Auml":196,"Aring":197,"AElig":198,"Ccedil":199,"Egrave":200,"Eacute":201,"Ecirc":202,"Euml":203,"Igrave":204,"Iacute":205,"Icirc":206,"Iuml":207,"ETH":208,"Ntilde":209,"Ograve":210,"Oacute":211,"Ocirc":212,"Otilde":213,"Ouml":214,"times":215,"Oslash":216,"Ugrave":217,"Uacute":218,"Ucirc":219,"Uuml":220,"Yacute":221,"THORN":222,"szlig":223,"agrave":224,"aacute":225,"acirc":226,"atilde":227,"auml":228,"aring":229,"aelig":230,"ccedil":231,"egrave":232,"eacute":233,"ecirc":234,"euml":235,"igrave":236,"iacute":237,"icirc":238,"iuml":239,"eth":240,"ntilde":241,"ograve":242,"oacute":243,"ocirc":244,"otilde":245,"ouml":246,"divide":247,"oslash":248,"ugrave":249,"uacute":250,"ucirc":251,"uuml":252,"yacute":253,"thorn":254,"yuml":255,"fnof":402,"Alpha":913,"Beta":914,"Gamma":915,"Delta":916,"Epsilon":917,"Zeta":918,"Eta":919,"Theta":920,"Iota":921,"Kappa":922,"Lambda":923,"Mu":924,"Nu":925,"Xi":926,"Omicron":927,"Pi":928,"Rho":929,"Sigma":931,"Tau":932,"Upsilon":933,"Phi":934,"Chi":935,"Psi":936,"Omega":937,"alpha":945,"beta":946,"gamma":947,"delta":948,"epsilon":949,"zeta":950,"eta":951,"theta":952,"iota":953,"kappa":954,"lambda":955,"mu":956,"nu":957,"xi":958,"omicron":959,"pi":960,"rho":961,"sigmaf":962,"sigma":963,"tau":964,"upsilon":965,"phi":966,"chi":967,"psi":968,"omega":969,"thetasym":977,"upsih":978,"piv":982,"bull":8226,"hellip":8230,"prime":8242,"Prime":8243,"oline":8254,"frasl":8260,"weierp":8472,"image":8465,"real":8476,"trade":8482,"alefsym":8501,"larr":8592,"uarr":8593,"rarr":8594,"darr":8595,"harr":8596,"crarr":8629,"lArr":8656,"uArr":8657,"rArr":8658,"dArr":8659,"hArr":8660,"forall":8704,"part":8706,"exist":8707,"empty":8709,"nabla":8711,"isin":8712,"notin":8713,"ni":8715,"prod":8719,"sum":8721,"minus":8722,"lowast":8727,"radic":8730,"prop":8733,"infin":8734,"ang":8736,"and":8743,"or":8744,"cap":8745,"cup":8746,"int":8747,"there4":8756,"sim":8764,"cong":8773,"asymp":8776,"ne":8800,"equiv":8801,"le":8804,"ge":8805,"sub":8834,"sup":8835,"sube":8838,"supe":8839,"oplus":8853,"otimes":8855,"perp":8869,"sdot":8901,"lceil":8968,"rceil":8969,"lfloor":8970,"rfloor":8971,"lang":9001,"rang":9002,"loz":9674,"spades":9824,"clubs":9827,"hearts":9829,"diams":9830,"OElig":338,"oelig":339,"Scaron":352,"scaron":353,"Yuml":376,"circ":710,"tilde":732,"ensp":8194,"emsp":8195,"thinsp":8201,"zwnj":8204,"zwj":8205,"lrm":8206,"rlm":8207,"ndash":8211,"mdash":8212,"lsquo":8216,"rsquo":8217,"sbquo":8218,"ldquo":8220,"rdquo":8221,"bdquo":8222,"dagger":8224,"Dagger":8225,"permil":8240,"lsaquo":8249,"rsaquo":8250,"euro":8364},escape:function(str){return qx.util.StringEscape.escape(str,qx.bom.String.FROM_CHARCODE);
},unescape:function(str){return qx.util.StringEscape.unescape(str,qx.bom.String.TO_CHARCODE);
},fromText:function(str){return qx.bom.String.escape(str).replace(/(  |\n)/g,function(chr){var map={"  ":" &nbsp;","\n":"<br>"};
return map[chr]||chr;
});
},toText:function(str){return qx.bom.String.unescape(str.replace(/\s+|<([^>])+>/gi,function(chr){if(chr.indexOf("<br")===0){return "\n";
}else if(chr.length>0&&chr.replace(/^\s*/,"").replace(/\s*$/,"")==""){return " ";
}else{return "";
}}));
}},defer:function(statics,members,properties){statics.FROM_CHARCODE=qx.lang.Object.invert(statics.TO_CHARCODE);
}});
qx.Class.define("qx.util.StringEscape",{statics:{escape:function(str,charCodeToEntities){var entity,result="";

for(var i=0,l=str.length;i<l;i++){var chr=str.charAt(i);
var code=chr.charCodeAt(0);

if(charCodeToEntities[code]){entity="&"+charCodeToEntities[code]+";";
}else{if(code>0x7F){entity="&#"+code+";";
}else{entity=chr;
}}result+=entity;
}return result;
},unescape:function(str,entitiesToCharCode){return str.replace(/&[#\w]+;/gi,function(entity){var chr=entity;
var entity=entity.substring(1,entity.length-1);
var code=entitiesToCharCode[entity];

if(code){chr=String.fromCharCode(code);
}else{if(entity.charAt(0)=='#'){if(entity.charAt(1).toUpperCase()=='X'){code=entity.substring(2);
if(code.match(/^[0-9A-Fa-f]+$/gi)){chr=String.fromCharCode(parseInt(code,16));
}}else{code=entity.substring(1);
if(code.match(/^\d+$/gi)){chr=String.fromCharCode(parseInt(code,10));
}}}}return chr;
});
}}});
qx.Class.define("qx.bom.client.Multimedia",{statics:{__db:{quicktime:{plugin:"QuickTime",control:"QuickTimeCheckObject.QuickTimeCheck.1"},wmv:{plugin:"Windows Media",control:"WMPlayer.OCX.7"},divx:{plugin:"DivX Web Player",control:"npdivx.DivXBrowserPlugin.1"},silverlight:{plugin:"Silverlight",control:"AgControl.AgControl"}},has:function(id,version){if(this.__db[id]){var plugin=this.__db[id];
if(plugin.installed){if(version==null||(plugin.version>=parseFloat(version))){return true;
}}}return false;
},__init:qx.core.Variant.select("qx.client",{"mshtml":function(){var control=window.ActiveXObject;

if(!control){return;
}var db=this.__db;
var entry,obj;

for(var id in db){entry=db[id];

try{obj=new ActiveXObject(entry.control);
}catch(ex){continue;
}switch(id){case "quicktime":entry.version=0;
break;
case "wmv":entry.version=obj.versionInfo;
break;
case "divx":entry.version=0;
break;
case "silverlight":try{entry.version=obj.version===undefined?0:obj.version;
}catch(ex){try{entry.version=obj.settings.version===undefined?0:obj.settings.version;
}catch(ex){entry.version=0;
}}break;
}entry.installed=true;
}},"default":function(){var plugins=navigator.plugins;

if(!plugins){return;
}var db=this.__db;
var verreg=/([0-9]\.[0-9])/g;
var plugin,name,entry;

for(var i=0,il=plugins.length;i<il;i++){plugin=plugins[i];
name=plugin.name;

for(var id in db){entry=db[id];

if(!entry.installed&&name.indexOf(entry.plugin)!==-1){entry.installed=true;

if(verreg.test(plugin.name)||verreg.test(plugin.description)){entry.version=parseFloat(RegExp.$1,10);
}else{entry.version=0;
}break;
}}}}})},defer:function(statics){statics.__init();
}});
qx.Class.define("qx.data.Conversion",{statics:{toString:function(value){return value+"";
},TOSTRINGOPTIONS:{converter:null},toNumber:function(value){return parseFloat(value);
},TONUMBEROPTIONS:{converter:null},toBoolean:function(value){return !!value;
},TOBOOLEANOPTIONS:{converter:null}},defer:function(){qx.data.Conversion.TOSTRINGOPTIONS.converter=qx.data.Conversion.toString;
qx.data.Conversion.TONUMBEROPTIONS.converter=qx.data.Conversion.toNumber;
qx.data.Conversion.TOBOOLEANOPTIONS.converter=qx.data.Conversion.toBoolean;
}});
qx.Interface.define("qx.data.marshal.IMarshaler",{members:{toClass:function(data,includeBubbleEvents){},toModel:function(data){}}});
qx.Class.define("qx.data.marshal.Json",{extend:qx.core.Object,implement:[qx.data.marshal.IMarshaler],construct:function(delegate){this.base(arguments);
this.__delegate=delegate;
},statics:{__instance:null,createModel:function(data,includeBubbleEvents){if(this.__instance===null){this.__instance=new qx.data.marshal.Json();
}this.__instance.toClass(data,includeBubbleEvents);
return this.__instance.toModel(data);
}},members:{__delegate:null,__jsonToHash:function(data){var properties=[];

for(var key in data){properties.push(key);
}return properties.sort().join('"');
},toClass:function(data,includeBubbleEvents){if(qx.lang.Type.isNumber(data)||qx.lang.Type.isString(data)||qx.lang.Type.isBoolean(data)||data==null){return;
}if(qx.lang.Type.isArray(data)){for(var i=0;i<data.length;i++){this.toClass(data[i],includeBubbleEvents);
}return ;
}var hash=this.__jsonToHash(data);
if(this.__delegate&&this.__delegate.getModelClass&&this.__delegate.getModelClass(hash)!=null){return;
}for(var key in data){this.toClass(data[key],includeBubbleEvents);
}if(qx.Class.isDefined("qx.data.model."+hash)){return;
}var properties={};

for(var key in data){key=key.replace(/-/g,"");
properties[key]={};
properties[key].nullable=true;
properties[key].event="change"+qx.lang.String.firstUp(key);

if(includeBubbleEvents){properties[key].apply="_applyEventPropagation";
}}if(this.__delegate&&this.__delegate.getModelSuperClass){var superClass=this.__delegate.getModelSuperClass(hash)||qx.core.Object;
}else{var superClass=qx.core.Object;
}var mixins=[];

if(this.__delegate&&this.__delegate.getModelMixins){var delegateMixins=this.__delegate.getModelMixins(hash);
if(!qx.lang.Type.isArray(delegateMixins)){if(delegateMixins!=null){mixins=[delegateMixins];
}}}if(includeBubbleEvents){mixins.push(qx.data.marshal.MEventBubbling);
}var newClass={extend:superClass,include:mixins,properties:properties};
qx.Class.define("qx.data.model."+hash,newClass);
},__createInstance:function(hash){var delegateClass;
if(this.__delegate&&this.__delegate.getModelClass){delegateClass=this.__delegate.getModelClass(hash);
}
if(delegateClass!=null){return (new delegateClass());
}else{var clazz=qx.Class.getByName("qx.data.model."+hash);
return (new clazz());
}},toModel:function(data){if(qx.lang.Type.isNumber(data)||qx.lang.Type.isString(data)||qx.lang.Type.isBoolean(data)||qx.lang.Type.isDate(data)||data==null){return data;
}else if(qx.lang.Type.isArray(data)){var array=new qx.data.Array();

for(var i=0;i<data.length;i++){array.push(this.toModel(data[i]));
}return array;
}else if(qx.lang.Type.isObject(data)){var hash=this.__jsonToHash(data);
var model=this.__createInstance(hash);
for(var key in data){var propertyName=key.replace(/-/g,"");
model["set"+qx.lang.String.firstUp(propertyName)](this.toModel(data[key]));
}return model;
}throw new Error("Unsupported type!");
}},destruct:function(){this.__delegate=null;
}});
qx.Mixin.define("qx.data.marshal.MEventBubbling",{events:{"changeBubble":"qx.event.type.Data"},members:{_applyEventPropagation:function(value,old,name){this.fireDataEvent("changeBubble",{value:value,name:name,old:old});
this._registerEventChaining(value,old,name);
},_registerEventChaining:function(value,old,name){if((value instanceof qx.core.Object)&&qx.Class.hasMixin(value.constructor,qx.data.marshal.MEventBubbling)){var listener=qx.lang.Function.bind(this.__changePropertyListener,this,name);
var id=value.addListener("changeBubble",listener,this);
value.setUserData("idBubble",id);
}if(old!=null&&old.getUserData&&old.getUserData("idBubble")!=null){old.removeListenerById(old.getUserData("idBubble"));
}},__changePropertyListener:function(name,e){var data=e.getData();
var value=data.value;
var old=data.old;
if(qx.Class.hasInterface(e.getTarget().constructor,qx.data.IListData)){if(data.name.indexOf){var dotIndex=data.name.indexOf(".")!=-1?data.name.indexOf("."):data.name.length;
var bracketIndex=data.name.indexOf("[")!=-1?data.name.indexOf("["):data.name.length;

if(dotIndex<bracketIndex){var index=data.name.substring(0,dotIndex);
var rest=data.name.substring(dotIndex+1,data.name.length);

if(rest[0]!="["){rest="."+rest;
}var newName=name+"["+index+"]"+rest;
}else if(bracketIndex<dotIndex){var index=data.name.substring(0,bracketIndex);
var rest=data.name.substring(bracketIndex,data.name.length);
var newName=name+"["+index+"]"+rest;
}else{var newName=name+"["+data.name+"]";
}}else{var newName=name+"["+data.name+"]";
}}else{var newName=name+"."+data.name;
}this.fireDataEvent("changeBubble",{value:value,name:newName,old:old});
}}});
qx.Class.define("qx.data.Array",{extend:qx.core.Object,include:qx.data.marshal.MEventBubbling,implement:[qx.data.IListData],construct:function(param){this.base(arguments);
if(param==undefined){this.__array=[];
}else if(arguments.length>1){this.__array=[];

for(var i=0;i<arguments.length;i++){this.__array.push(arguments[i]);
}}else if(typeof param=="number"){this.__array=new Array(param);
}else if(param instanceof Array){this.__array=qx.lang.Array.clone(param);
}else{this.__array=[];
throw new Error("Type of the parameter not supported!");
}for(var i=0;i<this.__array.length;i++){this._applyEventPropagation(this.__array[i],null,i);
}this.__updateLength();
},events:{"change":"qx.event.type.Data","changeLength":"qx.event.type.Event"},members:{__array:null,concat:function(array){if(array){var newArray=this.__array.concat(array);
}else{var newArray=this.__array.concat();
}return new qx.data.Array(newArray);
},join:function(connector){return this.__array.join(connector);
},pop:function(){var item=this.__array.pop();
this.__updateLength();
this._applyEventPropagation(null,item,this.length-1);
this.fireDataEvent("change",{start:this.length-1,end:this.length-1,type:"remove",items:[item]},null);
return item;
},push:function(varargs){for(var i=0;i<arguments.length;i++){this.__array.push(arguments[i]);
this.__updateLength();
this._applyEventPropagation(arguments[i],null,this.length-1);
this.fireDataEvent("change",{start:this.length-1,end:this.length-1,type:"add",items:[arguments[i]]},null);
}return this.length;
},reverse:function(){this.__array.reverse();
this.fireDataEvent("change",{start:0,end:this.length-1,type:"order",items:null},null);
},shift:function(){var item=this.__array.shift();
this.__updateLength();
this._applyEventPropagation(null,item);
this.fireDataEvent("change",{start:0,end:this.length-1,type:"remove",items:[item]},null);
return item;
},slice:function(from,to){return new qx.data.Array(this.__array.slice(from,to));
},splice:function(startIndex,amount,varargs){var oldLength=this.__array.length;
var returnArray=this.__array.splice.apply(this.__array,arguments);
if(this.__array.length!=oldLength){this.__updateLength();
}var removed=amount>0;
var added=arguments.length>2;
var items=null;

if(removed||added){if(this.__array.length>oldLength){var type="add";
}else if(this.__array.length<oldLength){var type="remove";
items=returnArray;
}else{var type="order";
}this.fireDataEvent("change",{start:startIndex,end:this.length-1,type:type,items:items},null);
}for(var i=2;i<arguments.length;i++){this._registerEventChaining(arguments[i],null,startIndex+i);
}this.fireDataEvent("changeBubble",{value:this,name:"?",old:returnArray});
for(var i=0;i<returnArray.length;i++){this._applyEventPropagation(null,returnArray[i],i);
}return (new qx.data.Array(returnArray));
},sort:function(func){this.__array.sort.apply(this.__array,arguments);
this.fireDataEvent("change",{start:0,end:this.length-1,type:"order",items:null},null);
},unshift:function(varargs){for(var i=arguments.length-1;i>=0;i--){this.__array.unshift(arguments[i]);
this.__updateLength();
this._applyEventPropagation(arguments[i],null,0);
this.fireDataEvent("change",{start:0,end:this.length-1,type:"add",items:[arguments[i]]},null);
}return this.length;
},toArray:function(){return this.__array;
},getItem:function(index){return this.__array[index];
},setItem:function(index,item){var oldItem=this.__array[index];
this.__array[index]=item;
this._applyEventPropagation(item,oldItem,index);
if(this.length!=this.__array.length){this.__updateLength();
}this.fireDataEvent("change",{start:index,end:index,type:"add",items:[item]},null);
},getLength:function(){return this.length;
},indexOf:function(item){return this.__array.indexOf(item);
},toString:function(){if(this.__array!=null){return this.__array.toString();
}return "";
},contains:function(item){return this.__array.indexOf(item)!==-1;
},copy:function(){return this.concat();
},insertAt:function(index,item){this.splice(index,0,item);
},insertBefore:function(before,item){var index=this.indexOf(before);

if(index==-1){this.push(item);
}else{this.splice(index,0,item);
}},insertAfter:function(after,item){var index=this.indexOf(after);

if(index==-1||index==(this.length-1)){this.push(item);
}else{this.splice(index+1,0,item);
}},removeAt:function(index){return this.splice(index,1)[0];
},removeAll:function(){for(var i=0;i<this.__array.length;i++){this._applyEventPropagation(null,this.__array[i],i);
}var oldLength=this.getLength();
var items=this.__array.concat();
this.__array.length=0;
this.__updateLength();
this.fireDataEvent("change",{start:0,end:oldLength-1,type:"remove",items:items},null);
},append:function(array){{qx.core.Assert.assertArray(array,"The parameter must be an array.");
};
for(var i=0;i<array.length;i++){this._applyEventPropagation(array[i],null,this.__array.length+i);
}Array.prototype.push.apply(this.__array,array);
this.__updateLength();
},remove:function(item){var index=this.indexOf(item);

if(index!=-1){this.splice(index,1);
return item;
}},equals:function(array){if(this.length!==array.length){return false;
}
for(var i=0;i<this.length;i++){if(this.getItem(i)!==array.getItem(i)){return false;
}}return true;
},sum:function(){var result=0;

for(var i=0;i<this.length;i++){result+=this.getItem(i);
}return result;
},max:function(){var result=this.getItem(0);

for(var i=1;i<this.length;i++){if(this.getItem(i)>result){result=this.getItem(i);
}}return result===undefined?null:result;
},min:function(){var result=this.getItem(0);

for(var i=1;i<this.length;i++){if(this.getItem(i)<result){result=this.getItem(i);
}}return result===undefined?null:result;
},forEach:function(callback,context){for(var i=0;i<this.__array.length;i++){callback.call(context,this.__array[i]);
}},__updateLength:function(){this.length=this.__array.length;
this.fireEvent("changeLength",qx.event.type.Event);
}},destruct:function(){for(var i=0;i<this.__array.length;i++){this._applyEventPropagation(null,this.__array[i],i);
}this.__array=null;
}});
qx.Class.define("qx.data.store.Json",{extend:qx.core.Object,construct:function(url,delegate){this.base(arguments);
this._marshaler=new qx.data.marshal.Json(delegate);
this._delegate=delegate;

if(url!=null){this.setUrl(url);
}},events:{"loaded":"qx.event.type.Data"},properties:{model:{nullable:true,event:"changeModel"},state:{check:["configured","queued","sending","receiving","completed","aborted","timeout","failed"],init:"configured",event:"changeState"},url:{check:"String",apply:"_applyUrl",event:"changeUrl"}},members:{__request:null,_delegate:null,_applyUrl:function(value,old){if(value!=null){this._createRequest(value);
}},_createRequest:function(url){this.__request=new qx.io.remote.Request(url,"GET","application/json");
var del=this._delegate;

if(del&&qx.lang.Type.isFunction(del.configureRequest)){this._delegate.configureRequest(this.__request);
}this.__request.addListener("completed",this.__requestCompleteHandler,this);
this.__request.addListener("changeState",function(ev){this.setState(ev.getData());
},this);
this.__request.send();
},__requestCompleteHandler:function(ev){var data=ev.getContent();
var del=this._delegate;

if(del&&qx.lang.Type.isFunction(del.manipulateData)){data=this._delegate.manipulateData(data);
}this._marshaler.toClass(data,true);
this.setModel(this._marshaler.toModel(data));
this.fireDataEvent("loaded",this.getModel());
},reload:function(){var url=this.getUrl();

if(url!=null){this._createRequest(url);
}}},destruct:function(){this._disposeObjects("_marshaler","__request");
this._delegate=null;
}});
qx.Class.define("qx.data.store.Jsonp",{extend:qx.data.store.Json,construct:function(url,delegate,callbackParam){if(callbackParam!=undefined){this.setCallbackParam(callbackParam);
}this.base(arguments,url,delegate);
},properties:{callbackParam:{check:"String",nullable:false}},members:{__loader:null,_createRequest:function(url){if(this.__loader){this.__loader.dispose();
}this.__loader=new qx.io.ScriptLoader();
var del=this._delegate;

if(del&&qx.lang.Type.isFunction(del.configureRequest)){this._delegate.configureRequest(this.__loader);
}var prefix=url.indexOf("?")==-1?"?":"&";
url+=prefix+this.getCallbackParam()+"=";
var id=parseInt(this.toHashCode());
qx.data.store.Jsonp[id]=this;
url+='qx.data.store.Jsonp['+id+'].callback';
this.__loader.load(url,function(data){delete this[id];
},this);
},callback:function(data){if(this.isDisposed()){return;
}this.__loaded(data);
},__loaded:function(data){if(data==undefined){this.setState("failed");
return;
}var del=this._delegate;

if(del&&qx.lang.Type.isFunction(del.manipulateData)){data=this._delegate.manipulateData(data);
}this._marshaler.toClass(data);
this.setModel(this._marshaler.toModel(data));
this.fireDataEvent("loaded",this.getModel());
}},destruct:function(){if(this.__loader){this.__loader.dispose();
}this.__loader=null;
}});
qx.Class.define("qx.io.remote.Request",{extend:qx.core.Object,construct:function(vUrl,vMethod,vResponseType){this.base(arguments);
this.__requestHeaders={};
this.__urlParameters={};
this.__dataParameters={};
this.__formFields={};

if(vUrl!==undefined){this.setUrl(vUrl);
}
if(vMethod!==undefined){this.setMethod(vMethod);
}
if(vResponseType!==undefined){this.setResponseType(vResponseType);
}this.setProhibitCaching(true);
this.__seqNum=++qx.io.remote.Request.__seqNum;
},events:{"created":"qx.event.type.Event","configured":"qx.event.type.Event","sending":"qx.event.type.Event","receiving":"qx.event.type.Event","completed":"qx.io.remote.Response","aborted":"qx.event.type.Event","failed":"qx.io.remote.Response","timeout":"qx.io.remote.Response"},statics:{__seqNum:0},properties:{url:{check:"String",init:""},method:{check:["GET","POST","PUT","HEAD","DELETE"],apply:"_applyMethod",init:"GET"},asynchronous:{check:"Boolean",init:true},data:{check:"String",nullable:true},username:{check:"String",nullable:true},password:{check:"String",nullable:true},state:{check:["configured","queued","sending","receiving","completed","aborted","timeout","failed"],init:"configured",apply:"_applyState",event:"changeState"},responseType:{check:["text/plain","text/javascript","application/json","application/xml","text/html"],init:"text/plain",apply:"_applyResponseType"},timeout:{check:"Integer",nullable:true},prohibitCaching:{check:function(v){return typeof v=="boolean"||v==="no-url-params-on-post";
},init:true,apply:"_applyProhibitCaching"},crossDomain:{check:"Boolean",init:false},fileUpload:{check:"Boolean",init:false},transport:{check:"qx.io.remote.Exchange",nullable:true},useBasicHttpAuth:{check:"Boolean",init:false}},members:{__requestHeaders:null,__urlParameters:null,__dataParameters:null,__formFields:null,__seqNum:null,send:function(){qx.io.remote.RequestQueue.getInstance().add(this);
},abort:function(){qx.io.remote.RequestQueue.getInstance().abort(this);
},reset:function(){switch(this.getState()){case "sending":case "receiving":this.error("Aborting already sent request!");
case "queued":this.abort();
break;
}},isConfigured:function(){return this.getState()==="configured";
},isQueued:function(){return this.getState()==="queued";
},isSending:function(){return this.getState()==="sending";
},isReceiving:function(){return this.getState()==="receiving";
},isCompleted:function(){return this.getState()==="completed";
},isAborted:function(){return this.getState()==="aborted";
},isTimeout:function(){return this.getState()==="timeout";
},isFailed:function(){return this.getState()==="failed";
},__forwardEvent:function(e){var clonedEvent=e.clone();
clonedEvent.setTarget(this);
this.dispatchEvent(clonedEvent);
},_onqueued:function(e){this.setState("queued");
this.__forwardEvent(e);
},_onsending:function(e){this.setState("sending");
this.__forwardEvent(e);
},_onreceiving:function(e){this.setState("receiving");
this.__forwardEvent(e);
},_oncompleted:function(e){this.setState("completed");
this.__forwardEvent(e);
this.dispose();
},_onaborted:function(e){this.setState("aborted");
this.__forwardEvent(e);
this.dispose();
},_ontimeout:function(e){this.setState("timeout");
this.__forwardEvent(e);
this.dispose();
},_onfailed:function(e){this.setState("failed");
this.__forwardEvent(e);
this.dispose();
},_applyState:function(value,old){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("State: "+value);
}};
},_applyProhibitCaching:function(value,old){if(!value){this.removeParameter("nocache");
this.removeRequestHeader("Pragma");
this.removeRequestHeader("Cache-Control");
return;
}if(value!=="no-url-params-on-post"||this.getMethod()!="POST"){this.setParameter("nocache",new Date().valueOf());
}else{this.removeParameter("nocache");
}this.setRequestHeader("Pragma","no-cache");
this.setRequestHeader("Cache-Control","no-cache");
},_applyMethod:function(value,old){if(value==="POST"){this.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
}else{this.removeRequestHeader("Content-Type");
}var prohibitCaching=this.getProhibitCaching();
this._applyProhibitCaching(prohibitCaching,prohibitCaching);
},_applyResponseType:function(value,old){this.setRequestHeader("X-Qooxdoo-Response-Type",value);
},setRequestHeader:function(vId,vValue){this.__requestHeaders[vId]=vValue;
},removeRequestHeader:function(vId){delete this.__requestHeaders[vId];
},getRequestHeader:function(vId){return this.__requestHeaders[vId]||null;
},getRequestHeaders:function(){return this.__requestHeaders;
},setParameter:function(vId,vValue,bAsData){if(bAsData){this.__dataParameters[vId]=vValue;
}else{this.__urlParameters[vId]=vValue;
}},removeParameter:function(vId,bFromData){if(bFromData){delete this.__dataParameters[vId];
}else{delete this.__urlParameters[vId];
}},getParameter:function(vId,bFromData){if(bFromData){return this.__dataParameters[vId]||null;
}else{return this.__urlParameters[vId]||null;
}},getParameters:function(bFromData){return (bFromData?this.__dataParameters:this.__urlParameters);
},setFormField:function(vId,vValue){this.__formFields[vId]=vValue;
},removeFormField:function(vId){delete this.__formFields[vId];
},getFormField:function(vId){return this.__formFields[vId]||null;
},getFormFields:function(){return this.__formFields;
},getSequenceNumber:function(){return this.__seqNum;
}},destruct:function(){this.setTransport(null);
this.__requestHeaders=this.__urlParameters=this.__dataParameters=this.__formFields=null;
}});
qx.Class.define("qx.io.remote.RequestQueue",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__queue=[];
this.__active=[];
this.__totalRequests=0;
this.__timer=new qx.event.Timer(500);
this.__timer.addListener("interval",this._oninterval,this);
},properties:{enabled:{init:true,check:"Boolean",apply:"_applyEnabled"},maxTotalRequests:{check:"Integer",nullable:true},maxConcurrentRequests:{check:"Integer",init:qx.bom.client.Transport.getMaxConcurrentRequestCount()},defaultTimeout:{check:"Integer",init:5000}},members:{__queue:null,__active:null,__totalRequests:null,__timer:null,getRequestQueue:function(){return this.__queue;
},getActiveQueue:function(){return this.__active;
},_debug:function(){{if(qx.core.Setting.get("qx.ioRemoteDebug")){var vText=this.__active.length+"/"+(this.__queue.length+this.__active.length);
this.debug("Progress: "+vText);
window.status="Request-Queue Progress: "+vText;
}};
},_check:function(){this._debug();
if(this.__active.length==0&&this.__queue.length==0){this.__timer.stop();
}if(!this.getEnabled()){return;
}if(this.__queue.length==0||(this.__queue[0].isAsynchronous()&&this.__active.length>=this.getMaxConcurrentRequests())){return;
}if(this.getMaxTotalRequests()!=null&&this.__totalRequests>=this.getMaxTotalRequests()){return;
}var vRequest=this.__queue.shift();
var vTransport=new qx.io.remote.Exchange(vRequest);
this.__totalRequests++;
this.__active.push(vTransport);
this._debug();
vTransport.addListener("sending",this._onsending,this);
vTransport.addListener("receiving",this._onreceiving,this);
vTransport.addListener("completed",this._oncompleted,this);
vTransport.addListener("aborted",this._oncompleted,this);
vTransport.addListener("timeout",this._oncompleted,this);
vTransport.addListener("failed",this._oncompleted,this);
vTransport._start=(new Date).valueOf();
vTransport.send();
if(this.__queue.length>0){this._check();
}},_remove:function(vTransport){qx.lang.Array.remove(this.__active,vTransport);
vTransport.dispose();
this._check();
},__activeCount:0,_onsending:function(e){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.__activeCount++;
e.getTarget()._counted=true;
this.debug("ActiveCount: "+this.__activeCount);
}};
e.getTarget().getRequest()._onsending(e);
},_onreceiving:function(e){e.getTarget().getRequest()._onreceiving(e);
},_oncompleted:function(e){{if(qx.core.Setting.get("qx.ioRemoteDebug")){if(e.getTarget()._counted){this.__activeCount--;
this.debug("ActiveCount: "+this.__activeCount);
}}};
var request=e.getTarget().getRequest();
var requestHandler="_on"+e.getType();
try{if(request[requestHandler]){request[requestHandler](e);
}}catch(ex){var stacktrace=qx.dev.StackTrace.getStackTraceFromError(ex);
this.error("Request "+request+" handler "+requestHandler+" threw an error: "+ex+"\nStack Trace:\n"+stacktrace);
try{if(request["_onaborted"]){var event=qx.event.Registration.createEvent("aborted",qx.event.type.Event);
request["_onaborted"](event);
}}catch(ex){}}finally{this._remove(e.getTarget());
}},_oninterval:function(e){var vActive=this.__active;

if(vActive.length==0){this.__timer.stop();
return;
}var vCurrent=(new Date).valueOf();
var vTransport;
var vRequest;
var vDefaultTimeout=this.getDefaultTimeout();
var vTimeout;
var vTime;

for(var i=vActive.length-1;i>=0;i--){vTransport=vActive[i];
vRequest=vTransport.getRequest();

if(vRequest.isAsynchronous()){vTimeout=vRequest.getTimeout();
if(vTimeout==0){continue;
}
if(vTimeout==null){vTimeout=vDefaultTimeout;
}vTime=vCurrent-vTransport._start;

if(vTime>vTimeout){this.warn("Timeout: transport "+vTransport.toHashCode());
this.warn(vTime+"ms > "+vTimeout+"ms");
vTransport.timeout();
}}}},_applyEnabled:function(value,old){if(value){this._check();
}this.__timer.setEnabled(value);
},add:function(vRequest){vRequest.setState("queued");

if(vRequest.isAsynchronous()){this.__queue.push(vRequest);
}else{this.__queue.unshift(vRequest);
}this._check();

if(this.getEnabled()){this.__timer.start();
}},abort:function(vRequest){var vTransport=vRequest.getTransport();

if(vTransport){vTransport.abort();
}else if(qx.lang.Array.contains(this.__queue,vRequest)){qx.lang.Array.remove(this.__queue,vRequest);
}}},destruct:function(){this._disposeArray("__active");
this._disposeObjects("__timer");
this.__queue=null;
}});
qx.Class.define("qx.io.remote.Exchange",{extend:qx.core.Object,construct:function(vRequest){this.base(arguments);
this.setRequest(vRequest);
vRequest.setTransport(this);
},events:{"sending":"qx.event.type.Event","receiving":"qx.event.type.Event","completed":"qx.io.remote.Response","aborted":"qx.event.type.Event","failed":"qx.io.remote.Response","timeout":"qx.io.remote.Response"},statics:{typesOrder:["qx.io.remote.transport.XmlHttp","qx.io.remote.transport.Iframe","qx.io.remote.transport.Script"],typesReady:false,typesAvailable:{},typesSupported:{},registerType:function(vClass,vId){qx.io.remote.Exchange.typesAvailable[vId]=vClass;
},initTypes:function(){if(qx.io.remote.Exchange.typesReady){return;
}
for(var vId in qx.io.remote.Exchange.typesAvailable){var vTransporterImpl=qx.io.remote.Exchange.typesAvailable[vId];

if(vTransporterImpl.isSupported()){qx.io.remote.Exchange.typesSupported[vId]=vTransporterImpl;
}}qx.io.remote.Exchange.typesReady=true;

if(qx.lang.Object.isEmpty(qx.io.remote.Exchange.typesSupported)){throw new Error("No supported transport types were found!");
}},canHandle:function(vImpl,vNeeds,vResponseType){if(!qx.lang.Array.contains(vImpl.handles.responseTypes,vResponseType)){return false;
}
for(var vKey in vNeeds){if(!vImpl.handles[vKey]){return false;
}}return true;
},_nativeMap:{0:"created",1:"configured",2:"sending",3:"receiving",4:"completed"},wasSuccessful:function(vStatusCode,vReadyState,vIsLocal){if(vIsLocal){switch(vStatusCode){case null:case 0:return true;
case -1:return vReadyState<4;
default:return typeof vStatusCode==="undefined";
}}else{switch(vStatusCode){case -1:{if(qx.core.Setting.get("qx.ioRemoteDebug")&&vReadyState>3){qx.log.Logger.debug(this,"Failed with statuscode: -1 at readyState "+vReadyState);
}};
return vReadyState<4;
case 200:case 304:return true;
case 201:case 202:case 203:case 204:case 205:return true;
case 206:{if(qx.core.Setting.get("qx.ioRemoteDebug")&&vReadyState===4){qx.log.Logger.debug(this,"Failed with statuscode: 206 (Partial content while being complete!)");
}};
return vReadyState!==4;
case 300:case 301:case 302:case 303:case 305:case 400:case 401:case 402:case 403:case 404:case 405:case 406:case 407:case 408:case 409:case 410:case 411:case 412:case 413:case 414:case 415:case 500:case 501:case 502:case 503:case 504:case 505:{if(qx.core.Setting.get("qx.ioRemoteDebug")){qx.log.Logger.debug(this,"Failed with typical HTTP statuscode: "+vStatusCode);
}};
return false;
case 12002:case 12007:case 12029:case 12030:case 12031:case 12152:case 13030:{if(qx.core.Setting.get("qx.ioRemoteDebug")){qx.log.Logger.debug(this,"Failed with MSHTML specific HTTP statuscode: "+vStatusCode);
}};
return false;
default:if(vStatusCode>206&&vStatusCode<300){return true;
}qx.log.Logger.debug(this,"Unknown status code: "+vStatusCode+" ("+vReadyState+")");
return false;
}}},statusCodeToString:function(vStatusCode){switch(vStatusCode){case -1:return "Not available";
case 200:return "Ok";
case 304:return "Not modified";
case 206:return "Partial content";
case 204:return "No content";
case 300:return "Multiple choices";
case 301:return "Moved permanently";
case 302:return "Moved temporarily";
case 303:return "See other";
case 305:return "Use proxy";
case 400:return "Bad request";
case 401:return "Unauthorized";
case 402:return "Payment required";
case 403:return "Forbidden";
case 404:return "Not found";
case 405:return "Method not allowed";
case 406:return "Not acceptable";
case 407:return "Proxy authentication required";
case 408:return "Request time-out";
case 409:return "Conflict";
case 410:return "Gone";
case 411:return "Length required";
case 412:return "Precondition failed";
case 413:return "Request entity too large";
case 414:return "Request-URL too large";
case 415:return "Unsupported media type";
case 500:return "Server error";
case 501:return "Not implemented";
case 502:return "Bad gateway";
case 503:return "Out of resources";
case 504:return "Gateway time-out";
case 505:return "HTTP version not supported";
case 12002:return "Server timeout";
case 12029:return "Connection dropped";
case 12030:return "Connection dropped";
case 12031:return "Connection dropped";
case 12152:return "Connection closed by server";
case 13030:return "MSHTML-specific HTTP status code";
default:return "Unknown status code";
}}},properties:{request:{check:"qx.io.remote.Request",nullable:true},implementation:{check:"qx.io.remote.transport.Abstract",nullable:true,apply:"_applyImplementation"},state:{check:["configured","sending","receiving","completed","aborted","timeout","failed"],init:"configured",event:"changeState",apply:"_applyState"}},members:{send:function(){var vRequest=this.getRequest();

if(!vRequest){return this.error("Please attach a request object first");
}qx.io.remote.Exchange.initTypes();
var vUsage=qx.io.remote.Exchange.typesOrder;
var vSupported=qx.io.remote.Exchange.typesSupported;
var vResponseType=vRequest.getResponseType();
var vNeeds={};

if(vRequest.getAsynchronous()){vNeeds.asynchronous=true;
}else{vNeeds.synchronous=true;
}
if(vRequest.getCrossDomain()){vNeeds.crossDomain=true;
}
if(vRequest.getFileUpload()){vNeeds.fileUpload=true;
}for(var field in vRequest.getFormFields()){vNeeds.programaticFormFields=true;
break;
}var vTransportImpl,vTransport;

for(var i=0,l=vUsage.length;i<l;i++){vTransportImpl=vSupported[vUsage[i]];

if(vTransportImpl){if(!qx.io.remote.Exchange.canHandle(vTransportImpl,vNeeds,vResponseType)){continue;
}
try{{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Using implementation: "+vTransportImpl.classname);
}};
vTransport=new vTransportImpl;
this.setImplementation(vTransport);
vTransport.setUseBasicHttpAuth(vRequest.getUseBasicHttpAuth());
vTransport.send();
return true;
}catch(ex){this.error("Request handler throws error");
this.error(ex);
return;
}}}this.error("There is no transport implementation available to handle this request: "+vRequest);
},abort:function(){var vImplementation=this.getImplementation();

if(vImplementation){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Abort: implementation "+vImplementation.toHashCode());
}};
vImplementation.abort();
}else{{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Abort: forcing state to be aborted");
}};
this.setState("aborted");
}},timeout:function(){var vImplementation=this.getImplementation();

if(vImplementation){this.warn("Timeout: implementation "+vImplementation.toHashCode());
vImplementation.timeout();
}else{this.warn("Timeout: forcing state to timeout");
this.setState("timeout");
}this.__disableRequestTimeout();
},__disableRequestTimeout:function(){var vRequest=this.getRequest();

if(vRequest){vRequest.setTimeout(0);
}},_onsending:function(e){this.setState("sending");
},_onreceiving:function(e){this.setState("receiving");
},_oncompleted:function(e){this.setState("completed");
},_onabort:function(e){this.setState("aborted");
},_onfailed:function(e){this.setState("failed");
},_ontimeout:function(e){this.setState("timeout");
},_applyImplementation:function(value,old){if(old){old.removeListener("sending",this._onsending,this);
old.removeListener("receiving",this._onreceiving,this);
old.removeListener("completed",this._oncompleted,this);
old.removeListener("aborted",this._onabort,this);
old.removeListener("timeout",this._ontimeout,this);
old.removeListener("failed",this._onfailed,this);
}
if(value){var vRequest=this.getRequest();
value.setUrl(vRequest.getUrl());
value.setMethod(vRequest.getMethod());
value.setAsynchronous(vRequest.getAsynchronous());
value.setUsername(vRequest.getUsername());
value.setPassword(vRequest.getPassword());
value.setParameters(vRequest.getParameters(false));
value.setFormFields(vRequest.getFormFields());
value.setRequestHeaders(vRequest.getRequestHeaders());
var data=vRequest.getData();

if(data===null){var vParameters=vRequest.getParameters(true);
var vParametersList=[];

for(var vId in vParameters){var paramValue=vParameters[vId];

if(paramValue instanceof Array){for(var i=0;i<paramValue.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(paramValue[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(paramValue));
}}
if(vParametersList.length>0){value.setData(vParametersList.join("&"));
}}else{value.setData(data);
}value.setResponseType(vRequest.getResponseType());
value.addListener("sending",this._onsending,this);
value.addListener("receiving",this._onreceiving,this);
value.addListener("completed",this._oncompleted,this);
value.addListener("aborted",this._onabort,this);
value.addListener("timeout",this._ontimeout,this);
value.addListener("failed",this._onfailed,this);
}},_applyState:function(value,old){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("State: "+old+" => "+value);
}};

switch(value){case "sending":this.fireEvent("sending");
break;
case "receiving":this.fireEvent("receiving");
break;
case "completed":case "aborted":case "timeout":case "failed":var vImpl=this.getImplementation();

if(!vImpl){break;
}this.__disableRequestTimeout();

if(this.hasListener(value)){var vResponse=qx.event.Registration.createEvent(value,qx.io.remote.Response);

if(value=="completed"){var vContent=vImpl.getResponseContent();
vResponse.setContent(vContent);
if(vContent===null){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Altered State: "+value+" => failed");
}};
value="failed";
}}else if(value=="failed"){vResponse.setContent(vImpl.getResponseContent());
}vResponse.setStatusCode(vImpl.getStatusCode());
vResponse.setResponseHeaders(vImpl.getResponseHeaders());
this.dispatchEvent(vResponse);
}this.setImplementation(null);
vImpl.dispose();
break;
}}},settings:{"qx.ioRemoteDebug":false,"qx.ioRemoteDebugData":false},destruct:function(){var vImpl=this.getImplementation();

if(vImpl){this.setImplementation(null);
vImpl.dispose();
}this.setRequest(null);
}});
qx.Class.define("qx.io.remote.transport.Abstract",{type:"abstract",extend:qx.core.Object,construct:function(){this.base(arguments);
this.setRequestHeaders({});
this.setParameters({});
this.setFormFields({});
},events:{"created":"qx.event.type.Event","configured":"qx.event.type.Event","sending":"qx.event.type.Event","receiving":"qx.event.type.Event","completed":"qx.event.type.Event","aborted":"qx.event.type.Event","failed":"qx.event.type.Event","timeout":"qx.event.type.Event"},properties:{url:{check:"String",nullable:true},method:{check:"String",nullable:true,init:"GET"},asynchronous:{check:"Boolean",nullable:true,init:true},data:{check:"String",nullable:true},username:{check:"String",nullable:true},password:{check:"String",nullable:true},state:{check:["created","configured","sending","receiving","completed","aborted","timeout","failed"],init:"created",event:"changeState",apply:"_applyState"},requestHeaders:{check:"Object",nullable:true},parameters:{check:"Object",nullable:true},formFields:{check:"Object",nullable:true},responseType:{check:"String",nullable:true},useBasicHttpAuth:{check:"Boolean",nullable:true}},members:{send:function(){throw new Error("send is abstract");
},abort:function(){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Aborting...");
}};
this.setState("aborted");
},timeout:function(){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Timeout...");
}};
this.setState("timeout");
},failed:function(){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Failed...");
}};
this.setState("failed");
},setRequestHeader:function(vLabel,vValue){throw new Error("setRequestHeader is abstract");
},getResponseHeader:function(vLabel){throw new Error("getResponseHeader is abstract");
},getResponseHeaders:function(){throw new Error("getResponseHeaders is abstract");
},getStatusCode:function(){throw new Error("getStatusCode is abstract");
},getStatusText:function(){throw new Error("getStatusText is abstract");
},getResponseText:function(){throw new Error("getResponseText is abstract");
},getResponseXml:function(){throw new Error("getResponseXml is abstract");
},getFetchedLength:function(){throw new Error("getFetchedLength is abstract");
},_applyState:function(value,old){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("State: "+value);
}};

switch(value){case "created":this.fireEvent("created");
break;
case "configured":this.fireEvent("configured");
break;
case "sending":this.fireEvent("sending");
break;
case "receiving":this.fireEvent("receiving");
break;
case "completed":this.fireEvent("completed");
break;
case "aborted":this.fireEvent("aborted");
break;
case "failed":this.fireEvent("failed");
break;
case "timeout":this.fireEvent("timeout");
break;
}return true;
}}});
qx.Class.define("qx.io.remote.transport.XmlHttp",{extend:qx.io.remote.transport.Abstract,statics:{handles:{synchronous:true,asynchronous:true,crossDomain:false,fileUpload:false,programaticFormFields:false,responseTypes:["text/plain","text/javascript","application/json","application/xml","text/html"]},requestObjects:[],requestObjectCount:0,createRequestObject:qx.core.Variant.select("qx.client",{"default":function(){return new XMLHttpRequest;
},"mshtml":function(){if(window.ActiveXObject&&qx.xml.Document.XMLHTTP){return new ActiveXObject(qx.xml.Document.XMLHTTP);
}
if(window.XMLHttpRequest){return new XMLHttpRequest;
}}}),isSupported:function(){return !!this.createRequestObject();
}},members:{__localRequest:false,__lastReadyState:0,__request:null,getRequest:function(){if(this.__request===null){this.__request=qx.io.remote.transport.XmlHttp.createRequestObject();
this.__request.onreadystatechange=qx.lang.Function.bind(this._onreadystatechange,this);
}return this.__request;
},send:function(){this.__lastReadyState=0;
var vRequest=this.getRequest();
var vMethod=this.getMethod();
var vAsynchronous=this.getAsynchronous();
var vUrl=this.getUrl();
var vLocalRequest=(window.location.protocol==="file:"&&!(/^http(s){0,1}\:/.test(vUrl)));
this.__localRequest=vLocalRequest;
var vParameters=this.getParameters(false);
var vParametersList=[];

for(var vId in vParameters){var value=vParameters[vId];

if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+=(vUrl.indexOf("?")>=0?"&":"?")+vParametersList.join("&");
}if(this.getData()===null){var vParameters=this.getParameters(true);
var vParametersList=[];

for(var vId in vParameters){var value=vParameters[vId];

if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value));
}}
if(vParametersList.length>0){this.setData(vParametersList.join("&"));
}}var encode64=function(input){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
var output="";
var chr1,chr2,chr3;
var enc1,enc2,enc3,enc4;
var i=0;

do{chr1=input.charCodeAt(i++);
chr2=input.charCodeAt(i++);
chr3=input.charCodeAt(i++);
enc1=chr1>>2;
enc2=((chr1&3)<<4)|(chr2>>4);
enc3=((chr2&15)<<2)|(chr3>>6);
enc4=chr3&63;

if(isNaN(chr2)){enc3=enc4=64;
}else if(isNaN(chr3)){enc4=64;
}output+=keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4);
}while(i<input.length);
return output;
};
try{if(this.getUsername()){if(this.getUseBasicHttpAuth()){vRequest.open(vMethod,vUrl,vAsynchronous);
vRequest.setRequestHeader('Authorization','Basic '+encode64(this.getUsername()+':'+this.getPassword()));
}else{vRequest.open(vMethod,vUrl,vAsynchronous,this.getUsername(),this.getPassword());
}}else{vRequest.open(vMethod,vUrl,vAsynchronous);
}}catch(ex){this.error("Failed with exception: "+ex);
this.failed();
return;
}if(!qx.core.Variant.isSet("qx.client","webkit")){vRequest.setRequestHeader('Referer',window.location.href);
}var vRequestHeaders=this.getRequestHeaders();

for(var vId in vRequestHeaders){vRequest.setRequestHeader(vId,vRequestHeaders[vId]);
}try{{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Request: "+this.getData());
}};
vRequest.send(this.getData());
}catch(ex){if(vLocalRequest){this.failedLocally();
}else{this.error("Failed to send data: "+ex,"send");
this.failed();
}return;
}if(!vAsynchronous){this._onreadystatechange();
}},failedLocally:function(){if(this.getState()==="failed"){return;
}this.warn("Could not load from file: "+this.getUrl());
this.failed();
},_onreadystatechange:qx.event.GlobalError.observeMethod(function(e){switch(this.getState()){case "completed":case "aborted":case "failed":case "timeout":{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Ignore Ready State Change");
}};
return;
}var vReadyState=this.getReadyState();

if(vReadyState==4){if(!qx.io.remote.Exchange.wasSuccessful(this.getStatusCode(),vReadyState,this.__localRequest)){if(this.getState()==="configured"){this.setState("sending");
}return this.failed();
}}while(this.__lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]);
}}),getReadyState:function(){var vReadyState=null;

try{vReadyState=this.getRequest().readyState;
}catch(ex){}return vReadyState;
},setRequestHeader:function(vLabel,vValue){this.getRequestHeaders()[vLabel]=vValue;
},getResponseHeader:function(vLabel){var vResponseHeader=null;

try{vResponseHeader=this.getRequest().getResponseHeader(vLabel)||null;
}catch(ex){}return vResponseHeader;
},getStringResponseHeaders:function(){var vSourceHeader=null;

try{var vLoadHeader=this.getRequest().getAllResponseHeaders();

if(vLoadHeader){vSourceHeader=vLoadHeader;
}}catch(ex){}return vSourceHeader;
},getResponseHeaders:function(){var vSourceHeader=this.getStringResponseHeaders();
var vHeader={};

if(vSourceHeader){var vValues=vSourceHeader.split(/[\r\n]+/g);

for(var i=0,l=vValues.length;i<l;i++){var vPair=vValues[i].match(/^([^:]+)\s*:\s*(.+)$/i);

if(vPair){vHeader[vPair[1]]=vPair[2];
}}}return vHeader;
},getStatusCode:function(){var vStatusCode=-1;

try{vStatusCode=this.getRequest().status;
}catch(ex){}return vStatusCode;
},getStatusText:function(){var vStatusText="";

try{vStatusText=this.getRequest().statusText;
}catch(ex){}return vStatusText;
},getResponseText:function(){var vResponseText=null;

try{vResponseText=this.getRequest().responseText;
}catch(ex){vResponseText=null;
}return vResponseText;
},getResponseXml:function(){var vResponseXML=null;
var vStatus=this.getStatusCode();
var vReadyState=this.getReadyState();

if(qx.io.remote.Exchange.wasSuccessful(vStatus,vReadyState,this.__localRequest)){try{vResponseXML=this.getRequest().responseXML;
}catch(ex){}}if(typeof vResponseXML=="object"&&vResponseXML!=null){if(!vResponseXML.documentElement){var s=String(this.getRequest().responseText).replace(/<\?xml[^\?]*\?>/,"");
vResponseXML.loadXML(s);
}if(!vResponseXML.documentElement){throw new Error("Missing Document Element!");
}
if(vResponseXML.documentElement.tagName=="parseerror"){throw new Error("XML-File is not well-formed!");
}}else{throw new Error("Response was not a valid xml document ["+this.getRequest().responseText+"]");
}return vResponseXML;
},getFetchedLength:function(){var vText=this.getResponseText();
return typeof vText=="string"?vText.length:0;
},getResponseContent:function(){var state=this.getState();

if(state!=="completed"&&state!="failed"){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Transfer not complete or failed, ignoring content!");
}};
return null;
}{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Returning content for responseType: "+this.getResponseType());
}};
var vText=this.getResponseText();

if(state=="failed"){{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Failed: "+vText);
}};
return vText;
}
switch(this.getResponseType()){case "text/plain":case "text/html":{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+vText);
}};
return vText;
case "application/json":{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+vText);
}};

try{if(vText&&vText.length>0){var ret=qx.util.Json.parse(vText,false);
return (ret===0?0:(ret||null));
}else{return null;
}}catch(ex){this.error("Could not execute json: ["+vText+"]",ex);
return "<pre>Could not execute json: \n"+vText+"\n</pre>";
}case "text/javascript":{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+vText);
}};

try{if(vText&&vText.length>0){var ret=window.eval(vText);
return (ret===0?0:(ret||null));
}else{return null;
}}catch(ex){this.error("Could not execute javascript: ["+vText+"]",ex);
return null;
}case "application/xml":vText=this.getResponseXml();
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+vText);
}};
return (vText===0?0:(vText||null));
default:this.warn("No valid responseType specified ("+this.getResponseType()+")!");
return null;
}},_applyState:function(value,old){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("State: "+value);
}};

switch(value){case "created":this.fireEvent("created");
break;
case "configured":this.fireEvent("configured");
break;
case "sending":this.fireEvent("sending");
break;
case "receiving":this.fireEvent("receiving");
break;
case "completed":this.fireEvent("completed");
break;
case "failed":this.fireEvent("failed");
break;
case "aborted":this.getRequest().abort();
this.fireEvent("aborted");
break;
case "timeout":this.getRequest().abort();
this.fireEvent("timeout");
break;
}}},defer:function(statics,members){qx.io.remote.Exchange.registerType(qx.io.remote.transport.XmlHttp,"qx.io.remote.transport.XmlHttp");
},destruct:function(){var vRequest=this.getRequest();

if(vRequest){vRequest.onreadystatechange=qx.lang.Function.empty;
switch(vRequest.readyState){case 1:case 2:case 3:vRequest.abort();
}}this.__request=null;
}});
qx.Class.define("qx.util.Json",{statics:{__nativeDateToJSON:null,BEAUTIFYING_INDENT:"  ",BEAUTIFYING_LINE_END:"\n",__map:{"function":"__convertFunction","boolean":"__convertBoolean","number":"__convertNumber","string":"__convertString","object":"__convertObject","undefined":"__convertUndefined"},__convertFunction:function(incoming,key){return String(incoming);
},__convertBoolean:function(incoming,key){return String(incoming);
},__convertNumber:function(incoming,key){return isFinite(incoming)?String(incoming):"null";
},__convertString:function(incoming,key){var result;

if(/["\\\x00-\x1f]/.test(incoming)){result=incoming.replace(/([\x00-\x1f\\"])/g,qx.util.Json.__convertStringHelper);
}else{result=incoming;
}return '"'+result+'"';
},__convertStringEscape:{'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},__convertStringHelper:function(a,b){var result=qx.util.Json.__convertStringEscape[b];

if(result){return result;
}result=b.charCodeAt();
return '\\u00'+Math.floor(result/16).toString(16)+(result%16).toString(16);
},__convertArray:function(incoming,key){var stringBuilder=[],first=true,func,obj;
var beautify=qx.util.Json.__beautify;
stringBuilder.push("[");

if(beautify){qx.util.Json.__indent+=qx.util.Json.BEAUTIFYING_INDENT;
stringBuilder.push(qx.util.Json.__indent);
}
for(var i=0,l=incoming.length;i<l;i++){obj=incoming[i];
func=this.__map[typeof obj];

if(func){obj=this[func](obj,i+"");

if(typeof obj=="string"){if(!first){stringBuilder.push(",");

if(beautify){stringBuilder.push(qx.util.Json.__indent);
}}stringBuilder.push(obj);
first=false;
}}}
if(beautify){qx.util.Json.__indent=qx.util.Json.__indent.substring(0,qx.util.Json.__indent.length-qx.util.Json.BEAUTIFYING_INDENT.length);
stringBuilder.push(qx.util.Json.__indent);
}stringBuilder.push("]");
return stringBuilder.join("");
},__convertDate:function(incoming,key){var dateParams=incoming.getUTCFullYear()+","+incoming.getUTCMonth()+","+incoming.getUTCDate()+","+incoming.getUTCHours()+","+incoming.getUTCMinutes()+","+incoming.getUTCSeconds()+","+incoming.getUTCMilliseconds();
return "new Date(Date.UTC("+dateParams+"))";
},__convertMap:function(incoming,key){var stringBuilder=[],first=true,func,obj;
var beautify=qx.util.Json.__beautify;
stringBuilder.push("{");

if(beautify){qx.util.Json.__indent+=qx.util.Json.BEAUTIFYING_INDENT;
stringBuilder.push(qx.util.Json.__indent);
}
for(var key in incoming){obj=incoming[key];
func=this.__map[typeof obj];

if(func){obj=this[func](obj,key);

if(typeof obj=="string"){if(!first){stringBuilder.push(",");

if(beautify){stringBuilder.push(qx.util.Json.__indent);
}}stringBuilder.push(this.__convertString(key),":",obj);
first=false;
}}}
if(beautify){qx.util.Json.__indent=qx.util.Json.__indent.substring(0,qx.util.Json.__indent.length-qx.util.Json.BEAUTIFYING_INDENT.length);
stringBuilder.push(qx.util.Json.__indent);
}stringBuilder.push("}");
return stringBuilder.join("");
},__convertObject:function(incoming,key){if(incoming){if(qx.lang.Type.isFunction(incoming.toJSON)&&incoming.toJSON!==this.__nativeDateToJSON){return this.__convert(incoming.toJSON(key),key);
}else if(qx.lang.Type.isDate(incoming)){return this.__convertDate(incoming,key);
}else if(qx.lang.Type.isArray(incoming)){return this.__convertArray(incoming,key);
}else if(qx.lang.Type.isObject(incoming)){return this.__convertMap(incoming,key);
}return "";
}return "null";
},__convertUndefined:function(incoming,key){if(qx.core.Setting.get("qx.jsonEncodeUndefined")){return "null";
}},__convert:function(incoming,key){return this[this.__map[typeof incoming]](incoming,key);
},stringify:function(obj,beautify){this.__beautify=beautify;
this.__indent=this.BEAUTIFYING_LINE_END;
var result=this.__convert(obj,"");

if(typeof result!="string"){result=null;
}if(qx.core.Setting.get("qx.jsonDebugging")){qx.log.Logger.debug(this,"JSON request: "+result);
}return result;
},parse:function(text,validate){if(validate===undefined){validate=true;
}
if(qx.core.Setting.get("qx.jsonDebugging")){qx.log.Logger.debug(this,"JSON response: "+text);
}
if(validate){if(/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(text.replace(/"(\\.|[^"\\])*"/g,""))){throw new Error("Could not parse JSON string!");
}}
try{var result=(text&&text.length>0)?eval('('+text+')'):null;
return result;
}catch(ex){throw new Error("Could not evaluate JSON string: "+ex.message);
}},parseQx:function(text){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'parse' instead!");
return qx.util.Json.parse(text,false);
}},settings:{"qx.jsonEncodeUndefined":true,"qx.jsonDebugging":false},defer:function(statics){statics.__nativeDateToJSON=Date.prototype.toJSON;
}});
qx.Class.define("qx.io.remote.transport.Iframe",{extend:qx.io.remote.transport.Abstract,construct:function(){this.base(arguments);
var vUniqueId=(new Date).valueOf();
var vFrameName="frame_"+vUniqueId;
var vFormName="form_"+vUniqueId;
if(qx.core.Variant.isSet("qx.client","mshtml")){this.__frame=document.createElement('<iframe name="'+vFrameName+'"></iframe>');
}else{this.__frame=document.createElement("iframe");
}this.__frame.src="javascript:void(0)";
this.__frame.id=this.__frame.name=vFrameName;
this.__frame.onload=qx.lang.Function.bind(this._onload,this);
this.__frame.style.display="none";
document.body.appendChild(this.__frame);
this.__form=document.createElement("form");
this.__form.target=vFrameName;
this.__form.id=this.__form.name=vFormName;
this.__form.style.display="none";
document.body.appendChild(this.__form);
this.__data=document.createElement("textarea");
this.__data.id=this.__data.name="_data_";
this.__form.appendChild(this.__data);
this.__frame.onreadystatechange=qx.lang.Function.bind(this._onreadystatechange,this);
},statics:{handles:{synchronous:false,asynchronous:true,crossDomain:false,fileUpload:true,programaticFormFields:true,responseTypes:["text/plain","text/javascript","application/json","application/xml","text/html"]},isSupported:function(){return true;
},_numericMap:{"uninitialized":1,"loading":2,"loaded":2,"interactive":3,"complete":4}},members:{__data:null,__lastReadyState:0,__form:null,__frame:null,send:function(){var vMethod=this.getMethod();
var vUrl=this.getUrl();
var vParameters=this.getParameters(false);
var vParametersList=[];

for(var vId in vParameters){var value=vParameters[vId];

if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+=(vUrl.indexOf("?")>=0?"&":"?")+vParametersList.join("&");
}if(this.getData()===null){var vParameters=this.getParameters(true);
var vParametersList=[];

for(var vId in vParameters){var value=vParameters[vId];

if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value));
}}
if(vParametersList.length>0){this.setData(vParametersList.join("&"));
}}var vFormFields=this.getFormFields();

for(var vId in vFormFields){var vField=document.createElement("textarea");
vField.name=vId;
vField.appendChild(document.createTextNode(vFormFields[vId]));
this.__form.appendChild(vField);
}this.__form.action=vUrl;
this.__form.method=vMethod;
this.__data.appendChild(document.createTextNode(this.getData()));
this.__form.submit();
this.setState("sending");
},_onload:qx.event.GlobalError.observeMethod(function(e){if(this.__form.src){return;
}this._switchReadyState(qx.io.remote.transport.Iframe._numericMap.complete);
}),_onreadystatechange:qx.event.GlobalError.observeMethod(function(e){this._switchReadyState(qx.io.remote.transport.Iframe._numericMap[this.__frame.readyState]);
}),_switchReadyState:function(vReadyState){switch(this.getState()){case "completed":case "aborted":case "failed":case "timeout":this.warn("Ignore Ready State Change");
return;
}while(this.__lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]);
}},setRequestHeader:function(vLabel,vValue){},getResponseHeader:function(vLabel){return null;
},getResponseHeaders:function(){return {};
},getStatusCode:function(){return 200;
},getStatusText:function(){return "";
},getIframeWindow:function(){return qx.bom.Iframe.getWindow(this.__frame);
},getIframeDocument:function(){return qx.bom.Iframe.getDocument(this.__frame);
},getIframeBody:function(){return qx.bom.Iframe.getBody(this.__frame);
},getIframeTextContent:function(){var vBody=this.getIframeBody();

if(!vBody){return null;
}
if(!vBody.firstChild){return "";
}if(vBody.firstChild.tagName&&vBody.firstChild.tagName.toLowerCase()=="pre"){return vBody.firstChild.innerHTML;
}else{return vBody.innerHTML;
}},getIframeHtmlContent:function(){var vBody=this.getIframeBody();
return vBody?vBody.innerHTML:null;
},getFetchedLength:function(){return 0;
},getResponseContent:function(){if(this.getState()!=="completed"){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Transfer not complete, ignoring content!");
}};
return null;
}{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Returning content for responseType: "+this.getResponseType());
}};
var vText=this.getIframeTextContent();

switch(this.getResponseType()){case "text/plain":{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};
return vText;
break;
case "text/html":vText=this.getIframeHtmlContent();
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};
return vText;
break;
case "application/json":vText=this.getIframeHtmlContent();
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};

try{return vText&&vText.length>0?qx.util.Json.parse(vText,false):null;
}catch(ex){return this.error("Could not execute json: ("+vText+")",ex);
}case "text/javascript":vText=this.getIframeHtmlContent();
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};

try{return vText&&vText.length>0?window.eval(vText):null;
}catch(ex){return this.error("Could not execute javascript: ("+vText+")",ex);
}case "application/xml":vText=this.getIframeDocument();
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};
return vText;
default:this.warn("No valid responseType specified ("+this.getResponseType()+")!");
return null;
}}},defer:function(statics,members,properties){qx.io.remote.Exchange.registerType(qx.io.remote.transport.Iframe,"qx.io.remote.transport.Iframe");
},destruct:function(){if(this.__frame){this.__frame.onload=null;
this.__frame.onreadystatechange=null;
if(qx.core.Variant.isSet("qx.client","gecko")){this.__frame.src=qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif");
}document.body.removeChild(this.__frame);
}
if(this.__form){document.body.removeChild(this.__form);
}this.__frame=this.__form=null;
}});
qx.Class.define("qx.io.remote.transport.Script",{extend:qx.io.remote.transport.Abstract,construct:function(){this.base(arguments);
var vUniqueId=++qx.io.remote.transport.Script.__uniqueId;

if(vUniqueId>=2000000000){qx.io.remote.transport.Script.__uniqueId=vUniqueId=1;
}this.__element=null;
this.__uniqueId=vUniqueId;
},statics:{__uniqueId:0,_instanceRegistry:{},ScriptTransport_PREFIX:"_ScriptTransport_",ScriptTransport_ID_PARAM:"_ScriptTransport_id",ScriptTransport_DATA_PARAM:"_ScriptTransport_data",handles:{synchronous:false,asynchronous:true,crossDomain:true,fileUpload:false,programaticFormFields:false,responseTypes:["text/plain","text/javascript","application/json"]},isSupported:function(){return true;
},_numericMap:{"uninitialized":1,"loading":2,"loaded":2,"interactive":3,"complete":4},_requestFinished:qx.event.GlobalError.observeMethod(function(id,content){var vInstance=qx.io.remote.transport.Script._instanceRegistry[id];

if(vInstance==null){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Request finished for an unknown instance (probably aborted or timed out before)");
}};
}else{vInstance._responseContent=content;
vInstance._switchReadyState(qx.io.remote.transport.Script._numericMap.complete);
}})},members:{__lastReadyState:0,__element:null,__uniqueId:null,send:function(){var vUrl=this.getUrl();
vUrl+=(vUrl.indexOf("?")>=0?"&":"?")+qx.io.remote.transport.Script.ScriptTransport_ID_PARAM+"="+this.__uniqueId;
var vParameters=this.getParameters();
var vParametersList=[];

for(var vId in vParameters){if(vId.indexOf(qx.io.remote.transport.Script.ScriptTransport_PREFIX)==0){this.error("Illegal parameter name. The following prefix is used internally by qooxdoo): "+qx.io.remote.transport.Script.ScriptTransport_PREFIX);
}var value=vParameters[vId];

if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+"="+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+="&"+vParametersList.join("&");
}var vData=this.getData();

if(vData!=null){vUrl+="&"+qx.io.remote.transport.Script.ScriptTransport_DATA_PARAM+"="+encodeURIComponent(vData);
}qx.io.remote.transport.Script._instanceRegistry[this.__uniqueId]=this;
this.__element=document.createElement("script");
this.__element.charset="utf-8";
this.__element.src=vUrl;
{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Request: "+vUrl);
}};
document.body.appendChild(this.__element);
},_switchReadyState:function(vReadyState){switch(this.getState()){case "completed":case "aborted":case "failed":case "timeout":this.warn("Ignore Ready State Change");
return;
}while(this.__lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]);
}},setRequestHeader:function(vLabel,vValue){},getResponseHeader:function(vLabel){return null;
},getResponseHeaders:function(){return {};
},getStatusCode:function(){return 200;
},getStatusText:function(){return "";
},getFetchedLength:function(){return 0;
},getResponseContent:function(){if(this.getState()!=="completed"){{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.warn("Transfer not complete, ignoring content!");
}};
return null;
}{if(qx.core.Setting.get("qx.ioRemoteDebug")){this.debug("Returning content for responseType: "+this.getResponseType());
}};

switch(this.getResponseType()){case "text/plain":case "application/json":case "text/javascript":{if(qx.core.Setting.get("qx.ioRemoteDebugData")){this.debug("Response: "+this._responseContent);
}};
var ret=this._responseContent;
return (ret===0?0:(ret||null));
default:this.warn("No valid responseType specified ("+this.getResponseType()+")!");
return null;
}}},defer:function(statics,members,properties){qx.io.remote.Exchange.registerType(qx.io.remote.transport.Script,"qx.io.remote.transport.Script");
},destruct:function(){if(this.__element){delete qx.io.remote.transport.Script._instanceRegistry[this.__uniqueId];
document.body.removeChild(this.__element);
}this.__element=this._responseContent=null;
}});
qx.Class.define("qx.io.remote.Response",{extend:qx.event.type.Event,properties:{state:{check:"Integer",nullable:true},statusCode:{check:"Integer",nullable:true},content:{nullable:true},responseHeaders:{check:"Object",nullable:true}},members:{clone:function(embryo){var clone=this.base(arguments,embryo);
clone.setType(this.getType());
clone.setState(this.getState());
clone.setStatusCode(this.getStatusCode());
clone.setContent(this.getContent());
clone.setResponseHeaders(this.getResponseHeaders());
return clone;
},getResponseHeader:function(vHeader){var vAll=this.getResponseHeaders();

if(vAll){return vAll[vHeader]||null;
}return null;
}}});
qx.Mixin.define("qx.data.controller.MSelection",{construct:function(){if(!qx.Class.hasProperty(this.constructor,"target")){throw new Error("Target property is needed.");
}if(this.getSelection()==null){this.setSelection(new qx.data.Array());
}},properties:{selection:{check:"qx.data.Array",event:"changeSelection",apply:"_applySelection",init:null}},members:{_modifingSelection:0,__selectionListenerId:null,__selectionArrayListenerId:null,_applySelection:function(value,old){if(this.__selectionArrayListenerId!=undefined&&old!=undefined){old.removeListenerById(this.__selectionArrayListenerId);
}this.__selectionArrayListenerId=value.addListener("change",this.__changeSelectionArray,this);
},__changeSelectionArray:function(){this._updateSelection();
},_changeTargetSelection:function(){if(this.getTarget()==null){return;
}if(!this.__targetSupportsMultiSelection()&&!this.__targetSupportsSingleSelection()){return;
}if(this._inSelectionModification()){return;
}var targetSelection=this.getTarget().getSelection();
var selection=this.getSelection();

if(selection==null){selection=new qx.data.Array();
this.setSelection(selection);
}if(targetSelection.length>0){selection.toArray().splice(0,selection.getLength());
}else{selection.splice(0,this.getSelection().getLength());
}for(var i=0;i<targetSelection.length;i++){var item=targetSelection[i].getModel();

if(i+1==targetSelection.length){selection.push(item);
}else{selection.toArray().push(item);
}}this.fireDataEvent("changeSelection",this.getSelection());
},_addChangeTargetListener:function(value,old){if(this.__selectionListenerId!=undefined&&old!=undefined){old.removeListenerById(this.__selectionListenerId);
}
if(value!=null){if(this.__targetSupportsMultiSelection()||this.__targetSupportsSingleSelection()){this.__selectionListenerId=value.addListener("changeSelection",this._changeTargetSelection,this);
}}},_updateSelection:function(){this._startSelectionModification();
if(this.__targetSupportsMultiSelection()){var targetSelection=[];
for(var i=0;i<this.getSelection().length;i++){var model=this.getSelection().getItem(i);
var selectable=this.__getSelectableForModel(model);

if(selectable!=null){targetSelection.push(selectable);
}}this.getTarget().setSelection(targetSelection);
targetSelection=this.getTarget().getSelection();
var targetSelectionItems=[];

for(var i=0;i<targetSelection.length;i++){targetSelectionItems[i]=targetSelection[i].getModel();
}for(var i=this.getSelection().length-1;i>=0;i--){if(!qx.lang.Array.contains(targetSelectionItems,this.getSelection().getItem(i))){this.getSelection().splice(i,1);
}}}else if(this.__targetSupportsSingleSelection()){this.__selectItem(this.getSelection().getItem(this.getSelection().length-1));
this.getSelection().splice(0,this.getSelection().getLength()-1);
}this._endSelectionModification();
},__targetSupportsMultiSelection:function(){var targetClass=this.getTarget().constructor;
return qx.Class.implementsInterface(targetClass,qx.ui.core.IMultiSelection);
},__targetSupportsSingleSelection:function(){var targetClass=this.getTarget().constructor;
return qx.Class.implementsInterface(targetClass,qx.ui.core.ISingleSelection);
},__selectItem:function(item){var selectable=this.__getSelectableForModel(item);
if(selectable==null){return;
}if(this.__targetSupportsMultiSelection()){this.getTarget().addToSelection(selectable);
}else if(this.__targetSupportsSingleSelection()){this.getTarget().setSelection([selectable]);
}},__getSelectableForModel:function(model){var children=this.getTarget().getSelectables();
for(var i=0;i<children.length;i++){if(children[i].getModel()==model){return children[i];
}}return null;
},_startSelectionModification:function(){this._modifingSelection++;
},_endSelectionModification:function(){this._modifingSelection>0?this._modifingSelection--:null;
},_inSelectionModification:function(){return this._modifingSelection>0;
}}});
qx.Class.define("qx.data.controller.List",{extend:qx.core.Object,include:qx.data.controller.MSelection,construct:function(model,target,labelPath){this.base(arguments);
this.__lookupTable=[];
this.__boundProperties=[];
this.__boundPropertiesReverse=[];
this.__onUpdate={};

if(labelPath!=null){this.setLabelPath(labelPath);
}
if(model!=null){this.setModel(model);
}
if(target!=null){this.setTarget(target);
}},properties:{model:{check:"qx.data.IListData",apply:"_applyModel",event:"changeModel",nullable:true},target:{apply:"_applyTarget",event:"changeTarget",nullable:true,init:null},labelPath:{check:"String",apply:"_applyLabelPath",nullable:true},iconPath:{check:"String",apply:"_applyIconPath",nullable:true},labelOptions:{apply:"_applyLabelOptions",nullable:true},iconOptions:{apply:"_applyIconOptions",nullable:true},delegate:{apply:"_applyDelegate",event:"changeDelegate",init:null,nullable:true}},members:{__changeModelLengthListenerId:null,__changeModelListenerId:null,__lookupTable:null,__onUpdate:null,__boundProperties:null,__boundPropertiesReverse:null,update:function(){this.__changeModelLength();
this.__renewBindings();
this._updateSelection();
},_applyDelegate:function(value,old){this._setConfigureItem(value,old);
this._setFilter(value,old);
this._setCreateItem(value,old);
this._setBindItem(value,old);
},_applyIconOptions:function(value,old){this.__renewBindings();
},_applyLabelOptions:function(value,old){this.__renewBindings();
},_applyIconPath:function(value,old){this.__renewBindings();
},_applyLabelPath:function(value,old){this.__renewBindings();
},_applyModel:function(value,old){if(old!=undefined){if(this.__changeModelLengthListenerId!=undefined){old.removeListenerById(this.__changeModelLengthListenerId);
}
if(this.__changeModelListenerId!=undefined){old.removeListenerById(this.__changeModelListenerId);
}}if(this.getSelection()!=undefined&&this.getSelection().length>0){this.getSelection().splice(0,this.getSelection().length);
}if(value!=null){this.__changeModelLengthListenerId=value.addListener("changeLength",this.__changeModelLength,this);
this.__changeModelListenerId=value.addListener("change",this.__changeModel,this);
this.__buildUpLookupTable();
this.__changeModelLength();
if(this.getTarget()!=null){var model=this.getModel();
var children=this.getTarget().getChildren();

for(var i=0,l=this.__lookupTable.length;i<l;i++){var modelNode=model.getItem(this.__lookup(i));
var listItem=children[i];
listItem.setModel(modelNode);
}}this._changeTargetSelection();
}},_applyTarget:function(value,old){this._addChangeTargetListener(value,old);
if(old!=undefined){old.removeAll();
this.removeAllBindings();
}
if(value!=null){if(this.getModel()!=null){for(var i=0;i<this.__lookupTable.length;i++){this.__addItem(this.__lookup(i));
}}}},__changeModel:function(){for(var i=this.getSelection().length-1;i>=0;i--){if(!this.getModel().contains(this.getSelection().getItem(i))){this.getSelection().splice(i,1);
}}qx.ui.core.queue.Widget.add(this);
if(this.__lookupTable.length!=this.getModel().getLength()){this.update();
}},syncWidget:function(){this._updateSelection();
},__changeModelLength:function(){if(this.getTarget()==null){return;
}this.__buildUpLookupTable();
var newLength=this.__lookupTable.length;
var currentLength=this.getTarget().getChildren().length;
if(newLength>currentLength){for(var j=currentLength;j<newLength;j++){this.__addItem(this.__lookup(j));
}}else if(newLength<currentLength){for(var j=currentLength;j>newLength;j--){this.__removeItem();
}}},__moveChangeListenerAtTheEnd:function(){var model=this.getModel();
if(model!=null){model.removeListenerById(this.__changeModelListenerId);
this.__changeModelListenerId=model.addListener("change",this.__changeModel,this);
}},_createItem:function(){var delegate=this.getDelegate();
if(delegate!=null&&delegate.createItem!=null){var item=delegate.createItem();
}else{var item=new qx.ui.form.ListItem();
}if(delegate!=null&&delegate.configureItem!=null){delegate.configureItem(item);
}return item;
},__addItem:function(index){var listItem=this._createItem();
listItem.setModel(this.getModel().getItem(index)||null);
this._bindListItem(listItem,index);
this.getTarget().add(listItem);
},__removeItem:function(){this._startSelectionModification();
var children=this.getTarget().getChildren();
var index=children.length-1;
var oldItem=children[index];
this._removeBindingsFrom(oldItem);
this.getTarget().removeAt(index);
oldItem.destroy();
this._endSelectionModification();
},getVisibleModels:function(){var visibleModels=[];
var target=this.getTarget();

if(target!=null){var items=target.getChildren();

for(var i=0;i<items.length;i++){visibleModels.push(items[i].getModel());
}}return new qx.data.Array(visibleModels);
},_bindListItem:function(item,index){var delegate=this.getDelegate();
if(delegate!=null&&delegate.bindItem!=null){delegate.bindItem(this,item,index);
}else{this.bindDefaultProperties(item,index);
}},bindDefaultProperties:function(item,index){this.bindProperty(this.getLabelPath(),"label",this.getLabelOptions(),item,index);
if(this.getIconPath()!=null){this.bindProperty(this.getIconPath(),"icon",this.getIconOptions(),item,index);
}},bindProperty:function(sourcePath,targetProperty,options,targetWidget,index){targetWidget.setModel(this.getModel().getItem(index));
if(options!=null){var options=qx.lang.Object.clone(options);
this.__onUpdate[targetProperty]=options.onUpdate;
delete options.onUpdate;
}else{options={};
this.__onUpdate[targetProperty]=null;
}options.onUpdate=qx.lang.Function.bind(this._onBindingSet,this,index);
var bindPath="model["+index+"]";

if(sourcePath!=null&&sourcePath!=""){bindPath+="."+sourcePath;
}var id=this.bind(bindPath,targetWidget,targetProperty,options);
targetWidget.setUserData(targetProperty+"BindingId",id);
if(!qx.lang.Array.contains(this.__boundProperties,targetProperty)){this.__boundProperties.push(targetProperty);
}},bindPropertyReverse:function(targetPath,sourcePath,options,sourceWidget,index){var targetBindPath="model["+index+"]";

if(targetPath!=null&&targetPath!=""){targetBindPath+="."+targetPath;
}var id=sourceWidget.bind(sourcePath,this,targetBindPath,options);
sourceWidget.setUserData(targetPath+"ReverseBindingId",id);
if(!qx.lang.Array.contains(this.__boundPropertiesReverse,targetPath)){this.__boundPropertiesReverse.push(targetPath);
}},_onBindingSet:function(index,sourceObject,targetObject){if(this.getModel()==null||this._inSelectionModification()){return;
}for(var i=0;i<this.__boundProperties.length;i++){if(this.__onUpdate[this.__boundProperties[i]]!=null){this.__onUpdate[this.__boundProperties[i]]();
}}var itemModel=this.getModel().getItem(index);
targetObject.setModel(itemModel==undefined?null:itemModel);
},_removeBindingsFrom:function(item){for(var i=0;i<this.__boundProperties.length;i++){var id=item.getUserData(this.__boundProperties[i]+"BindingId");

if(id!=null){this.removeBinding(id);
}}for(var i=0;i<this.__boundPropertiesReverse.length;i++){var id=item.getUserData(this.__boundPropertiesReverse[i]+"ReverseBindingId");

if(id!=null){item.removeBinding(id);
}}},__renewBindings:function(){if(this.getTarget()==null||this.getModel()==null){return;
}var items=this.getTarget().getChildren();
for(var i=0;i<items.length;i++){this._removeBindingsFrom(items[i]);
this._bindListItem(items[i],this.__lookup(i));
}this.__moveChangeListenerAtTheEnd();
},_setConfigureItem:function(value,old){if(value!=null&&value.configureItem!=null&&this.getTarget()!=null){var children=this.getTarget().getChildren();

for(var i=0;i<children.length;i++){value.configureItem(children[i]);
}}},_setBindItem:function(value,old){if(value!=null&&value.bindItem!=null){if(old!=null&&old.bindItem!=null&&value.bindItem==old.bindItem){return;
}this.__renewBindings();
}},_setCreateItem:function(value,old){if(this.getTarget()==null||this.getModel()==null||value==null||value.createItem==null){return;
}this._startSelectionModification();
var children=this.getTarget().getChildren();

for(var i=0,l=children.length;i<l;i++){this._removeBindingsFrom(children[i]);
}this.getTarget().removeAll();
this.update();
this._endSelectionModification();
this._updateSelection();
},_setFilter:function(value,old){if((value==null||value.filter==null)&&(old!=null&&old.filter!=null)){this.__removeFilter();
}if(this.getTarget()==null||this.getModel()==null||value==null||value.filter==null){return;
}this._startSelectionModification();
var children=this.getTarget().getChildren();

for(var i=0,l=children.length;i<l;i++){this._removeBindingsFrom(children[i]);
}var oldTable=this.__lookupTable;
this.__buildUpLookupTable();
if(oldTable.length>this.__lookupTable.length){for(var j=oldTable.length;j>this.__lookupTable.length;j--){this.getTarget().removeAt(j-1);
}}else if(oldTable.length<this.__lookupTable.length){for(var j=oldTable.length;j<this.__lookupTable.length;j++){var tempItem=this._createItem();
this.getTarget().add(tempItem);
}}var listItems=this.getTarget().getChildren();

for(var i=0;i<listItems.length;i++){this._bindListItem(listItems[i],this.__lookup(i));
}this.__moveChangeListenerAtTheEnd();
this._endSelectionModification();
this._updateSelection();
},__removeFilter:function(){this.__buildUpLookupTable();
this.__changeModelLength();
this.__renewBindings();
qx.ui.core.queue.Widget.add(this);
},__buildUpLookupTable:function(){var model=this.getModel();

if(model==null){return;
}var delegate=this.getDelegate();

if(delegate!=null){var filter=delegate.filter;
}this.__lookupTable=[];

for(var i=0;i<model.getLength();i++){if(filter==null||filter(model.getItem(i))){this.__lookupTable.push(i);
}}},__lookup:function(index){return this.__lookupTable[index];
}},destruct:function(){this.__lookupTable=this.__onUpdate=this.__boundProperties=null;
this.__boundPropertiesReverse=null;
}});
qx.Interface.define("qx.ui.core.ISingleSelection",{events:{"changeSelection":"qx.event.type.Data"},members:{getSelection:function(){return true;
},setSelection:function(items){return arguments.length==1;
},resetSelection:function(){return true;
},isSelected:function(item){return arguments.length==1;
},isSelectionEmpty:function(){return true;
},getSelectables:function(){return true;
}}});
qx.Interface.define("qx.ui.core.IMultiSelection",{extend:qx.ui.core.ISingleSelection,members:{selectAll:function(){return true;
},addToSelection:function(item){return arguments.length==1;
},removeFromSelection:function(item){return arguments.length==1;
}}});
qx.Interface.define("qx.ui.form.IModel",{events:{"changeModel":"qx.event.type.Data"},members:{setModel:function(value){},getModel:function(){},resetModel:function(){}}});
qx.Mixin.define("qx.ui.form.MModelProperty",{properties:{model:{nullable:true,event:"changeModel"}}});
qx.Class.define("qx.ui.form.ListItem",{extend:qx.ui.basic.Atom,implement:[qx.ui.form.IModel],include:[qx.ui.form.MModelProperty],construct:function(label,icon,model){this.base(arguments,label,icon);

if(model!=null){this.setModel(model);
}},events:{"action":"qx.event.type.Event"},properties:{appearance:{refine:true,init:"listitem"}},members:{_forwardStates:{focused:true,hovered:true,selected:true,dragover:true}}});
qx.Interface.define("qx.data.store.IStoreDelegate",{members:{getModelClass:function(properties){},getModelSuperClass:function(properties){},getModelMixins:function(properties){},manipulateData:function(data){},configureRequest:function(request){}}});
qx.Interface.define("qx.data.controller.IControllerDelegate",{members:{configureItem:function(item){},filter:function(data){},createItem:function(){},bindItem:function(controller,item,id){}}});
qx.Class.define("qx.data.store.Yql",{extend:qx.data.store.Jsonp,construct:function(query,delegate,https){var prefix=https?"https":"http";
var url=prefix+"://query.yahooapis.com/v1/public/yql?q="+encodeURIComponent(query)+"&format=json&diagnostics=false&"+"env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys";
this.base(arguments,url,delegate,"callback");
}});
qx.Class.define("qx.data.controller.Form",{extend:qx.core.Object,construct:function(model,target){this.base(arguments);
this.__bindingOptions={};

if(model!=null){this.setModel(model);
}
if(target!=null){this.setTarget(target);
}},properties:{model:{check:"qx.core.Object",apply:"_applyModel",event:"changeModel",nullable:true},target:{check:"qx.ui.form.Form",apply:"_applyTarget",event:"changeTarget",nullable:true,init:null}},members:{__objectController:null,__bindingOptions:null,addBindingOptions:function(name,model2target,target2model){this.__bindingOptions[name]=[model2target,target2model];
if(this.getModel()==null||this.getTarget()==null){return;
}var item=this.getTarget().getItems()[name];
var targetProperty=this.__isModelSelectable(item)?"modelSelection[0]":"value";
this.__objectController.removeTarget(item,targetProperty,name);
this.__objectController.addTarget(item,targetProperty,name,true,model2target,target2model);
},createModel:function(includeBubbleEvents){var target=this.getTarget();
if(target==null){throw new Error("No target is set.");
}var items=target.getItems();
var data={};

for(var name in items){var names=name.split(".");
var currentData=data;

for(var i=0;i<names.length;i++){if(i+1==names.length){var clazz=items[name].constructor;

if(qx.Class.hasInterface(clazz,qx.ui.core.ISingleSelection)){currentData[names[i]]=items[name].getModelSelection();
}else{currentData[names[i]]=items[name].getValue();
}}else{if(!currentData[names[i]]){currentData[names[i]]={};
}currentData=currentData[names[i]];
}}}var model=qx.data.marshal.Json.createModel(data,includeBubbleEvents);
this.setModel(model);
return model;
},_applyTarget:function(value,old){if(old!=null){this.__tearDownBinding(old);
}if(this.getModel()==null){return;
}if(value!=null){this.__setUpBinding();
}},_applyModel:function(value,old){if(this.__objectController!=null){var items=this.getTarget().getItems();

for(var name in items){var item=items[name];
var targetProperty=this.__isModelSelectable(item)?"modelSelection[0]":"value";
this.__objectController.removeTarget(item,targetProperty,name);
}}if(this.__objectController!=null){this.__objectController.setModel(value);
}if(this.getTarget()==null){return;
}if(value!=null){this.__setUpBinding();
}},__setUpBinding:function(){if(this.__objectController==null){this.__objectController=new qx.data.controller.Object(this.getModel());
}var items=this.getTarget().getItems();
for(var name in items){var item=items[name];
var targetProperty=this.__isModelSelectable(item)?"modelSelection[0]":"value";
var options=this.__bindingOptions[name];

if(options==null){this.__objectController.addTarget(item,targetProperty,name,true);
}else{this.__objectController.addTarget(item,targetProperty,name,true,options[0],options[1]);
}}},__tearDownBinding:function(oldTarget){if(this.__objectController==null){return;
}var items=oldTarget.getItems();
for(var name in items){var item=items[name];
var targetProperty=this.__isModelSelectable(item)?"modelSelection[0]":"value";
this.__objectController.removeTarget(item,targetProperty,name);
}},__isModelSelectable:function(item){return qx.Class.hasInterface(item.constructor,qx.ui.core.ISingleSelection)&&qx.Class.hasInterface(item.constructor,qx.ui.form.IModelSelection);
}}});
qx.Class.define("qx.data.controller.Object",{extend:qx.core.Object,construct:function(model){this.base(arguments);
this.__bindings={};
this.__targets=[];

if(model!=null){this.setModel(model);
}},properties:{model:{check:"qx.core.Object",event:"changeModel",apply:"_applyModel",nullable:true}},members:{__targets:null,__bindings:null,_applyModel:function(value,old){for(var i=0;i<this.__targets.length;i++){var targetObject=this.__targets[i][0];
var targetProperty=this.__targets[i][1];
var sourceProperty=this.__targets[i][2];
var bidirectional=this.__targets[i][3];
var options=this.__targets[i][4];
var reverseOptions=this.__targets[i][5];
if(old!=undefined){this.__removeTargetFrom(targetObject,targetProperty,sourceProperty,old);
}if(value!=undefined){this.__addTarget(targetObject,targetProperty,sourceProperty,bidirectional,options,reverseOptions);
}else{targetObject["reset"+qx.lang.String.firstUp(targetProperty)]();
}}},addTarget:function(targetObject,targetProperty,sourceProperty,bidirectional,options,reverseOptions){this.__targets.push([targetObject,targetProperty,sourceProperty,bidirectional,options,reverseOptions]);
this.__addTarget(targetObject,targetProperty,sourceProperty,bidirectional,options,reverseOptions);
},__addTarget:function(targetObject,targetProperty,sourceProperty,bidirectional,options,reverseOptions){if(this.getModel()==null){return;
}var id=this.getModel().bind(sourceProperty,targetObject,targetProperty,options);
var idReverse=null;

if(bidirectional){idReverse=targetObject.bind(targetProperty,this.getModel(),sourceProperty,reverseOptions);
}var targetHash=targetObject.toHashCode();

if(this.__bindings[targetHash]==undefined){this.__bindings[targetHash]=[];
}this.__bindings[targetHash].push([id,idReverse,targetProperty,sourceProperty,options,reverseOptions]);
},removeTarget:function(targetObject,targetProperty,sourceProperty){this.__removeTargetFrom(targetObject,targetProperty,sourceProperty,this.getModel());
for(var i=0;i<this.__targets.length;i++){if(this.__targets[i][0]==targetObject&&this.__targets[i][1]==targetProperty&&this.__targets[i][2]==sourceProperty){this.__targets.splice(i,1);
}}},__removeTargetFrom:function(targetObject,targetProperty,sourceProperty,sourceObject){if(!(targetObject instanceof qx.core.Object)){return ;
}var currentListing=this.__bindings[targetObject.toHashCode()];
if(currentListing==undefined||currentListing.length==0){return;
}for(var i=0;i<currentListing.length;i++){if(currentListing[i][2]==targetProperty&&currentListing[i][3]==sourceProperty){var id=currentListing[i][0];
sourceObject.removeBinding(id);
if(currentListing[i][1]!=null){targetObject.removeBinding(currentListing[i][1]);
}currentListing.splice(i,1);
return;
}}}},destruct:function(){this.__bindings=this.__targets=null;
}});
qx.Interface.define("qx.ui.form.IModelSelection",{members:{setModelSelection:function(value){},getModelSelection:function(){}}});
qx.Class.define("qx.data.controller.Tree",{extend:qx.core.Object,include:qx.data.controller.MSelection,construct:function(model,target,childPath,labelPath){this.base(arguments);
this.__bindings={};
this.__boundProperties=[];
this.__childrenRef={};

if(childPath!=null){this.setChildPath(childPath);
}
if(labelPath!=null){this.setLabelPath(labelPath);
}
if(model!=null){this.setModel(model);
}
if(target!=null){this.setTarget(target);
}},properties:{model:{check:"qx.core.Object",apply:"_applyModel",event:"changeModel",nullable:true},target:{apply:"_applyTarget",event:"changeTarget",init:null},childPath:{check:"String",apply:"_applyChildPath",nullable:true},labelPath:{check:"String",apply:"_applyLabelPath",nullable:true},iconPath:{check:"String",apply:"_applyIconPath",nullable:true},labelOptions:{apply:"_applyLabelOptions",nullable:true},iconOptions:{apply:"_applyIconOptions",nullable:true},delegate:{apply:"_applyDelegate",init:null,nullable:true}},members:{__childrenRef:null,__bindings:null,__boundProperties:null,_applyDelegate:function(value,old){this._setConfigureItem(value,old);
this._setCreateItem(value,old);
this._setBindItem(value,old);
},_applyIconOptions:function(value,old){this.__renewBindings();
},_applyLabelOptions:function(value,old){this.__renewBindings();
},_applyTarget:function(value,old){if(old!=undefined){var oldRoot=old.getRoot();
old.setRoot(null);
oldRoot.destroy();
}if(this.getModel()!=null){this.__buildTree();
}this._addChangeTargetListener(value,old);
},_applyModel:function(value,old){this.__buildTree();
},_applyChildPath:function(value,old){this.__buildTree();
},_applyIconPath:function(value,old){this.__renewBindings();
},_applyLabelPath:function(value,old){this.__renewBindings();
},__changeModelChildren:function(ev){var children=ev.getTarget();
var treeNode=this.__childrenRef[children.toHashCode()].treeNode;
var modelNode=this.__childrenRef[children.toHashCode()].modelNode;
this.__updateTreeChildren(treeNode,modelNode);
this._updateSelection();
},__changeChildrenArray:function(e){var children=e.getData();
var oldChildren=e.getOldData();
var oldRef=this.__childrenRef[oldChildren.toHashCode()];
delete this.__childrenRef[oldChildren.toHashCode()];
oldRef.modelNode.removeListenerById(oldRef.changeChildernListenerId);
var modelNode=oldRef.modelNode;
var property=qx.Class.getPropertyDefinition(oldRef.modelNode.constructor,this.getChildPath());
var eventName=property.event;
var changeChildernListenerId=modelNode.addListener(eventName,this.__changeChildrenArray,this);
var treeNode=oldRef.treeNode;
this.__childrenRef[children.toHashCode()]={modelNode:modelNode,treeNode:treeNode,changeListenerId:oldRef.changeListenerId,changeChildernListenerId:changeChildernListenerId};
this.__updateTreeChildren(treeNode,modelNode);
this._updateSelection();
},_createItem:function(){var delegate=this.getDelegate();
if(delegate!=null&&delegate.createItem!=null){var item=delegate.createItem();
}else{var item=new qx.ui.tree.TreeFolder();
}if(delegate!=null&&delegate.configureItem!=null){delegate.configureItem(item);
}return item;
},__buildTree:function(){if(this.getTarget()==null||this.getChildPath()==null){return;
}if((this.getLabelPath()==null&&this.getDelegate()==null)||(this.getLabelPath()==null&&this.getDelegate()!=null&&this.getDelegate().bindItem==null)){return;
}var oldRoot=this.getTarget().getRoot();

if(oldRoot!=null){this.getTarget().resetRoot();
oldRoot.destroy();
}if(this.getModel()!=null){var rootNode=this._createItem();
rootNode.setModel(this.getModel());
this.getTarget().setRoot(rootNode);
this.__addBinding(this.getModel(),rootNode);
this.__updateTreeChildren(rootNode,this.getModel());
}},__updateTreeChildren:function(rootNode,modelNode){if(modelNode["get"+qx.lang.String.firstUp(this.getChildPath())]==undefined){return;
}var children=modelNode["get"+qx.lang.String.firstUp(this.getChildPath())]();
if(this.__childrenRef[children.toHashCode()]==undefined){var changeListenerId=children.addListener("change",this.__changeModelChildren,this);
var property=qx.Class.getPropertyDefinition(modelNode.constructor,this.getChildPath());
var eventName=property.event;
var changeChildernListenerId=modelNode.addListener(eventName,this.__changeChildrenArray,this);
this.__childrenRef[children.toHashCode()]={modelNode:modelNode,treeNode:rootNode,changeListenerId:changeListenerId,changeChildernListenerId:changeChildernListenerId};
}for(var i=0;i<children.length;i++){if(rootNode.getChildren()[i]==null||children.getItem(i)!=rootNode.getChildren()[i].getModel()){for(var j=i;j<rootNode.getChildren().length;j++){if(rootNode.getChildren()[j].getModel()===children.getItem(i)){var oldIndex=j;
break;
}}if(oldIndex!=undefined){var currentNode=rootNode.getChildren()[oldIndex];
if(this.getTarget().isSelected(currentNode)){var wasSelected=true;
}rootNode.removeAt(oldIndex);
rootNode.addAt(currentNode,i);
if(wasSelected){this.getTarget().addToSelection(currentNode);
}}else{var treeNode=this._createItem();
treeNode.setModel(children.getItem(i));
rootNode.addAt(treeNode,i);
this.__addBinding(children.getItem(i),treeNode);
this.__updateTreeChildren(treeNode,children.getItem(i));
}}}for(var i=rootNode.getChildren().length-1;i>=children.length;i--){var treeFolder=rootNode.getChildren()[i];
this.__removeFolder(treeFolder,rootNode);
}},__emptyTarget:function(){if(this.getTarget()==null){return;
}var root=this.getTarget().getRoot();

if(root!=null){this.getTarget().setRoot(null);
this.__removeAllFolders(root);
this.__removeBinding(root.getModel());
root.destroy();
this.__childrenRef={};
}},__removeAllFolders:function(node){var children=node.getChildren();
for(var i=children.length-1;i>=0;i--){if(children[i].getChildren().length>0){this.__removeAllFolders(children[i]);
}this.__removeFolder(children[i],node);
}},__removeFolder:function(treeFolder,rootNode){var model=treeFolder.getModel();
if(model["get"+qx.lang.String.firstUp(this.getChildPath())]!=undefined){delete this.__childrenRef[model["get"+qx.lang.String.firstUp(this.getChildPath())]().toHashCode()];
}this.__removeBinding(model);
rootNode.remove(treeFolder);
treeFolder.destroy();
},bindProperty:function(sourcePath,targetPath,options,targetWidget,modelNode){var id=modelNode.bind(sourcePath,targetWidget,targetPath,options);
if(this.__bindings[targetPath]==null){this.__bindings[targetPath]={};
}var storage=this.__bindings[targetPath];

if(storage[modelNode.toHashCode()]){storage[modelNode.toHashCode()].reverseId=id;
}else{storage[modelNode.toHashCode()]={id:id,reverseId:null,treeNode:targetWidget};
}if(!qx.lang.Array.contains(this.__boundProperties,targetPath)){this.__boundProperties.push(targetPath);
}},bindPropertyReverse:function(targetPath,sourcePath,options,sourceWidget,modelNode){var id=sourceWidget.bind(sourcePath,modelNode,targetPath,options);
if(this.__bindings[sourcePath]==null){this.__bindings[sourcePath]={};
}var storage=this.__bindings[sourcePath];

if(storage[modelNode.toHashCode()]){storage[modelNode.toHashCode()].reverseId=id;
}else{storage[modelNode.toHashCode()]={id:null,reverseId:id,treeNode:sourceWidget};
}if(!qx.lang.Array.contains(this.__boundProperties,sourcePath)){this.__boundProperties.push(sourcePath);
}},bindDefaultProperties:function(treeNode,modelNode){this.bindProperty(this.getLabelPath(),"label",this.getLabelOptions(),treeNode,modelNode);
if(this.getIconPath()!=null){this.bindProperty(this.getIconPath(),"icon",this.getIconOptions(),treeNode,modelNode);
}},__renewBindings:function(){var firstProp;

for(var key in this.__bindings){firstProp=key;
break;
}for(var hash in this.__bindings[firstProp]){var treeNode=this.__bindings[firstProp][hash].treeNode;
var modelNode=qx.core.ObjectRegistry.fromHashCode(hash);
this.__removeBinding(modelNode);
this.__addBinding(modelNode,treeNode);
}},__addBinding:function(modelNode,treeNode){var delegate=this.getDelegate();
if(delegate!=null&&delegate.bindItem!=null){delegate.bindItem(this,treeNode,modelNode);
}else{this.bindDefaultProperties(treeNode,modelNode);
}},__removeBinding:function(modelNode){for(var i=0;i<this.__boundProperties.length;i++){var property=this.__boundProperties[i];
var bindingsMap=this.__bindings[property][modelNode.toHashCode()];

if(bindingsMap!=null){if(bindingsMap.id){modelNode.removeBinding(bindingsMap.id);
}
if(bindingsMap.reverseId){bindingsMap.treeNode.removeBinding(bindingsMap.reverseId);
}delete this.__bindings[property][modelNode.toHashCode()];
}}},_setConfigureItem:function(value,old){if(value!=null&&value.configureItem!=null&&this.getTarget()!=null&&this.getModel()!=null){var children=this.getTarget().getRoot().getItems(true,true,false);

for(var i=0;i<children.length;i++){value.configureItem(children[i]);
}}},_setCreateItem:function(value,old){if(this.getTarget()==null||this.getModel()==null){return;
}if(value==null||value.createItem==null){return;
}if(old&&old.createItem&&value&&value.createItem&&old.createItem==value.createTtem){return;
}this._startSelectionModification();
this.__emptyTarget();
this.__buildTree();
this._endSelectionModification();
this._updateSelection();
},_setBindItem:function(value,old){if(value!=null&&value.bindItem!=null){if(old!=null&&old.bindItem!=null&&value.bindItem==old.bindItem){return;
}this.__buildTree();
}}},destruct:function(){this.__bindings=this.__childrenRef=this.__boundProperties=null;
}});
qx.Class.define("qx.ui.tree.AbstractTreeItem",{extend:qx.ui.core.Widget,type:"abstract",include:[qx.ui.form.MModelProperty],implement:[qx.ui.form.IModel],construct:function(){this.base(arguments);
this.__children=[];
this._setLayout(new qx.ui.layout.HBox());
this._addWidgets();
this.initOpen();
},properties:{open:{check:"Boolean",init:false,event:"changeOpen",apply:"_applyOpen"},openSymbolMode:{check:["always","never","auto"],init:"auto",event:"changeOpenSymbolMode",apply:"_applyOpenSymbolMode"},indent:{check:"Integer",init:19,apply:"_applyIndent",themeable:true},parent:{check:"qx.ui.tree.AbstractTreeItem",nullable:true},icon:{check:"String",apply:"_applyIcon",nullable:true,themeable:true},label:{check:"String",apply:"_applyLabel",init:""}},members:{__children:null,__childrenContainer:null,__labelAdded:null,__iconAdded:null,__spacer:null,_addWidgets:function(){throw new Error("Abstract method call.");
},_createChildControlImpl:function(id){var control;

switch(id){case "label":control=new qx.ui.basic.Label().set({alignY:"middle",value:this.getLabel()});
break;
case "icon":control=new qx.ui.basic.Image().set({alignY:"middle",source:this.getIcon()});
break;
case "open":control=new qx.ui.tree.FolderOpenButton().set({alignY:"middle"});
control.addListener("changeOpen",this._onChangeOpen,this);
control.addListener("resize",this._updateIndent,this);
break;
}return control||this.base(arguments,id);
},getTree:function(){var treeItem=this;

while(treeItem.getParent()){treeItem=treeItem.getParent();
}var tree=treeItem.getLayoutParent()?treeItem.getLayoutParent().getLayoutParent():0;

if(tree&&tree instanceof qx.ui.core.scroll.ScrollPane){return tree.getLayoutParent();
}return null;
},addWidget:function(widget,options){this._add(widget,options);
},addSpacer:function(){if(!this.__spacer){this.__spacer=new qx.ui.core.Spacer();
}else{this._remove(this.__spacer);
}this._add(this.__spacer);
},addOpenButton:function(){this._add(this.getChildControl("open"));
},_onChangeOpen:function(e){if(this.isOpenable()){this.setOpen(e.getData());
}},addIcon:function(){var icon=this.getChildControl("icon");

if(this.__iconAdded){this._remove(icon);
}this._add(icon);
this.__iconAdded=true;
},addLabel:function(text){var label=this.getChildControl("label");

if(this.__labelAdded){this._remove(label);
}
if(text){this.setLabel(text);
}else{label.setValue(this.getLabel());
}this._add(label);
this.__labelAdded=true;
},addState:function(state){this.base(arguments,state);
var children=this._getChildren();

for(var i=0,l=children.length;i<l;i++){var child=children[i];

if(child.addState){children[i].addState(state);
}}},removeState:function(state){this.base(arguments,state);
var children=this._getChildren();

for(var i=0,l=children.length;i<l;i++){var child=children[i];

if(child.addState){children[i].removeState(state);
}}},_applyIcon:function(value,old){var icon=this.getChildControl("icon",true);

if(icon){icon.setSource(value);
}},_applyLabel:function(value,old){var label=this.getChildControl("label",true);

if(label){label.setValue(value);
}},_applyOpen:function(value,old){if(this.hasChildren()){this.getChildrenContainer().setVisibility(value?"visible":"excluded");
}var open=this.getChildControl("open",true);

if(open){open.setOpen(value);
}value?this.addState("opened"):this.removeState("opened");
},isOpenable:function(){var openMode=this.getOpenSymbolMode();
return (openMode==="always"||openMode==="auto"&&this.hasChildren());
},_shouldShowOpenSymbol:function(){var open=this.getChildControl("open",true);

if(!open){return false;
}var tree=this.getTree();

if(!tree.getRootOpenClose()){if(tree.getHideRoot()){if(tree.getRoot()==this.getParent()){return false;
}}else{if(tree.getRoot()==this){return false;
}}}return this.isOpenable();
},_applyOpenSymbolMode:function(value,old){this._updateIndent();
},_updateIndent:function(){if(!this.getTree()){return;
}var openWidth=0;
var open=this.getChildControl("open",true);

if(open){if(this._shouldShowOpenSymbol()){open.show();
var openBounds=open.getBounds();

if(openBounds){openWidth=openBounds.width;
}else{return;
}}else{open.exclude();
}}
if(this.__spacer){this.__spacer.setWidth((this.getLevel()+1)*this.getIndent()-openWidth);
}},_applyIndent:function(value,old){this._updateIndent();
},getLevel:function(){var tree=this.getTree();

if(!tree){return;
}var treeItem=this;
var level=-1;

while(treeItem){treeItem=treeItem.getParent();
level+=1;
}if(tree.getHideRoot()){level-=1;
}
if(!tree.getRootOpenClose()){level-=1;
}return level;
},syncWidget:function(){this._updateIndent();
},getChildrenContainer:function(){if(!this.__childrenContainer){this.__childrenContainer=new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({visibility:this.isOpen()?"visible":"excluded"});
}return this.__childrenContainer;
},hasChildrenContainer:function(){return this.__childrenContainer;
},getParentChildrenContainer:function(){if(this.getParent()){return this.getParent().getChildrenContainer();
}else if(this.getLayoutParent()){return this.getLayoutParent();
}else{return null;
}},getChildren:function(){return this.__children;
},hasChildren:function(){return this.__children?this.__children.length>0:false;
},getItems:function(recursive,invisible,ignoreFirst){if(ignoreFirst!==false){var items=[];
}else{var items=[this];
}var addChildren=this.hasChildren()&&(invisible!==false||this.isOpen());

if(addChildren){var children=this.getChildren();

if(recursive===false){items=items.concat(children);
}else{for(var i=0,chl=children.length;i<chl;i++){items=items.concat(children[i].getItems(recursive,invisible,false));
}}}return items;
},recursiveAddToWidgetQueue:function(){var children=this.getItems(true,true,false);

for(var i=0,l=children.length;i<l;i++){qx.ui.core.queue.Widget.add(children[i]);
}},__addChildrenToParent:function(){if(this.getParentChildrenContainer()){this.getParentChildrenContainer()._addAfter(this.getChildrenContainer(),this);
}},add:function(varargs){var container=this.getChildrenContainer();
var tree=this.getTree();

for(var i=0,l=arguments.length;i<l;i++){var treeItem=arguments[i];
var oldParent=treeItem.getParent();

if(oldParent){oldParent.remove(treeItem);
}treeItem.setParent(this);
var hasChildren=this.hasChildren();
container.add(treeItem);

if(treeItem.hasChildren()){container.add(treeItem.getChildrenContainer());
}this.__children.push(treeItem);

if(!hasChildren){this.__addChildrenToParent();
}
if(tree){treeItem.recursiveAddToWidgetQueue();
tree.fireNonBubblingEvent("addItem",qx.event.type.Data,[treeItem]);
}}
if(tree){qx.ui.core.queue.Widget.add(this);
}},addAt:function(treeItem,index){{this.assert(index<=this.__children.length&&index>=0,"Invalid child index: "+index);
};

if(index==this.__children.length){this.add(treeItem);
return;
}var oldParent=treeItem.getParent();

if(oldParent){oldParent.remove(treeItem);
}var container=this.getChildrenContainer();
treeItem.setParent(this);
var hasChildren=this.hasChildren();
var nextItem=this.__children[index];
container.addBefore(treeItem,nextItem);

if(treeItem.hasChildren()){container.addAfter(treeItem.getChildrenContainer(),treeItem);
}qx.lang.Array.insertAt(this.__children,treeItem,index);

if(!hasChildren){this.__addChildrenToParent();
}
if(this.getTree()){treeItem.recursiveAddToWidgetQueue();
qx.ui.core.queue.Widget.add(this);
}},addBefore:function(treeItem,before){{this.assert(this.__children.indexOf(before)>=0);
};
this.addAt(treeItem,this.__children.indexOf(before));
},addAfter:function(treeItem,after){{this.assert(this.__children.indexOf(after)>=0);
};
this.addAt(treeItem,this.__children.indexOf(after)+1);
},addAtBegin:function(treeItem){this.addAt(treeItem,0);
},remove:function(varargs){for(var i=0,l=arguments.length;i<l;i++){var treeItem=arguments[i];

if(this.__children.indexOf(treeItem)==-1){this.warn("Cannot remove treeitem '"+treeItem+"'. It is not a child of this tree item.");
return;
}var container=this.getChildrenContainer();

if(treeItem.hasChildrenContainer()){var treeItemChildContainer=treeItem.getChildrenContainer();

if(container.getChildren().indexOf(treeItemChildContainer)>=0){container.remove(treeItemChildContainer);
}}qx.lang.Array.remove(this.__children,treeItem);
treeItem.setParent(null);
container.remove(treeItem);
}var tree=this.getTree();

if(tree){tree.fireNonBubblingEvent("removeItem",qx.event.type.Data,[treeItem]);
}qx.ui.core.queue.Widget.add(this);
},removeAt:function(index){var item=this.__children[index];

if(item){this.remove(item);
}},removeAll:function(){for(var i=this.__children.length-1;i>=0;i--){this.remove(this.__children[i]);
}}},destruct:function(){this._disposeArray("__children");
this._disposeObjects("__spacer","__childrenContainer");
}});
qx.Class.define("qx.ui.tree.TreeFolder",{extend:qx.ui.tree.AbstractTreeItem,construct:function(label){this.base(arguments);

if(label){this.setLabel(label);
}},properties:{appearance:{refine:true,init:"tree-folder"}},members:{_addWidgets:function(){this.addSpacer();
this.addOpenButton();
this.addIcon();
this.addLabel();
}}});
qx.Class.define("qx.ui.layout.HBox",{extend:qx.ui.layout.Abstract,construct:function(spacing,alignX,separator){this.base(arguments);

if(spacing){this.setSpacing(spacing);
}
if(alignX){this.setAlignX(alignX);
}
if(separator){this.setSeparator(separator);
}},properties:{alignX:{check:["left","center","right"],init:"left",apply:"_applyLayoutChange"},alignY:{check:["top","middle","bottom"],init:"top",apply:"_applyLayoutChange"},spacing:{check:"Integer",init:0,apply:"_applyLayoutChange"},separator:{check:"Decorator",nullable:true,apply:"_applyLayoutChange"},reversed:{check:"Boolean",init:false,apply:"_applyReversed"}},members:{__widths:null,__flexs:null,__enableFlex:null,__children:null,_applyReversed:function(){this._invalidChildrenCache=true;
this._applyLayoutChange();
},__rebuildCache:function(){var children=this._getLayoutChildren();
var length=children.length;
var enableFlex=false;
var reuse=this.__widths&&this.__widths.length!=length&&this.__flexs&&this.__widths;
var props;
var widths=reuse?this.__widths:new Array(length);
var flexs=reuse?this.__flexs:new Array(length);
if(this.getReversed()){children=children.concat().reverse();
}for(var i=0;i<length;i++){props=children[i].getLayoutProperties();

if(props.width!=null){widths[i]=parseFloat(props.width)/100;
}
if(props.flex!=null){flexs[i]=props.flex;
enableFlex=true;
}else{flexs[i]=0;
}}if(!reuse){this.__widths=widths;
this.__flexs=flexs;
}this.__enableFlex=enableFlex;
this.__children=children;
delete this._invalidChildrenCache;
},verifyLayoutProperty:function(item,name,value){this.assert(name==="flex"||name==="width","The property '"+name+"' is not supported by the HBox layout!");

if(name=="width"){this.assertMatch(value,qx.ui.layout.Util.PERCENT_VALUE);
}else{this.assertNumber(value);
this.assert(value>=0);
}},renderLayout:function(availWidth,availHeight){if(this._invalidChildrenCache){this.__rebuildCache();
}var children=this.__children;
var length=children.length;
var util=qx.ui.layout.Util;
var spacing=this.getSpacing();
var separator=this.getSeparator();

if(separator){var gaps=util.computeHorizontalSeparatorGaps(children,spacing,separator);
}else{var gaps=util.computeHorizontalGaps(children,spacing,true);
}var i,child,width,percent;
var widths=[];
var allocatedWidth=gaps;

for(i=0;i<length;i+=1){percent=this.__widths[i];
width=percent!=null?Math.floor((availWidth-gaps)*percent):children[i].getSizeHint().width;
widths.push(width);
allocatedWidth+=width;
}if(this.__enableFlex&&allocatedWidth!=availWidth){var flexibles={};
var flex,offset;

for(i=0;i<length;i+=1){flex=this.__flexs[i];

if(flex>0){hint=children[i].getSizeHint();
flexibles[i]={min:hint.minWidth,value:widths[i],max:hint.maxWidth,flex:flex};
}}var result=util.computeFlexOffsets(flexibles,availWidth,allocatedWidth);

for(i in result){offset=result[i].offset;
widths[i]+=offset;
allocatedWidth+=offset;
}}var left=children[0].getMarginLeft();
if(allocatedWidth<availWidth&&this.getAlignX()!="left"){left=availWidth-allocatedWidth;

if(this.getAlignX()==="center"){left=Math.round(left/2);
}}var hint,top,height,width,marginRight,marginTop,marginBottom;
var spacing=this.getSpacing();
this._clearSeparators();
if(separator){var separatorInsets=qx.theme.manager.Decoration.getInstance().resolve(separator).getInsets();
var separatorWidth=separatorInsets.left+separatorInsets.right;
}for(i=0;i<length;i+=1){child=children[i];
width=widths[i];
hint=child.getSizeHint();
marginTop=child.getMarginTop();
marginBottom=child.getMarginBottom();
height=Math.max(hint.minHeight,Math.min(availHeight-marginTop-marginBottom,hint.maxHeight));
top=util.computeVerticalAlignOffset(child.getAlignY()||this.getAlignY(),height,availHeight,marginTop,marginBottom);
if(i>0){if(separator){left+=marginRight+spacing;
this._renderSeparator(separator,{left:left,top:0,width:separatorWidth,height:availHeight});
left+=separatorWidth+spacing+child.getMarginLeft();
}else{left+=util.collapseMargins(spacing,marginRight,child.getMarginLeft());
}}child.renderLayout(left,top,width,height);
left+=width;
marginRight=child.getMarginRight();
}},_computeSizeHint:function(){if(this._invalidChildrenCache){this.__rebuildCache();
}var util=qx.ui.layout.Util;
var children=this.__children;
var minWidth=0,width=0,percentMinWidth=0;
var minHeight=0,height=0;
var child,hint,margin;
for(var i=0,l=children.length;i<l;i+=1){child=children[i];
hint=child.getSizeHint();
width+=hint.width;
var flex=this.__flexs[i];
var percent=this.__widths[i];

if(flex){minWidth+=hint.minWidth;
}else if(percent){percentMinWidth=Math.max(percentMinWidth,Math.round(hint.minWidth/percent));
}else{minWidth+=hint.width;
}margin=child.getMarginTop()+child.getMarginBottom();
if((hint.height+margin)>height){height=hint.height+margin;
}if((hint.minHeight+margin)>minHeight){minHeight=hint.minHeight+margin;
}}minWidth+=percentMinWidth;
var spacing=this.getSpacing();
var separator=this.getSeparator();

if(separator){var gaps=util.computeHorizontalSeparatorGaps(children,spacing,separator);
}else{var gaps=util.computeHorizontalGaps(children,spacing,true);
}return {minWidth:minWidth+gaps,width:width+gaps,minHeight:minHeight,height:height};
}},destruct:function(){this.__widths=this.__flexs=this.__children=null;
}});
qx.Mixin.define("qx.ui.core.MExecutable",{events:{"execute":"qx.event.type.Event"},properties:{command:{check:"qx.ui.core.Command",apply:"_applyCommand",event:"changeCommand",nullable:true}},members:{__executableBindingIds:null,__semaphore:false,__executeListenerId:null,_bindableProperties:["enabled","label","icon","toolTipText","value","menu"],execute:function(){var cmd=this.getCommand();

if(cmd){if(this.__semaphore){this.__semaphore=false;
}else{this.__semaphore=true;
cmd.execute(this);
}}this.fireEvent("execute");
},__onCommandExecute:function(e){if(this.__semaphore){this.__semaphore=false;
return;
}this.__semaphore=true;
this.execute();
},_applyCommand:function(value,old){if(old!=null){old.removeListenerById(this.__executeListenerId);
}
if(value!=null){this.__executeListenerId=value.addListener("execute",this.__onCommandExecute,this);
}var ids=this.__executableBindingIds;

if(ids==null){this.__executableBindingIds=ids={};
}
for(var i=0;i<this._bindableProperties.length;i++){var property=this._bindableProperties[i];
if(old!=null&&ids[property]!=null){old.removeBinding(ids[property]);
ids[property]=null;
}if(value!=null&&qx.Class.hasProperty(this.constructor,property)){var cmdPropertyValue=value.get(property);

if(cmdPropertyValue==null){var selfPropertyValue=this.get(property);
}ids[property]=value.bind(property,this,property);
if(selfPropertyValue){this.set(property,selfPropertyValue);
}}}}},destruct:function(){this.__executableBindingIds=null;
}});
qx.Class.define("qx.ui.tree.FolderOpenButton",{extend:qx.ui.basic.Image,include:qx.ui.core.MExecutable,construct:function(){this.base(arguments);
this.initOpen();
this.addListener("click",this._onClick);
this.addListener("mousedown",this._stopPropagation,this);
this.addListener("mouseup",this._stopPropagation,this);
},properties:{open:{check:"Boolean",init:false,event:"changeOpen",apply:"_applyOpen"}},members:{_applyOpen:function(value,old){value?this.addState("opened"):this.removeState("opened");
this.execute();
},_stopPropagation:function(e){e.stopPropagation();
},_onClick:function(e){this.toggleOpen();
e.stopPropagation();
}}});
qx.Class.define("qx.ui.core.scroll.ScrollPane",{extend:qx.ui.core.Widget,construct:function(){this.base(arguments);
this.set({minWidth:0,minHeight:0});
this._setLayout(new qx.ui.layout.Grow());
this.addListener("resize",this._onUpdate);
var contentEl=this.getContentElement();
contentEl.addListener("scroll",this._onScroll,this);
contentEl.addListener("appear",this._onAppear,this);
},events:{update:"qx.event.type.Event"},properties:{scrollX:{check:"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxX()",apply:"_applyScrollX",event:"scrollX",init:0},scrollY:{check:"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxY()",apply:"_applyScrollY",event:"scrollY",init:0}},members:{add:function(widget){var old=this._getChildren()[0];

if(old){this._remove(old);
old.removeListener("resize",this._onUpdate,this);
}
if(widget){this._add(widget);
widget.addListener("resize",this._onUpdate,this);
}},remove:function(widget){if(widget){this._remove(widget);
widget.removeListener("resize",this._onUpdate,this);
}},getChildren:function(){return this._getChildren();
},_onUpdate:function(e){this.fireEvent("update");
},_onScroll:function(e){var contentEl=this.getContentElement();
this.setScrollX(contentEl.getScrollX());
this.setScrollY(contentEl.getScrollY());
},_onAppear:function(e){var contentEl=this.getContentElement();
var internalX=this.getScrollX();
var domX=contentEl.getScrollX();

if(internalX!=domX){contentEl.scrollToX(internalX);
}var internalY=this.getScrollY();
var domY=contentEl.getScrollY();

if(internalY!=domY){contentEl.scrollToY(internalY);
}},getItemTop:function(item){var top=0;

do{top+=item.getBounds().top;
item=item.getLayoutParent();
}while(item&&item!==this);
return top;
},getItemBottom:function(item){return this.getItemTop(item)+item.getBounds().height;
},getItemLeft:function(item){var left=0;
var parent;

do{left+=item.getBounds().left;
parent=item.getLayoutParent();

if(parent){left+=parent.getInsets().left;
}item=parent;
}while(item&&item!==this);
return left;
},getItemRight:function(item){return this.getItemLeft(item)+item.getBounds().width;
},getScrollSize:function(){return this.getChildren()[0].getBounds();
},getScrollMaxX:function(){var paneSize=this.getInnerSize();
var scrollSize=this.getScrollSize();

if(paneSize&&scrollSize){return Math.max(0,scrollSize.width-paneSize.width);
}return 0;
},getScrollMaxY:function(){var paneSize=this.getInnerSize();
var scrollSize=this.getScrollSize();

if(paneSize&&scrollSize){return Math.max(0,scrollSize.height-paneSize.height);
}return 0;
},scrollToX:function(value){var max=this.getScrollMaxX();

if(value<0){value=0;
}else if(value>max){value=max;
}this.setScrollX(value);
},scrollToY:function(value){var max=this.getScrollMaxY();

if(value<0){value=0;
}else if(value>max){value=max;
}this.setScrollY(value);
},scrollByX:function(x){this.scrollToX(this.getScrollX()+x);
},scrollByY:function(y){this.scrollToY(this.getScrollY()+y);
},_applyScrollX:function(value){this.getContentElement().scrollToX(value);
},_applyScrollY:function(value){this.getContentElement().scrollToY(value);
}}});
qx.Class.define("qx.ui.core.Spacer",{extend:qx.ui.core.LayoutItem,construct:function(width,height){this.base(arguments);
this.setWidth(width!=null?width:0);
this.setHeight(height!=null?height:0);
},members:{checkAppearanceNeeds:function(){},addChildrenToQueue:function(queue){},destroy:function(){if(this.$$disposed){return;
}var parent=this.$$parent;

if(parent){parent._remove(this);
}qx.ui.core.queue.Dispose.add(this);
}}});
qx.Class.define("qx.ui.layout.VBox",{extend:qx.ui.layout.Abstract,construct:function(spacing,alignY,separator){this.base(arguments);

if(spacing){this.setSpacing(spacing);
}
if(alignY){this.setAlignY(alignY);
}
if(separator){this.setSeparator(separator);
}},properties:{alignY:{check:["top","middle","bottom"],init:"top",apply:"_applyLayoutChange"},alignX:{check:["left","center","right"],init:"left",apply:"_applyLayoutChange"},spacing:{check:"Integer",init:0,apply:"_applyLayoutChange"},separator:{check:"Decorator",nullable:true,apply:"_applyLayoutChange"},reversed:{check:"Boolean",init:false,apply:"_applyReversed"}},members:{__heights:null,__flexs:null,__enableFlex:null,__children:null,_applyReversed:function(){this._invalidChildrenCache=true;
this._applyLayoutChange();
},__rebuildCache:function(){var children=this._getLayoutChildren();
var length=children.length;
var enableFlex=false;
var reuse=this.__heights&&this.__heights.length!=length&&this.__flexs&&this.__heights;
var props;
var heights=reuse?this.__heights:new Array(length);
var flexs=reuse?this.__flexs:new Array(length);
if(this.getReversed()){children=children.concat().reverse();
}for(var i=0;i<length;i++){props=children[i].getLayoutProperties();

if(props.height!=null){heights[i]=parseFloat(props.height)/100;
}
if(props.flex!=null){flexs[i]=props.flex;
enableFlex=true;
}else{flexs[i]=0;
}}if(!reuse){this.__heights=heights;
this.__flexs=flexs;
}this.__enableFlex=enableFlex;
this.__children=children;
delete this._invalidChildrenCache;
},verifyLayoutProperty:function(item,name,value){this.assert(name==="flex"||name==="height","The property '"+name+"' is not supported by the VBox layout!");

if(name=="height"){this.assertMatch(value,qx.ui.layout.Util.PERCENT_VALUE);
}else{this.assertNumber(value);
this.assert(value>=0);
}},renderLayout:function(availWidth,availHeight){if(this._invalidChildrenCache){this.__rebuildCache();
}var children=this.__children;
var length=children.length;
var util=qx.ui.layout.Util;
var spacing=this.getSpacing();
var separator=this.getSeparator();

if(separator){var gaps=util.computeVerticalSeparatorGaps(children,spacing,separator);
}else{var gaps=util.computeVerticalGaps(children,spacing,true);
}var i,child,height,percent;
var heights=[];
var allocatedHeight=gaps;

for(i=0;i<length;i+=1){percent=this.__heights[i];
height=percent!=null?Math.floor((availHeight-gaps)*percent):children[i].getSizeHint().height;
heights.push(height);
allocatedHeight+=height;
}if(this.__enableFlex&&allocatedHeight!=availHeight){var flexibles={};
var flex,offset;

for(i=0;i<length;i+=1){flex=this.__flexs[i];

if(flex>0){hint=children[i].getSizeHint();
flexibles[i]={min:hint.minHeight,value:heights[i],max:hint.maxHeight,flex:flex};
}}var result=util.computeFlexOffsets(flexibles,availHeight,allocatedHeight);

for(i in result){offset=result[i].offset;
heights[i]+=offset;
allocatedHeight+=offset;
}}var top=children[0].getMarginTop();
if(allocatedHeight<availHeight&&this.getAlignY()!="top"){top=availHeight-allocatedHeight;

if(this.getAlignY()==="middle"){top=Math.round(top/2);
}}var hint,left,width,height,marginBottom,marginLeft,marginRight;
this._clearSeparators();
if(separator){var separatorInsets=qx.theme.manager.Decoration.getInstance().resolve(separator).getInsets();
var separatorHeight=separatorInsets.top+separatorInsets.bottom;
}for(i=0;i<length;i+=1){child=children[i];
height=heights[i];
hint=child.getSizeHint();
marginLeft=child.getMarginLeft();
marginRight=child.getMarginRight();
width=Math.max(hint.minWidth,Math.min(availWidth-marginLeft-marginRight,hint.maxWidth));
left=util.computeHorizontalAlignOffset(child.getAlignX()||this.getAlignX(),width,availWidth,marginLeft,marginRight);
if(i>0){if(separator){top+=marginBottom+spacing;
this._renderSeparator(separator,{top:top,left:0,height:separatorHeight,width:availWidth});
top+=separatorHeight+spacing+child.getMarginTop();
}else{top+=util.collapseMargins(spacing,marginBottom,child.getMarginTop());
}}child.renderLayout(left,top,width,height);
top+=height;
marginBottom=child.getMarginBottom();
}},_computeSizeHint:function(){if(this._invalidChildrenCache){this.__rebuildCache();
}var util=qx.ui.layout.Util;
var children=this.__children;
var minHeight=0,height=0,percentMinHeight=0;
var minWidth=0,width=0;
var child,hint,margin;
for(var i=0,l=children.length;i<l;i+=1){child=children[i];
hint=child.getSizeHint();
height+=hint.height;
var flex=this.__flexs[i];
var percent=this.__heights[i];

if(flex){minHeight+=hint.minHeight;
}else if(percent){percentMinHeight=Math.max(percentMinHeight,Math.round(hint.minHeight/percent));
}else{minHeight+=hint.height;
}margin=child.getMarginLeft()+child.getMarginRight();
if((hint.width+margin)>width){width=hint.width+margin;
}if((hint.minWidth+margin)>minWidth){minWidth=hint.minWidth+margin;
}}minHeight+=percentMinHeight;
var spacing=this.getSpacing();
var separator=this.getSeparator();

if(separator){var gaps=util.computeVerticalSeparatorGaps(children,spacing,separator);
}else{var gaps=util.computeVerticalGaps(children,spacing,true);
}return {minHeight:minHeight+gaps,height:height+gaps,minWidth:minWidth,width:width};
}},destruct:function(){this.__heights=this.__flexs=this.__children=null;
}});
qx.Class.define("qx.event.message.Bus",{type:"singleton",extend:qx.core.Object,statics:{getSubscriptions:function(){return this.getInstance().getSubscriptions();
},subscribe:function(message,subscriber,context){return this.getInstance().subscribe(message,subscriber,context);
},checkSubscription:function(message,subscriber,context){return this.getInstance().checkSubscription(message,subscriber,context);
},unsubscribe:function(message,subscriber,context){return this.getInstance().unsubscribe(message,subscriber,context);
},dispatch:function(msg){return this.getInstance().dispatch.apply(this.getInstance(),arguments);
}},construct:function(){this.__subscriptions={};
},members:{__subscriptions:null,getSubscriptions:function(){return this.__subscriptions;
},subscribe:function(message,subscriber,context){if(!message||typeof subscriber!="function"){this.error("Invalid parameters! "+[message,subscriber,context]);
return false;
}var sub=this.getSubscriptions();

if(this.checkSubscription(message)){if(this.checkSubscription(message,subscriber,context)){this.warn("Object method already subscribed to "+message);
return false;
}sub[message].push({subscriber:subscriber,context:context||null});
return true;
}else{sub[message]=[{subscriber:subscriber,context:context||null}];
return true;
}},checkSubscription:function(message,subscriber,context){var sub=this.getSubscriptions();

if(!sub[message]||sub[message].length===0){return false;
}
if(subscriber){for(var i=0;i<sub[message].length;i++){if(sub[message][i].subscriber===subscriber&&sub[message][i].context===(context||null)){return true;
}}return false;
}return true;
},unsubscribe:function(message,subscriber,context){var sub=this.getSubscriptions();
var subscrList=sub[message];

if(subscrList){if(!context){context=null;
}var i=subscrList.length;
var subscription;

do{subscription=subscrList[--i];

if(subscription.subscriber===subscriber&&subscription.context===context){subscrList.splice(i,1);

if(subscrList.length===0){sub[message]=null;
delete sub[message];
}return true;
}}while(i);
}return false;
},dispatch:function(msg){if(typeof msg=="string"){var value=typeof arguments[1]!="undefined"?arguments[1]:true;
msg=new qx.event.message.Message(msg,value);
}var sub=this.getSubscriptions();
var msgName=msg.getName();
var dispatched=false;

for(var key in sub){var pos=key.indexOf("*");

if(pos>-1){if(pos===0||key.substr(0,pos)===msgName.substr(0,pos)){this.__callSubscribers(sub[key],msg);
dispatched=true;
}}else{if(key===msgName){this.__callSubscribers(sub[msgName],msg);
dispatched=true;
}}}return dispatched;
},__callSubscribers:function(subscribers,msg){for(var i=0;i<subscribers.length;i++){var subscriber=subscribers[i].subscriber;
var context=subscribers[i].context;
if(context&&context.isDisposed){if(context.isDisposed()){subscribers.splice(i,1);
i--;
}else{subscriber.call(context,msg);
}}else{subscriber.call(context,msg);
}}}}});
qx.Class.define("qx.event.message.Message",{extend:qx.core.Object,construct:function(name,data){this.base(arguments);

if(name!=null){this.setName(name);
}
if(data!=null){this.setData(data);
}},properties:{name:{check:"String"},data:{init:null,nullable:true},sender:{check:"Object"}}});
qx.Class.define("qx.event.AcceleratingTimer",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__timer=new qx.event.Timer(this.getInterval());
this.__timer.addListener("interval",this._onInterval,this);
},events:{"interval":"qx.event.type.Event"},properties:{interval:{check:"Integer",init:100},firstInterval:{check:"Integer",init:500},minimum:{check:"Integer",init:20},decrease:{check:"Integer",init:2}},members:{__timer:null,__currentInterval:null,start:function(){this.__timer.setInterval(this.getFirstInterval());
this.__timer.start();
},stop:function(){this.__timer.stop();
this.__currentInterval=null;
},_onInterval:function(){this.__timer.stop();

if(this.__currentInterval==null){this.__currentInterval=this.getInterval();
}this.__currentInterval=Math.max(this.getMinimum(),this.__currentInterval-this.getDecrease());
this.__timer.setInterval(this.__currentInterval);
this.__timer.start();
this.fireEvent("interval");
}},destruct:function(){this._disposeObjects("__timer");
}});
qx.Class.define("qx.ui.core.Command",{extend:qx.core.Object,construct:function(shortcut){this.base(arguments);
this._shortcut=new qx.bom.Shortcut(shortcut);
this._shortcut.addListener("execute",this.execute,this);
},events:{"execute":"qx.event.type.Data"},properties:{enabled:{init:true,check:"Boolean",event:"changeEnabled",apply:"_applyEnabled"},shortcut:{check:"String",apply:"_applyShortcut",nullable:true},label:{check:"String",nullable:true,event:"changeLabel"},icon:{check:"String",nullable:true,event:"changeIcon"},toolTipText:{check:"String",nullable:true,event:"changeToolTipText"},value:{nullable:true,event:"changeValue"},menu:{check:"qx.ui.menu.Menu",nullable:true,event:"changeMenu"}},members:{_shortcut:null,_applyEnabled:function(value){this._shortcut.setEnabled(value);
},_applyShortcut:function(value){this._shortcut.setShortcut(value);
},execute:function(target){this.fireDataEvent("execute",target);
},toString:function(){return this._shortcut.toString();
}},destruct:function(){this._disposeObjects("_shortcut");
}});
qx.Class.define("qx.event.Command",{extend:qx.ui.core.Command,construct:function(shortcut){this.base(arguments,shortcut);
qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use qx.ui.core.Command instead.");
},members:{matchesKeyEvent:function(e){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"This message will be made private.");
return this._shortcut.matchesKeyEvent(e);
}}});
qx.Class.define("qx.event.handler.ElementResize",{extend:qx.core.Object,implement:qx.event.IEventHandler,construct:function(manager){this.base(arguments);
this.__manager=manager;
this.__elements={};
this.__timer=new qx.event.Timer(200);
this.__timer.addListener("interval",this._onInterval,this);
},statics:{PRIORITY:qx.event.Registration.PRIORITY_NORMAL,SUPPORTED_TYPES:{resize:true},TARGET_CHECK:qx.event.IEventHandler.TARGET_DOMNODE,IGNORE_CAN_HANDLE:false},members:{__elements:null,__manager:null,__timer:null,canHandleEvent:function(target,type){return target.tagName.toLowerCase()!=="body";
},registerEvent:function(target,type,capture){var hash=qx.core.ObjectRegistry.toHashCode(target);
var elements=this.__elements;

if(!elements[hash]){elements[hash]={element:target,width:qx.bom.element.Dimension.getWidth(target),height:qx.bom.element.Dimension.getHeight(target)};
this.__timer.start();
}},unregisterEvent:function(target,type,capture){var hash=qx.core.ObjectRegistry.toHashCode(target);
var elements=this.__elements;

if(elements[hash]){delete elements[hash];

if(qx.lang.Object.isEmpty(elements)){this.__timer.stop();
}}},_onInterval:function(e){var elements=this.__elements;

for(var key in elements){var data=elements[key];
var el=data.element;
var width=qx.bom.element.Dimension.getWidth(el);
var height=qx.bom.element.Dimension.getHeight(el);

if(data.height!==height||data.width!==width){qx.event.Registration.fireNonBubblingEvent(el,"resize",qx.event.type.Data,[{width:width,oldWidth:data.width,height:height,oldHeight:data.height}]);
data.width=width;
data.height=height;
}}}},destruct:function(){this.__manager=this.__elements=null;
this._disposeObjects("__timer");
},defer:function(statics){qx.event.Registration.addHandler(statics);
}});
qx.Class.define("qx.html.Iframe",{extend:qx.html.Element,construct:function(url,styles,attributes){this.base(arguments,"iframe",styles,attributes);
this._setProperty("source",url);
},events:{"load":"qx.event.type.Event"},members:{_applyProperty:function(name,value){this.base(arguments,name,value);

if(name=="source"){var element=this.getDomElement();
qx.bom.Iframe.setSource(element,value);
}},_createDomElement:function(){return qx.bom.Iframe.create(this._content);
},getWindow:function(){var element=this.getDomElement();

if(element){return qx.bom.Iframe.getWindow(element);
}else{return null;
}},getDocument:function(){var element=this.getDomElement();

if(element){return qx.bom.Iframe.getDocument(element);
}else{return null;
}},getBody:function(){var element=this.getDomElement();

if(element){return qx.bom.Iframe.getBody(element);
}else{return null;
}},setSource:function(source){this._setProperty("source",source);
return this;
},getSource:function(){return this._getProperty("source");
},setName:function(name){this.setAttribute("name",name);
return this;
},getName:function(){return this.getAttribute("name");
},reload:function(){var element=this.getDomElement();

if(element){var url=this.getSource();
this.setSource(null);
this.setSource(url);
}}}});
qx.Class.define("qx.html.Input",{extend:qx.html.Element,construct:function(type,styles,attributes){if(type==="select"||type==="textarea"){var nodeName=type;
}else{nodeName="input";
}this.base(arguments,nodeName,styles,attributes);
this.__type=type;
},members:{__type:null,__selectable:null,__enabled:null,_createDomElement:function(){return qx.bom.Input.create(this.__type);
},_applyProperty:function(name,value){this.base(arguments,name,value);
var element=this.getDomElement();

if(name==="value"){qx.bom.Input.setValue(element,value);
}else if(name==="wrap"){qx.bom.Input.setWrap(element,value);
}},setEnabled:qx.core.Variant.select("qx.client",{"webkit":function(value){this.__enabled=value;

if(!value){this.setStyles({"userModify":"read-only","userSelect":"none"});
}else{this.setStyles({"userModify":null,"userSelect":this.__selectable?null:"none"});
}},"default":function(value){this.setAttribute("disabled",value===false);
}}),setSelectable:qx.core.Variant.select("qx.client",{"webkit":function(value){this.__selectable=value;
this.setAttribute("qxSelectable",value?"on":"off");
if(qx.core.Variant.isSet("qx.client","webkit")){var selectable=this.__enabled?value?null:"none":"none";
this.setStyle("userSelect",selectable);
}},"default":function(value){this.setAttribute("qxSelectable",value?"on":"off");
}}),setValue:function(value){var element=this.getDomElement();

if(element){if(element.value!=value){qx.bom.Input.setValue(element,value);
}}else{this._setProperty("value",value);
}return this;
},getValue:function(){var element=this.getDomElement();

if(element){return qx.bom.Input.getValue(element);
}return this._getProperty("value")||"";
},setWrap:function(wrap){if(this.__type==="textarea"){this._setProperty("wrap",wrap);
}else{throw new Error("Text wrapping is only support by textareas!");
}return this;
},getWrap:function(){if(this.__type==="textarea"){return this._getProperty("wrap");
}else{throw new Error("Text wrapping is only support by textareas!");
}}}});
qx.Class.define("qx.html.Canvas",{extend:qx.html.Element,construct:function(styles,attributes){this.base(arguments,"canvas",styles,attributes);
this.__canvas=document.createElement("canvas");
},members:{__canvas:null,_createDomElement:function(){return this.__canvas;
},getCanvas:function(){return this.__canvas;
},setWidth:function(width){this.__canvas.width=width;
},getWidth:function(){return this.__canvas.width;
},setHeight:function(height){this.__canvas.height=height;
},getHeight:function(){return this.__canvas.height;
},getContext2d:function(){return this.__canvas.getContext("2d");
}},destruct:function(){this.__canvas=null;
}});
qx.Class.define("qx.html.Flash",{extend:qx.html.Element,construct:function(styles,attributes){this.base(arguments,"div",styles,attributes);
this.__params={};
this.__variables={};
this.__attributes={};
},members:{__params:null,__attributes:null,__variables:null,__flash:null,_createDomElement:function(){return qx.bom.Element.create("div");
},createFlash:function(){this.__flash=qx.bom.Flash.create(this.getDomElement(),this.getAttributes(),this.__variables,this.__params);
},setSource:function(value){{qx.core.Assert.assertString(value,"Invalid attribute 'value'.");
};

if(this.__flash){throw new Error("The source cannot be modified after initial creation");
}this.setAttribute("movie",value);
},setId:function(value){{qx.core.Assert.assertString(value,"Invalid attribute 'value'.");
};

if(this.__flash){throw new Error("The id cannot be modified after initial creation");
}this.setAttribute("id",value);
},getVariables:function(){return this.__variables;
},setVariables:function(value){{qx.core.Assert.assertMap(value,"Invalid attribute 'value'.");
};

if(this.__flash){throw new Error("The variables cannot be modified after initial creation");
}this.__variables=value;
},getAttributes:function(){return this.__attributes;
},setAttribute:function(key,value){{qx.core.Assert.assertString(key,"Invalid attribute 'key'.");

if(arguments.length>1&&value!==null){if(!qx.lang.Type.isBoolean(value)&&!qx.lang.Type.isString(value)){throw new Error("Invalid attribute 'value' expected String, Boolean or null.");
}}};

if(this.__flash){throw new Error("The attributes cannot be modified after initial creation");
}
if(value===null||value===undefined){delete this.__attributes[key];
}else{this.__attributes[key]=value;
}},getParams:function(){return this.__params;
},setParam:function(key,value){{qx.core.Assert.assertString(key,"Invalid attribute 'key'.");

if(arguments.length>1&&value!==null){if(!qx.lang.Type.isBoolean(value)&&!qx.lang.Type.isString(value)){throw new Error("Invalid attribute 'value' expected String, Boolean or null.");
}}};

if(this.__flash){throw new Error("The params cannot be modified after initial creation");
}
if(value===null||value===undefined){delete this.__params[key];
}else{this.__params[key]=value;
}},getFlashElement:function(){return this.__flash;
}},destruct:function(){if(this.__flash){qx.bom.Flash.destroy(this.__flash);
}this.__params=this.__variables=this.__attributes=null;
}});
qx.Class.define("qx.io.PartLoader",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
var loader=this._loader=qx.Part.getInstance();
var self=this;
loader.onpart=function(part){if(part.readyState=="success"){self.fireDataEvent("partLoaded",part);
}else{self.fireDataEvent("partLoadingError",part.name);
}};
},events:{"partLoaded":"qx.event.type.Data","partLoadingError":"qx.event.type.Data"},statics:{require:function(partNames,callback,self){this.getInstance().require(partNames,callback,self);
}},members:{require:function(partNames,callback,self){return this._loader.require(partNames,callback,self);
},getPart:function(name){return this._loader.getPart(name);
}}});
qx.Bootstrap.define("qx.Part",{construct:function(loader){var bootPackageIndex=loader.parts[loader.boot][0];
this.__loader=loader;
this.__partListners={};
this.__packageListeners={};
this.__packageClosureListeners={};
this.__packages=[];
var uris=this.__getUris();

for(var i=0;i<uris.length;i++){var hash=loader.packageHashes[i];
var pkg=new qx.io.part.Package(uris[i],hash,i==bootPackageIndex);
this.__packages.push(pkg);
}this.__parts={};
var parts=loader.parts;
var closureParts=loader.closureParts||{};

for(var name in parts){var pkgIndexes=parts[name];
var packages=[];

for(var i=0;i<pkgIndexes.length;i++){packages.push(this.__packages[pkgIndexes[i]]);
}if(closureParts[name]){var part=new qx.io.part.ClosurePart(name,packages,this);
}else{var part=new qx.io.part.Part(name,packages,this);
}this.__parts[name]=part;
}},statics:{TIMEOUT:7500,getInstance:function(){if(!this.$$instance){this.$$instance=new this(qx.$$loader);
}return this.$$instance;
},require:function(partNames,callback,self){this.getInstance().require(partNames,callback,self);
},preload:function(partNames){this.getInstance().preload(partNames);
},$$notifyLoad:function(id,closure){this.getInstance().saveClosure(id,closure);
}},members:{__loader:null,__packages:null,__parts:null,__packageClosureListeners:null,addToPackage:function(pkg){this.__packages.push(pkg);
},addClosurePackageListener:function(pkg,callback){var key=pkg.getId();

if(!this.__packageClosureListeners[key]){this.__packageClosureListeners[key]=[];
}this.__packageClosureListeners[key].push(callback);
},saveClosure:function(id,closure){var pkg;

for(var i=0;i<this.__packages.length;i++){if(this.__packages[i].getId()==id){pkg=this.__packages[i];
break;
}}if(!pkg){throw new Error("Package not available: "+id);
}pkg.saveClosure(closure);
var listeners=this.__packageClosureListeners[id];

if(!listeners){return;
}
for(var i=0;i<listeners.length;i++){listeners[i]("complete",id);
}this.__packageClosureListeners[id]=[];
},getParts:function(){return this.__parts;
},require:function(partNames,callback,self){var callback=callback||function(){};
var self=self||window;

if(qx.Bootstrap.isString(partNames)){partNames=[partNames];
}var parts=[];

for(var i=0;i<partNames.length;i++){parts.push(this.__parts[partNames[i]]);
}var partsLoaded=0;
var onLoad=function(){partsLoaded+=1;
if(partsLoaded>=parts.length){var states=[];

for(var i=0;i<parts.length;i++){states.push(parts[i].getReadyState());
}callback.call(self,states);
}};

for(var i=0;i<parts.length;i++){parts[i].load(onLoad,this);
}},preload:function(partNames,callback,self){if(qx.Bootstrap.isString(partNames)){partNames=[partNames];
}var partsPreloaded=0;

for(var i=0;i<partNames.length;i++){this.__parts[partNames[i]].preload(function(){partsPreloaded++;

if(partsPreloaded>=partNames.length){var states=[];

for(var i=0;i<partNames.length;i++){states.push(this.__parts[partNames[i]].getReadyState());
}
if(callback){callback.call(self,states);
}}},this);
}},__getUris:function(){var packages=this.__loader.uris;
var uris=[];

for(var i=0;i<packages.length;i++){uris.push(this.__decodeUris(packages[i]));
}return uris;
},__decodeUris:qx.$$loader.decodeUris,__partListners:null,addPartListener:function(part,callback){var key=part.getName();

if(!this.__partListners[key]){this.__partListners[key]=[];
}this.__partListners[key].push(callback);
},onpart:null,notifyPartResult:function(part){var key=part.getName();
var listeners=this.__partListners[key];

if(listeners){for(var i=0;i<listeners.length;i++){listeners[i](part.getReadyState());
}this.__partListners[key]=[];
}
if(typeof this.onpart=="function"){this.onpart(part);
}},__packageListeners:null,addPackageListener:function(pkg,callback){var key=pkg.getId();

if(!this.__packageListeners[key]){this.__packageListeners[key]=[];
}this.__packageListeners[key].push(callback);
},notifyPackageResult:function(pkg){var key=pkg.getId();
var listeners=this.__packageListeners[key];

if(!listeners){return;
}
for(var i=0;i<listeners.length;i++){listeners[i](pkg.getReadyState());
}this.__packageListeners[key]=[];
}}});
qx.Bootstrap.define("qx.io.part.Package",{construct:function(urls,id,loaded){this.__readyState=loaded?"complete":"initialized";
this.__urls=urls;
this.__id=id;
},members:{__readyState:null,__urls:null,__id:null,__closure:null,__loadWithClosure:null,__timeoutId:null,__notifyPackageResult:null,getId:function(){return this.__id;
},getReadyState:function(){return this.__readyState;
},getUrls:function(){return this.__urls;
},saveClosure:function(closure){if(this.__readyState=="error"){return;
}this.__closure=closure;

if(!this.__loadWithClosure){this.execute();
}else{clearTimeout(this.__timeoutId);
this.__readyState="cached";
this.__notifyPackageResult(this);
}},execute:function(){if(this.__closure){this.__closure();
delete this.__closure;
}
if(qx.$$packageData[this.__id]){this.__importPackageData(qx.$$packageData[this.__id]);
delete qx.$$packageData[this.__id];
}this.__readyState="complete";
},loadClosure:function(notifyPackageResult,self){if(this.__readyState!=="initialized"){return;
}this.__loadWithClosure=true;
this.__readyState="loading";
this.__notifyPackageResult=qx.Bootstrap.bind(notifyPackageResult,self);
this.__loadScriptList(this.__urls,function(){},function(){this.__readyState="error";
notifyPackageResult.call(self,this);
},this);
var pkg=this;
this.__timeoutId=setTimeout(function(){pkg.__readyState="error";
notifyPackageResult.call(self,pkg);
},qx.Part.TIMEOUT);
},load:function(notifyPackageResult,self){if(this.__readyState!=="initialized"){return;
}this.__loadWithClosure=false;
this.__readyState="loading";
this.__loadScriptList(this.__urls,function(){this.__readyState="complete";
this.execute();
notifyPackageResult.call(self,this);
},function(){this.__readyState="error";
notifyPackageResult.call(self,this);
},this);
},__loadScriptList:function(urlList,callback,errBack,self){if(urlList.length==0){callback.call(self);
return;
}var urlsLoaded=0;
var self=this;
var onLoad=function(urls){if(urlsLoaded>=urlList.length){callback.call(self);
return;
}var loader=new qx.io.ScriptLoader();
loader.load(urls.shift(),function(status){urlsLoaded+=1;
loader.dispose();

if(status!=="success"){if(self.__readyState=="loading"){clearTimeout(self.__timeoutId);
return errBack.call(self);
}}
if(qx.core.Variant.isSet("qx.client","webkit")){setTimeout(function(){onLoad.call(self,urls,callback,self);
},0);
}else{onLoad.call(self,urls,callback,self);
}},self);
};
onLoad(urlList.concat());
},__importPackageData:qx.$$loader.importPackageData}});
qx.Bootstrap.define("qx.io.part.Part",{construct:function(name,packages,loader){this.__name=name;
this._readyState="complete";
this._packages=packages;
this._loader=loader;

for(var i=0;i<packages.length;i++){if(packages[i].getReadyState()!=="complete"){this._readyState="initialized";
break;
}}},members:{_readyState:null,_loader:null,_packages:null,__name:null,getReadyState:function(){return this._readyState;
},getName:function(){return this.__name;
},getPackages:function(){return this._packages;
},preload:function(callback,self){if(callback){window.setTimeout(function(){callback.call(self,this);
},0);
}},load:function(callback,self){if(this._checkCompleteLoading(callback,self)){return;
}this._readyState="loading";

if(callback){this._appendPartListener(callback,self,this);
}var part=this;
var onLoad=function(){part.load();
};

for(var i=0;i<this._packages.length;i++){var pkg=this._packages[i];

switch(pkg.getReadyState()){case "initialized":this._loader.addPackageListener(pkg,onLoad);
pkg.load(this._loader.notifyPackageResult,this._loader);
return;
case "loading":this._loader.addPackageListener(pkg,onLoad);
return;
case "complete":break;
case "error":this._markAsCompleted("error");
return;
default:throw new Error("Invalid case! "+pkg.getReadyState());
}}this._markAsCompleted("complete");
},_appendPartListener:function(callback,self,part){this._loader.addPartListener(this,function(){callback.call(self,part._readyState);
});
},_markAsCompleted:function(readyState){this._readyState=readyState;
this._loader.notifyPartResult(this);
},_checkCompleteLoading:function(callback,self){var readyState=this._readyState;

if(readyState=="complete"||readyState=="error"){if(callback){setTimeout(function(){callback.call(self,readyState);
},0);
}return true;
}else if(readyState=="loading"&&callback){this._appendPartListener(callback,self,this);
return true;
}}}});
qx.Bootstrap.define("qx.io.part.ClosurePart",{extend:qx.io.part.Part,construct:function(name,packages,loader){qx.io.part.Part.call(this,name,packages,loader);
},members:{__packagesToLoad:0,preload:function(callback,self){var packagesLoaded=0;
var that=this;

for(var i=0;i<this._packages.length;i++){var pkg=this._packages[i];

if(pkg.getReadyState()=="initialized"){pkg.loadClosure(function(pkg){packagesLoaded++;
that._loader.notifyPackageResult(pkg);
if(packagesLoaded>=that._packages.length&&callback){callback.call(self);
}},this._loader);
}}},load:function(callback,self){if(this._checkCompleteLoading(callback,self)){return;
}this._readyState="loading";

if(callback){this._appendPartListener(callback,self,this);
}this.__packagesToLoad=this._packages.length;

for(var i=0;i<this._packages.length;i++){var pkg=this._packages[i];
var pkgReadyState=pkg.getReadyState();
if(pkgReadyState=="initialized"){pkg.loadClosure(this._loader.notifyPackageResult,this._loader);
}if(pkgReadyState=="initialized"||pkgReadyState=="loading"){this._loader.addPackageListener(pkg,qx.Bootstrap.bind(this._onPackageLoad,this,pkg));
}else if(pkgReadyState=="error"){this._markAsCompleted("error");
return;
}else{this.__packagesToLoad--;
}}if(this.__packagesToLoad<=0){this.__executePackages();
}},__executePackages:function(){for(var i=0;i<this._packages.length;i++){this._packages[i].execute();
}this._markAsCompleted("complete");
},_onPackageLoad:function(pkg){if(this._readyState=="error"){return;
}if(pkg.getReadyState()=="error"){this._markAsCompleted("error");
return;
}this.__packagesToLoad--;

if(this.__packagesToLoad<=0){this.__executePackages();
}}}});
qx.Class.define("qx.io.remote.Rpc",{extend:qx.core.Object,construct:function(url,serviceName){this.base(arguments);

if(url!==undefined){this.setUrl(url);
}
if(serviceName!=null){this.setServiceName(serviceName);
}
if(qx.core.ServerSettings){this.__currentServerSuffix=qx.core.ServerSettings.serverPathSuffix;
}},events:{"completed":"qx.event.type.Event","aborted":"qx.event.type.Event","failed":"qx.event.type.Event","timeout":"qx.event.type.Event"},statics:{origin:{server:1,application:2,transport:3,local:4},localError:{timeout:1,abort:2},makeServerURL:function(instanceId){var retVal=null;

if(qx.core.ServerSettings){retVal=qx.core.ServerSettings.serverPathPrefix+"/.qxrpc"+qx.core.ServerSettings.serverPathSuffix;

if(instanceId!=null){retVal+="?instanceId="+instanceId;
}}return retVal;
}},properties:{timeout:{check:"Integer",nullable:true},crossDomain:{check:"Boolean",init:false},url:{check:"String",nullable:true},serviceName:{check:"String",nullable:true},serverData:{check:"Object",nullable:true},username:{check:"String",nullable:true},password:{check:"String",nullable:true},useBasicHttpAuth:{check:"Boolean",nullable:true}},members:{__previousServerSuffix:null,__currentServerSuffix:null,_callInternal:function(args,callType,refreshSession){var self=this;
var offset=(callType==0?0:1);
var whichMethod=(refreshSession?"refreshSession":args[offset]);
var handler=args[0];
var argsArray=[];
var eventTarget=this;

for(var i=offset+1;i<args.length;++i){argsArray.push(args[i]);
}var req=new qx.io.remote.Request(this.getUrl(),"POST","application/json");
var requestObject={"service":(refreshSession?null:this.getServiceName()),"method":whichMethod,"id":req.getSequenceNumber(),"params":argsArray};
var serverData=this.getServerData();

if(serverData!==null){requestObject.server_data=serverData;
}req.setCrossDomain(this.getCrossDomain());

if(this.getUsername()){req.setUseBasicHttpAuth(this.getUseBasicHttpAuth());
req.setUsername(this.getUsername());
req.setPassword(this.getPassword());
}req.setTimeout(this.getTimeout());
var ex=null;
var id=null;
var result=null;
var response=null;
var handleRequestFinished=function(eventType,eventTarget){switch(callType){case 0:break;
case 1:handler(result,ex,id);
break;
case 2:if(!ex){eventTarget.fireDataEvent(eventType,response);
}else{ex.id=id;

if(args[0]){eventTarget.fireDataEvent("failed",ex);
}else{eventTarget.fireDataEvent(eventType,ex);
}}}};
var addToStringToObject=function(obj){obj.toString=function(){switch(obj.origin){case qx.io.remote.Rpc.origin.server:return "Server error "+obj.code+": "+obj.message;
case qx.io.remote.Rpc.origin.application:return "Application error "+obj.code+": "+obj.message;
case qx.io.remote.Rpc.origin.transport:return "Transport error "+obj.code+": "+obj.message;
case qx.io.remote.Rpc.origin.local:return "Local error "+obj.code+": "+obj.message;
default:return ("UNEXPECTED origin "+obj.origin+" error "+obj.code+": "+obj.message);
}};
};
var makeException=function(origin,code,message){var ex=new Object();
ex.origin=origin;
ex.code=code;
ex.message=message;
addToStringToObject(ex);
return ex;
};
req.addListener("failed",function(evt){var code=evt.getStatusCode();
ex=makeException(qx.io.remote.Rpc.origin.transport,code,qx.io.remote.Exchange.statusCodeToString(code));
id=this.getSequenceNumber();
handleRequestFinished("failed",eventTarget);
});
req.addListener("timeout",function(evt){this.debug("TIMEOUT OCCURRED");
ex=makeException(qx.io.remote.Rpc.origin.local,qx.io.remote.Rpc.localError.timeout,"Local time-out expired");
id=this.getSequenceNumber();
handleRequestFinished("timeout",eventTarget);
});
req.addListener("aborted",function(evt){ex=makeException(qx.io.remote.Rpc.origin.local,qx.io.remote.Rpc.localError.abort,"Aborted");
id=this.getSequenceNumber();
handleRequestFinished("aborted",eventTarget);
});
req.addListener("completed",function(evt){response=evt.getContent();
id=response["id"];

if(id!=this.getSequenceNumber()){this.warn("Received id ("+id+") does not match requested id "+"("+this.getSequenceNumber()+")!");
}var eventType="completed";
var exTest=response["error"];

if(exTest!=null){result=null;
addToStringToObject(exTest);
ex=exTest;
eventType="failed";
}else{result=response["result"];

if(refreshSession){result=eval("("+result+")");
var newSuffix=qx.core.ServerSettings.serverPathSuffix;

if(self.__currentServerSuffix!=newSuffix){self.__previousServerSuffix=self.__currentServerSuffix;
self.__currentServerSuffix=newSuffix;
}self.setUrl(self.fixUrl(self.getUrl()));
}}handleRequestFinished(eventType,eventTarget);
});
req.setData(qx.util.Json.stringify(requestObject));
req.setAsynchronous(callType>0);

if(req.getCrossDomain()){req.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
}else{req.setRequestHeader("Content-Type","application/json");
}req.send();

if(callType==0){if(ex!=null){var error=new Error(ex.toString());
error.rpcdetails=ex;
throw error;
}return result;
}else{return req;
}},fixUrl:function(url){if(this.__previousServerSuffix==null||this.__currentServerSuffix==null||this.__previousServerSuffix==""||this.__previousServerSuffix==this.__currentServerSuffix){return url;
}var index=url.indexOf(this.__previousServerSuffix);

if(index==-1){return url;
}return (url.substring(0,index)+this.__currentServerSuffix+url.substring(index+this.__previousServerSuffix.length));
},callSync:function(methodName){return this._callInternal(arguments,0);
},callAsync:function(handler,methodName){return this._callInternal(arguments,1);
},callAsyncListeners:function(coalesce,methodName){return this._callInternal(arguments,2);
},refreshSession:function(handler){if(qx.core.ServerSettings&&qx.core.ServerSettings.serverPathSuffix){var timeDiff=(new Date()).getTime()-qx.core.ServerSettings.lastSessionRefresh;

if(timeDiff/1000>(qx.core.ServerSettings.sessionTimeoutInSeconds-30)){this._callInternal([handler],1,true);
}else{handler(true);
}}else{handler(false);
}},abort:function(opaqueCallRef){opaqueCallRef.abort();
}}});
qx.Class.define("qx.io.HttpRequest",{extend:qx.core.Object,construct:function(url){this.base(arguments);
this.__headers={};
if(url!=null){this.setUrl(url);
}},statics:{__modified:{}},events:{"change":"qx.event.type.Data","timeout":"qx.event.type.Event","load":"qx.event.type.Event","error":"qx.event.type.Event","abort":"qx.event.type.Event"},properties:{refresh:{check:"Boolean",init:false},data:{nullable:true},method:{check:["GET","POST","PUT","HEAD","DELETE","OPTIONS"],init:"GET"},async:{check:"Boolean",init:true},mime:{check:["text/plain","text/javascript","application/json","application/xml","text/html"],init:"text/plain"},url:{check:"String",init:""},username:{check:"String",nullable:true},password:{check:"String",nullable:true},auth:{check:["http","basic"],init:"http"},timeout:{check:"Integer",nullable:true},cache:{check:"Boolean",init:false}},members:{__req:null,__headers:null,setRequestHeader:function(label,value){this.__headers[label]=value;
},removeRequestHeader:function(label){delete this.__headers[label];
},getRequestHeader:function(label){var value=this.__headers[label];

if(value===undefined){value=null;
}return value;
},getResponseText:function(){var req=this.__req;

if(req){return req.responseText;
}},getResponseXml:function(){var req=this.__req;

if(req){return req.responseXML;
}},getResponseHeader:function(label){var req=this.__req;

if(req){return req.getResponseHeader(label);
}},getAllResponseHeaders:function(){var req=this.__req;

if(req){return req.getAllResponseHeaders();
}},isNotModified:function(){var req=this.__req;

if(!req){return false;
}var modified=req.getResponseHeader("Last-Modified");
return req.status===304||qx.io.HttpRequest.__modified[this.getUrl()]===modified;
},isSuccessful:function(){var req=this.__req;
return !req||req.isSuccessful();
},getStatusCode:function(){var req=this.__req;

if(req){return req.status;
}},getStatusText:function(){var req=this.__req;

if(req){return req.statusText;
}},getReadyState:function(){var req=this.__req;

if(req){return req.readyState;
}},send:function(){if(this.__req){if(this.getReadyState()!==4){throw new Error("Request is still pending at ready state: "+this.getReadyState());
}this.__req.dispose();
}var req=this.__req=new qx.bom.Request;
req.onreadystatechange=qx.lang.Function.bind(this.__onchange,this);
req.ontimeout=qx.lang.Function.bind(this.__ontimeout,this);
req.onload=qx.lang.Function.bind(this.__onload,this);
req.onerror=qx.lang.Function.bind(this.__onerror,this);
req.onabort=qx.lang.Function.bind(this.__onabort,this);
var username=this.getUsername();
var password=this.getPassword();

if(this.getAuth()=="basic"){req.setRequestHeader('Authorization','Basic '+qx.util.Base64.encode(username+':'+password));
username=password=null;
}var url=this.getUrl();
req.timeout=this.getTimeout();
req.open(this.getMethod(),url,this.getAsync(),username,password);
if(!this.getCache()){req.setRequestHeader("Cache-Control","no-cache");
}if(this.getRefresh()){req.setRequestHeader("If-Modified-Since",qx.io.HttpRequest.__modified[url]||"Thu, 01 Jan 1970 00:00:00 GMT");
}req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(this.getMethod()==="POST"){req.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
}req.setRequestHeader("Accept",this.getMime());
var headers=this.__headers;

for(var name in headers){req.setRequestHeader(name,headers[name]);
}req.send(this.getData());
},abort:function(){if(this.__req){this.__req.abort();
}},__onchange:qx.event.GlobalError.observeMethod(function(){this.fireDataEvent("change",this.getReadyState());
if(this.getRefresh()&&this.getReadyState()===4&&this.isSuccessful()){var modified=this.getResponseHeader("Last-Modified");

if(modified){qx.io.HttpRequest.__modified[this.getUrl()]=modified;
}}}),__ontimeout:qx.event.GlobalError.observeMethod(function(){if(this.hasListener("timeout")){this.fireEvent("timeout");
}}),__onload:qx.event.GlobalError.observeMethod(function(){if(this.hasListener("load")){this.fireEvent("load");
}}),__onerror:qx.event.GlobalError.observeMethod(function(){if(this.hasListener("error")){this.fireEvent("error");
}}),__onabort:qx.event.GlobalError.observeMethod(function(){if(this.hasListener("abort")){this.fireEvent("abort");
}})},destruct:function(){this._disposeObjects("__req");
this.__headers=null;
}});
qx.Class.define("qx.util.Base64",{statics:{__keystr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var keyStr=this.__keystr;
var output="";
var chr1,chr2,chr3;
var enc1,enc2,enc3,enc4;
var i=0;

do{chr1=input.charCodeAt(i++);
chr2=input.charCodeAt(i++);
chr3=input.charCodeAt(i++);
enc1=chr1>>2;
enc2=((chr1&3)<<4)|(chr2>>4);
enc3=((chr2&15)<<2)|(chr3>>6);
enc4=chr3&63;

if(isNaN(chr2)){enc3=enc4=64;
}else if(isNaN(chr3)){enc4=64;
}output+=keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4);
}while(i<input.length);
return output;
}}});
qx.Class.define("qx.io2.ImageLoader",{statics:{isLoaded:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.isLoaded' instead.");
return qx.io.ImageLoader.isLoaded(source);
},isFailed:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.isFailed' instead.");
return qx.io.ImageLoader.isFailed(source);
},isLoading:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.isLoading' instead.");
return qx.io.ImageLoader.isLoading(source);
},getFormat:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.getFormat' instead.");
return qx.io.ImageLoader.getFormat(source);
},getSize:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.getSize' instead.");
return qx.io.ImageLoader.getSize(source);
},getWidth:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.getWidth' instead.");
return qx.io.ImageLoader.getWidth(source);
},getHeight:function(source){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.getHeight' instead.");
return qx.io.ImageLoader.getHeight(source);
},load:function(source,callback,context){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.ImageLoader.load' instead.");
qx.io.ImageLoader.load(source,callback,context);
}}});
qx.Class.define("qx.io2.ScriptLoader",{extend:qx.io.ScriptLoader,construct:function(){this.base(arguments);
qx.log.Logger.deprecatedClassWarning(qx.io2.ScriptLoader,"This class has been moved to 'qx.io.ScriptLoader'");
}});
qx.Class.define("qx.io2.part.Part",{extend:qx.io.part.Part,construct:function(name,packages){this.base(arguments,name,packages);
qx.log.Logger.deprecatedClassWarning(qx.io2.part.Part,"This class has been moved to 'qx.io.part.Part'");
}});
qx.Class.define("qx.io2.part.Package",{extend:qx.io.part.Package,construct:function(urls,id,loaded){this.base(arguments,urls,id,loaded);
qx.log.Logger.deprecatedClassWarning(qx.io2.part.Package,"This class has been moved to 'qx.io.part.Package'");
}});
qx.Class.define("qx.io2.HttpRequest",{extend:qx.io.HttpRequest,construct:function(url){this.base(arguments,url);
qx.log.Logger.deprecatedClassWarning(qx.io2.HttpRequest,"This class has been moved to 'qx.io.HttpRequest'");
}});
qx.Class.define("qx.io2.PartLoader",{extend:qx.core.Object,statics:{require:function(partNames,callback,self){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'qx.io.PartLoader.require' instead.");
qx.io.PartLoader.getInstance().require(partNames,callback,self);
},getInstance:function(){qx.log.Logger.deprecatedClassWarning(qx.io2.PartLoader,"This class has been moved to 'qx.io.PartLoader'");
return qx.io.PartLoader.getInstance();
}}});
qx.Class.define("qx.lang.Number",{statics:{isInRange:function(nr,vmin,vmax){return nr>=vmin&&nr<=vmax;
},isBetweenRange:function(nr,vmin,vmax){return nr>vmin&&nr<vmax;
},limit:function(nr,vmin,vmax){if(vmax!=null&&nr>vmax){return vmax;
}else if(vmin!=null&&nr<vmin){return vmin;
}else{return nr;
}}}});
qx.Class.define("qx.locale.Number",{statics:{getDecimalSeparator:function(locale){return qx.locale.Manager.getInstance().localize("cldr_number_decimal_separator",[],locale);
},getGroupSeparator:function(locale){return qx.locale.Manager.getInstance().localize("cldr_number_group_separator",[],locale);
},getPercentFormat:function(locale){return qx.locale.Manager.getInstance().localize("cldr_number_percent_format",[],locale);
}}});
qx.Class.define("qx.locale.String",{statics:{getQuotationStart:function(locale){return qx.locale.Manager.getInstance().localize("cldr_quotationStart",[],locale);
},getQuotationEnd:function(locale){return qx.locale.Manager.getInstance().localize("cldr_quotationEnd",[],locale);
},getAlternateQuotationStart:function(locale){return qx.locale.Manager.getInstance().localize("cldr_alternateQuotationStart",[],locale);
},getAlternateQuotationEnd:function(locale){return qx.locale.Manager.getInstance().localize("cldr_alternateQuotationEnd",[],locale);
}}});
qx.Class.define("qx.locale.Date",{statics:{__mgr:qx.locale.Manager.getInstance(),getAmMarker:function(locale){return this.__mgr.localize("cldr_am",[],locale);
},getPmMarker:function(locale){return this.__mgr.localize("cldr_pm",[],locale);
},getDayNames:function(length,locale,context){var context=context?context:"format";
{qx.core.Assert.assertInArray(length,["abbreviated","narrow","wide"]);
qx.core.Assert.assertInArray(context,["format","stand-alone"]);
};
var days=["sun","mon","tue","wed","thu","fri","sat"];
var names=[];

for(var i=0;i<days.length;i++){var key="cldr_day_"+context+"_"+length+"_"+days[i];
names.push(this.__mgr.localize(key,[],locale));
}return names;
},getDayName:function(length,day,locale,context){var context=context?context:"format";
{qx.core.Assert.assertInArray(length,["abbreviated","narrow","wide"]);
qx.core.Assert.assertInteger(day);
qx.core.Assert.assertInRange(day,0,6);
qx.core.Assert.assertInArray(context,["format","stand-alone"]);
};
var days=["sun","mon","tue","wed","thu","fri","sat"];
var key="cldr_day_"+context+"_"+length+"_"+days[day];
return this.__mgr.localize(key,[],locale);
},getMonthNames:function(length,locale,context){var context=context?context:"format";
{qx.core.Assert.assertInArray(length,["abbreviated","narrow","wide"]);
qx.core.Assert.assertInArray(context,["format","stand-alone"]);
};
var names=[];

for(var i=0;i<12;i++){var key="cldr_month_"+context+"_"+length+"_"+(i+1);
names.push(this.__mgr.localize(key,[],locale));
}return names;
},getMonthName:function(length,month,locale,context){var context=context?context:"format";
{qx.core.Assert.assertInArray(length,["abbreviated","narrow","wide"]);
qx.core.Assert.assertInArray(context,["format","stand-alone"]);
};
var key="cldr_month_"+context+"_"+length+"_"+(month+1);
return this.__mgr.localize(key,[],locale);
},getDateFormat:function(size,locale){{qx.core.Assert.assertInArray(size,["short","medium","long","full"]);
};
var key="cldr_date_format_"+size;
return this.__mgr.localize(key,[],locale);
},getDateTimeFormat:function(canonical,fallback,locale){var key="cldr_date_time_format_"+canonical;
var localizedFormat=this.__mgr.localize(key,[],locale);

if(localizedFormat==key){localizedFormat=fallback;
}return localizedFormat;
},getTimeFormat:function(size,locale){{qx.core.Assert.assertInArray(size,["short","medium","long","full"]);
};
var key="cldr_time_format_"+size;
var localizedFormat=this.__mgr.localize(key,[],locale);

if(localizedFormat!=key){return localizedFormat;
}
switch(size){case "short":case "medium":return qx.locale.Date.getDateTimeFormat("HHmm","HH:mm");
case "long":return qx.locale.Date.getDateTimeFormat("HHmmss","HH:mm:ss");
case "full":return qx.locale.Date.getDateTimeFormat("HHmmsszz","HH:mm:ss zz");
default:throw new Error("This case should never happen.");
}},getWeekStart:function(locale){var weekStart={"MV":5,"AE":6,"AF":6,"BH":6,"DJ":6,"DZ":6,"EG":6,"ER":6,"ET":6,"IQ":6,"IR":6,"JO":6,"KE":6,"KW":6,"LB":6,"LY":6,"MA":6,"OM":6,"QA":6,"SA":6,"SD":6,"SO":6,"TN":6,"YE":6,"AS":0,"AU":0,"AZ":0,"BW":0,"CA":0,"CN":0,"FO":0,"GE":0,"GL":0,"GU":0,"HK":0,"IE":0,"IL":0,"IS":0,"JM":0,"JP":0,"KG":0,"KR":0,"LA":0,"MH":0,"MN":0,"MO":0,"MP":0,"MT":0,"NZ":0,"PH":0,"PK":0,"SG":0,"TH":0,"TT":0,"TW":0,"UM":0,"US":0,"UZ":0,"VI":0,"ZA":0,"ZW":0,"MW":0,"NG":0,"TJ":0};
var territory=qx.locale.Date._getTerritory(locale);
return weekStart[territory]!=null?weekStart[territory]:1;
},getWeekendStart:function(locale){var weekendStart={"EG":5,"IL":5,"SY":5,"IN":0,"AE":4,"BH":4,"DZ":4,"IQ":4,"JO":4,"KW":4,"LB":4,"LY":4,"MA":4,"OM":4,"QA":4,"SA":4,"SD":4,"TN":4,"YE":4};
var territory=qx.locale.Date._getTerritory(locale);
return weekendStart[territory]!=null?weekendStart[territory]:6;
},getWeekendEnd:function(locale){var weekendEnd={"AE":5,"BH":5,"DZ":5,"IQ":5,"JO":5,"KW":5,"LB":5,"LY":5,"MA":5,"OM":5,"QA":5,"SA":5,"SD":5,"TN":5,"YE":5,"AF":5,"IR":5,"EG":6,"IL":6,"SY":6};
var territory=qx.locale.Date._getTerritory(locale);
return weekendEnd[territory]!=null?weekendEnd[territory]:0;
},isWeekend:function(day,locale){var weekendStart=qx.locale.Date.getWeekendStart(locale);
var weekendEnd=qx.locale.Date.getWeekendEnd(locale);

if(weekendEnd>weekendStart){return ((day>=weekendStart)&&(day<=weekendEnd));
}else{return ((day>=weekendStart)||(day<=weekendEnd));
}},_getTerritory:function(locale){if(locale){var territory=locale.split("_")[1]||locale;
}else{territory=this.__mgr.getTerritory()||this.__mgr.getLanguage();
}return territory.toUpperCase();
}}});
qx.Class.define("qx.log.appender.Element",{extend:qx.core.Object,construct:function(element){this.base(arguments);
var style=['.qxappender .level-debug{background:white}','.qxappender .level-info{background:#DEEDFA}','.qxappender .level-warn{background:#FFF7D5}','.qxappender .level-error{background:#FFE2D5}','.qxappender .level-user{background:#E3EFE9}','.qxappender .type-string{color:black;font-weight:normal;}','.qxappender .type-number{color:#155791;font-weight:normal;}','.qxappender .type-boolean{color:#15BC91;font-weight:normal;}','.qxappender .type-array{color:#CC3E8A;font-weight:bold;}','.qxappender .type-map{color:#CC3E8A;font-weight:bold;}','.qxappender .type-key{color:#565656;font-style:italic}','.qxappender .type-class{color:#5F3E8A;font-weight:bold}','.qxappender .type-instance{color:#565656;font-weight:bold}','.qxappender .type-stringify{color:#565656;font-weight:bold}'];
qx.bom.Stylesheet.createElement(style.join(""));
qx.log.Logger.register(this);
},members:{__element:null,setElement:function(element){this.clear();
if(element){qx.bom.element.Class.add(element,"qxappender");
}this.__element=element;
},clear:function(){var elem=this.__element;
if(elem){elem.innerHTML="";
}},process:function(entry){var elem=this.__element;

if(!elem){return;
}elem.appendChild(qx.log.appender.Util.toHtml(entry));
elem.scrollTop=elem.scrollHeight;
}},destruct:function(){this.__element=null;
}});
qx.Class.define("qx.log.appender.Util",{statics:{toHtml:function(entry){var output=[];
var item,msg,sub,list;
output.push("<span class='offset'>",this.formatOffset(entry.offset,6),"</span> ");

if(entry.object){var obj=entry.win.qx.core.ObjectRegistry.fromHashCode(entry.object);

if(obj){output.push("<span class='object' title='Object instance with hash code: "+obj.$$hash+"'>",obj.classname,"[",obj.$$hash,"]</span>: ");
}}else if(entry.clazz){output.push("<span class='object'>"+entry.clazz.classname,"</span>: ");
}var items=entry.items;

for(var i=0,il=items.length;i<il;i++){item=items[i];
msg=item.text;

if(msg instanceof Array){var list=[];

for(var j=0,jl=msg.length;j<jl;j++){sub=msg[j];

if(typeof sub==="string"){list.push("<span>"+this.escapeHTML(sub)+"</span>");
}else if(sub.key){list.push("<span class='type-key'>"+sub.key+"</span>:<span class='type-"+sub.type+"'>"+this.escapeHTML(sub.text)+"</span>");
}else{list.push("<span class='type-"+sub.type+"'>"+this.escapeHTML(sub.text)+"</span>");
}}output.push("<span class='type-"+item.type+"'>");

if(item.type==="map"){output.push("{",list.join(", "),"}");
}else{output.push("[",list.join(", "),"]");
}output.push("</span>");
}else{output.push("<span class='type-"+item.type+"'>"+this.escapeHTML(msg)+"</span> ");
}}var wrapper=document.createElement("DIV");
wrapper.innerHTML=output.join("");
wrapper.className="level-"+entry.level;
return wrapper;
},formatOffset:function(offset,length){var str=offset.toString();
var diff=(length||6)-str.length;
var pad="";

for(var i=0;i<diff;i++){pad+="0";
}return pad+str;
},escapeHTML:function(value){return String(value).replace(/[<>&"']/g,this.__escapeHTMLReplace);
},__escapeHTMLReplace:function(ch){var map={"<":"&lt;",">":"&gt;","&":"&amp;","'":"&#39;",'"':"&quot;"};
return map[ch]||"?";
},toText:function(entry){return this.toTextArray(entry).join(" ");
},toTextArray:function(entry){var output=[];
output.push(this.formatOffset(entry.offset,6));

if(entry.object){var obj=entry.win.qx.core.ObjectRegistry.fromHashCode(entry.object);

if(obj){output.push(obj.classname+"["+obj.$$hash+"]:");
}}else if(entry.clazz){output.push(entry.clazz.classname+":");
}var items=entry.items;
var item,msg;

for(var i=0,il=items.length;i<il;i++){item=items[i];
msg=item.text;

if(msg instanceof Array){var list=[];

for(var j=0,jl=msg.length;j<jl;j++){list.push(msg[j].text);
}
if(item.type==="map"){output.push("{",list.join(", "),"}");
}else{output.push("[",list.join(", "),"]");
}}else{output.push(msg);
}}return output;
}}});
qx.Class.define("qx.log.appender.Native",{statics:{process:qx.core.Variant.select("qx.client",{"gecko":function(entry){if(window.console&&console.firebug){console[entry.level].call(console,qx.log.appender.Util.toText(entry));
}},"mshtml":function(entry){if(window.console){var level=entry.level;

if(level=="debug"){level="log";
}var args=qx.log.appender.Util.toText(entry);
console[level](args);
}},"webkit":function(entry){if(window.console){var level=entry.level;

if(level=="debug"){level="log";
}var args=qx.log.appender.Util.toText(entry);
console[level](args);
}},"opera":function(entry){}})},defer:function(statics){qx.log.Logger.register(statics);
}});
qx.Class.define("qx.log.appender.Console",{statics:{init:function(){var style=['.qxconsole{z-index:10000;width:600px;height:300px;top:0px;right:0px;position:absolute;border-left:1px solid black;color:black;border-bottom:1px solid black;color:black;font-family:Consolas,Monaco,monospace;font-size:11px;line-height:1.2;}','.qxconsole .control{background:#cdcdcd;border-bottom:1px solid black;padding:4px 8px;}','.qxconsole .control a{text-decoration:none;color:black;}','.qxconsole .messages{background:white;height:100%;width:100%;overflow:auto;}','.qxconsole .messages div{padding:0px 4px;}','.qxconsole .messages .user-command{color:blue}','.qxconsole .messages .user-result{background:white}','.qxconsole .messages .user-error{background:#FFE2D5}','.qxconsole .messages .level-debug{background:white}','.qxconsole .messages .level-info{background:#DEEDFA}','.qxconsole .messages .level-warn{background:#FFF7D5}','.qxconsole .messages .level-error{background:#FFE2D5}','.qxconsole .messages .level-user{background:#E3EFE9}','.qxconsole .messages .type-string{color:black;font-weight:normal;}','.qxconsole .messages .type-number{color:#155791;font-weight:normal;}','.qxconsole .messages .type-boolean{color:#15BC91;font-weight:normal;}','.qxconsole .messages .type-array{color:#CC3E8A;font-weight:bold;}','.qxconsole .messages .type-map{color:#CC3E8A;font-weight:bold;}','.qxconsole .messages .type-key{color:#565656;font-style:italic}','.qxconsole .messages .type-class{color:#5F3E8A;font-weight:bold}','.qxconsole .messages .type-instance{color:#565656;font-weight:bold}','.qxconsole .messages .type-stringify{color:#565656;font-weight:bold}','.qxconsole .command{background:white;padding:2px 4px;border-top:1px solid black;}','.qxconsole .command input{width:100%;border:0 none;font-family:Consolas,Monaco,monospace;font-size:11px;line-height:1.2;}','.qxconsole .command input:focus{outline:none;}'];
qx.bom.Stylesheet.createElement(style.join(""));
var markup=['<div class="qxconsole">','<div class="control"><a href="javascript:qx.log.appender.Console.clear()">Clear</a> | <a href="javascript:qx.log.appender.Console.toggle()">Hide</a></div>','<div class="messages">','</div>','<div class="command">','<input type="text"/>','</div>','</div>'];
var wrapper=document.createElement("DIV");
wrapper.innerHTML=markup.join("");
var main=wrapper.firstChild;
document.body.appendChild(wrapper.firstChild);
this.__main=main;
this.__log=main.childNodes[1];
this.__cmd=main.childNodes[2].firstChild;
this.__onResize();
qx.log.Logger.register(this);
qx.core.ObjectRegistry.register(this);
},dispose:function(){qx.event.Registration.removeListener(document.documentElement,"keypress",this.__onKeyPress,this);
qx.log.Logger.unregister(this);
},clear:function(){this.__log.innerHTML="";
},process:function(entry){this.__log.appendChild(qx.log.appender.Util.toHtml(entry));
this.__scrollDown();
},__scrollDown:function(){this.__log.scrollTop=this.__log.scrollHeight;
},__visible:true,toggle:function(){if(!this.__main){this.init();
}else if(this.__main.style.display=="none"){this.show();
}else{this.__main.style.display="none";
}},show:function(){if(!this.__main){this.init();
}else{this.__main.style.display="block";
this.__log.scrollTop=this.__log.scrollHeight;
}},__history:[],execute:function(){var value=this.__cmd.value;

if(value==""){return;
}
if(value=="clear"){return this.clear();
}var command=document.createElement("div");
command.innerHTML=qx.log.appender.Util.escapeHTML(">>> "+value);
command.className="user-command";
this.__history.push(value);
this.__lastCommand=this.__history.length;
this.__log.appendChild(command);
this.__scrollDown();

try{var ret=window.eval(value);
}catch(ex){qx.log.Logger.error(ex);
}
if(ret!==undefined){qx.log.Logger.debug(ret);
}},__onResize:function(e){this.__log.style.height=(this.__main.clientHeight-this.__main.firstChild.offsetHeight-this.__main.lastChild.offsetHeight)+"px";
},__onKeyPress:function(e){var iden=e.getKeyIdentifier();
if((iden=="F7")||(iden=="D"&&e.isCtrlPressed())){this.toggle();
e.preventDefault();
}if(!this.__main){return;
}if(!qx.dom.Hierarchy.contains(this.__main,e.getTarget())){return;
}if(iden=="Enter"&&this.__cmd.value!=""){this.execute();
this.__cmd.value="";
}if(iden=="Up"||iden=="Down"){this.__lastCommand+=iden=="Up"?-1:1;
this.__lastCommand=Math.min(Math.max(0,this.__lastCommand),this.__history.length);
var entry=this.__history[this.__lastCommand];
this.__cmd.value=entry||"";
this.__cmd.select();
}}},defer:function(statics){qx.event.Registration.addListener(document.documentElement,"keypress",statics.__onKeyPress,statics);
}});
qx.Class.define("qx.log.appender.PhoneGap",{statics:{process:function(entry){var args=qx.log.appender.Util.toText(entry);
var level=entry.level;

if(level=="warn"){debug.warn(args);
}else if(level=="error"){debug.error(args);
}else{debug.log(args);
}}},defer:function(statics){function register(){if(window.debug){qx.log.Logger.register(statics);
}else{window.setTimeout(register,200);
}}register();
}});
qx.Class.define("qx.type.Array",{extend:qx.type.BaseArray,members:{clone:qx.type.BaseArray.prototype.concat,insertAt:function(obj,i){this.splice(i,0,obj);
return this;
},insertBefore:function(obj,obj2){var i=this.indexOf(obj2);

if(i==-1){this.push(obj);
}else{this.splice(i,0,obj);
}return this;
},insertAfter:function(obj,obj2){var i=this.indexOf(obj2);

if(i==-1||i==(this.length-1)){this.push(obj);
}else{this.splice(i+1,0,obj);
}return this;
},removeAt:function(i){return this.splice(i,1)[0];
},removeAll:function(){this.length=0;
return this;
},append:function(arr){{qx.core.Assert.assertArray(arr,"The parameter must be an array.");
};
Array.prototype.push.apply(this,arr);
return this;
},remove:function(obj){var i=this.indexOf(obj);

if(i!=-1){this.splice(i,1);
return obj;
}},contains:function(obj){return this.indexOf(obj)!==-1;
}}});
qx.Interface.define("qx.ui.virtual.core.ILayer",{members:{fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){this.assertArgumentsCount(arguments,6,6);
this.assertPositiveInteger(firstRow);
this.assertPositiveInteger(firstColumn);
this.assertArray(rowSizes);
this.assertArray(columnSizes);
},updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){this.assertArgumentsCount(arguments,6,6);
this.assertPositiveInteger(firstRow);
this.assertPositiveInteger(firstColumn);
this.assertArray(rowSizes);
this.assertArray(columnSizes);
},updateLayerData:function(){}}});
qx.Class.define("qx.ui.virtual.layer.Abstract",{extend:qx.ui.core.Widget,type:"abstract",implement:[qx.ui.virtual.core.ILayer],construct:function(){this.base(arguments);
this.__jobs={};
},properties:{anonymous:{refine:true,init:true}},members:{__jobs:null,__arguments:null,__firstRow:null,__firstColumn:null,__rowSizes:null,__columnSizes:null,getFirstRow:function(){return this.__firstRow;
},getFirstColumn:function(){return this.__firstColumn;
},getRowSizes:function(){return this.__rowSizes||[];
},getColumnSizes:function(){return this.__columnSizes||[];
},syncWidget:function(){if(!this.getContentElement().getDomElement()){return;
}
if(this.__jobs.fullUpdate||this.__jobs.updateLayerWindow&&this.__jobs.updateLayerData){this._fullUpdate.apply(this,this.__arguments);
}else if(this.__jobs.updateLayerWindow){this._updateLayerWindow.apply(this,this.__arguments);
}else if(this.__jobs.updateLayerData&&this.__rowSizes){this._updateLayerData();
}
if(this.__jobs.fullUpdate||this.__jobs.updateLayerWindow){var args=this.__arguments;
this.__firstRow=args[0];
this.__firstColumn=args[1];
this.__rowSizes=args[2];
this.__columnSizes=args[3];
}this.__jobs={};
},_updateLayerData:function(){this._fullUpdate(this.__firstRow,this.__firstColumn,this.__rowSizes,this.__columnSizes);
},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){throw new Error("Abstract method '_fullUpdate' called!");
},_updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){this._fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
},updateLayerData:function(){this.__jobs.updateLayerData=true;
qx.ui.core.queue.Widget.add(this);
},fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){this.__arguments=arguments;
this.__jobs.fullUpdate=true;
qx.ui.core.queue.Widget.add(this);
},updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){this.__arguments=arguments;
this.__jobs.updateLayerWindow=true;
qx.ui.core.queue.Widget.add(this);
}},destruct:function(){this.__jobs=this.__arguments=this.__rowSizes=this.__columnSizes=null;
}});
qx.Class.define("qx.ui.virtual.layer.WidgetCellSpan",{extend:qx.ui.virtual.layer.Abstract,include:[qx.ui.core.MChildrenHandling],construct:function(widgetCellProvider,rowConfig,columnConfig){this.base(arguments);
this.setZIndex(2);
this._spanManager=new qx.ui.virtual.layer.CellSpanManager(rowConfig,columnConfig);
this._cellProvider=widgetCellProvider;
this.__spacerPool=[];
this._cellLayer=new qx.ui.virtual.layer.WidgetCell(this.__getCellProviderForNonSpanningCells());
this._cellLayer.setZIndex(0);
this._setLayout(new qx.ui.layout.Grow());
this._add(this._cellLayer);
},properties:{anonymous:{refine:true,init:false}},members:{getRenderedCellWidget:function(row,column){var widget=this._cellLayer.getRenderedCellWidget(row,column);

if(!widget||widget.getUserData("cell.spanning")){var children=this._getChildren();

for(var i=0,l=children.length;i<l;i++){var child=children[i];

if(child==this._cellLayer){continue;
}var cell={row:child.getUserData("cell.row"),column:child.getUserData("cell.column"),rowSpan:child.getUserData("cell.rowspan"),colSpan:child.getUserData("cell.colspan")};

if(cell.row<=row&&row<cell.row+cell.rowSpan&&cell.column<=column&&column<cell.column+cell.colSpan){return child;
}}return null;
}return widget;
},__spacerPool:null,setCellSpan:function(row,column,rowSpan,columnSpan){var id=row+"x"+column;
this._spanManager.removeCell(id);

if(rowSpan>1||columnSpan>1){this._spanManager.addCell(id,row,column,rowSpan,columnSpan);
}qx.ui.core.queue.Widget.add(this);
},__getCellProviderForNonSpanningCells:function(){var self=this;
var cellProvider=this._cellProvider;
var spacerPool=this.__spacerPool;
var nonSpanningCellProvider={getCellWidget:function(row,column){if(!self._spanMap[row][column]){var widget=cellProvider.getCellWidget(row,column);
}else{var widget=spacerPool.pop();

if(!widget){widget=new qx.ui.core.Spacer();
widget.setUserData("cell.spanning",1);
}}return widget;
},poolCellWidget:function(widget){if(widget.getUserData("cell.spanning")){spacerPool.push(widget);
}else{cellProvider.poolCellWidget(widget);
}}};
return nonSpanningCellProvider;
},__updateCellSpanData:function(firstRow,firstColumn,rowCount,columnCount){this._cells=this._spanManager.findCellsInWindow(firstRow,firstColumn,rowCount,columnCount);

if(this._cells.length>0){this._bounds=this._spanManager.getCellBounds(this._cells,firstRow,firstColumn);
this._spanMap=this._spanManager.computeCellSpanMap(this._cells,firstRow,firstColumn,rowCount,columnCount);
}else{this._bounds=[];
this._spanMap=[];

for(var i=0;i<rowCount;i++){this._spanMap[firstRow+i]=[];
}}},__updateCellSpanWidgets:function(){var children=this.getChildren();

for(var i=children.length-1;i>=0;i--){var child=children[i];

if(child!==this._cellLayer){this._cellProvider.poolCellWidget(child);
this._remove(child);
}}
for(var i=0,l=this._cells.length;i<l;i++){var cell=this._cells[i];
var cellBounds=this._bounds[i];
var cellWidget=this._cellProvider.getCellWidget(cell.firstRow,cell.firstColumn);

if(cellWidget){cellWidget.setUserBounds(cellBounds.left,cellBounds.top,cellBounds.width,cellBounds.height);
cellWidget.setUserData("cell.row",cell.firstRow);
cellWidget.setUserData("cell.column",cell.firstColumn);
cellWidget.setUserData("cell.rowspan",cell.lastRow-cell.firstRow+1);
cellWidget.setUserData("cell.colspan",cell.lastColumn-cell.firstColumn+1);
this._add(cellWidget);
}}},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){this.__updateCellSpanData(firstRow,firstColumn,rowSizes.length,columnSizes.length);
this.__updateCellSpanWidgets();
this._cellLayer.fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
},_updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){this.__updateCellSpanData(firstRow,firstColumn,rowSizes.length,columnSizes.length);
this.__updateCellSpanWidgets();
this._cellLayer.updateLayerWindow(firstRow,firstColumn,rowSizes,columnSizes);
}},destruct:function(){var children=this._getChildren();

for(var i=0;i<children.length;i++){children[i].dispose();
}this._disposeObjects("_spanManager","_cellLayer");
this._cellProvider=this.__spacerPool=this._cells=this._bounds=this._spanMap=null;
}});
qx.Class.define("qx.ui.virtual.layer.CellSpanManager",{extend:qx.core.Object,construct:function(rowConfig,columnConfig){this.base(arguments);
{this.assertInstance(rowConfig,qx.ui.virtual.core.Axis);
this.assertInstance(columnConfig,qx.ui.virtual.core.Axis);
};
this._cells={};
this._invalidateSortCache();
this._invalidatePositionCache();
rowConfig.addListener("change",this._onRowConfigChange,this);
columnConfig.addListener("change",this._onColumnConfigChange,this);
this._rowConfig=rowConfig;
this._columnConfig=columnConfig;
},members:{addCell:function(id,row,column,rowSpan,columnSpan){this._cells[id]={firstRow:row,lastRow:row+rowSpan-1,firstColumn:column,lastColumn:column+columnSpan-1,id:id};
this._invalidateSortCache();
},removeCell:function(id){delete (this._cells[id]);
this._invalidateSortCache();
},_invalidateSortCache:function(){this._sorted={};
},_getSortedCells:function(key){if(this._sorted[key]){return this._sorted[key];
}var sorted=this._sorted[key]=qx.lang.Object.getValues(this._cells);
sorted.sort(function(a,b){return a[key]<b[key]?-1:1;
});
return sorted;
},_findCellsInRange:function(key,min,max){var cells=this._getSortedCells(key);

if(cells.length==0){return {};
}var start=0;
var end=cells.length-1;
while(true){var pivot=start+((end-start)>>1);
var cell=cells[pivot];

if(cell[key]>=min&&(pivot==0||cells[pivot-1][key]<min)){break;
}
if(cell[key]>=min){end=pivot-1;
}else{start=pivot+1;
}
if(start>end){return {};
}}var result={};
var cell=cells[pivot];

while(cell&&cell[key]>=min&&cell[key]<=max){result[cell.id]=cell;
cell=cells[pivot++];
}return result;
},findCellsInWindow:function(firstRow,firstColumn,rowCount,columnCount){var verticalInWindow={};

if(rowCount>0){var lastRow=firstRow+rowCount-1;
qx.lang.Object.merge(verticalInWindow,this._findCellsInRange("firstRow",firstRow,lastRow),this._findCellsInRange("lastRow",firstRow,lastRow));
}var horizontalInWindow={};

if(columnCount>0){var lastColumn=firstColumn+columnCount-1;
qx.lang.Object.merge(horizontalInWindow,this._findCellsInRange("firstColumn",firstColumn,lastColumn),this._findCellsInRange("lastColumn",firstColumn,lastColumn));
}return this.__intersectionAsArray(horizontalInWindow,verticalInWindow);
},__intersectionAsArray:function(setA,setB){var intersection=[];

for(var key in setA){if(setB[key]){intersection.push(setB[key]);
}}return intersection;
},_onRowConfigChange:function(e){this._rowPos=[];
},_onColumnConfigChange:function(e){this._columnPos=[];
},_invalidatePositionCache:function(){this._rowPos=[];
this._columnPos=[];
},_getRowPosition:function(row){var pos=this._rowPos[row];

if(pos!==undefined){return pos;
}pos=this._rowPos[row]=this._rowConfig.getItemPosition(row);
return pos;
},_getColumnPosition:function(column){var pos=this._columnPos[column];

if(pos!==undefined){return pos;
}pos=this._columnPos[column]=this._columnConfig.getItemPosition(column);
return pos;
},_getSingleCellBounds:function(cell,firstVisibleRow,firstVisibleColumn){var bounds={left:0,top:0,width:0,height:0};
bounds.height=this._getRowPosition(cell.lastRow)+this._rowConfig.getItemSize(cell.lastRow)-this._getRowPosition(cell.firstRow);
bounds.top=this._getRowPosition(cell.firstRow)-this._getRowPosition(firstVisibleRow);
bounds.width=this._getColumnPosition(cell.lastColumn)+this._columnConfig.getItemSize(cell.lastColumn)-this._getColumnPosition(cell.firstColumn);
bounds.left=this._getColumnPosition(cell.firstColumn)-this._getColumnPosition(firstVisibleColumn);
return bounds;
},getCellBounds:function(cells,firstVisibleRow,firstVisibleColumn){var bounds=[];

for(var i=0,l=cells.length;i<l;i++){bounds.push(this._getSingleCellBounds(cells[i],firstVisibleRow,firstVisibleColumn));
}return bounds;
},computeCellSpanMap:function(cells,firstRow,firstColumn,rowCount,columnCount){var map=[];

if(rowCount<=0){return map;
}var lastRow=firstRow+rowCount-1;

for(var i=firstRow;i<=lastRow;i++){map[i]=[];
}
if(columnCount<=0){return map;
}var lastColumn=firstColumn+columnCount-1;

for(var i=0,l=cells.length;i<l;i++){var cell=cells[i];
var rowStartIndex=Math.max(firstRow,cell.firstRow);
var rowEndIndex=Math.min(lastRow,cell.lastRow);
var row;

for(var rowIndex=rowStartIndex;rowIndex<=rowEndIndex;rowIndex++){row=map[rowIndex];
var columnStartIndex=Math.max(firstColumn,cell.firstColumn);
var columnEndIndex=Math.min(lastColumn,cell.lastColumn);

for(var columnIndex=columnStartIndex;columnIndex<=columnEndIndex;columnIndex++){row[columnIndex]=1;
}}}return map;
}},destruct:function(){this._rowConfig.removeListener("change",this._onRowConfigChange,this);
this._columnConfig.removeListener("change",this._onColumnConfigChange,this);
this._cells=this._sorted=this._rowPos=this._columnPos=this._rowConfig=this._columnConfig=null;
}});
qx.Class.define("qx.ui.virtual.core.Axis",{extend:qx.core.Object,construct:function(defaultItemSize,itemCount){this.base(arguments);
this.itemCount=itemCount;
this.defaultItemSize=defaultItemSize;
this.customSizes={};
},events:{"change":"qx.event.type.Event"},members:{__ranges:null,getDefaultItemSize:function(){return this.defaultItemSize;
},setDefaultItemSize:function(defaultItemSize){if(this.defaultItemSize!==defaultItemSize){this.defaultItemSize=defaultItemSize;
this.__ranges=null;
this.fireNonBubblingEvent("change");
}},getItemCount:function(){return this.itemCount;
},setItemCount:function(itemCount){if(this.itemCount!==itemCount){this.itemCount=itemCount;
this.__ranges=null;
this.fireNonBubblingEvent("change");
}},setItemSize:function(index,size){{this.assertArgumentsCount(arguments,2,2);
this.assert(size>0||size===null,"'size' must be 'null' or an integer larger than 0.");
};

if(this.customSizes[index]==size){return;
}
if(size===null){delete this.customSizes[index];
}else{this.customSizes[index]=size;
}this.__ranges=null;
this.fireNonBubblingEvent("change");
},getItemSize:function(index){return this.customSizes[index]||this.defaultItemSize;
},resetItemSizes:function(){this.customSizes={};
this.__ranges=null;
this.fireNonBubblingEvent("change");
},__getRanges:function(){if(this.__ranges){return this.__ranges;
}var defaultSize=this.defaultItemSize;
var itemCount=this.itemCount;
var indexes=[];

for(var key in this.customSizes){var index=parseInt(key);

if(index<itemCount){indexes.push(index);
}}
if(indexes.length==0){var ranges=[{startIndex:0,endIndex:itemCount-1,firstItemSize:defaultSize,rangeStart:0,rangeEnd:itemCount*defaultSize-1}];
this.__ranges=ranges;
return ranges;
}indexes.sort(function(a,b){return a>b?1:-1;
});
var ranges=[];
var correctionSum=0;

for(var i=0;i<indexes.length;i++){var index=indexes[i];

if(index>=itemCount){break;
}var cellSize=this.customSizes[index];
var rangeStart=index*defaultSize+correctionSum;
correctionSum+=cellSize-defaultSize;
ranges[i]={startIndex:index,firstItemSize:cellSize,rangeStart:rangeStart};

if(i>0){ranges[i-1].rangeEnd=rangeStart-1;
ranges[i-1].endIndex=index-1;
}}if(ranges[0].rangeStart>0){ranges.unshift({startIndex:0,endIndex:ranges[0].startIndex-1,firstItemSize:defaultSize,rangeStart:0,rangeEnd:ranges[0].rangeStart-1});
}var lastRange=ranges[ranges.length-1];
var remainingItemsSize=(itemCount-lastRange.startIndex-1)*defaultSize;
lastRange.rangeEnd=lastRange.rangeStart+lastRange.firstItemSize+remainingItemsSize-1;
lastRange.endIndex=itemCount-1;
this.__ranges=ranges;
return ranges;
},__findRangeByPosition:function(position){var ranges=this.__ranges||this.__getRanges();
var start=0;
var end=ranges.length-1;
while(true){var pivot=start+((end-start)>>1);
var range=ranges[pivot];

if(range.rangeEnd<position){start=pivot+1;
}else if(range.rangeStart>position){end=pivot-1;
}else{return range;
}}},getItemAtPosition:function(position){if(position<0||position>=this.getTotalSize()){return null;
}var range=this.__findRangeByPosition(position);
var startPos=range.rangeStart;
var index=range.startIndex;
var firstItemSize=range.firstItemSize;

if(startPos+firstItemSize>position){return {index:index,offset:position-startPos};
}else{var defaultSize=this.defaultItemSize;
return {index:index+1+Math.floor((position-startPos-firstItemSize)/defaultSize),offset:(position-startPos-firstItemSize)%defaultSize};
}},__findRangeByIndex:function(index){var ranges=this.__ranges||this.__getRanges();
var start=0;
var end=ranges.length-1;
while(true){var pivot=start+((end-start)>>1);
var range=ranges[pivot];

if(range.endIndex<index){start=pivot+1;
}else if(range.startIndex>index){end=pivot-1;
}else{return range;
}}},getItemPosition:function(index){if(index<0||index>=this.itemCount){return null;
}var range=this.__findRangeByIndex(index);

if(range.startIndex==index){return range.rangeStart;
}else{return range.rangeStart+range.firstItemSize+(index-range.startIndex-1)*this.defaultItemSize;
}},getTotalSize:function(){var ranges=this.__ranges||this.__getRanges();
return ranges[ranges.length-1].rangeEnd+1;
},getItemSizes:function(startIndex,minSizeSum){var customSizes=this.customSizes;
var defaultSize=this.defaultItemSize;
var sum=0;
var sizes=[];
var i=0;

while(sum<minSizeSum){var itemSize=customSizes[startIndex++]||defaultSize;
sum+=itemSize;
sizes[i++]=itemSize;

if(startIndex>=this.itemCount){break;
}}return sizes;
}},destruct:function(){this.customSizes=this.__ranges=null;
}});
qx.Class.define("qx.ui.virtual.layer.WidgetCell",{extend:qx.ui.virtual.layer.Abstract,include:[qx.ui.core.MChildrenHandling],construct:function(widgetCellProvider){this.base(arguments);
this.setZIndex(2);
{this.assertInterface(widgetCellProvider,qx.ui.virtual.core.IWidgetCellProvider);
};
this._cellProvider=widgetCellProvider;
this.__spacerPool=[];
},properties:{anonymous:{refine:true,init:false}},members:{getRenderedCellWidget:function(row,column){var columnCount=this.getColumnSizes().length;
var rowCount=this.getRowSizes().length;
var firstRow=this.getFirstRow();
var firstColumn=this.getFirstColumn();

if(row<firstRow||row>=firstRow+rowCount||column<firstColumn||column>=firstColumn+columnCount){return null;
}var childIndex=(column-firstColumn)+(row-firstRow)*columnCount;
var widget=this._getChildren()[childIndex];

if(widget.getUserData("cell.empty")){return null;
}else{return widget;
}},__spacerPool:null,_getSpacer:function(){var spacer=this.__spacerPool.pop();

if(!spacer){spacer=new qx.ui.core.Spacer();
spacer.setUserData("cell.empty",1);
}return spacer;
},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var cellProvider=this._cellProvider;
var children=this._getChildren();

for(var i=0;i<children.length;i++){var child=children[i];

if(child.getUserData("cell.empty")){this.__spacerPool.push(child);
}else{cellProvider.poolCellWidget(child);
}}this._removeAll();
var top=0;
var left=0;

for(var y=0;y<rowSizes.length;y++){for(var x=0;x<columnSizes.length;x++){var row=firstRow+y;
var column=firstColumn+x;
var item=cellProvider.getCellWidget(row,column)||this._getSpacer();
item.setUserBounds(left,top,columnSizes[x],rowSizes[y]);
item.setUserData("cell.row",row);
item.setUserData("cell.column",column);
this._add(item);
left+=columnSizes[x];
}top+=rowSizes[y];
left=0;
}},_updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){var lastRow=firstRow+rowSizes.length-1;
var lastColumn=firstColumn+columnSizes.length-1;
var overlap={firstRow:Math.max(firstRow,this.getFirstRow()),lastRow:Math.min(lastRow,this._lastRow),firstColumn:Math.max(firstColumn,this.getFirstColumn()),lastColumn:Math.min(lastColumn,this._lastColumn)};
this._lastColumn=lastColumn;
this._lastRow=lastRow;

if(overlap.firstRow>overlap.lastRow||overlap.firstColumn>overlap.lastColumn){return this._fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
}var children=this._getChildren();
var lineLength=this.getColumnSizes().length;
var widgetsToMove=[];
var widgetsToMoveIndexes={};

for(var row=firstRow;row<=lastRow;row++){widgetsToMove[row]=[];

for(var column=firstColumn;column<=lastColumn;column++){if(row>=overlap.firstRow&&row<=overlap.lastRow&&column>=overlap.firstColumn&&column<=overlap.lastColumn){var x=column-this.getFirstColumn();
var y=row-this.getFirstRow();
var index=y*lineLength+x;
widgetsToMove[row][column]=children[index];
widgetsToMoveIndexes[index]=true;
}}}var cellProvider=this._cellProvider;
var children=this._getChildren();

for(var i=0;i<children.length;i++){if(!widgetsToMoveIndexes[i]){var child=children[i];

if(child.getUserData("cell.empty")){this.__spacerPool.push(child);
}else{cellProvider.poolCellWidget(child);
}}}this._removeAll();
var top=0;
var left=0;

for(var y=0;y<rowSizes.length;y++){for(var x=0;x<columnSizes.length;x++){var row=firstRow+y;
var column=firstColumn+x;
var item=widgetsToMove[row][column]||cellProvider.getCellWidget(row,column)||this._getSpacer();
item.setUserBounds(left,top,columnSizes[x],rowSizes[y]);
item.setUserData("cell.row",row);
item.setUserData("cell.column",column);
this._add(item);
left+=columnSizes[x];
}top+=rowSizes[y];
left=0;
}}},destruct:function(){var children=this._getChildren();

for(var i=0;i<children.length;i++){children[i].dispose();
}this._cellProvider=this.__spacerPool=null;
}});
qx.Interface.define("qx.ui.virtual.core.IWidgetCellProvider",{members:{getCellWidget:function(row,column){},poolCellWidget:function(widget){}}});
qx.Mixin.define("qx.ui.core.MSingleSelectionHandling",{events:{"changeSelection":"qx.event.type.Data"},members:{__manager:null,getSelection:function(){var selected=this.__getManager().getSelected();

if(selected){return [selected];
}else{return [];
}},setSelection:function(items){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selecting the given items."));
this.trace();
}
switch(items.length){case 0:this.resetSelection();
break;
case 1:this.__getManager().setSelected(items[0]);
break;
default:throw new Error("Could only select one item, but the selection "+" array contains "+items.length+" items!");
}},resetSelection:function(){if(!this.getEnabled()){this.warn("Resetting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to reset the selection."));
this.trace();
}this.__getManager().resetSelected();
},isSelected:function(item){return this.__getManager().isSelected(item);
},isSelectionEmpty:function(){return this.__getManager().isSelectionEmpty();
},getSelectables:function(){return this.__getManager().getSelectables();
},_onChangeSelected:function(e){var newValue=e.getData();
var oldVlaue=e.getOldData();
newValue==null?newValue=[]:newValue=[newValue];
oldVlaue==null?oldVlaue=[]:oldVlaue=[oldVlaue];
this.fireDataEvent("changeSelection",newValue,oldVlaue);
},__getManager:function(){if(this.__manager==null){var that=this;
this.__manager=new qx.ui.core.SingleSelectionManager({getItems:function(){return that._getItems();
},isItemSelectable:function(item){if(that._isItemSelectable){return that._isItemSelectable(item);
}else{return item.isEnabled()&&item.isVisible();
}}});
this.__manager.addListener("changeSelected",this._onChangeSelected,this);
}this.__manager.setAllowEmptySelection(this._isAllowEmptySelection());
return this.__manager;
}},destruct:function(){this._disposeObjects("__manager");
}});
qx.Mixin.define("qx.ui.form.MModelSelection",{construct:function(){this.__modelSelection=new qx.data.Array();
this.__modelSelection.addListener("change",this.__onModelSelectionArrayChange,this);
this.addListener("changeSelection",this.__onModelSelectionChange,this);
},events:{changeModelSelection:"qx.event.type.Data"},members:{__modelSelection:null,__inSelectionChange:false,__onModelSelectionChange:function(){if(this.__inSelectionChange){return;
}var data=this.getSelection();
var modelSelection=[];

for(var i=0;i<data.length;i++){var item=data[i];
var model=item.getModel?item.getModel():null;

if(model!==null){modelSelection.push(model);
}}this.setModelSelection(modelSelection);
},__onModelSelectionArrayChange:function(){this.__inSelectionChange=true;
var selectables=this.getSelectables();
var itemSelection=[];
var modelSelection=this.__modelSelection.toArray();

for(var i=0;i<modelSelection.length;i++){var model=modelSelection[i];

for(var j=0;j<selectables.length;j++){var selectable=selectables[j];
var selectableModel=selectable.getModel?selectable.getModel():null;

if(model===selectableModel){itemSelection.push(selectable);
break;
}}}this.setSelection(itemSelection);
this.__inSelectionChange=false;
var currentSelection=this.getSelection();

if(!qx.lang.Array.equals(currentSelection,itemSelection)){this.__onModelSelectionChange();
}},getModelSelection:function(){return this.__modelSelection;
},setModelSelection:function(modelSelection){if(!modelSelection){this.__modelSelection.removeAll();
return;
}{this.assertArray(modelSelection,"Please use an array as parameter.");
};
modelSelection.unshift(this.__modelSelection.getLength());
modelSelection.unshift(0);
var returnArray=this.__modelSelection.splice.apply(this.__modelSelection,modelSelection);
returnArray.dispose();
}},destruct:function(){this._disposeObjects("__modelSelection");
}});
qx.Class.define("qx.ui.form.RadioGroup",{extend:qx.core.Object,implement:[qx.ui.core.ISingleSelection,qx.ui.form.IForm,qx.ui.form.IModelSelection],include:[qx.ui.core.MSingleSelectionHandling,qx.ui.form.MModelSelection],construct:function(varargs){this.base(arguments);
this.__items=[];
this.addListener("changeSelection",this.__onChangeSelection,this);

if(varargs!=null){this.add.apply(this,arguments);
}},properties:{enabled:{check:"Boolean",apply:"_applyEnabled",event:"changeEnabled",init:true},wrap:{check:"Boolean",init:true},allowEmptySelection:{check:"Boolean",init:false,apply:"_applyAllowEmptySelection"},valid:{check:"Boolean",init:true,apply:"_applyValid",event:"changeValid"},required:{check:"Boolean",init:false,event:"changeRequired"},invalidMessage:{check:"String",init:"",event:"changeInvalidMessage",apply:"_applyInvalidMessage"}},members:{__items:null,getItems:function(){return this.__items;
},add:function(varargs){var items=this.__items;
var item;

for(var i=0,l=arguments.length;i<l;i++){item=arguments[i];

if(qx.lang.Array.contains(items,item)){continue;
}item.addListener("changeValue",this._onItemChangeChecked,this);
items.push(item);
item.setGroup(this);
if(item.getValue()){this.setSelection([item]);
}}if(!this.isAllowEmptySelection()&&items.length>0&&!this.getSelection()[0]){this.setSelection([items[0]]);
}},remove:function(item){var items=this.__items;

if(qx.lang.Array.contains(items,item)){qx.lang.Array.remove(items,item);
if(item.getGroup()===this){item.resetGroup();
}item.removeListener("changeValue",this._onItemChangeChecked,this);
if(item.getValue()){this.resetSelection();
}}},getChildren:function(){return this.__items;
},_onItemChangeChecked:function(e){var item=e.getTarget();

if(item.getValue()){this.setSelection([item]);
}else if(this.getSelection()[0]==item){this.resetSelection();
}},_applyInvalidMessage:function(value,old){for(var i=0;i<this.__items.length;i++){this.__items[i].setInvalidMessage(value);
}},_applyValid:function(value,old){for(var i=0;i<this.__items.length;i++){this.__items[i].setValid(value);
}},_applyEnabled:function(value,old){var items=this.__items;

if(value==null){for(var i=0,l=items.length;i<l;i++){items[i].resetEnabled();
}}else{for(var i=0,l=items.length;i<l;i++){items[i].setEnabled(value);
}}},_applyAllowEmptySelection:function(value,old){if(!value&&this.isSelectionEmpty()){this.resetSelection();
}},selectNext:function(){var item=this.getSelection()[0];
var items=this.__items;
var index=items.indexOf(item);

if(index==-1){return;
}var i=0;
var length=items.length;
if(this.getWrap()){index=(index+1)%length;
}else{index=Math.min(index+1,length-1);
}
while(i<length&&!items[index].getEnabled()){index=(index+1)%length;
i++;
}this.setSelection([items[index]]);
},selectPrevious:function(){var item=this.getSelection()[0];
var items=this.__items;
var index=items.indexOf(item);

if(index==-1){return;
}var i=0;
var length=items.length;
if(this.getWrap()){index=(index-1+length)%length;
}else{index=Math.max(index-1,0);
}
while(i<length&&!items[index].getEnabled()){index=(index-1+length)%length;
i++;
}this.setSelection([items[index]]);
},_getItems:function(){return this.getItems();
},_isAllowEmptySelection:function(){return this.isAllowEmptySelection();
},__onChangeSelection:function(e){var value=e.getData()[0];
var old=e.getOldData()[0];

if(old){old.setValue(false);
}
if(value){value.setValue(true);
}}},destruct:function(){this._disposeArray("__items");
}});
qx.Class.define("qx.ui.core.SingleSelectionManager",{extend:qx.core.Object,construct:function(selectionProvider){this.base(arguments);
{qx.core.Assert.assertInterface(selectionProvider,qx.ui.core.ISingleSelectionProvider,"Invalid selectionProvider!");
};
this.__selectionProvider=selectionProvider;
},events:{"changeSelected":"qx.event.type.Data"},properties:{allowEmptySelection:{check:"Boolean",init:true,apply:"__applyAllowEmptySelection"}},members:{__selected:null,__selectionProvider:null,getSelected:function(){return this.__selected;
},setSelected:function(item){if(!this.__isChildElement(item)){throw new Error("Could not select "+item+", because it is not a child element!");
}this.__setSelected(item);
},resetSelected:function(){this.__setSelected(null);
},isSelected:function(item){if(!this.__isChildElement(item)){throw new Error("Could not check if "+item+" is selected,"+" because it is not a child element!");
}return this.__selected===item;
},isSelectionEmpty:function(){return this.__selected==null;
},getSelectables:function(){var items=this.__selectionProvider.getItems();
var result=[];

for(var i=0;i<items.length;i++){if(this.__selectionProvider.isItemSelectable(items[i])){result.push(items[i]);
}}return result;
},__applyAllowEmptySelection:function(value,old){if(!value){this.__setSelected(this.__selected);
}},__setSelected:function(item){var oldSelected=this.__selected;
var newSelected=item;

if(newSelected!=null&&oldSelected===newSelected){return;
}
if(!this.isAllowEmptySelection()&&newSelected==null){var firstElement=this.getSelectables()[0];

if(firstElement){newSelected=firstElement;
}}this.__selected=newSelected;
this.fireDataEvent("changeSelected",newSelected,oldSelected);
},__isChildElement:function(item){var items=this.__selectionProvider.getItems();

for(var i=0;i<items.length;i++){if(items[i]===item){return true;
}}return false;
}},destruct:function(){if(this.__selectionProvider.toHashCode){this._disposeObjects("__selectionProvider");
}else{this.__selectionProvider=null;
}this._disposeObjects("__selected");
}});
qx.Interface.define("qx.ui.core.ISingleSelectionProvider",{members:{getItems:function(){},isItemSelectable:function(item){}}});
qx.Class.define("qx.ui.splitpane.Pane",{extend:qx.ui.core.Widget,construct:function(orientation){this.base(arguments);
this.__children=[];
if(orientation){this.setOrientation(orientation);
}else{this.initOrientation();
}this.addListener("mousedown",this._onMouseDown);
this.addListener("mouseup",this._onMouseUp);
this.addListener("mousemove",this._onMouseMove);
this.addListener("mouseout",this._onMouseOut);
this.addListener("losecapture",this._onMouseUp);
},properties:{appearance:{refine:true,init:"splitpane"},offset:{check:"Integer",init:6,apply:"_applyOffset"},orientation:{init:"horizontal",check:["horizontal","vertical"],apply:"_applyOrientation"}},members:{__splitterOffset:null,__activeDragSession:false,__lastMouseX:null,__lastMouseY:null,__isHorizontal:null,__beginSize:null,__endSize:null,__children:null,_createChildControlImpl:function(id){var control;

switch(id){case "slider":control=new qx.ui.splitpane.Slider(this);
control.exclude();
this._add(control,{type:id});
break;
case "splitter":control=new qx.ui.splitpane.Splitter(this);
this._add(control,{type:id});
control.addListener("move",this._onSplitterMove,this);
if(qx.bom.client.Engine.OPERA){control.addListener("mouseover",this._onSplitterMouseOver,control);
}break;
}return control||this.base(arguments,id);
},_applyOrientation:function(value,old){var slider=this.getChildControl("slider");
var splitter=this.getChildControl("splitter");
this.__isHorizontal=value==="horizontal";
var oldLayout=this._getLayout();

if(oldLayout){oldLayout.dispose();
}var newLayout=value==="vertical"?new qx.ui.splitpane.VLayout:new qx.ui.splitpane.HLayout;
this._setLayout(newLayout);
splitter.removeState(old);
splitter.addState(value);
splitter.getChildControl("knob").removeState(old);
splitter.getChildControl("knob").addState(value);
slider.removeState(old);
slider.addState(value);
},_applyOffset:function(value,old){var splitter=this.getChildControl("splitter");

if(old===0){splitter.removeListener("mousedown",this._onMouseDown,this);
splitter.removeListener("mousemove",this._onMouseMove,this);
splitter.removeListener("mouseout",this._onMouseOut,this);
splitter.removeListener("mouseup",this._onMouseUp,this);
splitter.removeListener("losecapture",this._onMouseUp,this);
this.addListener("mousedown",this._onMouseDown);
this.addListener("mouseup",this._onMouseUp);
this.addListener("mousemove",this._onMouseMove);
this.addListener("mouseout",this._onMouseOut);
this.addListener("losecapture",this._onMouseUp);
}
if(value===0){this.removeListener("mousedown",this._onMouseDown);
this.removeListener("mouseup",this._onMouseUp);
this.removeListener("mousemove",this._onMouseMove);
this.removeListener("mouseout",this._onMouseOut);
this.removeListener("losecapture",this._onMouseUp);
splitter.addListener("mousedown",this._onMouseDown,this);
splitter.addListener("mousemove",this._onMouseMove,this);
splitter.addListener("mouseout",this._onMouseOut,this);
splitter.addListener("mouseup",this._onMouseUp,this);
splitter.addListener("losecapture",this._onMouseUp,this);
}},add:function(widget,flex){if(flex==null){this._add(widget);
}else{this._add(widget,{flex:flex});
}this.__children.push(widget);
},remove:function(widget){this._remove(widget);
qx.lang.Array.remove(this.__children,widget);
},getChildren:function(){return this.__children;
},_onMouseDown:function(e){if(!e.isLeftPressed()||!this._isNear()){return;
}var splitter=this.getChildControl("splitter");
var splitterLocation=splitter.getContainerLocation();
var paneLocation=this.getContentLocation();
this.__splitterOffset=this.__isHorizontal?e.getDocumentLeft()-splitterLocation.left+paneLocation.left:e.getDocumentTop()-splitterLocation.top+paneLocation.top;
var slider=this.getChildControl("slider");
var splitterBounds=splitter.getBounds();
slider.setUserBounds(splitterBounds.left,splitterBounds.top,splitterBounds.width,splitterBounds.height);
slider.setZIndex(splitter.getZIndex()+1);
slider.show();
this.__activeDragSession=true;
e.getCurrentTarget().capture();
e.stop();
},_onMouseMove:function(e){this._setLastMousePosition(e.getDocumentLeft(),e.getDocumentTop());
if(this.__activeDragSession){this.__computeSizes();
var slider=this.getChildControl("slider");
var pos=this.__beginSize;

if(this.__isHorizontal){slider.setDomLeft(pos);
}else{slider.setDomTop(pos);
}e.stop();
}else{this.__updateCursor();
}},_onMouseOut:function(e){this._setLastMousePosition(-1,-1);
this.__updateCursor();
},_onMouseUp:function(e){if(!this.__activeDragSession){return;
}this._finalizeSizes();
var slider=this.getChildControl("slider");
slider.exclude();
this.__activeDragSession=false;
this.releaseCapture();
this.__updateCursor();
e.stop();
},_onSplitterMove:function(){this.__updateCursor();
},_onSplitterMouseOver:function(){this.addState("active");
},_finalizeSizes:function(){var beginSize=this.__beginSize;
var endSize=this.__endSize;

if(beginSize==null){return;
}var children=this._getChildren();
var firstWidget=children[2];
var secondWidget=children[3];
var firstFlexValue=firstWidget.getLayoutProperties().flex;
var secondFlexValue=secondWidget.getLayoutProperties().flex;
if((firstFlexValue!=0)&&(secondFlexValue!=0)){firstWidget.setLayoutProperties({flex:beginSize});
secondWidget.setLayoutProperties({flex:endSize});
}else{if(this.__isHorizontal){firstWidget.setWidth(beginSize);
secondWidget.setWidth(endSize);
}else{firstWidget.setHeight(beginSize);
secondWidget.setHeight(endSize);
}}},_isNear:function(){var splitter=this.getChildControl("splitter");
var splitterBounds=splitter.getBounds();
var splitterLocation=splitter.getContainerLocation();
var min=this.getOffset();
if(!splitterLocation){return;
}var mouse=this.__lastMouseX;
var size=splitterBounds.width;
var pos=splitterLocation.left;

if(size<min){pos-=Math.floor((min-size)/2);
size=min;
}
if(mouse<pos||mouse>(pos+size)){return false;
}var mouse=this.__lastMouseY;
var size=splitterBounds.height;
var pos=splitterLocation.top;

if(size<min){pos-=Math.floor((min-size)/2);
size=min;
}
if(mouse<pos||mouse>(pos+size)){return false;
}return true;
},__updateCursor:function(){var splitter=this.getChildControl("splitter");
var root=this.getApplicationRoot();
if(this.__activeDragSession||this._isNear()){var cursor=this.__isHorizontal?"col-resize":"row-resize";
this.setCursor(cursor);
root.setGlobalCursor(cursor);
splitter.addState("active");
}else if(splitter.hasState("active")){this.resetCursor();
root.resetGlobalCursor();
splitter.removeState("active");
}},__computeSizes:function(){if(this.__isHorizontal){var min="minWidth",size="width",max="maxWidth",mouse=this.__lastMouseX;
}else{var min="minHeight",size="height",max="maxHeight",mouse=this.__lastMouseY;
}var children=this._getChildren();
var beginHint=children[2].getSizeHint();
var endHint=children[3].getSizeHint();
var allocatedSize=children[2].getBounds()[size]+children[3].getBounds()[size];
var beginSize=mouse-this.__splitterOffset;
var endSize=allocatedSize-beginSize;
if(beginSize<beginHint[min]){endSize-=beginHint[min]-beginSize;
beginSize=beginHint[min];
}else if(endSize<endHint[min]){beginSize-=endHint[min]-endSize;
endSize=endHint[min];
}if(beginSize>beginHint[max]){endSize+=beginSize-beginHint[max];
beginSize=beginHint[max];
}else if(endSize>endHint[max]){beginSize+=endSize-endHint[max];
endSize=endHint[max];
}this.__beginSize=beginSize;
this.__endSize=endSize;
},_isActiveDragSession:function(){return this.__activeDragSession;
},_setLastMousePosition:function(x,y){this.__lastMouseX=x;
this.__lastMouseY=y;
}},destruct:function(){this.__children=null;
}});
qx.Class.define("qx.ui.splitpane.Slider",{extend:qx.ui.core.Widget,properties:{allowShrinkX:{refine:true,init:false},allowShrinkY:{refine:true,init:false}}});
qx.Class.define("qx.ui.splitpane.Splitter",{extend:qx.ui.core.Widget,construct:function(parentWidget){this.base(arguments);
if(parentWidget.getOrientation()=="vertical"){this._setLayout(new qx.ui.layout.HBox(0,"center"));
this._getLayout().setAlignY("middle");
}else{this._setLayout(new qx.ui.layout.VBox(0,"middle"));
this._getLayout().setAlignX("center");
}this._createChildControl("knob");
},properties:{allowShrinkX:{refine:true,init:false},allowShrinkY:{refine:true,init:false}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "knob":control=new qx.ui.basic.Image;
this._add(control);
break;
}return control||this.base(arguments,id);
}}});
qx.Class.define("qx.ui.splitpane.VLayout",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){this.assert(name==="type"||name==="flex","The property '"+name+"' is not supported by the split layout!");

if(name=="flex"){this.assertNumber(value);
}
if(name=="type"){this.assertString(value);
}},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var length=children.length;
var child,type;
var begin,splitter,slider,end;

for(var i=0;i<length;i++){child=children[i];
type=child.getLayoutProperties().type;

if(type==="splitter"){splitter=child;
}else if(type==="slider"){slider=child;
}else if(!begin){begin=child;
}else{end=child;
}}
if(begin&&end){var beginFlex=begin.getLayoutProperties().flex;
var endFlex=end.getLayoutProperties().flex;

if(beginFlex==null){beginFlex=1;
}
if(endFlex==null){endFlex=1;
}var beginHint=begin.getSizeHint();
var splitterHint=splitter.getSizeHint();
var endHint=end.getSizeHint();
var beginHeight=beginHint.height;
var splitterHeight=splitterHint.height;
var endHeight=endHint.height;

if(beginFlex>0&&endFlex>0){var flexSum=beginFlex+endFlex;
var flexAvailable=availHeight-splitterHeight;
var beginHeight=Math.round((flexAvailable/flexSum)*beginFlex);
var endHeight=flexAvailable-beginHeight;
var sizes=qx.ui.layout.Util.arrangeIdeals(beginHint.minHeight,beginHeight,beginHint.maxHeight,endHint.minHeight,endHeight,endHint.maxHeight);
beginHeight=sizes.begin;
endHeight=sizes.end;
}else if(beginFlex>0){beginHeight=availHeight-splitterHeight-endHeight;

if(beginHeight<beginHint.minHeight){beginHeight=beginHint.minHeight;
}
if(beginHeight>beginHint.maxHeight){beginHeight=beginHint.maxHeight;
}}else if(endFlex>0){endHeight=availHeight-beginHeight-splitterHeight;

if(endHeight<endHint.minHeight){endHeight=endHint.minHeight;
}
if(endHeight>endHint.maxHeight){endHeight=endHint.maxHeight;
}}begin.renderLayout(0,0,availWidth,beginHeight);
splitter.renderLayout(0,beginHeight,availWidth,splitterHeight);
end.renderLayout(0,beginHeight+splitterHeight,availWidth,endHeight);
}else{splitter.renderLayout(0,0,0,0);
if(begin){begin.renderLayout(0,0,availWidth,availHeight);
}else if(end){end.renderLayout(0,0,availWidth,availHeight);
}}},_computeSizeHint:function(){var children=this._getLayoutChildren();
var length=children.length;
var child,hint,props;
var minHeight=0,height=0,maxHeight=0;
var minWidth=0,width=0,maxWidth=0;

for(var i=0;i<length;i++){child=children[i];
props=child.getLayoutProperties();
if(props.type==="slider"){continue;
}hint=child.getSizeHint();
minHeight+=hint.minHeight;
height+=hint.height;
maxHeight+=hint.maxHeight;

if(hint.minWidth>minWidth){minWidth=hint.minWidth;
}
if(hint.width>width){width=hint.width;
}
if(hint.maxWidth>maxWidth){maxWidth=hint.maxWidth;
}}return {minHeight:minHeight,height:height,maxHeight:maxHeight,minWidth:minWidth,width:width,maxWidth:maxWidth};
}}});
qx.Class.define("qx.ui.splitpane.HLayout",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){this.assert(name==="type"||name==="flex","The property '"+name+"' is not supported by the split layout!");

if(name=="flex"){this.assertNumber(value);
}
if(name=="type"){this.assertString(value);
}},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var length=children.length;
var child,type;
var begin,splitter,slider,end;

for(var i=0;i<length;i++){child=children[i];
type=child.getLayoutProperties().type;

if(type==="splitter"){splitter=child;
}else if(type==="slider"){slider=child;
}else if(!begin){begin=child;
}else{end=child;
}}
if(begin&&end){var beginFlex=begin.getLayoutProperties().flex;
var endFlex=end.getLayoutProperties().flex;

if(beginFlex==null){beginFlex=1;
}
if(endFlex==null){endFlex=1;
}var beginHint=begin.getSizeHint();
var splitterHint=splitter.getSizeHint();
var endHint=end.getSizeHint();
var beginWidth=beginHint.width;
var splitterWidth=splitterHint.width;
var endWidth=endHint.width;

if(beginFlex>0&&endFlex>0){var flexSum=beginFlex+endFlex;
var flexAvailable=availWidth-splitterWidth;
var beginWidth=Math.round((flexAvailable/flexSum)*beginFlex);
var endWidth=flexAvailable-beginWidth;
var sizes=qx.ui.layout.Util.arrangeIdeals(beginHint.minWidth,beginWidth,beginHint.maxWidth,endHint.minWidth,endWidth,endHint.maxWidth);
beginWidth=sizes.begin;
endWidth=sizes.end;
}else if(beginFlex>0){beginWidth=availWidth-splitterWidth-endWidth;

if(beginWidth<beginHint.minWidth){beginWidth=beginHint.minWidth;
}
if(beginWidth>beginHint.maxWidth){beginWidth=beginHint.maxWidth;
}}else if(endFlex>0){endWidth=availWidth-beginWidth-splitterWidth;

if(endWidth<endHint.minWidth){endWidth=endHint.minWidth;
}
if(endWidth>endHint.maxWidth){endWidth=endHint.maxWidth;
}}begin.renderLayout(0,0,beginWidth,availHeight);
splitter.renderLayout(beginWidth,0,splitterWidth,availHeight);
end.renderLayout(beginWidth+splitterWidth,0,endWidth,availHeight);
}else{splitter.renderLayout(0,0,0,0);
if(begin){begin.renderLayout(0,0,availWidth,availHeight);
}else if(end){end.renderLayout(0,0,availWidth,availHeight);
}}},_computeSizeHint:function(){var children=this._getLayoutChildren();
var length=children.length;
var child,hint,props;
var minWidth=0,width=0,maxWidth=0;
var minHeight=0,height=0,maxHeight=0;

for(var i=0;i<length;i++){child=children[i];
props=child.getLayoutProperties();
if(props.type==="slider"){continue;
}hint=child.getSizeHint();
minWidth+=hint.minWidth;
width+=hint.width;
maxWidth+=hint.maxWidth;

if(hint.minHeight>minHeight){minHeight=hint.minHeight;
}
if(hint.height>height){height=hint.height;
}
if(hint.maxHeight>maxHeight){maxHeight=hint.maxHeight;
}}return {minWidth:minWidth,width:width,maxWidth:maxWidth,minHeight:minHeight,height:height,maxHeight:maxHeight};
}}});
qx.Mixin.define("qx.ui.core.MRemoteChildrenHandling",{members:{__forward:function(functionName,a1,a2,a3){var container=this.getChildrenContainer();

if(container===this){functionName="_"+functionName;
}return (container[functionName])(a1,a2,a3);
},getChildren:function(){return this.__forward("getChildren");
},hasChildren:function(){return this.__forward("hasChildren");
},add:function(child,options){return this.__forward("add",child,options);
},remove:function(child){return this.__forward("remove",child);
},removeAll:function(){return this.__forward("removeAll");
},indexOf:function(child){return this.__forward("indexOf",child);
},addAt:function(child,index,options){this.__forward("addAt",child,index,options);
},addBefore:function(child,before,options){this.__forward("addBefore",child,before,options);
},addAfter:function(child,after,options){this.__forward("addAfter",child,after,options);
},removeAt:function(index){this.__forward("removeAt",index);
}}});
qx.Class.define("qx.ui.toolbar.Part",{extend:qx.ui.core.Widget,include:[qx.ui.core.MRemoteChildrenHandling],construct:function(){this.base(arguments);
this._setLayout(new qx.ui.layout.HBox);
this._createChildControl("handle");
},properties:{appearance:{refine:true,init:"toolbar/part"},show:{init:"both",check:["both","label","icon"],inheritable:true,event:"changeShow"},spacing:{nullable:true,check:"Integer",themeable:true,apply:"_applySpacing"}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "handle":control=new qx.ui.basic.Image();
control.setAlignY("middle");
this._add(control);
break;
case "container":control=new qx.ui.toolbar.PartContainer;
this._add(control);
break;
}return control||this.base(arguments,id);
},getChildrenContainer:function(){return this.getChildControl("container");
},_applySpacing:function(value,old){var layout=this.getChildControl("container").getLayout();
value==null?layout.resetSpacing():layout.setSpacing(value);
},addSeparator:function(){this.add(new qx.ui.toolbar.Separator);
},getMenuButtons:function(){var children=this.getChildren();
var buttons=[];
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child instanceof qx.ui.menubar.Button){buttons.push(child);
}}return buttons;
}}});
qx.Class.define("qx.ui.toolbar.PartContainer",{extend:qx.ui.container.Composite,construct:function(){this.base(arguments);
this._setLayout(new qx.ui.layout.HBox);
},properties:{appearance:{refine:true,init:"toolbar/part/container"},show:{init:"both",check:["both","label","icon"],inheritable:true,event:"changeShow"}}});
qx.Class.define("qx.ui.toolbar.Separator",{extend:qx.ui.core.Widget,properties:{appearance:{refine:true,init:"toolbar-separator"},anonymous:{refine:true,init:true},width:{refine:true,init:0},height:{refine:true,init:0}}});
qx.Interface.define("qx.ui.form.IExecutable",{events:{"execute":"qx.event.type.Data"},members:{setCommand:function(command){return arguments.length==1;
},getCommand:function(){},execute:function(){}}});
qx.Class.define("qx.ui.form.Button",{extend:qx.ui.basic.Atom,include:[qx.ui.core.MExecutable],implement:[qx.ui.form.IExecutable],construct:function(label,icon,command){this.base(arguments,label,icon);

if(command!=null){this.setCommand(command);
}this.addListener("mouseover",this._onMouseOver);
this.addListener("mouseout",this._onMouseOut);
this.addListener("mousedown",this._onMouseDown);
this.addListener("mouseup",this._onMouseUp);
this.addListener("keydown",this._onKeyDown);
this.addListener("keyup",this._onKeyUp);
this.addListener("dblclick",this._onStopEvent);
},properties:{appearance:{refine:true,init:"button"},focusable:{refine:true,init:true}},members:{_forwardStates:{focused:true,hovered:true,pressed:true,disabled:true},press:function(){if(this.hasState("abandoned")){return;
}this.addState("pressed");
},release:function(){if(this.hasState("pressed")){this.removeState("pressed");
}},reset:function(){this.removeState("pressed");
this.removeState("abandoned");
this.removeState("hovered");
},_onMouseOver:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}
if(this.hasState("abandoned")){this.removeState("abandoned");
this.addState("pressed");
}this.addState("hovered");
},_onMouseOut:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}this.removeState("hovered");

if(this.hasState("pressed")){this.removeState("pressed");
this.addState("abandoned");
}},_onMouseDown:function(e){if(!e.isLeftPressed()){return;
}e.stopPropagation();
this.capture();
this.removeState("abandoned");
this.addState("pressed");
},_onMouseUp:function(e){this.releaseCapture();
var hasPressed=this.hasState("pressed");
var hasAbandoned=this.hasState("abandoned");

if(hasPressed){this.removeState("pressed");
}
if(hasAbandoned){this.removeState("abandoned");
}else{this.addState("hovered");

if(hasPressed){this.execute();
}}e.stopPropagation();
},_onKeyDown:function(e){switch(e.getKeyIdentifier()){case "Enter":case "Space":this.removeState("abandoned");
this.addState("pressed");
e.stopPropagation();
}},_onKeyUp:function(e){switch(e.getKeyIdentifier()){case "Enter":case "Space":if(this.hasState("pressed")){this.removeState("abandoned");
this.removeState("pressed");
this.execute();
e.stopPropagation();
}}}}});
qx.Class.define("qx.ui.form.MenuButton",{extend:qx.ui.form.Button,construct:function(label,icon,menu){this.base(arguments,label,icon);
if(menu!=null){this.setMenu(menu);
}},properties:{menu:{check:"qx.ui.menu.Menu",nullable:true,apply:"_applyMenu",event:"changeMenu"}},members:{_applyMenu:function(value,old){if(old){old.removeListener("changeVisibility",this._onMenuChange,this);
old.resetOpener();
}
if(value){value.addListener("changeVisibility",this._onMenuChange,this);
value.setOpener(this);
value.removeState("submenu");
value.removeState("contextmenu");
}},open:function(selectFirst){var menu=this.getMenu();

if(menu){qx.ui.menu.Manager.getInstance().hideAll();
menu.setOpener(this);
menu.open();
if(selectFirst){var first=menu.getSelectables()[0];

if(first){menu.setSelectedButton(first);
}}}},_onMenuChange:function(e){var menu=this.getMenu();

if(menu.isVisible()){this.addState("pressed");
}else{this.removeState("pressed");
}},_onMouseDown:function(e){var menu=this.getMenu();

if(menu){if(!menu.isVisible()){this.open();
}else{menu.exclude();
}e.stopPropagation();
}},_onMouseUp:function(e){this.base(arguments,e);
e.stopPropagation();
},_onMouseOver:function(e){this.addState("hovered");
},_onMouseOut:function(e){this.removeState("hovered");
},_onKeyDown:function(e){switch(e.getKeyIdentifier()){case "Enter":this.removeState("abandoned");
this.addState("pressed");
var menu=this.getMenu();

if(menu){if(!menu.isVisible()){this.open();
}else{menu.exclude();
}}e.stopPropagation();
}},_onKeyUp:function(e){}},destruct:function(){if(this.getMenu()){if(!qx.core.ObjectRegistry.inShutDown){this.getMenu().destroy();
}}}});
qx.Class.define("qx.ui.menubar.Button",{extend:qx.ui.form.MenuButton,construct:function(label,icon,menu){this.base(arguments,label,icon,menu);
this.removeListener("keydown",this._onKeyDown);
this.removeListener("keyup",this._onKeyUp);
},properties:{appearance:{refine:true,init:"menubar-button"},show:{refine:true,init:"inherit"},focusable:{refine:true,init:false}},members:{getMenuBar:function(){var parent=this;

while(parent){if(parent instanceof qx.ui.toolbar.ToolBar){return parent;
}parent=parent.getLayoutParent();
}return null;
},open:function(selectFirst){this.base(arguments,selectFirst);
var menubar=this.getMenuBar();
menubar._setAllowMenuOpenHover(true);
},_onMenuChange:function(e){var menu=this.getMenu();
var menubar=this.getMenuBar();

if(menu.isVisible()){this.addState("pressed");
if(menubar){menubar.setOpenMenu(menu);
}}else{this.removeState("pressed");
if(menubar&&menubar.getOpenMenu()==menu){menubar.resetOpenMenu();
menubar._setAllowMenuOpenHover(false);
}}},_onMouseUp:function(e){this.base(arguments,e);
var menu=this.getMenu();

if(menu&&menu.isVisible()&&!this.hasState("pressed")){this.addState("pressed");
}},_onMouseOver:function(e){this.addState("hovered");
if(this.getMenu()){var menubar=this.getMenuBar();

if(menubar._isAllowMenuOpenHover()){qx.ui.menu.Manager.getInstance().hideAll();
menubar._setAllowMenuOpenHover(true);
if(this.isEnabled()){this.open();
}}}}}});
qx.Class.define("qx.ui.menu.Manager",{type:"singleton",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__objects=[];
var el=document.body;
var Registration=qx.event.Registration;
Registration.addListener(window.document.documentElement,"mousedown",this._onMouseDown,this,true);
Registration.addListener(el,"keydown",this._onKeyUpDown,this,true);
Registration.addListener(el,"keyup",this._onKeyUpDown,this,true);
Registration.addListener(el,"keypress",this._onKeyPress,this,true);
qx.bom.Element.addListener(window,"blur",this.hideAll,this);
this.__openTimer=new qx.event.Timer;
this.__openTimer.addListener("interval",this._onOpenInterval,this);
this.__closeTimer=new qx.event.Timer;
this.__closeTimer.addListener("interval",this._onCloseInterval,this);
},members:{__scheduleOpen:null,__scheduleClose:null,__openTimer:null,__closeTimer:null,__objects:null,_getChild:function(menu,start,iter,loop){var children=menu.getChildren();
var length=children.length;
var child;

for(var i=start;i<length&&i>=0;i+=iter){child=children[i];

if(child.isEnabled()&&!child.isAnonymous()){return child;
}}
if(loop){i=i==length?0:length-1;

for(;i!=start;i+=iter){child=children[i];

if(child.isEnabled()&&!child.isAnonymous()){return child;
}}}return null;
},_isInMenu:function(widget){while(widget){if(widget instanceof qx.ui.menu.Menu){return true;
}widget=widget.getLayoutParent();
}return false;
},_getMenuButton:function(widget){while(widget){if(widget instanceof qx.ui.menu.AbstractButton){return widget;
}widget=widget.getLayoutParent();
}return null;
},add:function(obj){{if(!(obj instanceof qx.ui.menu.Menu)){throw new Error("Object is no menu: "+obj);
}};
var reg=this.__objects;
reg.push(obj);
obj.setZIndex(1e6+reg.length);
},remove:function(obj){{if(!(obj instanceof qx.ui.menu.Menu)){throw new Error("Object is no menu: "+obj);
}};
var reg=this.__objects;

if(reg){qx.lang.Array.remove(reg,obj);
}},hideAll:function(){var reg=this.__objects;

if(reg){for(var i=reg.length-1;i>=0;i--){reg[i].exclude();
}}},getActiveMenu:function(){var reg=this.__objects;
return reg.length>0?reg[reg.length-1]:null;
},scheduleOpen:function(menu){this.cancelClose(menu);
if(menu.isVisible()){if(this.__scheduleOpen){this.cancelOpen(this.__scheduleOpen);
}}else if(this.__scheduleOpen!=menu){this.__scheduleOpen=menu;
this.__openTimer.restartWith(menu.getOpenInterval());
}},scheduleClose:function(menu){this.cancelOpen(menu);
if(!menu.isVisible()){if(this.__scheduleClose){this.cancelClose(this.__scheduleClose);
}}else if(this.__scheduleClose!=menu){this.__scheduleClose=menu;
this.__closeTimer.restartWith(menu.getCloseInterval());
}},cancelOpen:function(menu){if(this.__scheduleOpen==menu){this.__openTimer.stop();
this.__scheduleOpen=null;
}},cancelClose:function(menu){if(this.__scheduleClose==menu){this.__closeTimer.stop();
this.__scheduleClose=null;
}},_onOpenInterval:function(e){this.__openTimer.stop();
this.__scheduleOpen.open();
this.__scheduleOpen=null;
},_onCloseInterval:function(e){this.__closeTimer.stop();
this.__scheduleClose.exclude();
this.__scheduleClose=null;
},_onMouseDown:function(e){var target=e.getTarget();
target=qx.ui.core.Widget.getWidgetByElement(target);
if(target==null){this.hideAll();
return;
}if(target.getMenu&&target.getMenu()&&target.getMenu().isVisible()){return;
}if(this.__objects.length>0&&!this._isInMenu(target)){this.hideAll();
}},__selectionKeys:{"Enter":1,"Space":1},__navigationKeys:{"Escape":1,"Up":1,"Down":1,"Left":1,"Right":1},_onKeyUpDown:function(e){var menu=this.getActiveMenu();

if(!menu){return;
}var iden=e.getKeyIdentifier();

if(this.__navigationKeys[iden]||(this.__selectionKeys[iden]&&menu.getSelectedButton())){e.stopPropagation();
}},_onKeyPress:function(e){var menu=this.getActiveMenu();

if(!menu){return;
}var iden=e.getKeyIdentifier();
var navigation=this.__navigationKeys[iden];
var selection=this.__selectionKeys[iden];

if(navigation){switch(iden){case "Up":this._onKeyPressUp(menu);
break;
case "Down":this._onKeyPressDown(menu);
break;
case "Left":this._onKeyPressLeft(menu);
break;
case "Right":this._onKeyPressRight(menu);
break;
case "Escape":this.hideAll();
break;
}e.stopPropagation();
e.preventDefault();
}else if(selection){var button=menu.getSelectedButton();

if(button){switch(iden){case "Enter":this._onKeyPressEnter(menu,button,e);
break;
case "Space":this._onKeyPressSpace(menu,button,e);
break;
}e.stopPropagation();
e.preventDefault();
}}},_onKeyPressUp:function(menu){var selectedButton=menu.getSelectedButton();
var children=menu.getChildren();
var start=selectedButton?menu.indexOf(selectedButton)-1:children.length-1;
var nextItem=this._getChild(menu,start,-1,true);
if(nextItem){menu.setSelectedButton(nextItem);
}else{menu.resetSelectedButton();
}},_onKeyPressDown:function(menu){var selectedButton=menu.getSelectedButton();
var start=selectedButton?menu.indexOf(selectedButton)+1:0;
var nextItem=this._getChild(menu,start,1,true);
if(nextItem){menu.setSelectedButton(nextItem);
}else{menu.resetSelectedButton();
}},_onKeyPressLeft:function(menu){var menuOpener=menu.getOpener();

if(!menuOpener){return;
}if(menuOpener instanceof qx.ui.menu.Button){var parentMenu=menuOpener.getLayoutParent();
parentMenu.resetOpenedButton();
parentMenu.setSelectedButton(menuOpener);
}else if(menuOpener instanceof qx.ui.menubar.Button){var buttons=menuOpener.getMenuBar().getMenuButtons();
var index=buttons.indexOf(menuOpener);
if(index===-1){return;
}var prevButton=null;
var length=buttons.length;

for(var i=1;i<=length;i++){var button=buttons[(index-i+length)%length];

if(button.isEnabled()){prevButton=button;
break;
}}
if(prevButton&&prevButton!=menuOpener){prevButton.open(true);
}}},_onKeyPressRight:function(menu){var selectedButton=menu.getSelectedButton();
if(selectedButton){var subMenu=selectedButton.getMenu();

if(subMenu){menu.setOpenedButton(selectedButton);
var first=this._getChild(subMenu,0,1);

if(first){subMenu.setSelectedButton(first);
}return;
}}else if(!menu.getOpenedButton()){var first=this._getChild(menu,0,1);

if(first){menu.setSelectedButton(first);

if(first.getMenu()){menu.setOpenedButton(first);
}return;
}}var menuOpener=menu.getOpener();
if(menuOpener instanceof qx.ui.menu.Button&&selectedButton){while(menuOpener){menuOpener=menuOpener.getLayoutParent();

if(menuOpener instanceof qx.ui.menu.Menu){menuOpener=menuOpener.getOpener();

if(menuOpener instanceof qx.ui.menubar.Button){break;
}}else{break;
}}
if(!menuOpener){return;
}}if(menuOpener instanceof qx.ui.menubar.Button){var buttons=menuOpener.getMenuBar().getMenuButtons();
var index=buttons.indexOf(menuOpener);
if(index===-1){return;
}var nextButton=null;
var length=buttons.length;

for(var i=1;i<=length;i++){var button=buttons[(index+i)%length];

if(button.isEnabled()){nextButton=button;
break;
}}
if(nextButton&&nextButton!=menuOpener){nextButton.open(true);
}}},_onKeyPressEnter:function(menu,button,e){if(button.hasListener("keypress")){var clone=e.clone();
clone.setBubbles(false);
clone.setTarget(button);
button.dispatchEvent(clone);
}this.hideAll();
},_onKeyPressSpace:function(menu,button,e){if(button.hasListener("keypress")){var clone=e.clone();
clone.setBubbles(false);
clone.setTarget(button);
button.dispatchEvent(clone);
}}},destruct:function(){var Registration=qx.event.Registration;
var el=document.body;
Registration.removeListener(window.document.documentElement,"mousedown",this._onMouseDown,this,true);
Registration.removeListener(el,"keydown",this._onKeyUpDown,this,true);
Registration.removeListener(el,"keyup",this._onKeyUpDown,this,true);
Registration.removeListener(el,"keypress",this._onKeyPress,this,true);
this._disposeObjects("__openTimer","__closeTimer");
this._disposeArray("__objects");
}});
qx.Class.define("qx.ui.menu.Menu",{extend:qx.ui.core.Widget,include:[qx.ui.core.MPlacement,qx.ui.core.MRemoteChildrenHandling],construct:function(){this.base(arguments);
this._setLayout(new qx.ui.menu.Layout);
var root=this.getApplicationRoot();
root.add(this);
this.addListener("mouseover",this._onMouseOver);
this.addListener("mouseout",this._onMouseOut);
this.addListener("resize",this._onResize,this);
root.addListener("resize",this._onResize,this);
this._blocker=new qx.ui.core.Blocker(root);
this.initVisibility();
this.initKeepFocus();
this.initKeepActive();
},properties:{appearance:{refine:true,init:"menu"},allowGrowX:{refine:true,init:false},allowGrowY:{refine:true,init:false},visibility:{refine:true,init:"excluded"},keepFocus:{refine:true,init:true},keepActive:{refine:true,init:true},spacingX:{check:"Integer",apply:"_applySpacingX",init:0,themeable:true},spacingY:{check:"Integer",apply:"_applySpacingY",init:0,themeable:true},iconColumnWidth:{check:"Integer",init:0,themeable:true,apply:"_applyIconColumnWidth"},arrowColumnWidth:{check:"Integer",init:0,themeable:true,apply:"_applyArrowColumnWidth"},blockerColor:{check:"Color",init:null,nullable:true,apply:"_applyBlockerColor",themeable:true},blockerOpacity:{check:"Number",init:1,apply:"_applyBlockerOpacity",themeable:true},selectedButton:{check:"qx.ui.core.Widget",nullable:true,apply:"_applySelectedButton"},openedButton:{check:"qx.ui.core.Widget",nullable:true,apply:"_applyOpenedButton"},opener:{check:"qx.ui.core.Widget",nullable:true},openInterval:{check:"Integer",themeable:true,init:250,apply:"_applyOpenInterval"},closeInterval:{check:"Integer",themeable:true,init:250,apply:"_applyCloseInterval"},blockBackground:{check:"Boolean",themeable:true,init:false}},members:{__scheduledOpen:null,__onAfterSlideBarAdd:null,_blocker:null,open:function(){if(this.getOpener()!=null){this.placeToWidget(this.getOpener());
this.__updateSlideBar();
this.show();
this._placementTarget=this.getOpener();
}else{this.warn("The menu instance needs a configured 'opener' widget!");
}},openAtMouse:function(e){this.placeToMouse(e);
this.__updateSlideBar();
this.show();
this._placementTarget={left:e.getDocumentLeft(),top:e.getDocumentTop()};
},openAtPoint:function(point){this.placeToPoint(point);
this.__updateSlideBar();
this.show();
this._placementTarget=point;
},addSeparator:function(){this.add(new qx.ui.menu.Separator);
},getColumnSizes:function(){return this._getMenuLayout().getColumnSizes();
},getSelectables:function(){var result=[];
var children=this.getChildren();

for(var i=0;i<children.length;i++){if(children[i].isEnabled()){result.push(children[i]);
}}return result;
},_applyIconColumnWidth:function(value,old){this._getMenuLayout().setIconColumnWidth(value);
},_applyArrowColumnWidth:function(value,old){this._getMenuLayout().setArrowColumnWidth(value);
},_applySpacingX:function(value,old){this._getMenuLayout().setColumnSpacing(value);
},_applySpacingY:function(value,old){this._getMenuLayout().setSpacing(value);
},_applyVisibility:function(value,old){this.base(arguments,value,old);
var mgr=qx.ui.menu.Manager.getInstance();

if(value==="visible"){mgr.add(this);
var parentMenu=this.getParentMenu();

if(parentMenu){parentMenu.setOpenedButton(this.getOpener());
}}else if(old==="visible"){mgr.remove(this);
var parentMenu=this.getParentMenu();

if(parentMenu&&parentMenu.getOpenedButton()==this.getOpener()){parentMenu.resetOpenedButton();
}this.resetOpenedButton();
this.resetSelectedButton();
}this.__updateBlockerVisibility();
},__updateBlockerVisibility:function(){if(this.isVisible()){if(this.getBlockBackground()){var zIndex=this.getZIndex();
this._blocker.blockContent(zIndex-1);
}}else{if(this._blocker.isContentBlocked()){this._blocker.unblockContent();
}}},getParentMenu:function(){var widget=this.getOpener();

if(!widget||!(widget instanceof qx.ui.menu.AbstractButton)){return null;
}
while(widget&&!(widget instanceof qx.ui.menu.Menu)){widget=widget.getLayoutParent();
}return widget;
},_applySelectedButton:function(value,old){if(old){old.removeState("selected");
}
if(value){value.addState("selected");
}},_applyOpenedButton:function(value,old){if(old){old.getMenu().exclude();
}
if(value){value.getMenu().open();
}},_applyBlockerColor:function(value,old){this._blocker.setColor(value);
},_applyBlockerOpacity:function(value,old){this._blocker.setOpacity(value);
},getChildrenContainer:function(){return this.getChildControl("slidebar",true)||this;
},_createChildControlImpl:function(id){var control;

switch(id){case "slidebar":var control=new qx.ui.menu.MenuSlideBar();
var layout=this._getLayout();
this._setLayout(new qx.ui.layout.Grow());
var slidebarLayout=control.getLayout();
control.setLayout(layout);
slidebarLayout.dispose();
var children=qx.lang.Array.clone(this.getChildren());

for(var i=0;i<children.length;i++){control.add(children[i]);
}this.removeListener("resize",this._onResize,this);
control.getChildrenContainer().addListener("resize",this._onResize,this);
this._add(control);
break;
}return control||this.base(arguments,id);
},_getMenuLayout:function(){if(this.hasChildControl("slidebar")){return this.getChildControl("slidebar").getChildrenContainer().getLayout();
}else{return this._getLayout();
}},_getMenuBounds:function(){if(this.hasChildControl("slidebar")){return this.getChildControl("slidebar").getChildrenContainer().getBounds();
}else{return this.getBounds();
}},_computePlacementSize:function(){return this._getMenuBounds();
},__updateSlideBar:function(){var menuBounds=this._getMenuBounds();

if(!menuBounds){this.addListenerOnce("resize",this.__updateSlideBar,this);
return;
}var rootHeight=this.getLayoutParent().getBounds().height;
var top=this.getLayoutProperties().top;
var left=this.getLayoutProperties().left;
if(top<0){this._assertSlideBar(function(){this.setHeight(menuBounds.height+top);
this.moveTo(left,0);
});
}else if(top+menuBounds.height>rootHeight){this._assertSlideBar(function(){this.setHeight(rootHeight-top);
});
}else{this.setHeight(null);
}},_assertSlideBar:function(callback){if(this.hasChildControl("slidebar")){return callback.call(this);
}this.__onAfterSlideBarAdd=callback;
qx.ui.core.queue.Widget.add(this);
},syncWidget:function(){this.getChildControl("slidebar");

if(this.__onAfterSlideBarAdd){this.__onAfterSlideBarAdd.call(this);
delete this.__onAfterSlideBarAdd;
}},_onResize:function(){if(this.isVisible()){var target=this._placementTarget;

if(!target){return;
}else if(target instanceof qx.ui.core.Widget){this.placeToWidget(target);
}else if(target.top!==undefined){this.placeToPoint(target);
}else{throw new Error("Unknown target: "+target);
}this.__updateSlideBar();
}},_onMouseOver:function(e){var mgr=qx.ui.menu.Manager.getInstance();
mgr.cancelClose(this);
var target=e.getTarget();

if(target.isEnabled()&&target instanceof qx.ui.menu.AbstractButton){this.setSelectedButton(target);
var subMenu=target.getMenu&&target.getMenu();

if(subMenu){subMenu.setOpener(target);
mgr.scheduleOpen(subMenu);
this.__scheduledOpen=subMenu;
}else{var opened=this.getOpenedButton();

if(opened){mgr.scheduleClose(opened.getMenu());
}
if(this.__scheduledOpen){mgr.cancelOpen(this.__scheduledOpen);
this.__scheduledOpen=null;
}}}else if(!this.getOpenedButton()){this.resetSelectedButton();
}},_onMouseOut:function(e){var mgr=qx.ui.menu.Manager.getInstance();
if(!qx.ui.core.Widget.contains(this,e.getRelatedTarget())){var opened=this.getOpenedButton();
opened?this.setSelectedButton(opened):this.resetSelectedButton();
if(opened){mgr.cancelClose(opened.getMenu());
}if(this.__scheduledOpen){mgr.cancelOpen(this.__scheduledOpen);
}}}},destruct:function(){if(!qx.core.ObjectRegistry.inShutDown){qx.ui.menu.Manager.getInstance().remove(this);
}this.getApplicationRoot().removeListener("resize",this._onResize,this);
this._placementTarget=null;
this._disposeObjects("_blocker");
}});
qx.Class.define("qx.ui.menu.Layout",{extend:qx.ui.layout.VBox,properties:{columnSpacing:{check:"Integer",init:0,apply:"_applyLayoutChange"},spanColumn:{check:"Integer",init:1,nullable:true,apply:"_applyLayoutChange"},iconColumnWidth:{check:"Integer",init:0,themeable:true,apply:"_applyLayoutChange"},arrowColumnWidth:{check:"Integer",init:0,themeable:true,apply:"_applyLayoutChange"}},members:{__columnSizes:null,_computeSizeHint:function(){var children=this._getLayoutChildren();
var child,sizes,spacing;
var spanColumn=this.getSpanColumn();
var columnSizes=this.__columnSizes=[0,0,0,0];
var columnSpacing=this.getColumnSpacing();
var spanColumnWidth=0;
var maxInset=0;
for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child.isAnonymous()){continue;
}sizes=child.getChildrenSizes();

for(var column=0;column<sizes.length;column++){if(spanColumn!=null&&column==spanColumn&&sizes[spanColumn+1]==0){spanColumnWidth=Math.max(spanColumnWidth,sizes[column]);
}else{columnSizes[column]=Math.max(columnSizes[column],sizes[column]);
}}var insets=children[i].getInsets();
maxInset=Math.max(maxInset,insets.left+insets.right);
}if(spanColumn!=null&&columnSizes[spanColumn]+columnSpacing+columnSizes[spanColumn+1]<spanColumnWidth){columnSizes[spanColumn]=spanColumnWidth-columnSizes[spanColumn+1]-columnSpacing;
}if(spanColumnWidth==0){spacing=columnSpacing*2;
}else{spacing=columnSpacing*3;
}if(columnSizes[0]==0){columnSizes[0]=this.getIconColumnWidth();
}if(columnSizes[3]==0){columnSizes[3]=this.getArrowColumnWidth();
}var height=this.base(arguments).height;
return {minHeight:height,height:height,width:qx.lang.Array.sum(columnSizes)+maxInset+spacing};
},getColumnSizes:function(){return this.__columnSizes||null;
}},destruct:function(){this.__columnSizes=null;
}});
qx.Class.define("qx.ui.menu.Separator",{extend:qx.ui.core.Widget,properties:{appearance:{refine:true,init:"menu-separator"},anonymous:{refine:true,init:true}}});
qx.Class.define("qx.ui.menu.AbstractButton",{extend:qx.ui.core.Widget,include:[qx.ui.core.MExecutable],implement:[qx.ui.form.IExecutable],type:"abstract",construct:function(){this.base(arguments);
this._setLayout(new qx.ui.menu.ButtonLayout);
this.addListener("mouseup",this._onMouseUp);
this.addListener("keypress",this._onKeyPress);
this.addListener("changeCommand",this._onChangeCommand,this);
},properties:{blockToolTip:{refine:true,init:true},label:{check:"String",apply:"_applyLabel",nullable:true},menu:{check:"qx.ui.menu.Menu",apply:"_applyMenu",nullable:true},icon:{check:"String",apply:"_applyIcon",themeable:true,nullable:true}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "icon":control=new qx.ui.basic.Image;
control.setAnonymous(true);
this._add(control,{column:0});
break;
case "label":control=new qx.ui.basic.Label;
control.setAnonymous(true);
this._add(control,{column:1});
break;
case "shortcut":control=new qx.ui.basic.Label;
control.setAnonymous(true);
this._add(control,{column:2});
break;
case "arrow":control=new qx.ui.basic.Image;
control.setAnonymous(true);
this._add(control,{column:3});
break;
}return control||this.base(arguments,id);
},_forwardStates:{selected:1},getChildrenSizes:function(){var iconWidth=0,labelWidth=0,shortcutWidth=0,arrowWidth=0;

if(this._isChildControlVisible("icon")){var icon=this.getChildControl("icon");
iconWidth=icon.getMarginLeft()+icon.getSizeHint().width+icon.getMarginRight();
}
if(this._isChildControlVisible("label")){var label=this.getChildControl("label");
labelWidth=label.getMarginLeft()+label.getSizeHint().width+label.getMarginRight();
}
if(this._isChildControlVisible("shortcut")){var shortcut=this.getChildControl("shortcut");
shortcutWidth=shortcut.getMarginLeft()+shortcut.getSizeHint().width+shortcut.getMarginRight();
}
if(this._isChildControlVisible("arrow")){var arrow=this.getChildControl("arrow");
arrowWidth=arrow.getMarginLeft()+arrow.getSizeHint().width+arrow.getMarginRight();
}return [iconWidth,labelWidth,shortcutWidth,arrowWidth];
},_onMouseUp:function(e){},_onKeyPress:function(e){},_onChangeCommand:function(e){var oldCommand;
var command=e.getData();
{};
var cmdString=command!=null?command.toString():"";
this.getChildControl("shortcut").setValue(cmdString);
},_onChangeLocale:null,_applyIcon:function(value,old){if(value){this._showChildControl("icon").setSource(value);
}else{this._excludeChildControl("icon");
}},_applyLabel:function(value,old){if(value){this._showChildControl("label").setValue(value);
}else{this._excludeChildControl("label");
}},_applyMenu:function(value,old){if(old){old.resetOpener();
old.removeState("submenu");
}
if(value){this._showChildControl("arrow");
value.setOpener(this);
value.addState("submenu");
}else{this._excludeChildControl("arrow");
}}},destruct:function(){if(this.getMenu()){if(!qx.core.ObjectRegistry.inShutDown){this.getMenu().destroy();
}}{};
}});
qx.Class.define("qx.ui.menu.ButtonLayout",{extend:qx.ui.layout.Abstract,members:{verifyLayoutProperty:function(item,name,value){this.assert(name=="column","The property '"+name+"' is not supported by the MenuButton layout!");
},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();
var child;
var column;
var columnChildren=[];

for(var i=0,l=children.length;i<l;i++){child=children[i];
column=child.getLayoutProperties().column;
columnChildren[column]=child;
}var menu=this.__getMenu(children[0]);
var columns=menu.getColumnSizes();
var spacing=menu.getSpacingX();
var neededWidth=qx.lang.Array.sum(columns)+spacing*(columns.length-1);

if(neededWidth<availWidth){columns[1]+=availWidth-neededWidth;
}var left=0,top=0;
var Util=qx.ui.layout.Util;

for(var i=0,l=columns.length;i<l;i++){child=columnChildren[i];

if(child){var hint=child.getSizeHint();
var top=Util.computeVerticalAlignOffset(child.getAlignY()||"middle",hint.height,availHeight,0,0);
var offsetLeft=Util.computeHorizontalAlignOffset(child.getAlignX()||"left",hint.width,columns[i],child.getMarginLeft(),child.getMarginRight());
child.renderLayout(left+offsetLeft,top,hint.width,hint.height);
}left+=columns[i]+spacing;
}},__getMenu:function(widget){while(!(widget instanceof qx.ui.menu.Menu)){widget=widget.getLayoutParent();
}return widget;
},_computeSizeHint:function(){var children=this._getLayoutChildren();
var neededHeight=0;
var neededWidth=0;

for(var i=0,l=children.length;i<l;i++){var hint=children[i].getSizeHint();
neededWidth+=hint.width;
neededHeight=Math.max(neededHeight,hint.height);
}return {width:neededWidth,height:neededHeight};
}}});
qx.Mixin.define("qx.ui.core.MRemoteLayoutHandling",{members:{setLayout:function(layout){return this.getChildrenContainer().setLayout(layout);
},getLayout:function(){return this.getChildrenContainer().getLayout();
}}});
qx.Class.define("qx.ui.container.SlideBar",{extend:qx.ui.core.Widget,include:[qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MRemoteLayoutHandling],construct:function(orientation){this.base(arguments);
var scrollPane=this.getChildControl("scrollpane");
this._add(scrollPane,{flex:1});

if(orientation!=null){this.setOrientation(orientation);
}else{this.initOrientation();
}this.addListener("mousewheel",this._onMouseWheel,this);
},properties:{appearance:{refine:true,init:"slidebar"},orientation:{check:["horizontal","vertical"],init:"horizontal",apply:"_applyOrientation"},scrollStep:{check:"Integer",init:15,themeable:true}},members:{getChildrenContainer:function(){return this.getChildControl("content");
},_createChildControlImpl:function(id){var control;

switch(id){case "button-forward":control=new qx.ui.form.RepeatButton;
control.addListener("execute",this._onExecuteForward,this);
control.setFocusable(false);
this._addAt(control,2);
break;
case "button-backward":control=new qx.ui.form.RepeatButton;
control.addListener("execute",this._onExecuteBackward,this);
control.setFocusable(false);
this._addAt(control,0);
break;
case "content":control=new qx.ui.container.Composite();
if(qx.bom.client.Engine.GECKO){control.addListener("removeChildWidget",this._onRemoveChild,this);
}this.getChildControl("scrollpane").add(control);
break;
case "scrollpane":control=new qx.ui.core.scroll.ScrollPane();
control.addListener("update",this._onResize,this);
control.addListener("scrollX",this._onScroll,this);
control.addListener("scrollY",this._onScroll,this);
break;
}return control||this.base(arguments,id);
},_forwardStates:{barLeft:true,barTop:true,barRight:true,barBottom:true},scrollBy:function(offset){var pane=this.getChildControl("scrollpane");

if(this.getOrientation()==="horizontal"){pane.scrollByX(offset);
}else{pane.scrollByY(offset);
}},scrollTo:function(value){var pane=this.getChildControl("scrollpane");

if(this.getOrientation()==="horizontal"){pane.scrollToX(value);
}else{pane.scrollToY(value);
}},_applyOrientation:function(value,old){var oldLayouts=[this.getLayout(),this._getLayout()];
var buttonForward=this.getChildControl("button-forward");
var buttonBackward=this.getChildControl("button-backward");
if(old=="vertical"){buttonForward.removeState("vertical");
buttonBackward.removeState("vertical");
buttonForward.addState("horizontal");
buttonBackward.addState("horizontal");
}else if(old=="horizontal"){buttonForward.removeState("horizontal");
buttonBackward.removeState("horizontal");
buttonForward.addState("vertical");
buttonBackward.addState("vertical");
}
if(value=="horizontal"){this._setLayout(new qx.ui.layout.HBox());
this.setLayout(new qx.ui.layout.HBox());
}else{this._setLayout(new qx.ui.layout.VBox());
this.setLayout(new qx.ui.layout.VBox());
}
if(oldLayouts[0]){oldLayouts[0].dispose();
}
if(oldLayouts[1]){oldLayouts[1].dispose();
}},_onMouseWheel:function(e){this.scrollBy(e.getWheelDelta()*this.getScrollStep());
e.stop();
},_onScroll:function(){this._updateArrowsEnabled();
},_onResize:function(e){var content=this.getChildControl("scrollpane").getChildren()[0];

if(!content){return;
}var innerSize=this.getInnerSize();
var contentSize=content.getBounds();
var overflow=(this.getOrientation()==="horizontal")?contentSize.width>innerSize.width:contentSize.height>innerSize.height;

if(overflow){this._showArrows();
this._updateArrowsEnabled();
}else{this._hideArrows();
}},_onExecuteBackward:function(){this.scrollBy(-this.getScrollStep());
},_onExecuteForward:function(){this.scrollBy(this.getScrollStep());
},_onRemoveChild:function(){qx.event.Timer.once(function(){this.scrollBy(this.getChildControl("scrollpane").getScrollX());
},this,50);
},_updateArrowsEnabled:function(){var pane=this.getChildControl("scrollpane");

if(this.getOrientation()==="horizontal"){var position=pane.getScrollX();
var max=pane.getScrollMaxX();
}else{var position=pane.getScrollY();
var max=pane.getScrollMaxY();
}this.getChildControl("button-backward").setEnabled(position>0);
this.getChildControl("button-forward").setEnabled(position<max);
},_showArrows:function(){this._showChildControl("button-forward");
this._showChildControl("button-backward");
},_hideArrows:function(){this._excludeChildControl("button-forward");
this._excludeChildControl("button-backward");
this.scrollTo(0);
}}});
qx.Class.define("qx.ui.menu.MenuSlideBar",{extend:qx.ui.container.SlideBar,construct:function(){this.base(arguments,"vertical");
},properties:{appearance:{refine:true,init:"menu-slidebar"}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "button-forward":control=new qx.ui.form.HoverButton();
control.addListener("execute",this._onExecuteForward,this);
this._addAt(control,2);
break;
case "button-backward":control=new qx.ui.form.HoverButton();
control.addListener("execute",this._onExecuteBackward,this);
this._addAt(control,0);
break;
}return control||this.base(arguments,id);
}}});
qx.Class.define("qx.ui.form.RepeatButton",{extend:qx.ui.form.Button,construct:function(label,icon){this.base(arguments,label,icon);
this.__timer=new qx.event.AcceleratingTimer();
this.__timer.addListener("interval",this._onInterval,this);
},events:{"execute":"qx.event.type.Event","press":"qx.event.type.Event","release":"qx.event.type.Event"},properties:{interval:{check:"Integer",init:100},firstInterval:{check:"Integer",init:500},minTimer:{check:"Integer",init:20},timerDecrease:{check:"Integer",init:2}},members:{__executed:null,__timer:null,press:function(){if(this.isEnabled()){if(!this.hasState("pressed")){this.__startInternalTimer();
}this.removeState("abandoned");
this.addState("pressed");
}},release:function(fireExecuteEvent){if(!this.isEnabled()){return;
}if(this.hasState("pressed")){if(!this.__executed){this.execute();
}}this.removeState("pressed");
this.removeState("abandoned");
this.__stopInternalTimer();
},_applyEnabled:function(value,old){this.base(arguments,value,old);

if(!value){this.removeState("pressed");
this.removeState("abandoned");
this.__stopInternalTimer();
}},_onMouseOver:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}
if(this.hasState("abandoned")){this.removeState("abandoned");
this.addState("pressed");
this.__timer.start();
}this.addState("hovered");
},_onMouseOut:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}this.removeState("hovered");

if(this.hasState("pressed")){this.removeState("pressed");
this.addState("abandoned");
this.__timer.stop();
}},_onMouseDown:function(e){if(!e.isLeftPressed()){return;
}this.capture();
this.__startInternalTimer();
e.stopPropagation();
},_onMouseUp:function(e){this.releaseCapture();

if(!this.hasState("abandoned")){this.addState("hovered");

if(this.hasState("pressed")&&!this.__executed){this.execute();
}}this.__stopInternalTimer();
e.stopPropagation();
},_onKeyUp:function(e){switch(e.getKeyIdentifier()){case "Enter":case "Space":if(this.hasState("pressed")){if(!this.__executed){this.execute();
}this.removeState("pressed");
this.removeState("abandoned");
e.stopPropagation();
this.__stopInternalTimer();
}}},_onKeyDown:function(e){switch(e.getKeyIdentifier()){case "Enter":case "Space":this.removeState("abandoned");
this.addState("pressed");
e.stopPropagation();
this.__startInternalTimer();
}},_onInterval:function(e){this.__executed=true;
this.fireEvent("execute");
},__startInternalTimer:function(){this.fireEvent("press");
this.__executed=false;
this.__timer.set({interval:this.getInterval(),firstInterval:this.getFirstInterval(),minimum:this.getMinTimer(),decrease:this.getTimerDecrease()}).start();
this.removeState("abandoned");
this.addState("pressed");
},__stopInternalTimer:function(){this.fireEvent("release");
this.__timer.stop();
this.removeState("abandoned");
this.removeState("pressed");
}},destruct:function(){this._disposeObjects("__timer");
}});
qx.Class.define("qx.ui.form.HoverButton",{extend:qx.ui.basic.Atom,include:[qx.ui.core.MExecutable],implement:[qx.ui.form.IExecutable],construct:function(label,icon){this.base(arguments,label,icon);
this.addListener("mouseover",this._onMouseOver,this);
this.addListener("mouseout",this._onMouseOut,this);
this.__timer=new qx.event.AcceleratingTimer();
this.__timer.addListener("interval",this._onInterval,this);
},properties:{appearance:{refine:true,init:"hover-button"},interval:{check:"Integer",init:80},firstInterval:{check:"Integer",init:200},minTimer:{check:"Integer",init:20},timerDecrease:{check:"Integer",init:2}},members:{__timer:null,_onMouseOver:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}this.__timer.set({interval:this.getInterval(),firstInterval:this.getFirstInterval(),minimum:this.getMinTimer(),decrease:this.getTimerDecrease()}).start();
this.addState("hovered");
},_onMouseOut:function(e){this.__timer.stop();
this.removeState("hovered");

if(!this.isEnabled()||e.getTarget()!==this){return;
}},_onInterval:function(){if(this.isEnabled()){this.execute();
}else{this.__timer.stop();
}}},destruct:function(){this._disposeObjects("__timer");
}});
qx.Class.define("qx.ui.menu.Button",{extend:qx.ui.menu.AbstractButton,construct:function(label,icon,command,menu){this.base(arguments);
if(label!=null){this.setLabel(label);
}
if(icon!=null){this.setIcon(icon);
}
if(command!=null){this.setCommand(command);
}
if(menu!=null){this.setMenu(menu);
}},properties:{appearance:{refine:true,init:"menu-button"}},members:{_onMouseUp:function(e){if(e.isLeftPressed()){this.execute();
if(this.getMenu()){return;
}}qx.ui.menu.Manager.getInstance().hideAll();
},_onKeyPress:function(e){this.execute();
}}});
qx.Class.define("qx.ui.toolbar.ToolBar",{extend:qx.ui.core.Widget,include:qx.ui.core.MChildrenHandling,construct:function(){this.base(arguments);
this._setLayout(new qx.ui.layout.HBox());
},properties:{appearance:{refine:true,init:"toolbar"},openMenu:{check:"qx.ui.menu.Menu",event:"changeOpenMenu",nullable:true},show:{init:"both",check:["both","label","icon"],inheritable:true,event:"changeShow"},spacing:{nullable:true,check:"Integer",themeable:true,apply:"_applySpacing"}},members:{__allowMenuOpenHover:false,_setAllowMenuOpenHover:function(value){this.__allowMenuOpenHover=value;
},_isAllowMenuOpenHover:function(){return this.__allowMenuOpenHover;
},_applySpacing:function(value,old){var layout=this._getLayout();
value==null?layout.resetSpacing():layout.setSpacing(value);
},addSpacer:function(){var spacer=new qx.ui.core.Spacer;
this._add(spacer,{flex:1});
return spacer;
},addSeparator:function(){this.add(new qx.ui.toolbar.Separator);
},getMenuButtons:function(){var children=this.getChildren();
var buttons=[];
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child instanceof qx.ui.menubar.Button){buttons.push(child);
}else if(child instanceof qx.ui.toolbar.Part){buttons.push.apply(buttons,child.getMenuButtons());
}}return buttons;
}}});
qx.Class.define("qx.ui.form.RadioButtonGroup",{extend:qx.ui.core.Widget,include:[qx.ui.core.MLayoutHandling,qx.ui.form.MModelSelection],implement:[qx.ui.form.IForm,qx.ui.core.ISingleSelection,qx.ui.form.IModelSelection],construct:function(layout){this.base(arguments);
if(layout==null){this.setLayout(new qx.ui.layout.VBox(4));
}else{this.setLayout(layout);
}this.__radioGroup=new qx.ui.form.RadioGroup();
this.__radioGroup.addListener("changeSelection",function(e){this.fireDataEvent("changeSelection",e.getData(),e.getOldData());
},this);
},properties:{valid:{check:"Boolean",init:true,apply:"_applyValid",event:"changeValid"},required:{check:"Boolean",init:false,event:"changeRequired"},invalidMessage:{check:"String",init:"",event:"changeInvalidMessage",apply:"_applyInvalidMessage"}},events:{"changeSelection":"qx.event.type.Data"},members:{__radioGroup:null,_applyInvalidMessage:function(value,old){var children=this._getChildren();

for(var i=0;i<children.length;i++){children[i].setInvalidMessage(value);
}},_applyValid:function(value,old){var children=this._getChildren();

for(var i=0;i<children.length;i++){children[i].setValid(value);
}},getRadioGroup:function(){return this.__radioGroup;
},getChildren:function(){return this._getChildren();
},add:function(child,options){this.__radioGroup.add(child);
this._add(child,options);
},remove:function(child){this.__radioGroup.remove(child);
this._remove(child);
},removeAll:function(){var radioItems=this.__radioGroup.getItems();

for(var i=0;i<radioItems.length;i++){this.__radioGroup.remove(radioItems[i]);
}this._removeAll();
},getSelection:function(){return this.__radioGroup.getSelection();
},setSelection:function(items){return this.__radioGroup.setSelection(items);
},resetSelection:function(){return this.__radioGroup.resetSelection();
},isSelected:function(item){return this.__radioGroup.isSelected(item);
},isSelectionEmpty:function(){return this.__radioGroup.isSelectionEmpty();
},getSelectables:function(){return this.__radioGroup.getSelectables();
}},destruct:function(){this._disposeObjects("__radioGroup");
}});
qx.Interface.define("qx.ui.virtual.cell.ICell",{members:{getCellProperties:function(data,states){}}});
qx.Class.define("qx.ui.virtual.cell.Abstract",{type:"abstract",extend:qx.core.Object,implement:qx.ui.virtual.cell.ICell,construct:function(){this.base(arguments);
qx.ui.virtual.cell.CellStylesheet.getInstance();
},members:{getCssClasses:function(value,states){return "qx-cell";
},getAttributes:function(value,states){return "";
},getStyles:function(value,states){return "";
},getInsets:function(value,states){return [0,0];
},getContent:function(value,states){return value;
},getCellProperties:function(value,states){return {classes:this.getCssClasses(value,states),style:this.getStyles(value,states),attributes:this.getAttributes(value,states),content:this.getContent(value,states),insets:this.getInsets(value,states)};
}}});
qx.Class.define("qx.ui.virtual.cell.Cell",{extend:qx.ui.virtual.cell.Abstract,construct:function(){this.base(arguments);
this.__stylesheet=qx.ui.virtual.cell.CellStylesheet.getInstance();
this.__userStyles={};
this.__themeStyles={};
this.__userPaddings={};
this.__themePaddings={};
this.__states={};
this.__themeValues={};
this.initAppearance();
this.__initializeThemableProperties();
},properties:{appearance:{check:"String",init:"cell",apply:"_applyAppearance"},backgroundColor:{nullable:true,check:"Color",apply:"_applyBackgroundColor",themeable:true},textColor:{nullable:true,check:"Color",apply:"_applyTextColor",themeable:true},textAlign:{check:["left","center","right","justify"],nullable:true,themeable:true,apply:"_applyTextAlign"},font:{nullable:true,apply:"_applyFont",check:"Font",themeable:true},paddingTop:{check:"Integer",init:0,apply:"_applyPadding",themeable:true},paddingRight:{check:"Integer",nullable:true,apply:"_applyPadding",themeable:true},paddingBottom:{check:"Integer",nullable:true,apply:"_applyPadding",themeable:true},paddingLeft:{check:"Integer",nullable:true,apply:"_applyPadding",themeable:true},padding:{group:["paddingTop","paddingRight","paddingBottom","paddingLeft"],mode:"shorthand",themeable:true}},members:{__themableProperties:null,__statesKey:null,__states:null,__themeValues:null,__themeStyles:null,__userStyles:null,__userPaddings:null,__themePaddings:null,__isThemed:false,__stylesheet:null,__initializeThemableProperties:function(){var PropertyUtil=qx.util.PropertyUtil;
var cssProperties=qx.lang.Object.fromArray(this._getCssProperties());
this.__themableProperties=[];
var clazz=this.constructor;

while(clazz){var properties=PropertyUtil.getProperties(clazz);

for(var prop in properties){if(!cssProperties[prop]){this.__themableProperties.push(prop);
}}clazz=clazz.superclass;
}},_getCssProperties:function(){return ["backgroundColor","textColor","font","textAlign","paddingTop","paddingRight","paddingBottom","paddingLeft"];
},_applyAppearance:function(value,old){if(old){this.__themeStyles={};
}},_getValue:function(propertyName){if(this.__isThemed){return qx.util.PropertyUtil.getThemeValue(this,propertyName);
}else{return qx.util.PropertyUtil.getUserValue(this,propertyName);
}},_storeStyle:function(propertyName,styles){var store;

if(this.__isThemed){store=this.__themeStyles;
}else{store=this.__userStyles;
}
if(styles===null){delete store[propertyName];
}else{store[propertyName]=styles;
}},_applyBackgroundColor:function(value,old,name){var value=this._getValue(name);

if(!value){this._storeStyle(name,null);
}else{this._storeStyle(name,"background-color:"+qx.theme.manager.Color.getInstance().resolve(value));
}},_applyTextColor:function(value,old,name){var value=this._getValue(name);

if(!value){this._storeStyle(name,null);
}else{this._storeStyle(name,"color:"+qx.theme.manager.Color.getInstance().resolve(value));
}},_applyTextAlign:function(value,old,name){var value=this._getValue(name);

if(!value){this._storeStyle(name,null);
}else{this._storeStyle(name,"text-align:"+value);
}},_applyFont:function(value,old,name){var value=this._getValue(name);

if(!value){this._storeStyle(name,null);
}else{var font=qx.theme.manager.Font.getInstance().resolve(value);
this._storeStyle(name,qx.bom.element.Style.compile(font.getStyles()));
}},_applyPadding:function(value,old,name){var value=this._getValue(name);

if(this.__isThemed){var paddingStore=this.__themePaddings;
}else{paddingStore=this.__userPaddings;
}
if(value===null){delete paddingStore[name];
}else{paddingStore[name]=value;
}
if(value===null){this._storeStyle(name,null);
}else{var cssKey=qx.lang.String.hyphenate(name);
this._storeStyle(name,cssKey+":"+value+"px");
}},getCellProperties:function(value,states){this.__setStates(states);
return {classes:this.getCssClasses(value,states),style:this.getStyles(value,states),attributes:this.getAttributes(value,states),content:this.getContent(value,states),insets:this.getInsets(value,states)};
},getAttributes:function(value,states){return "";
},getContent:function(value,states){return value;
},getCssClasses:function(value,states){var cssClass=this.__stylesheet.getCssClass(this.__statesKey)||"";
return "qx-cell "+cssClass;
},__setStates:function(states){if(!states){states={};
}var appearance=this.getAppearance();
var statesKey=appearance+"-"+qx.lang.Object.getKeys(states).sort().join(" ");

if(this.__statesKey==statesKey){return;
}this.__statesKey=statesKey;
var themeStyles=this.__states[this.__statesKey];

if(!themeStyles){this.__clearThemedPropertyValues();
this.__updateThemeableProperties(states);
this.__computeCssClassForStates(states);
this.__cacheThemedValues();
this.__states[this.__statesKey]=1;
}this.__applyThemeValues();
},__clearThemedPropertyValues:function(){var PropertyUtil=qx.util.PropertyUtil;
var themableProperties=this._getCssProperties();

for(var i=0;i<themableProperties.length;i++){PropertyUtil.deleteThemeValue(this,themableProperties[i]);
}},__updateThemeableProperties:function(states){this.__themeStyles={};
this.__isThemed=true;
var appearance=this.getAppearance();
var PropertyUtil=qx.util.PropertyUtil;
var styles=qx.theme.manager.Appearance.getInstance().styleFrom(appearance,states);

for(var prop in styles){if(styles[prop]!==undefined){PropertyUtil.setThemed(this,prop,styles[prop]);
}}this.__isThemed=false;
},__computeCssClassForStates:function(){var styleString=qx.lang.Object.getValues(this.__themeStyles).join(";");
this.__stylesheet.computeClassForStyles(this.__statesKey,styleString);
},__cacheThemedValues:function(){var properties=this.__themableProperties;
var PropertyUtil=qx.util.PropertyUtil;
var themeValues={};

for(var i=0;i<properties.length;i++){var key=properties[i];
var value=PropertyUtil.getThemeValue(this,key);

if(value!==undefined){themeValues[key]=value;
}}this.__themeValues[this.__statesKey]=themeValues;
},__applyThemeValues:function(){var PropertyUtil=qx.util.PropertyUtil;
var themeValues=this.__themeValues[this.__statesKey]||{};

for(var key in themeValues){PropertyUtil.setThemed(this,key,themeValues[key]);
}},getStyles:function(value,states){return qx.lang.Object.getValues(this.__userStyles).join(";");
},getInsets:function(value,states){var user=this.__userPaddings;
var theme=this.__themePaddings;
var top=(user.paddingTop!==undefined?user.paddingTop:theme.paddingTop)||0;
var right=(user.paddingRight!==undefined?user.paddingRight:theme.paddingRight)||0;
var bottom=(user.paddingBottom!==undefined?user.paddingBottom:theme.paddingBottom)||0;
var left=(user.paddingLeft!==undefined?user.paddingLeft:theme.paddingLeft)||0;
return [left+right,top+bottom];
}},destruct:function(){this.__stylesheet=this.__userStyles=this.__themeStyles=this.__userPaddings=this.__themePaddings=this.__states=this.__themeValues=this.__themableProperties=null;
}});
qx.Class.define("qx.ui.virtual.cell.Date",{extend:qx.ui.virtual.cell.Cell,construct:function(dateFormat){this.base(arguments);

if(dateFormat){this.setDateFormat(dateFormat);
}else{this.initDateFormat(qx.util.format.DateFormat.getDateTimeInstance());
}},properties:{appearance:{refine:true,init:"cell-date"},dateFormat:{check:"qx.util.format.DateFormat",deferredInit:true}},members:{getContent:function(value,states){return value?this.getDateFormat().format(value):"";
}}});
qx.Class.define("qx.ui.virtual.cell.CellStylesheet",{extend:qx.core.Object,type:"singleton",construct:function(){this.base(arguments);
var stylesheet=".qx-cell {"+
qx.bom.element.Style.compile({position:"absolute",overflow:"hidden",cursor:"default",textOverflow:"ellipsis",userSelect:"none"})+"} ";

if(!qx.core.Variant.isSet("qx.client","mshtml")){stylesheet+=".qx-cell {"+qx.bom.element.BoxSizing.compile("content-box")+"}";
}this.__stylesheet=qx.bom.Stylesheet.createElement(stylesheet);
this.__classes={};
this.__styles={};
},members:{__stylesheet:null,__classes:null,__styles:null,getStylesheet:function(){return this.__stylesheet;
},getCssClass:function(key){return this.__classes[key]||null;
},computeClassForStyles:function(key,styleString){var cssClass=this.__styles[styleString];

if(!cssClass){var cssClass=this.__getNextClassname();
qx.bom.Stylesheet.addRule(this.__stylesheet,"."+cssClass,styleString);
this.__styles[styleString]=cssClass;
}this.__classes[key]=cssClass;
return cssClass;
},__getNextClassname:function(){return "qx-cell-"+this.toHashCode()+"-"+(this.__classCounter++);
},__classCounter:0},destruct:function(){this.__stylesheet=this.__classes=this.__styles=null;
}});
qx.Class.define("qx.util.PropertyUtil",{statics:{getProperties:function(clazz){return clazz.$$properties;
},getAllProperties:function(clazz){var properties={};
var superclass=clazz;
while(superclass!=qx.core.Object){var currentProperties=this.getProperties(superclass);

for(var property in currentProperties){properties[property]=currentProperties[property];
}superclass=superclass.superclass;
}return properties;
},getUserValue:function(object,propertyName){return object["$$user_"+propertyName];
},setUserValue:function(object,propertyName,value){object["$$user_"+propertyName]=value;
},deleteUserValue:function(object,propertyName){delete (object["$$user_"+propertyName]);
},getInitValue:function(object,propertyName){return object["$$init_"+propertyName];
},setInitValue:function(object,propertyName,value){object["$$init_"+propertyName]=value;
},deleteInitValue:function(object,propertyName){delete (object["$$init_"+propertyName]);
},getThemeValue:function(object,propertyName){return object["$$theme_"+propertyName];
},setThemeValue:function(object,propertyName,value){object["$$theme_"+propertyName]=value;
},deleteThemeValue:function(object,propertyName){delete (object["$$theme_"+propertyName]);
},setThemed:function(object,propertyName,value){var styler=qx.core.Property.$$method.setThemed;
object[styler[propertyName]](value);
},resetThemed:function(object,propertyName){var unstyler=qx.core.Property.$$method.resetThemed;
object[unstyler[propertyName]]();
}}});
qx.Interface.define("qx.util.format.IFormat",{members:{format:function(obj){},parse:function(str){}}});
qx.Class.define("qx.util.format.DateFormat",{extend:qx.core.Object,implement:qx.util.format.IFormat,construct:function(format,locale){this.base(arguments);

if(!locale){this.__locale=qx.locale.Manager.getInstance().getLocale();
}else{this.__locale=locale;
}
if(format!=null){this.__format=format.toString();
}else{this.__format=qx.locale.Date.getDateFormat("long",this.__locale)+" "+qx.locale.Date.getDateTimeFormat("HHmmss","HH:mm:ss",this.__locale);
}},statics:{getDateTimeInstance:function(){var DateFormat=qx.util.format.DateFormat;
var format=qx.locale.Date.getDateFormat("long")+" "+qx.locale.Date.getDateTimeFormat("HHmmss","HH:mm:ss");

if(DateFormat._dateInstance==null||DateFormat._dateInstance.__format!=format){DateFormat._dateTimeInstance=new DateFormat();
}return DateFormat._dateTimeInstance;
},getDateInstance:function(){var DateFormat=qx.util.format.DateFormat;
var format=qx.locale.Date.getDateFormat("short")+"";

if(DateFormat._dateInstance==null||DateFormat._dateInstance.__format!=format){DateFormat._dateInstance=new DateFormat(format);
}return DateFormat._dateInstance;
},ASSUME_YEAR_2000_THRESHOLD:30,LOGGING_DATE_TIME__format:"yyyy-MM-dd HH:mm:ss",AM_MARKER:"am",PM_MARKER:"pm",MEDIUM_TIMEZONE_NAMES:["GMT"],FULL_TIMEZONE_NAMES:["Greenwich Mean Time"]},members:{__locale:null,__format:null,__parseFeed:null,__parseRules:null,__formatTree:null,__fillNumber:function(number,minSize){var str=""+number;

while(str.length<minSize){str="0"+str;
}return str;
},__getDayInYear:function(date){var helpDate=new Date(date.getTime());
var day=helpDate.getDate();

while(helpDate.getMonth()!=0){helpDate.setDate(-1);
day+=helpDate.getDate()+1;
}return day;
},__thursdayOfSameWeek:function(date){return new Date(date.getTime()+(3-((date.getDay()+6)%7))*86400000);
},__getWeekInYear:function(date){var thursdayDate=this.__thursdayOfSameWeek(date);
var weekYear=thursdayDate.getFullYear();
var thursdayWeek1=this.__thursdayOfSameWeek(new Date(weekYear,0,4));
return Math.floor(1.5+(thursdayDate.getTime()-thursdayWeek1.getTime())/86400000/7);
},format:function(date){if(date==null){return null;
}var DateFormat=qx.util.format.DateFormat;
var locale=this.__locale;
var fullYear=date.getFullYear();
var month=date.getMonth();
var dayOfMonth=date.getDate();
var dayOfWeek=date.getDay();
var hours=date.getHours();
var minutes=date.getMinutes();
var seconds=date.getSeconds();
var ms=date.getMilliseconds();
var timezoneOffset=date.getTimezoneOffset();
var timezoneSign=timezoneOffset>0?1:-1;
var timezoneHours=Math.floor(Math.abs(timezoneOffset)/60);
var timezoneMinutes=Math.abs(timezoneOffset)%60;
this.__initFormatTree();
var output="";

for(var i=0;i<this.__formatTree.length;i++){var currAtom=this.__formatTree[i];

if(currAtom.type=="literal"){output+=currAtom.text;
}else{var wildcardChar=currAtom.character;
var wildcardSize=currAtom.size;
var replacement="?";

switch(wildcardChar){case 'y':case 'Y':if(wildcardSize==2){replacement=this.__fillNumber(fullYear%100,2);
}else{replacement=fullYear+"";

if(wildcardSize>replacement.length){for(var i=replacement.length;i<wildcardSize;i++){replacement="0"+replacement;
}}}break;
case 'D':replacement=this.__fillNumber(this.__getDayInYear(date),wildcardSize);
break;
case 'd':replacement=this.__fillNumber(dayOfMonth,wildcardSize);
break;
case 'w':replacement=this.__fillNumber(this.__getWeekInYear(date),wildcardSize);
break;
case 'E':if(wildcardSize==2){replacement=qx.locale.Date.getDayName("narrow",dayOfWeek,locale,"format");
}else if(wildcardSize==3){replacement=qx.locale.Date.getDayName("abbreviated",dayOfWeek,locale,"format");
}else if(wildcardSize==4){replacement=qx.locale.Date.getDayName("wide",dayOfWeek,locale,"format");
}break;
case 'c':if(wildcardSize==2){replacement=qx.locale.Date.getDayName("narrow",dayOfWeek,locale,"stand-alone");
}else if(wildcardSize==3){replacement=qx.locale.Date.getDayName("abbreviated",dayOfWeek,locale,"stand-alone");
}else if(wildcardSize==4){replacement=qx.locale.Date.getDayName("wide",dayOfWeek,locale,"stand-alone");
}break;
case 'M':if(wildcardSize==1||wildcardSize==2){replacement=this.__fillNumber(month+1,wildcardSize);
}else if(wildcardSize==3){replacement=qx.locale.Date.getMonthName("abbreviated",month,locale,"format");
}else if(wildcardSize==4){replacement=qx.locale.Date.getMonthName("wide",month,locale,"format");
}break;
case 'L':if(wildcardSize==1||wildcardSize==2){replacement=this.__fillNumber(month+1,wildcardSize);
}else if(wildcardSize==3){replacement=qx.locale.Date.getMonthName("abbreviated",month,locale,"stand-alone");
}else if(wildcardSize==4){replacement=qx.locale.Date.getMonthName("wide",month,locale,"stand-alone");
}break;
case 'a':replacement=(hours<12)?qx.locale.Date.getAmMarker(locale):qx.locale.Date.getPmMarker(locale);
break;
case 'H':replacement=this.__fillNumber(hours,wildcardSize);
break;
case 'k':replacement=this.__fillNumber((hours==0)?24:hours,wildcardSize);
break;
case 'K':replacement=this.__fillNumber(hours%12,wildcardSize);
break;
case 'h':replacement=this.__fillNumber(((hours%12)==0)?12:(hours%12),wildcardSize);
break;
case 'm':replacement=this.__fillNumber(minutes,wildcardSize);
break;
case 's':replacement=this.__fillNumber(seconds,wildcardSize);
break;
case 'S':replacement=this.__fillNumber(ms,wildcardSize);
break;
case 'z':if(wildcardSize==1){replacement="GMT"+((timezoneSign>0)?"-":"+")+this.__fillNumber(Math.abs(timezoneHours))+":"+this.__fillNumber(timezoneMinutes,2);
}else if(wildcardSize==2){replacement=DateFormat.MEDIUM_TIMEZONE_NAMES[timezoneHours];
}else if(wildcardSize==3){replacement=DateFormat.FULL_TIMEZONE_NAMES[timezoneHours];
}break;
case 'Z':replacement=((timezoneSign>0)?"-":"+")+this.__fillNumber(Math.abs(timezoneHours),2)+this.__fillNumber(timezoneMinutes,2);
break;
}output+=replacement;
}}return output;
},parse:function(dateStr){this.__initParseFeed();
var hit=this.__parseFeed.regex.exec(dateStr);

if(hit==null){throw new Error("Date string '"+dateStr+"' does not match the date format: "+this.__format);
}var dateValues={year:1970,month:0,day:1,hour:0,ispm:false,min:0,sec:0,ms:0};
var currGroup=1;

for(var i=0;i<this.__parseFeed.usedRules.length;i++){var rule=this.__parseFeed.usedRules[i];
var value=hit[currGroup];

if(rule.field!=null){dateValues[rule.field]=parseInt(value,10);
}else{rule.manipulator(dateValues,value);
}currGroup+=(rule.groups==null)?1:rule.groups;
}var date=new Date(dateValues.year,dateValues.month,dateValues.day,(dateValues.ispm)?(dateValues.hour+12):dateValues.hour,dateValues.min,dateValues.sec,dateValues.ms);

if(dateValues.month!=date.getMonth()||dateValues.year!=date.getFullYear()){throw new Error("Error parsing date '"+dateStr+"': the value for day or month is too large");
}return date;
},__initFormatTree:function(){if(this.__formatTree!=null){return;
}this.__formatTree=[];
var currWildcardChar;
var currWildcardSize=0;
var currLiteral="";
var format=this.__format;
var state="default";
var i=0;

while(i<format.length){var currChar=format.charAt(i);

switch(state){case "quoted_literal":if(currChar=="'"){if(i+1>=format.length){i++;
break;
}var lookAhead=format.charAt(i+1);

if(lookAhead=="'"){currLiteral+=currChar;
i++;
}else{i++;
state="unkown";
}}else{currLiteral+=currChar;
i++;
}break;
case "wildcard":if(currChar==currWildcardChar){currWildcardSize++;
i++;
}else{this.__formatTree.push({type:"wildcard",character:currWildcardChar,size:currWildcardSize});
currWildcardChar=null;
currWildcardSize=0;
state="default";
}break;
default:if((currChar>='a'&&currChar<='z')||(currChar>='A'&&currChar<='Z')){currWildcardChar=currChar;
state="wildcard";
}else if(currChar=="'"){if(i+1>=format.length){currLiteral+=currChar;
i++;
break;
}var lookAhead=format.charAt(i+1);

if(lookAhead=="'"){currLiteral+=currChar;
i++;
}i++;
state="quoted_literal";
}else{state="default";
}
if(state!="default"){if(currLiteral.length>0){this.__formatTree.push({type:"literal",text:currLiteral});
currLiteral="";
}}else{currLiteral+=currChar;
i++;
}break;
}}if(currWildcardChar!=null){this.__formatTree.push({type:"wildcard",character:currWildcardChar,size:currWildcardSize});
}else if(currLiteral.length>0){this.__formatTree.push({type:"literal",text:currLiteral});
}},__initParseFeed:function(){if(this.__parseFeed!=null){return ;
}var format=this.__format;
this.__initParseRules();
this.__initFormatTree();
var usedRules=[];
var pattern="^";

for(var atomIdx=0;atomIdx<this.__formatTree.length;atomIdx++){var currAtom=this.__formatTree[atomIdx];

if(currAtom.type=="literal"){pattern+=qx.lang.String.escapeRegexpChars(currAtom.text);
}else{var wildcardChar=currAtom.character;
var wildcardSize=currAtom.size;
var wildcardRule;

for(var ruleIdx=0;ruleIdx<this.__parseRules.length;ruleIdx++){var rule=this.__parseRules[ruleIdx];

if(wildcardChar==rule.pattern.charAt(0)&&wildcardSize==rule.pattern.length){wildcardRule=rule;
break;
}}if(wildcardRule==null){var wildcardStr="";

for(var i=0;i<wildcardSize;i++){wildcardStr+=wildcardChar;
}throw new Error("Malformed date format: "+format+". Wildcard "+wildcardStr+" is not supported");
}else{usedRules.push(wildcardRule);
pattern+=wildcardRule.regex;
}}}pattern+="$";
var regex;

try{regex=new RegExp(pattern);
}catch(exc){throw new Error("Malformed date format: "+format);
}this.__parseFeed={regex:regex,"usedRules":usedRules,pattern:pattern};
},__initParseRules:function(){var DateFormat=qx.util.format.DateFormat;
var LString=qx.lang.String;

if(this.__parseRules!=null){return ;
}var rules=this.__parseRules=[];
var yearManipulator=function(dateValues,value){value=parseInt(value,10);

if(value<DateFormat.ASSUME_YEAR_2000_THRESHOLD){value+=2000;
}else if(value<100){value+=1900;
}dateValues.year=value;
};
var monthManipulator=function(dateValues,value){dateValues.month=parseInt(value,10)-1;
};
var ampmManipulator=function(dateValues,value){dateValues.ispm=(value==DateFormat.PM_MARKER);
};
var noZeroHourManipulator=function(dateValues,value){dateValues.hour=parseInt(value,10)%24;
};
var noZeroAmPmHourManipulator=function(dateValues,value){dateValues.hour=parseInt(value,10)%12;
};
var ignoreManipulator=function(dateValues,value){return;
};
var shortMonthNames=qx.locale.Date.getMonthNames("abbreviated",this.__locale,"format");

for(var i=0;i<shortMonthNames.length;i++){shortMonthNames[i]=LString.escapeRegexpChars(shortMonthNames[i].toString());
}var shortMonthNamesManipulator=function(dateValues,value){value=LString.escapeRegexpChars(value);
dateValues.month=shortMonthNames.indexOf(value);
};
var fullMonthNames=qx.locale.Date.getMonthNames("wide",this.__locale,"format");

for(var i=0;i<fullMonthNames.length;i++){fullMonthNames[i]=LString.escapeRegexpChars(fullMonthNames[i].toString());
}var fullMonthNamesManipulator=function(dateValues,value){value=LString.escapeRegexpChars(value);
dateValues.month=fullMonthNames.indexOf(value);
};
var narrowDayNames=qx.locale.Date.getDayNames("narrow",this.__locale,"format");

for(var i=0;i<narrowDayNames.length;i++){narrowDayNames[i]=LString.escapeRegexpChars(narrowDayNames[i].toString());
}var narrowDayNamesManipulator=function(dateValues,value){value=LString.escapeRegexpChars(value);
dateValues.month=narrowDayNames.indexOf(value);
};
var abbrDayNames=qx.locale.Date.getDayNames("abbreviated",this.__locale,"format");

for(var i=0;i<abbrDayNames.length;i++){abbrDayNames[i]=LString.escapeRegexpChars(abbrDayNames[i].toString());
}var abbrDayNamesManipulator=function(dateValues,value){value=LString.escapeRegexpChars(value);
dateValues.month=abbrDayNames.indexOf(value);
};
var fullDayNames=qx.locale.Date.getDayNames("wide",this.__locale,"format");

for(var i=0;i<fullDayNames.length;i++){fullDayNames[i]=LString.escapeRegexpChars(fullDayNames[i].toString());
}var fullDayNamesManipulator=function(dateValues,value){value=LString.escapeRegexpChars(value);
dateValues.month=fullDayNames.indexOf(value);
};
rules.push({pattern:"YYYY",regex:"(\\d\\d\\d\\d)",manipulator:yearManipulator});
rules.push({pattern:"y",regex:"(\\d+)",manipulator:yearManipulator});
rules.push({pattern:"yy",regex:"(\\d\\d+)",manipulator:yearManipulator});
rules.push({pattern:"yyy",regex:"(\\d\\d\\d+)",manipulator:yearManipulator});
rules.push({pattern:"yyyy",regex:"(\\d\\d\\d\\d+)",manipulator:yearManipulator});
rules.push({pattern:"yyyyy",regex:"(\\d\\d\\d\\d\\d+)",manipulator:yearManipulator});
rules.push({pattern:"yyyyyy",regex:"(\\d\\d\\d\\d\\d\\d+)",manipulator:yearManipulator});
rules.push({pattern:"M",regex:"(\\d\\d?)",manipulator:monthManipulator});
rules.push({pattern:"MM",regex:"(\\d\\d?)",manipulator:monthManipulator});
rules.push({pattern:"MMM",regex:"("+shortMonthNames.join("|")+")",manipulator:shortMonthNamesManipulator});
rules.push({pattern:"MMMM",regex:"("+fullMonthNames.join("|")+")",manipulator:fullMonthNamesManipulator});
rules.push({pattern:"dd",regex:"(\\d\\d?)",field:"day"});
rules.push({pattern:"d",regex:"(\\d\\d?)",field:"day"});
rules.push({pattern:"EE",regex:"("+narrowDayNames.join("|")+")",manipulator:narrowDayNamesManipulator});
rules.push({pattern:"EEE",regex:"("+abbrDayNames.join("|")+")",manipulator:abbrDayNamesManipulator});
rules.push({pattern:"EEEE",regex:"("+fullDayNames.join("|")+")",manipulator:fullDayNamesManipulator});
rules.push({pattern:"a",regex:"("+DateFormat.AM_MARKER+"|"+DateFormat.PM_MARKER+")",manipulator:ampmManipulator});
rules.push({pattern:"HH",regex:"(\\d\\d?)",field:"hour"});
rules.push({pattern:"H",regex:"(\\d\\d?)",field:"hour"});
rules.push({pattern:"kk",regex:"(\\d\\d?)",manipulator:noZeroHourManipulator});
rules.push({pattern:"k",regex:"(\\d\\d?)",manipulator:noZeroHourManipulator});
rules.push({pattern:"KK",regex:"(\\d\\d?)",field:"hour"});
rules.push({pattern:"K",regex:"(\\d\\d?)",field:"hour"});
rules.push({pattern:"hh",regex:"(\\d\\d?)",manipulator:noZeroAmPmHourManipulator});
rules.push({pattern:"h",regex:"(\\d\\d?)",manipulator:noZeroAmPmHourManipulator});
rules.push({pattern:"mm",regex:"(\\d\\d?)",field:"min"});
rules.push({pattern:"m",regex:"(\\d\\d?)",field:"min"});
rules.push({pattern:"ss",regex:"(\\d\\d?)",field:"sec"});
rules.push({pattern:"s",regex:"(\\d\\d?)",field:"sec"});
rules.push({pattern:"SSS",regex:"(\\d\\d?\\d?)",field:"ms"});
rules.push({pattern:"SS",regex:"(\\d\\d?\\d?)",field:"ms"});
rules.push({pattern:"S",regex:"(\\d\\d?\\d?)",field:"ms"});
rules.push({pattern:"Z",regex:"([\\+\\-]\\d\\d:?\\d\\d)",manipulator:ignoreManipulator});
rules.push({pattern:"z",regex:"([a-zA-Z]+)",manipulator:ignoreManipulator});
}},destruct:function(){this.__formatTree=this.__parseFeed=this.__parseRules=null;
}});
qx.Interface.define("qx.ui.table.ICellRenderer",{members:{createDataCellHtml:function(cellInfo,htmlArr){return true;
}}});
qx.Class.define("qx.ui.table.cellrenderer.Abstract",{type:"abstract",implement:qx.ui.table.ICellRenderer,extend:qx.core.Object,construct:function(){this.base(arguments);
var cr=qx.ui.table.cellrenderer.Abstract;

if(!cr.__clazz){var colorMgr=qx.theme.manager.Color.getInstance();
cr.__clazz=this.self(arguments);
var stylesheet=".qooxdoo-table-cell {"+
qx.bom.element.Style.compile({position:"absolute",top:"0px",overflow:"hidden",whiteSpace:"nowrap",borderRight:"1px solid "+colorMgr.resolve("table-row-line"),padding:"0px 6px",cursor:"default",textOverflow:"ellipsis",userSelect:"none"})+"} "+".qooxdoo-table-cell-right { text-align:right } "+".qooxdoo-table-cell-italic { font-style:italic} "+".qooxdoo-table-cell-bold { font-weight:bold } ";

if(!qx.core.Variant.isSet("qx.client","mshtml")){stylesheet+=".qooxdoo-table-cell {"+qx.bom.element.BoxSizing.compile("content-box")+"}";
}cr.__clazz.stylesheet=qx.bom.Stylesheet.createElement(stylesheet);
}},members:{_insetX:6+6+1,_insetY:0,_getCellClass:function(cellInfo){return "qooxdoo-table-cell";
},_getCellStyle:function(cellInfo){return cellInfo.style||"";
},_getCellAttributes:function(cellInfo){return "";
},_getContentHtml:function(cellInfo){return cellInfo.value||"";
},_getCellSizeStyle:function(width,height,insetX,insetY){var style="";

if(qx.bom.client.Feature.CONTENT_BOX){width-=insetX;
height-=insetY;
}style+="width:"+Math.max(width,0)+"px;";
style+="height:"+Math.max(height,0)+"px;";
return style;
},createDataCellHtml:function(cellInfo,htmlArr){htmlArr.push('<div class="',this._getCellClass(cellInfo),'" style="','left:',cellInfo.styleLeft,'px;',this._getCellSizeStyle(cellInfo.styleWidth,cellInfo.styleHeight,this._insetX,this._insetY),this._getCellStyle(cellInfo),'" ',this._getCellAttributes(cellInfo),'>'+this._getContentHtml(cellInfo),'</div>');
}}});
qx.Interface.define("qx.ui.table.IHeaderRenderer",{members:{createHeaderCell:function(cellInfo){return true;
},updateHeaderCell:function(cellInfo,cellWidget){return true;
}}});
qx.Class.define("qx.ui.table.headerrenderer.Default",{extend:qx.core.Object,implement:qx.ui.table.IHeaderRenderer,statics:{STATE_SORTED:"sorted",STATE_SORTED_ASCENDING:"sortedAscending"},properties:{toolTip:{check:"String",init:null,nullable:true}},members:{createHeaderCell:function(cellInfo){var widget=new qx.ui.table.headerrenderer.HeaderCell();
this.updateHeaderCell(cellInfo,widget);
return widget;
},updateHeaderCell:function(cellInfo,cellWidget){var DefaultHeaderCellRenderer=qx.ui.table.headerrenderer.Default;
if(cellInfo.name&&cellInfo.name.translate){cellWidget.setLabel(cellInfo.name.translate());
}else{cellWidget.setLabel(cellInfo.name);
}var widgetToolTip=cellWidget.getToolTip();

if(this.getToolTip()!=null){if(widgetToolTip==null){widgetToolTip=new qx.ui.tooltip.ToolTip(this.getToolTip());
cellWidget.setToolTip(widgetToolTip);
qx.util.DisposeUtil.disposeTriggeredBy(widgetToolTip,cellWidget);
}else{widgetToolTip.setLabel(this.getToolTip());
}}cellInfo.sorted?cellWidget.addState(DefaultHeaderCellRenderer.STATE_SORTED):cellWidget.removeState(DefaultHeaderCellRenderer.STATE_SORTED);
cellInfo.sortedAscending?cellWidget.addState(DefaultHeaderCellRenderer.STATE_SORTED_ASCENDING):cellWidget.removeState(DefaultHeaderCellRenderer.STATE_SORTED_ASCENDING);
}}});
qx.Class.define("qx.ui.table.cellrenderer.Default",{extend:qx.ui.table.cellrenderer.Abstract,statics:{STYLEFLAG_ALIGN_RIGHT:1,STYLEFLAG_BOLD:2,STYLEFLAG_ITALIC:4,_numberFormat:null},properties:{useAutoAlign:{check:"Boolean",init:true}},members:{_getStyleFlags:function(cellInfo){if(this.getUseAutoAlign()){if(typeof cellInfo.value=="number"){return qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT;
}}return 0;
},_getCellClass:function(cellInfo){var cellClass=this.base(arguments,cellInfo);

if(!cellClass){return "";
}var stylesToApply=this._getStyleFlags(cellInfo);

if(stylesToApply&qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT){cellClass+=" qooxdoo-table-cell-right";
}
if(stylesToApply&qx.ui.table.cellrenderer.Default.STYLEFLAG_BOLD){cellClass+=" qooxdoo-table-cell-bold";
}
if(stylesToApply&qx.ui.table.cellrenderer.Default.STYLEFLAG_ITALIC){cellClass+=" qooxdoo-table-cell-italic";
}return cellClass;
},_getContentHtml:function(cellInfo){return qx.bom.String.escape(this._formatValue(cellInfo));
},_formatValue:function(cellInfo){var value=cellInfo.value;
var res;

if(value==null){return "";
}
if(typeof value=="string"){return value;
}else if(typeof value=="number"){if(!qx.ui.table.cellrenderer.Default._numberFormat){qx.ui.table.cellrenderer.Default._numberFormat=new qx.util.format.NumberFormat();
qx.ui.table.cellrenderer.Default._numberFormat.setMaximumFractionDigits(2);
}var res=qx.ui.table.cellrenderer.Default._numberFormat.format(value);
}else if(value instanceof Date){res=qx.util.format.DateFormat.getDateInstance().format(value);
}else{res=value;
}return res;
}}});
qx.Interface.define("qx.ui.table.ICellEditorFactory",{members:{createCellEditor:function(cellInfo){return true;
},getCellEditorValue:function(cellEditor){return true;
}}});
qx.Class.define("qx.ui.table.celleditor.AbstractField",{extend:qx.core.Object,implement:qx.ui.table.ICellEditorFactory,type:"abstract",properties:{validationFunction:{check:"Function",nullable:true,init:null}},members:{_createEditor:function(){throw new Error("Abstract method call!");
},createCellEditor:function(cellInfo){var cellEditor=this._createEditor();
cellEditor.originalValue=cellInfo.value;

if(cellInfo.value===null||cellInfo.value===undefined){cellInfo.value="";
}cellEditor.setValue(""+cellInfo.value);
cellEditor.addListener("appear",function(){cellEditor.selectAllText();
});
return cellEditor;
},getCellEditorValue:function(cellEditor){var value=cellEditor.getValue();
var validationFunc=this.getValidationFunction();

if(validationFunc){value=validationFunc(value,cellEditor.originalValue);
}
if(typeof cellEditor.originalValue=="number"){value=parseFloat(value);
}return value;
}}});
qx.Class.define("qx.ui.table.celleditor.TextField",{extend:qx.ui.table.celleditor.AbstractField,members:{getCellEditorValue:function(cellEditor){var value=cellEditor.getValue();
var validationFunc=this.getValidationFunction();

if(validationFunc){value=validationFunc(value,cellEditor.originalValue);
}
if(typeof cellEditor.originalValue=="number"){if(value!=null){value=parseFloat(value);
}}return value;
},_createEditor:function(){var cellEditor=new qx.ui.form.TextField();
cellEditor.setAppearance("table-editor-textfield");
return cellEditor;
}}});
qx.Class.define("qx.ui.table.columnmodel.Basic",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__overallColumnArr=[];
this.__visibleColumnArr=[];
},events:{"widthChanged":"qx.event.type.Data","visibilityChangedPre":"qx.event.type.Data","visibilityChanged":"qx.event.type.Data","orderChanged":"qx.event.type.Data"},statics:{DEFAULT_WIDTH:100,DEFAULT_HEADER_RENDERER:qx.ui.table.headerrenderer.Default,DEFAULT_DATA_RENDERER:qx.ui.table.cellrenderer.Default,DEFAULT_EDITOR_FACTORY:qx.ui.table.celleditor.TextField},members:{__internalChange:null,__colToXPosMap:null,__visibleColumnArr:null,__overallColumnArr:null,__columnDataArr:null,__headerRenderer:null,__dataRenderer:null,__editorFactory:null,init:function(colCount){{this.assertInteger(colCount,"Invalid argument 'colCount'.");
};
this.__columnDataArr=[];
var width=qx.ui.table.columnmodel.Basic.DEFAULT_WIDTH;
var headerRenderer=this.__headerRenderer||(this.__headerRenderer=new qx.ui.table.columnmodel.Basic.DEFAULT_HEADER_RENDERER());
var dataRenderer=this.__dataRenderer||(this.__dataRenderer=new qx.ui.table.columnmodel.Basic.DEFAULT_DATA_RENDERER());
var editorFactory=this.__editorFactory||(this.__editorFactory=new qx.ui.table.columnmodel.Basic.DEFAULT_EDITOR_FACTORY());
this.__overallColumnArr=[];
this.__visibleColumnArr=[];

for(var col=0;col<colCount;col++){this.__columnDataArr[col]={width:width,headerRenderer:headerRenderer,dataRenderer:dataRenderer,editorFactory:editorFactory};
this.__overallColumnArr[col]=col;
this.__visibleColumnArr[col]=col;
}this.__colToXPosMap=null;

for(var col=0;col<colCount;col++){var data={col:col,visible:true};
this.fireDataEvent("visibilityChangedPre",data);
this.fireDataEvent("visibilityChanged",data);
}},getVisibleColumns:function(){return this.__visibleColumnArr!=null?this.__visibleColumnArr:[];
},setColumnWidth:function(col,width){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertInteger(width,"Invalid argument 'width'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
var oldWidth=this.__columnDataArr[col].width;

if(oldWidth!=width){this.__columnDataArr[col].width=width;
var data={col:col,newWidth:width,oldWidth:oldWidth};
this.fireDataEvent("widthChanged",data);
}},getColumnWidth:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
return this.__columnDataArr[col].width;
},setHeaderCellRenderer:function(col,renderer){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertInterface(renderer,qx.ui.table.IHeaderRenderer,"Invalid argument 'renderer'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
var oldRenderer=this.__columnDataArr[col].headerRenderer;

if(oldRenderer!==this.__headerRenderer){oldRenderer.dispose();
}this.__columnDataArr[col].headerRenderer=renderer;
},getHeaderCellRenderer:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
return this.__columnDataArr[col].headerRenderer;
},setDataCellRenderer:function(col,renderer){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertInterface(renderer,qx.ui.table.ICellRenderer,"Invalid argument 'renderer'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
var oldRenderer=this.__columnDataArr[col].dataRenderer;

if(oldRenderer!==this.__dataRenderer){oldRenderer.dispose();
}this.__columnDataArr[col].dataRenderer=renderer;
},getDataCellRenderer:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
return this.__columnDataArr[col].dataRenderer;
},setCellEditorFactory:function(col,factory){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertInterface(factory,qx.ui.table.ICellEditorFactory,"Invalid argument 'factory'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
var oldRenderer=this.__columnDataArr[col].headerRenderer;

if(oldRenderer!==this.__editorFactory){oldRenderer.dispose();
}this.__columnDataArr[col].editorFactory=factory;
},getCellEditorFactory:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertNotUndefined(this.__columnDataArr[col],"Column not found in table model");
};
return this.__columnDataArr[col].editorFactory;
},_getColToXPosMap:function(){if(this.__colToXPosMap==null){this.__colToXPosMap={};

for(var overX=0;overX<this.__overallColumnArr.length;overX++){var col=this.__overallColumnArr[overX];
this.__colToXPosMap[col]={overX:overX};
}
for(var visX=0;visX<this.__visibleColumnArr.length;visX++){var col=this.__visibleColumnArr[visX];
this.__colToXPosMap[col].visX=visX;
}}return this.__colToXPosMap;
},getVisibleColumnCount:function(){return this.__visibleColumnArr!=null?this.__visibleColumnArr.length:0;
},getVisibleColumnAtX:function(visXPos){{this.assertInteger(visXPos,"Invalid argument 'visXPos'.");
};
return this.__visibleColumnArr[visXPos];
},getVisibleX:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
};
return this._getColToXPosMap()[col].visX;
},getOverallColumnCount:function(){return this.__overallColumnArr.length;
},getOverallColumnAtX:function(overXPos){{this.assertInteger(overXPos,"Invalid argument 'overXPos'.");
};
return this.__overallColumnArr[overXPos];
},getOverallX:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
};
return this._getColToXPosMap()[col].overX;
},isColumnVisible:function(col){{this.assertInteger(col,"Invalid argument 'col'.");
};
return (this._getColToXPosMap()[col].visX!=null);
},setColumnVisible:function(col,visible){{this.assertInteger(col,"Invalid argument 'col'.");
this.assertBoolean(visible,"Invalid argument 'visible'.");
};

if(visible!=this.isColumnVisible(col)){if(visible){var colToXPosMap=this._getColToXPosMap();
var overX=colToXPosMap[col].overX;

if(overX==null){throw new Error("Showing column failed: "+col+". The column is not added to this TablePaneModel.");
}var nextVisX;

for(var x=overX+1;x<this.__overallColumnArr.length;x++){var currCol=this.__overallColumnArr[x];
var currVisX=colToXPosMap[currCol].visX;

if(currVisX!=null){nextVisX=currVisX;
break;
}}if(nextVisX==null){nextVisX=this.__visibleColumnArr.length;
}this.__visibleColumnArr.splice(nextVisX,0,col);
}else{var visX=this.getVisibleX(col);
this.__visibleColumnArr.splice(visX,1);
}this.__colToXPosMap=null;
if(!this.__internalChange){var data={col:col,visible:visible};
this.fireDataEvent("visibilityChangedPre",data);
this.fireDataEvent("visibilityChanged",data);
}}},moveColumn:function(fromOverXPos,toOverXPos){{this.assertInteger(fromOverXPos,"Invalid argument 'fromOverXPos'.");
this.assertInteger(toOverXPos,"Invalid argument 'toOverXPos'.");
};
this.__internalChange=true;
var col=this.__overallColumnArr[fromOverXPos];
var visible=this.isColumnVisible(col);

if(visible){this.setColumnVisible(col,false);
}this.__overallColumnArr.splice(fromOverXPos,1);
this.__overallColumnArr.splice(toOverXPos,0,col);
this.__colToXPosMap=null;

if(visible){this.setColumnVisible(col,true);
}this.__internalChange=false;
var data={col:col,fromOverXPos:fromOverXPos,toOverXPos:toOverXPos};
this.fireDataEvent("orderChanged",data);
},setColumnsOrder:function(newPositions){{this.assertArray(newPositions,"Invalid argument 'newPositions'.");
};

if(newPositions.length==this.__overallColumnArr.length){this.__internalChange=true;
var isVisible=new Array(newPositions.length);

for(var colIdx=0;colIdx<this.__overallColumnArr.length;colIdx++){var visible=this.isColumnVisible(colIdx);
isVisible[colIdx]=visible;

if(visible){this.setColumnVisible(colIdx,false);
}}this.__overallColumnArr=qx.lang.Array.clone(newPositions);
this.__colToXPosMap=null;
for(var colIdx=0;colIdx<this.__overallColumnArr.length;colIdx++){if(isVisible[colIdx]){this.setColumnVisible(colIdx,true);
}}this.__internalChange=false;
this.fireDataEvent("orderChanged");
}else{throw new Error("setColumnsOrder: Invalid number of column positions given, expected "+this.__overallColumnArr.length+", got "+newPositions.length);
}}},destruct:function(){for(var i=0;i<this.__columnDataArr.length;i++){this.__columnDataArr[i].headerRenderer.dispose();
this.__columnDataArr[i].dataRenderer.dispose();
this.__columnDataArr[i].editorFactory.dispose();
}this.__overallColumnArr=this.__visibleColumnArr=this.__columnDataArr=this.__colToXPosMap=null;
this._disposeObjects("__headerRenderer","__dataRenderer","__editorFactory");
}});
qx.Class.define("qx.ui.table.columnmodel.Resize",{extend:qx.ui.table.columnmodel.Basic,include:qx.locale.MTranslation,construct:function(){this.base(arguments);
this.__bInProgress=false;
this.__bAppeared=false;
},properties:{behavior:{check:"qx.ui.table.columnmodel.resizebehavior.Abstract",init:null,nullable:true,apply:"_applyBehavior",event:"changeBehavior"}},members:{__bAppeared:null,__bInProgress:null,__table:null,_applyBehavior:function(value,old){if(old!=null){old.dispose();
old=null;
}value._setNumColumns(this.getOverallColumnCount());
value.setTableColumnModel(this);
},init:function(numColumns,table){this.base(arguments,numColumns);

if(this.__table==null){this.__table=table;
table.addListener("appear",this._onappear,this);
table.addListener("tableWidthChanged",this._onTableWidthChanged,this);
table.addListener("verticalScrollBarChanged",this._onverticalscrollbarchanged,this);
table.addListener("columnVisibilityMenuCreateEnd",this._addResetColumnWidthButton,this);
this.addListener("widthChanged",this._oncolumnwidthchanged,this);
this.addListener("visibilityChanged",this._onvisibilitychanged,this);
}if(this.getBehavior()==null){this.setBehavior(new qx.ui.table.columnmodel.resizebehavior.Default());
}this.getBehavior()._setNumColumns(numColumns);
},getTable:function(){return this.__table;
},_addResetColumnWidthButton:function(event){var data=event.getData();
var columnButton=data.columnButton;
var menu=data.menu;
var o;
o=columnButton.factory("separator");
menu.add(o);
o=columnButton.factory("user-button",{text:this.tr("Reset column widths")});
menu.add(o);
o.addListener("execute",this._onappear,this);
},_onappear:function(event){if(this.__bInProgress){return ;
}this.__bInProgress=true;
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("onappear");
}};
this.getBehavior().onAppear(event,event.getType()!=="appear");
this.__table._updateScrollerWidths();
this.__table._updateScrollBarVisibility();
this.__bInProgress=false;
this.__bAppeared=true;
},_onTableWidthChanged:function(event){if(this.__bInProgress||!this.__bAppeared){return ;
}this.__bInProgress=true;
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("ontablewidthchanged");
}};
this.getBehavior().onTableWidthChanged(event);
this.__bInProgress=false;
},_onverticalscrollbarchanged:function(event){if(this.__bInProgress||!this.__bAppeared){return ;
}this.__bInProgress=true;
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("onverticalscrollbarchanged");
}};
this.getBehavior().onVerticalScrollBarChanged(event);
qx.event.Timer.once(function(){if(this.__table&&!this.__table.isDisposed()){this.__table._updateScrollerWidths();
this.__table._updateScrollBarVisibility();
}},this,0);
this.__bInProgress=false;
},_oncolumnwidthchanged:function(event){if(this.__bInProgress||!this.__bAppeared){return ;
}this.__bInProgress=true;
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("oncolumnwidthchanged");
}};
this.getBehavior().onColumnWidthChanged(event);
this.__bInProgress=false;
},_onvisibilitychanged:function(event){if(this.__bInProgress||!this.__bAppeared){return ;
}this.__bInProgress=true;
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("onvisibilitychanged");
}};
this.getBehavior().onVisibilityChanged(event);
this.__bInProgress=false;
}},destruct:function(){this.__table=null;
}});
qx.Class.define("qx.ui.table.headerrenderer.HeaderCell",{extend:qx.ui.container.Composite,construct:function(){this.base(arguments);
var layout=new qx.ui.layout.Grid();
layout.setRowFlex(0,1);
layout.setColumnFlex(1,1);
layout.setColumnFlex(2,1);
this.setLayout(layout);
},properties:{appearance:{refine:true,init:"table-header-cell"},label:{check:"String",init:null,nullable:true,apply:"_applyLabel"},sortIcon:{check:"String",init:null,nullable:true,apply:"_applySortIcon",themeable:true},icon:{check:"String",init:null,nullable:true,apply:"_applyIcon"}},members:{_applyLabel:function(value,old){if(value){this._showChildControl("label").setValue(value);
}else{this._excludeChildControl("label");
}},_applySortIcon:function(value,old){if(value){this._showChildControl("sort-icon").setSource(value);
}else{this._excludeChildControl("sort-icon");
}},_applyIcon:function(value,old){if(value){this._showChildControl("icon").setSource(value);
}else{this._excludeChildControl("icon");
}},_createChildControlImpl:function(id){var control;

switch(id){case "label":control=new qx.ui.basic.Label(this.getLabel()).set({anonymous:true,allowShrinkX:true});
this._add(control,{row:0,column:1});
break;
case "sort-icon":control=new qx.ui.basic.Image(this.getSortIcon());
control.setAnonymous(true);
this._add(control,{row:0,column:2});
break;
case "icon":control=new qx.ui.basic.Image(this.getIcon()).set({anonymous:true,allowShrinkX:true});
this._add(control,{row:0,column:0});
break;
}return control||this.base(arguments,id);
}}});
qx.Class.define("qx.ui.layout.Grid",{extend:qx.ui.layout.Abstract,construct:function(spacingX,spacingY){this.base(arguments);
this.__rowData=[];
this.__colData=[];

if(spacingX){this.setSpacingX(spacingX);
}
if(spacingY){this.setSpacingY(spacingY);
}},properties:{spacingX:{check:"Integer",init:0,apply:"_applyLayoutChange"},spacingY:{check:"Integer",init:0,apply:"_applyLayoutChange"}},members:{__grid:null,__rowData:null,__colData:null,__colSpans:null,__rowSpans:null,__maxRowIndex:null,__maxColIndex:null,__rowHeights:null,__colWidths:null,verifyLayoutProperty:function(item,name,value){var layoutProperties={"row":1,"column":1,"rowSpan":1,"colSpan":1};
this.assert(layoutProperties[name]==1,"The property '"+name+"' is not supported by the Grid layout!");
this.assertInteger(value);
this.assert(value>=0,"Value must be positive");
},__buildGrid:function(){var grid=[];
var colSpans=[];
var rowSpans=[];
var maxRowIndex=-1;
var maxColIndex=-1;
var children=this._getLayoutChildren();

for(var i=0,l=children.length;i<l;i++){var child=children[i];
var props=child.getLayoutProperties();
var row=props.row;
var column=props.column;
props.colSpan=props.colSpan||1;
props.rowSpan=props.rowSpan||1;
if(row==null||column==null){throw new Error("The layout properties 'row' and 'column' of the child widget '"+child+"' must be defined!");
}
if(grid[row]&&grid[row][column]){throw new Error("Cannot add widget '"+child+"'!. "+"There is already a widget '"+grid[row][column]+"' in this cell ("+row+", "+column+")");
}
for(var x=column;x<column+props.colSpan;x++){for(var y=row;y<row+props.rowSpan;y++){if(grid[y]==undefined){grid[y]=[];
}grid[y][x]=child;
maxColIndex=Math.max(maxColIndex,x);
maxRowIndex=Math.max(maxRowIndex,y);
}}
if(props.rowSpan>1){rowSpans.push(child);
}
if(props.colSpan>1){colSpans.push(child);
}}for(var y=0;y<=maxRowIndex;y++){if(grid[y]==undefined){grid[y]=[];
}}this.__grid=grid;
this.__colSpans=colSpans;
this.__rowSpans=rowSpans;
this.__maxRowIndex=maxRowIndex;
this.__maxColIndex=maxColIndex;
this.__rowHeights=null;
this.__colWidths=null;
delete this._invalidChildrenCache;
},_setRowData:function(row,key,value){var rowData=this.__rowData[row];

if(!rowData){this.__rowData[row]={};
this.__rowData[row][key]=value;
}else{rowData[key]=value;
}},_setColumnData:function(column,key,value){var colData=this.__colData[column];

if(!colData){this.__colData[column]={};
this.__colData[column][key]=value;
}else{colData[key]=value;
}},setSpacing:function(spacing){this.setSpacingY(spacing);
this.setSpacingX(spacing);
return this;
},setColumnAlign:function(column,hAlign,vAlign){{this.assertInteger(column,"Invalid parameter 'column'");
this.assertInArray(hAlign,["left","center","right"]);
this.assertInArray(vAlign,["top","middle","bottom"]);
};
this._setColumnData(column,"hAlign",hAlign);
this._setColumnData(column,"vAlign",vAlign);
this._applyLayoutChange();
return this;
},getColumnAlign:function(column){var colData=this.__colData[column]||{};
return {vAlign:colData.vAlign||"top",hAlign:colData.hAlign||"left"};
},setRowAlign:function(row,hAlign,vAlign){{this.assertInteger(row,"Invalid parameter 'row'");
this.assertInArray(hAlign,["left","center","right"]);
this.assertInArray(vAlign,["top","middle","bottom"]);
};
this._setRowData(row,"hAlign",hAlign);
this._setRowData(row,"vAlign",vAlign);
this._applyLayoutChange();
return this;
},getRowAlign:function(row){var rowData=this.__rowData[row]||{};
return {vAlign:rowData.vAlign||"top",hAlign:rowData.hAlign||"left"};
},getCellWidget:function(row,column){if(this._invalidChildrenCache){this.__buildGrid();
}var row=this.__grid[row]||{};
return row[column]||null;
},getRowCount:function(){if(this._invalidChildrenCache){this.__buildGrid();
}return this.__maxRowIndex+1;
},getColumnCount:function(){if(this._invalidChildrenCache){this.__buildGrid();
}return this.__maxColIndex+1;
},getCellAlign:function(row,column){var vAlign="top";
var hAlign="left";
var rowData=this.__rowData[row];
var colData=this.__colData[column];
var widget=this.__grid[row][column];

if(widget){var widgetProps={vAlign:widget.getAlignY(),hAlign:widget.getAlignX()};
}else{widgetProps={};
}if(widgetProps.vAlign){vAlign=widgetProps.vAlign;
}else if(rowData&&rowData.vAlign){vAlign=rowData.vAlign;
}else if(colData&&colData.vAlign){vAlign=colData.vAlign;
}if(widgetProps.hAlign){hAlign=widgetProps.hAlign;
}else if(colData&&colData.hAlign){hAlign=colData.hAlign;
}else if(rowData&&rowData.hAlign){hAlign=rowData.hAlign;
}return {vAlign:vAlign,hAlign:hAlign};
},setColumnFlex:function(column,flex){this._setColumnData(column,"flex",flex);
this._applyLayoutChange();
return this;
},getColumnFlex:function(column){var colData=this.__colData[column]||{};
return colData.flex!==undefined?colData.flex:0;
},setRowFlex:function(row,flex){this._setRowData(row,"flex",flex);
this._applyLayoutChange();
return this;
},getRowFlex:function(row){var rowData=this.__rowData[row]||{};
var rowFlex=rowData.flex!==undefined?rowData.flex:0;
return rowFlex;
},setColumnMaxWidth:function(column,maxWidth){this._setColumnData(column,"maxWidth",maxWidth);
this._applyLayoutChange();
return this;
},getColumnMaxWidth:function(column){var colData=this.__colData[column]||{};
return colData.maxWidth!==undefined?colData.maxWidth:Infinity;
},setColumnWidth:function(column,width){this._setColumnData(column,"width",width);
this._applyLayoutChange();
return this;
},getColumnWidth:function(column){var colData=this.__colData[column]||{};
return colData.width!==undefined?colData.width:null;
},setColumnMinWidth:function(column,minWidth){this._setColumnData(column,"minWidth",minWidth);
this._applyLayoutChange();
return this;
},getColumnMinWidth:function(column){var colData=this.__colData[column]||{};
return colData.minWidth||0;
},setRowMaxHeight:function(row,maxHeight){this._setRowData(row,"maxHeight",maxHeight);
this._applyLayoutChange();
return this;
},getRowMaxHeight:function(row){var rowData=this.__rowData[row]||{};
return rowData.maxHeight||Infinity;
},setRowHeight:function(row,height){this._setRowData(row,"height",height);
this._applyLayoutChange();
return this;
},getRowHeight:function(row){var rowData=this.__rowData[row]||{};
return rowData.height!==undefined?rowData.height:null;
},setRowMinHeight:function(row,minHeight){this._setRowData(row,"minHeight",minHeight);
this._applyLayoutChange();
return this;
},getRowMinHeight:function(row){var rowData=this.__rowData[row]||{};
return rowData.minHeight||0;
},__getOuterSize:function(widget){var hint=widget.getSizeHint();
var hMargins=widget.getMarginLeft()+widget.getMarginRight();
var vMargins=widget.getMarginTop()+widget.getMarginBottom();
var outerSize={height:hint.height+vMargins,width:hint.width+hMargins,minHeight:hint.minHeight+vMargins,minWidth:hint.minWidth+hMargins,maxHeight:hint.maxHeight+vMargins,maxWidth:hint.maxWidth+hMargins};
return outerSize;
},_fixHeightsRowSpan:function(rowHeights){var vSpacing=this.getSpacingY();

for(var i=0,l=this.__rowSpans.length;i<l;i++){var widget=this.__rowSpans[i];
var hint=this.__getOuterSize(widget);
var widgetProps=widget.getLayoutProperties();
var widgetRow=widgetProps.row;
var prefSpanHeight=vSpacing*(widgetProps.rowSpan-1);
var minSpanHeight=prefSpanHeight;
var rowFlexes={};

for(var j=0;j<widgetProps.rowSpan;j++){var row=widgetProps.row+j;
var rowHeight=rowHeights[row];
var rowFlex=this.getRowFlex(row);

if(rowFlex>0){rowFlexes[row]={min:rowHeight.minHeight,value:rowHeight.height,max:rowHeight.maxHeight,flex:rowFlex};
}prefSpanHeight+=rowHeight.height;
minSpanHeight+=rowHeight.minHeight;
}if(prefSpanHeight<hint.height){var rowIncrements=qx.ui.layout.Util.computeFlexOffsets(rowFlexes,hint.height,prefSpanHeight);

for(var j=0;j<widgetProps.rowSpan;j++){var offset=rowIncrements[widgetRow+j]?rowIncrements[widgetRow+j].offset:0;
rowHeights[widgetRow+j].height+=offset;
}}if(minSpanHeight<hint.minHeight){var rowIncrements=qx.ui.layout.Util.computeFlexOffsets(rowFlexes,hint.minHeight,minSpanHeight);

for(var j=0;j<widgetProps.rowSpan;j++){var offset=rowIncrements[widgetRow+j]?rowIncrements[widgetRow+j].offset:0;
rowHeights[widgetRow+j].minHeight+=offset;
}}}},_fixWidthsColSpan:function(colWidths){var hSpacing=this.getSpacingX();

for(var i=0,l=this.__colSpans.length;i<l;i++){var widget=this.__colSpans[i];
var hint=this.__getOuterSize(widget);
var widgetProps=widget.getLayoutProperties();
var widgetColumn=widgetProps.column;
var prefSpanWidth=hSpacing*(widgetProps.colSpan-1);
var minSpanWidth=prefSpanWidth;
var colFlexes={};
var offset;

for(var j=0;j<widgetProps.colSpan;j++){var col=widgetProps.column+j;
var colWidth=colWidths[col];
var colFlex=this.getColumnFlex(col);
if(colFlex>0){colFlexes[col]={min:colWidth.minWidth,value:colWidth.width,max:colWidth.maxWidth,flex:colFlex};
}prefSpanWidth+=colWidth.width;
minSpanWidth+=colWidth.minWidth;
}if(prefSpanWidth<hint.width){var colIncrements=qx.ui.layout.Util.computeFlexOffsets(colFlexes,hint.width,prefSpanWidth);

for(var j=0;j<widgetProps.colSpan;j++){offset=colIncrements[widgetColumn+j]?colIncrements[widgetColumn+j].offset:0;
colWidths[widgetColumn+j].width+=offset;
}}if(minSpanWidth<hint.minWidth){var colIncrements=qx.ui.layout.Util.computeFlexOffsets(colFlexes,hint.minWidth,minSpanWidth);

for(var j=0;j<widgetProps.colSpan;j++){offset=colIncrements[widgetColumn+j]?colIncrements[widgetColumn+j].offset:0;
colWidths[widgetColumn+j].minWidth+=offset;
}}}},_getRowHeights:function(){if(this.__rowHeights!=null){return this.__rowHeights;
}var rowHeights=[];
var maxRowIndex=this.__maxRowIndex;
var maxColIndex=this.__maxColIndex;

for(var row=0;row<=maxRowIndex;row++){var minHeight=0;
var height=0;
var maxHeight=0;

for(var col=0;col<=maxColIndex;col++){var widget=this.__grid[row][col];

if(!widget){continue;
}var widgetRowSpan=widget.getLayoutProperties().rowSpan||0;

if(widgetRowSpan>1){continue;
}var cellSize=this.__getOuterSize(widget);

if(this.getRowFlex(row)>0){minHeight=Math.max(minHeight,cellSize.minHeight);
}else{minHeight=Math.max(minHeight,cellSize.height);
}height=Math.max(height,cellSize.height);
}var minHeight=Math.max(minHeight,this.getRowMinHeight(row));
var maxHeight=this.getRowMaxHeight(row);

if(this.getRowHeight(row)!==null){var height=this.getRowHeight(row);
}else{var height=Math.max(minHeight,Math.min(height,maxHeight));
}rowHeights[row]={minHeight:minHeight,height:height,maxHeight:maxHeight};
}
if(this.__rowSpans.length>0){this._fixHeightsRowSpan(rowHeights);
}this.__rowHeights=rowHeights;
return rowHeights;
},_getColWidths:function(){if(this.__colWidths!=null){return this.__colWidths;
}var colWidths=[];
var maxColIndex=this.__maxColIndex;
var maxRowIndex=this.__maxRowIndex;

for(var col=0;col<=maxColIndex;col++){var width=0;
var minWidth=0;
var maxWidth=Infinity;

for(var row=0;row<=maxRowIndex;row++){var widget=this.__grid[row][col];

if(!widget){continue;
}var widgetColSpan=widget.getLayoutProperties().colSpan||0;

if(widgetColSpan>1){continue;
}var cellSize=this.__getOuterSize(widget);

if(this.getColumnFlex(col)>0){minWidth=Math.max(minWidth,cellSize.minWidth);
}else{minWidth=Math.max(minWidth,cellSize.width);
}width=Math.max(width,cellSize.width);
}var minWidth=Math.max(minWidth,this.getColumnMinWidth(col));
var maxWidth=this.getColumnMaxWidth(col);

if(this.getColumnWidth(col)!==null){var width=this.getColumnWidth(col);
}else{var width=Math.max(minWidth,Math.min(width,maxWidth));
}colWidths[col]={minWidth:minWidth,width:width,maxWidth:maxWidth};
}
if(this.__colSpans.length>0){this._fixWidthsColSpan(colWidths);
}this.__colWidths=colWidths;
return colWidths;
},_getColumnFlexOffsets:function(width){var hint=this.getSizeHint();
var diff=width-hint.width;

if(diff==0){return {};
}var colWidths=this._getColWidths();
var flexibles={};

for(var i=0,l=colWidths.length;i<l;i++){var col=colWidths[i];
var colFlex=this.getColumnFlex(i);

if((colFlex<=0)||(col.width==col.maxWidth&&diff>0)||(col.width==col.minWidth&&diff<0)){continue;
}flexibles[i]={min:col.minWidth,value:col.width,max:col.maxWidth,flex:colFlex};
}return qx.ui.layout.Util.computeFlexOffsets(flexibles,width,hint.width);
},_getRowFlexOffsets:function(height){var hint=this.getSizeHint();
var diff=height-hint.height;

if(diff==0){return {};
}var rowHeights=this._getRowHeights();
var flexibles={};

for(var i=0,l=rowHeights.length;i<l;i++){var row=rowHeights[i];
var rowFlex=this.getRowFlex(i);

if((rowFlex<=0)||(row.height==row.maxHeight&&diff>0)||(row.height==row.minHeight&&diff<0)){continue;
}flexibles[i]={min:row.minHeight,value:row.height,max:row.maxHeight,flex:rowFlex};
}return qx.ui.layout.Util.computeFlexOffsets(flexibles,height,hint.height);
},renderLayout:function(availWidth,availHeight){if(this._invalidChildrenCache){this.__buildGrid();
}var Util=qx.ui.layout.Util;
var hSpacing=this.getSpacingX();
var vSpacing=this.getSpacingY();
var prefWidths=this._getColWidths();
var colStretchOffsets=this._getColumnFlexOffsets(availWidth);
var colWidths=[];
var maxColIndex=this.__maxColIndex;
var maxRowIndex=this.__maxRowIndex;
var offset;

for(var col=0;col<=maxColIndex;col++){offset=colStretchOffsets[col]?colStretchOffsets[col].offset:0;
colWidths[col]=prefWidths[col].width+offset;
}var prefHeights=this._getRowHeights();
var rowStretchOffsets=this._getRowFlexOffsets(availHeight);
var rowHeights=[];

for(var row=0;row<=maxRowIndex;row++){offset=rowStretchOffsets[row]?rowStretchOffsets[row].offset:0;
rowHeights[row]=prefHeights[row].height+offset;
}var left=0;

for(var col=0;col<=maxColIndex;col++){var top=0;

for(var row=0;row<=maxRowIndex;row++){var widget=this.__grid[row][col];
if(!widget){top+=rowHeights[row]+vSpacing;
continue;
}var widgetProps=widget.getLayoutProperties();
if(widgetProps.row!==row||widgetProps.column!==col){top+=rowHeights[row]+vSpacing;
continue;
}var spanWidth=hSpacing*(widgetProps.colSpan-1);

for(var i=0;i<widgetProps.colSpan;i++){spanWidth+=colWidths[col+i];
}var spanHeight=vSpacing*(widgetProps.rowSpan-1);

for(var i=0;i<widgetProps.rowSpan;i++){spanHeight+=rowHeights[row+i];
}var cellHint=widget.getSizeHint();
var marginTop=widget.getMarginTop();
var marginLeft=widget.getMarginLeft();
var marginBottom=widget.getMarginBottom();
var marginRight=widget.getMarginRight();
var cellWidth=Math.max(cellHint.minWidth,Math.min(spanWidth-marginLeft-marginRight,cellHint.maxWidth));
var cellHeight=Math.max(cellHint.minHeight,Math.min(spanHeight-marginTop-marginBottom,cellHint.maxHeight));
var cellAlign=this.getCellAlign(row,col);
var cellLeft=left+Util.computeHorizontalAlignOffset(cellAlign.hAlign,cellWidth,spanWidth,marginLeft,marginRight);
var cellTop=top+Util.computeVerticalAlignOffset(cellAlign.vAlign,cellHeight,spanHeight,marginTop,marginBottom);
widget.renderLayout(cellLeft,cellTop,cellWidth,cellHeight);
top+=rowHeights[row]+vSpacing;
}left+=colWidths[col]+hSpacing;
}},invalidateLayoutCache:function(){this.base(arguments);
this.__colWidths=null;
this.__rowHeights=null;
},_computeSizeHint:function(){if(this._invalidChildrenCache){this.__buildGrid();
}var colWidths=this._getColWidths();
var minWidth=0,width=0;

for(var i=0,l=colWidths.length;i<l;i++){var col=colWidths[i];

if(this.getColumnFlex(i)>0){minWidth+=col.minWidth;
}else{minWidth+=col.width;
}width+=col.width;
}var rowHeights=this._getRowHeights();
var minHeight=0,height=0;

for(var i=0,l=rowHeights.length;i<l;i++){var row=rowHeights[i];

if(this.getRowFlex(i)>0){minHeight+=row.minHeight;
}else{minHeight+=row.height;
}height+=row.height;
}var spacingX=this.getSpacingX()*(colWidths.length-1);
var spacingY=this.getSpacingY()*(rowHeights.length-1);
var hint={minWidth:minWidth+spacingX,width:width+spacingX,minHeight:minHeight+spacingY,height:height+spacingY};
return hint;
}},destruct:function(){this.__grid=this.__rowData=this.__colData=this.__colSpans=this.__rowSpans=this.__colWidths=this.__rowHeights=null;
}});
qx.Class.define("qx.util.format.NumberFormat",{extend:qx.core.Object,implement:qx.util.format.IFormat,construct:function(locale){this.base(arguments);
this.__locale=locale;
},statics:{getIntegerInstance:function(){var NumberFormat=qx.util.format.NumberFormat;

if(NumberFormat._integerInstance==null){NumberFormat._integerInstance=new NumberFormat();
NumberFormat._integerInstance.setMaximumFractionDigits(0);
}return NumberFormat._integerInstance;
},getInstance:function(){if(!this._instance){this._instance=new this;
}return this._instance;
}},properties:{minimumIntegerDigits:{check:"Number",init:0},maximumIntegerDigits:{check:"Number",nullable:true},minimumFractionDigits:{check:"Number",init:0},maximumFractionDigits:{check:"Number",nullable:true},groupingUsed:{check:"Boolean",init:true},prefix:{check:"String",init:"",event:"changeNumberFormat"},postfix:{check:"String",init:"",event:"changeNumberFormat"}},members:{__locale:null,format:function(num){switch(num){case Infinity:return "Infinity";
case -Infinity:return "-Infinity";
case NaN:return "NaN";
}var negative=(num<0);

if(negative){num=-num;
}
if(this.getMaximumFractionDigits()!=null){var mover=Math.pow(10,this.getMaximumFractionDigits());
num=Math.round(num*mover)/mover;
}var integerDigits=String(Math.floor(num)).length;
var numStr=""+num;
var integerStr=numStr.substring(0,integerDigits);

while(integerStr.length<this.getMinimumIntegerDigits()){integerStr="0"+integerStr;
}
if(this.getMaximumIntegerDigits()!=null&&integerStr.length>this.getMaximumIntegerDigits()){integerStr=integerStr.substring(integerStr.length-this.getMaximumIntegerDigits());
}var fractionStr=numStr.substring(integerDigits+1);

while(fractionStr.length<this.getMinimumFractionDigits()){fractionStr+="0";
}
if(this.getMaximumFractionDigits()!=null&&fractionStr.length>this.getMaximumFractionDigits()){fractionStr=fractionStr.substring(0,this.getMaximumFractionDigits());
}if(this.getGroupingUsed()){var origIntegerStr=integerStr;
integerStr="";
var groupPos;

for(groupPos=origIntegerStr.length;groupPos>3;groupPos-=3){integerStr=""+qx.locale.Number.getGroupSeparator(this.__locale)+origIntegerStr.substring(groupPos-3,groupPos)+integerStr;
}integerStr=origIntegerStr.substring(0,groupPos)+integerStr;
}var prefix=this.getPrefix()?this.getPrefix():"";
var postfix=this.getPostfix()?this.getPostfix():"";
var str=prefix+(negative?"-":"")+integerStr;

if(fractionStr.length>0){str+=""+qx.locale.Number.getDecimalSeparator(this.__locale)+fractionStr;
}str+=postfix;
return str;
},parse:function(str){var groupSepEsc=qx.lang.String.escapeRegexpChars(qx.locale.Number.getGroupSeparator(this.__locale)+"");
var decimalSepEsc=qx.lang.String.escapeRegexpChars(qx.locale.Number.getDecimalSeparator(this.__locale)+"");
var regex=new RegExp("^"+qx.lang.String.escapeRegexpChars(this.getPrefix())+'([-+]){0,1}'+'([0-9]{1,3}(?:'+groupSepEsc+'{0,1}[0-9]{3}){0,})'+'('+decimalSepEsc+'\\d+){0,1}'+qx.lang.String.escapeRegexpChars(this.getPostfix())+"$");
var hit=regex.exec(str);

if(hit==null){throw new Error("Number string '"+str+"' does not match the number format");
}var negative=(hit[1]=="-");
var integerStr=hit[2];
var fractionStr=hit[3];
integerStr=integerStr.replace(new RegExp(groupSepEsc,"g"),"");
var asStr=(negative?"-":"")+integerStr;

if(fractionStr!=null&&fractionStr.length!=0){fractionStr=fractionStr.replace(new RegExp(decimalSepEsc),"");
asStr+="."+fractionStr;
}return parseFloat(asStr);
}}});
qx.Mixin.define("qx.ui.form.MForm",{properties:{valid:{check:"Boolean",init:true,apply:"_applyValid",event:"changeValid"},required:{check:"Boolean",init:false,event:"changeRequired"},invalidMessage:{check:"String",init:"",event:"changeInvalidMessage"}},members:{_applyValid:function(value,old){value?this.removeState("invalid"):this.addState("invalid");
}}});
qx.Class.define("qx.ui.form.AbstractField",{extend:qx.ui.core.Widget,implement:[qx.ui.form.IStringForm,qx.ui.form.IForm],include:[qx.ui.form.MForm],type:"abstract",construct:function(value){this.base(arguments);

if(value!=null){this.setValue(value);
}this.getContentElement().addListener("change",this._onChangeContent,this);
this.addListener("syncAppearance",this._syncPlaceholder,this);
{};
},events:{"input":"qx.event.type.Data","changeValue":"qx.event.type.Data"},properties:{textAlign:{check:["left","center","right"],nullable:true,themeable:true,apply:"_applyTextAlign"},readOnly:{check:"Boolean",apply:"_applyReadOnly",init:false},selectable:{refine:true,init:true},focusable:{refine:true,init:true},maxLength:{check:"PositiveInteger",init:Infinity},liveUpdate:{check:"Boolean",init:false},placeholder:{check:"String",nullable:true,apply:"_applyPlaceholder"},filter:{check:"RegExp",nullable:true,init:null}},members:{__nullValue:true,__placeholder:null,__oldValue:null,__oldInputValue:null,getFocusElement:function(){var el=this.getContentElement();

if(el){return el;
}},_createInputElement:function(){return new qx.html.Input("text");
},renderLayout:function(left,top,width,height){var updateInsets=this._updateInsets;
var changes=this.base(arguments,left,top,width,height);
if(!changes){return;
}var inner=changes.size||updateInsets;
var pixel="px";

if(inner||changes.local||changes.margin){var insets=this.getInsets();
var innerWidth=width-insets.left-insets.right;
var innerHeight=height-insets.top-insets.bottom;
innerWidth=innerWidth<0?0:innerWidth;
innerHeight=innerHeight<0?0:innerHeight;
}var input=this.getContentElement();

if(updateInsets){this.__getPlaceholderElement().setStyles({"left":insets.left+pixel,"top":insets.top+pixel});
}
if(inner){this.__getPlaceholderElement().setStyles({"width":innerWidth+pixel,"height":innerHeight+pixel});
input.setStyles({"width":innerWidth+pixel,"height":innerHeight+pixel});
}},_createContentElement:function(){var el=this._createInputElement();
el.setStyles({"border":"none","padding":0,"margin":0,"display":"block","background":"transparent","outline":"none","appearance":"none","position":"absolute","autoComplete":"off"});
el.setSelectable(this.getSelectable());
el.setEnabled(this.getEnabled());
el.addListener("input",this._onHtmlInput,this);
if(qx.core.Variant.isSet("qx.client","gecko")){el.setAttribute("spellcheck","false");
}if(qx.core.Variant.isSet("qx.client","webkit")){el.setStyle("resize","none");
}if(qx.core.Variant.isSet("qx.client","mshtml")){el.setStyles({backgroundImage:"url("+qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif")+")"});
}return el;
},_applyEnabled:function(value,old){this.base(arguments,value,old);
this.getContentElement().setEnabled(value);

if(value){this._showPlaceholder();
}else{this._removePlaceholder();
}},__textSize:{width:16,height:16},_getContentHint:function(){return {width:this.__textSize.width*10,height:this.__textSize.height||16};
},_applyFont:function(value,old){var styles;

if(value){var font=qx.theme.manager.Font.getInstance().resolve(value);
styles=font.getStyles();
}else{styles=qx.bom.Font.getDefaultStyles();
}this.getContentElement().setStyles(styles);
this.__getPlaceholderElement().setStyles(styles);
if(value){this.__textSize=qx.bom.Label.getTextSize("A",styles);
}else{delete this.__textSize;
}qx.ui.core.queue.Layout.add(this);
},_applyTextColor:function(value,old){if(value){this.getContentElement().setStyle("color",qx.theme.manager.Color.getInstance().resolve(value));
this.__getPlaceholderElement().setStyle("color",qx.theme.manager.Color.getInstance().resolve(value));
}else{this.getContentElement().removeStyle("color");
this.__getPlaceholderElement().removeStyle("color");
}},tabFocus:function(){this.base(arguments);
this.selectAllText();
},_getTextSize:function(){return this.__textSize;
},_onHtmlInput:function(e){var value=e.getData();
var fireEvents=true;
this.__nullValue=false;
if(this.getFilter()!=null){var filteredValue="";
var index=value.search(this.getFilter());
var processedValue=value;

while(index>=0){filteredValue=filteredValue+(processedValue.charAt(index));
processedValue=processedValue.substring(index+1,processedValue.length);
index=processedValue.search(this.getFilter());
}
if(filteredValue!=value){fireEvents=false;
value=filteredValue;
this.getContentElement().setValue(value);
}}if(value.length>this.getMaxLength()){var fireEvents=false;
this.getContentElement().setValue(value.substr(0,this.getMaxLength()));
}if(fireEvents){this.fireDataEvent("input",value,this.__oldInputValue);
this.__oldInputValue=value;
if(this.getLiveUpdate()){this.__fireChangeValueEvent(value);
}}},__fireChangeValueEvent:function(value){this.fireNonBubblingEvent("changeValue",qx.event.type.Data,[value,this.__oldValue]);
this.__oldValue=value;
},setValue:function(value){if(value===null){if(this.__nullValue){return value;
}value="";
this.__nullValue=true;
}else{this.__nullValue=false;
this._removePlaceholder();
}
if(qx.lang.Type.isString(value)){var elem=this.getContentElement();

if(value.length>this.getMaxLength()){value=value.substr(0,this.getMaxLength());
}
if(elem.getValue()!=value){var oldValue=elem.getValue();
elem.setValue(value);
var data=this.__nullValue?null:value;
this.__oldValue=oldValue;
this.__fireChangeValueEvent(data);
}this._showPlaceholder();
return value;
}throw new Error("Invalid value type: "+value);
},getValue:function(){var value=this.getContentElement().getValue();
return this.__nullValue?null:value;
},resetValue:function(){this.setValue(null);
},_onChangeContent:function(e){this.__nullValue=e.getData()===null;
this.__fireChangeValueEvent(e.getData());
},getTextSelection:function(){return this.getContentElement().getTextSelection();
},getTextSelectionLength:function(){return this.getContentElement().getTextSelectionLength();
},getTextSelectionStart:function(){return this.getContentElement().getTextSelectionStart();
},getTextSelectionEnd:function(){return this.getContentElement().getTextSelectionEnd();
},setTextSelection:function(start,end){this.getContentElement().setTextSelection(start,end);
},clearTextSelection:function(){this.getContentElement().clearTextSelection();
},selectAllText:function(){this.setTextSelection(0);
},_showPlaceholder:function(){var fieldValue=this.getValue()||"";
var placeholder=this.getPlaceholder();

if(placeholder!=null&&fieldValue==""&&!this.hasState("focused")&&!this.hasState("disabled")){if(this.hasState("showingPlaceholder")){this._syncPlaceholder();
}else{this.addState("showingPlaceholder");
}}},_removePlaceholder:function(){if(this.hasState("showingPlaceholder")){this.__getPlaceholderElement().setStyle("visibility","hidden");
this.removeState("showingPlaceholder");
}},_syncPlaceholder:function(){if(this.hasState("showingPlaceholder")){this.__getPlaceholderElement().setStyle("visibility","visible");
}},__getPlaceholderElement:function(){if(this.__placeholder==null){this.__placeholder=new qx.html.Label();
this.__placeholder.setStyles({"visibility":"hidden","zIndex":6,"position":"absolute"});
this.getContainerElement().add(this.__placeholder);
}return this.__placeholder;
},_onChangeLocale:null,_applyPlaceholder:function(value,old){this.__getPlaceholderElement().setValue(value);

if(value!=null){this.addListener("focusin",this._removePlaceholder,this);
this.addListener("focusout",this._showPlaceholder,this);
this._showPlaceholder();
}else{this.removeListener("focusin",this._removePlaceholder,this);
this.removeListener("focusout",this._showPlaceholder,this);
this._removePlaceholder();
}},_applyTextAlign:function(value,old){this.getContentElement().setStyle("textAlign",value);
},_applyReadOnly:function(value,old){var element=this.getContentElement();
element.setAttribute("readOnly",value);

if(value){this.addState("readonly");
this.setFocusable(false);
}else{this.removeState("readonly");
this.setFocusable(true);
}}},destruct:function(){this.__placeholder=null;
{};
}});
qx.Class.define("qx.ui.form.TextField",{extend:qx.ui.form.AbstractField,properties:{appearance:{refine:true,init:"textfield"},allowGrowY:{refine:true,init:false},allowShrinkY:{refine:true,init:false}}});
qx.Class.define("qx.ui.core.ColumnData",{extend:qx.ui.core.LayoutItem,construct:function(){this.base(arguments);
this.setColumnWidth("auto");
},members:{__computedWidth:null,renderLayout:function(left,top,width,height){this.__computedWidth=width;
},getComputedWidth:function(){return this.__computedWidth;
},getFlex:function(){return this.getLayoutProperties().flex||0;
},setColumnWidth:function(width,flex){var flex=flex||0;
var percent=null;

if(typeof width=="number"){this.setWidth(width);
}else if(typeof width=="string"){if(width=="auto"){flex=1;
}else{var match=width.match(/^[0-9]+(?:\.[0-9]+)?([%\*])$/);

if(match){if(match[1]=="*"){flex=parseFloat(width);
}else{percent=width;
}}}}this.setLayoutProperties({flex:flex,width:percent});
}},settings:{"qx.tableResizeDebug":false}});
qx.Class.define("qx.ui.table.columnmodel.resizebehavior.Abstract",{type:"abstract",extend:qx.core.Object,members:{_setNumColumns:function(numColumns){throw new Error("_setNumColumns is abstract");
},onAppear:function(event,forceRefresh){throw new Error("onAppear is abstract");
},onTableWidthChanged:function(event){throw new Error("onTableWidthChanged is abstract");
},onVerticalScrollBarChanged:function(event){throw new Error("onVerticalScrollBarChanged is abstract");
},onColumnWidthChanged:function(event){throw new Error("onColumnWidthChanged is abstract");
},onVisibilityChanged:function(event){throw new Error("onVisibilityChanged is abstract");
},_getAvailableWidth:function(){var tableColumnModel=this.getTableColumnModel();
var table=tableColumnModel.getTable();
var scrollerArr=table._getPaneScrollerArr();

if(!scrollerArr[0]||!scrollerArr[0].getLayoutParent().getBounds()){return null;
}var scrollerParentWidth=scrollerArr[0].getLayoutParent().getBounds().width;
var lastScroller=scrollerArr[scrollerArr.length-1];
scrollerParentWidth-=lastScroller.getPaneInsetRight();
return scrollerParentWidth;
}}});
qx.Class.define("qx.ui.table.columnmodel.resizebehavior.Default",{extend:qx.ui.table.columnmodel.resizebehavior.Abstract,construct:function(){this.base(arguments);
this.__resizeColumnData=[];
this.__layout=new qx.ui.layout.HBox();
this.__layout.connectToWidget(this);
this.__deferredComputeColumnsFlexWidth=new qx.util.DeferredCall(this._computeColumnsFlexWidth,this);
},properties:{newResizeBehaviorColumnData:{check:"Function",init:function(obj){return new qx.ui.core.ColumnData();
}},initializeWidthsOnEveryAppear:{check:"Boolean",init:false},tableColumnModel:{check:"qx.ui.table.columnmodel.Resize"}},members:{__layout:null,__layoutChildren:null,__resizeColumnData:null,__deferredComputeColumnsFlexWidth:null,__widthsInitialized:false,setWidth:function(col,width,flex){if(col>=this.__resizeColumnData.length){throw new Error("Column number out of range");
}this.__resizeColumnData[col].setColumnWidth(width,flex);
this.__deferredComputeColumnsFlexWidth.schedule();
},setMinWidth:function(col,width){if(col>=this.__resizeColumnData.length){throw new Error("Column number out of range");
}this.__resizeColumnData[col].setMinWidth(width);
this.__deferredComputeColumnsFlexWidth.schedule();
},setMaxWidth:function(col,width){if(col>=this.__resizeColumnData.length){throw new Error("Column number out of range");
}this.__resizeColumnData[col].setMaxWidth(width);
this.__deferredComputeColumnsFlexWidth.schedule();
},set:function(col,map){for(var prop in map){switch(prop){case "width":this.setWidth(col,map[prop]);
break;
case "minWidth":this.setMinWidth(col,map[prop]);
break;
case "maxWidth":this.setMaxWidth(col,map[prop]);
break;
default:throw new Error("Unknown property: "+prop);
}}},onAppear:function(event,forceRefresh){if(forceRefresh===true||!this.__widthsInitialized||this.getInitializeWidthsOnEveryAppear()){this._computeColumnsFlexWidth();
this.__widthsInitialized=true;
}},onTableWidthChanged:function(event){this._computeColumnsFlexWidth();
},onVerticalScrollBarChanged:function(event){this._computeColumnsFlexWidth();
},onColumnWidthChanged:function(event){this._extendNextColumn(event);
},onVisibilityChanged:function(event){var data=event.getData();
if(data.visible){this._computeColumnsFlexWidth();
return;
}this._extendLastColumn(event);
},_setNumColumns:function(numColumns){var colData=this.__resizeColumnData;
if(numColumns<=colData.length){colData.splice(numColumns,colData.length);
return;
}for(var i=colData.length;i<numColumns;i++){colData[i]=this.getNewResizeBehaviorColumnData()();
colData[i].columnNumber=i;
}},getLayoutChildren:function(){return this.__layoutChildren;
},_computeColumnsFlexWidth:function(){this.__deferredComputeColumnsFlexWidth.cancel();
var width=this._getAvailableWidth();

if(width===null){return;
}var tableColumnModel=this.getTableColumnModel();
var visibleColumns=tableColumnModel.getVisibleColumns();
var visibleColumnsLength=visibleColumns.length;
var colData=this.__resizeColumnData;
var i,l;

if(visibleColumnsLength===0){return;
}var columns=[];

for(i=0;i<visibleColumnsLength;i++){columns.push(colData[visibleColumns[i]]);
}this.__layoutChildren=columns;
this.__clearLayoutCaches();
this.__layout.renderLayout(width,100);
for(i=0,l=columns.length;i<l;i++){var colWidth=columns[i].getComputedWidth();
tableColumnModel.setColumnWidth(visibleColumns[i],colWidth);
}},__clearLayoutCaches:function(){this.__layout.invalidateChildrenCache();
var children=this.__layoutChildren;

for(var i=0,l=children.length;i<l;i++){children[i].invalidateLayoutCache();
}},_extendNextColumn:function(event){var tableColumnModel=this.getTableColumnModel();
var data=event.getData();
var visibleColumns=tableColumnModel.getVisibleColumns();
var width=this._getAvailableWidth();
var numColumns=visibleColumns.length;
if(data.newWidth>data.oldWidth){return ;
}var i;
var nextCol;
var widthUsed=0;

for(i=0;i<numColumns;i++){widthUsed+=tableColumnModel.getColumnWidth(visibleColumns[i]);
}if(widthUsed<width){for(i=0;i<visibleColumns.length;i++){if(visibleColumns[i]==data.col){nextCol=visibleColumns[i+1];
break;
}}
if(nextCol){var newWidth=(width-(widthUsed-tableColumnModel.getColumnWidth(nextCol)));
tableColumnModel.setColumnWidth(nextCol,newWidth);
}}},_extendLastColumn:function(event){var tableColumnModel=this.getTableColumnModel();
var data=event.getData();
if(data.visible){return;
}var visibleColumns=tableColumnModel.getVisibleColumns();
if(visibleColumns.length==0){return;
}var width=this._getAvailableWidth(tableColumnModel);
var numColumns=visibleColumns.length;
var i;
var lastCol;
var widthUsed=0;

for(i=0;i<numColumns;i++){widthUsed+=tableColumnModel.getColumnWidth(visibleColumns[i]);
}if(widthUsed<width){lastCol=visibleColumns[visibleColumns.length-1];
var newWidth=(width-(widthUsed-tableColumnModel.getColumnWidth(lastCol)));
tableColumnModel.setColumnWidth(lastCol,newWidth);
}},_getResizeColumnData:function(){return this.__resizeColumnData;
}},destruct:function(){this.__resizeColumnData=this.__layoutChildren=null;
this._disposeObjects("__layout","__deferredComputeColumnsFlexWidth");
}});
qx.Class.define("qx.ui.table.selection.Manager",{extend:qx.core.Object,construct:function(){this.base(arguments);
},properties:{selectionModel:{check:"qx.ui.table.selection.Model"}},members:{__lastMouseDownHandled:null,handleMouseDown:function(index,evt){if(evt.isLeftPressed()){var selectionModel=this.getSelectionModel();

if(!selectionModel.isSelectedIndex(index)){this._handleSelectEvent(index,evt);
this.__lastMouseDownHandled=true;
}else{this.__lastMouseDownHandled=false;
}}else if(evt.isRightPressed()&&evt.getModifiers()==0){var selectionModel=this.getSelectionModel();

if(!selectionModel.isSelectedIndex(index)){selectionModel.setSelectionInterval(index,index);
}}},handleMouseUp:function(index,evt){if(evt.isLeftPressed()&&!this.__lastMouseDownHandled){this._handleSelectEvent(index,evt);
}},handleClick:function(index,evt){},handleSelectKeyDown:function(index,evt){this._handleSelectEvent(index,evt);
},handleMoveKeyDown:function(index,evt){var selectionModel=this.getSelectionModel();

switch(evt.getModifiers()){case 0:selectionModel.setSelectionInterval(index,index);
break;
case qx.event.type.Dom.SHIFT_MASK:var anchor=selectionModel.getAnchorSelectionIndex();

if(anchor==-1){selectionModel.setSelectionInterval(index,index);
}else{selectionModel.setSelectionInterval(anchor,index);
}break;
}},_handleSelectEvent:function(index,evt){var selectionModel=this.getSelectionModel();
var leadIndex=selectionModel.getLeadSelectionIndex();
var anchorIndex=selectionModel.getAnchorSelectionIndex();

if(evt.isShiftPressed()){if(index!=leadIndex||selectionModel.isSelectionEmpty()){if(anchorIndex==-1){anchorIndex=index;
}
if(evt.isCtrlOrCommandPressed()){selectionModel.addSelectionInterval(anchorIndex,index);
}else{selectionModel.setSelectionInterval(anchorIndex,index);
}}}else if(evt.isCtrlOrCommandPressed()){if(selectionModel.isSelectedIndex(index)){selectionModel.removeSelectionInterval(index,index);
}else{selectionModel.addSelectionInterval(index,index);
}}else{selectionModel.setSelectionInterval(index,index);
}}}});
qx.Class.define("qx.ui.treevirtual.SelectionManager",{extend:qx.ui.table.selection.Manager,construct:function(table){this.base(arguments);
this.__table=table;
},members:{__table:null,getTable:function(){return this.__table;
},handleMoveKeyDown:function(index,evt){var selectionModel=this.getSelectionModel();

switch(evt.getModifiers()){case 0:break;
case qx.event.type.Dom.SHIFT_MASK:var anchor=selectionModel.getAnchorSelectionIndex();

if(anchor==-1){selectionModel.setSelectionInterval(index,index);
}else{selectionModel.setSelectionInterval(anchor,index);
}break;
}},_handleSelectEvent:function(index,evt){var _this=this;
function handleButtonClick(tree,index,evt){var dataModel=tree.getDataModel();
var treeCol=dataModel.getTreeColumn();
if(evt instanceof qx.event.type.Mouse){if(!tree.getFocusCellOnMouseMove()){var scrollers=tree._getPaneScrollerArr();

for(var i=0;i<scrollers.length;i++){scrollers[i]._focusCellAtPagePos(evt.getViewportLeft(),evt.getViewportTop());
}}}var focusedCol=tree.getFocusedColumn();
if(focusedCol!=treeCol){tree.startEditing();
return false;
}var node=dataModel.getValue(treeCol,tree.getFocusedRow());

if(!node){return false;
}if(evt instanceof qx.event.type.Mouse){var tcm=tree.getTableColumnModel();
var columnPositions=tcm._getColToXPosMap();
var left=qx.bom.element.Location.getLeft(tree.getContentElement().getDomElement());

for(i=0;i<columnPositions[treeCol].visX;i++){left+=tcm.getColumnWidth(columnPositions[i].visX);
}var x=evt.getViewportLeft();
var latitude=2;
var buttonPos=left+(node.level-1)*19+2;

if(x>=buttonPos-latitude&&x<=buttonPos+19+latitude){dataModel.setState(node,{bOpened:!node.bOpened});
return tree.getOpenCloseClickSelectsRow()?false:true;
}else{return _this._handleExtendedClick(tree,evt,node,left);
}}else{var identifier=evt.getKeyIdentifier();

switch(identifier){case "Space":return false;
case "Enter":if(!node.bHideOpenClose){dataModel.setState(node,{bOpened:!node.bOpened});
}return tree.getOpenCloseClickSelectsRow()?false:true;
default:return true;
}}}var bNoSelect=handleButtonClick(this.__table,index,evt);
if(!bNoSelect){var Sm=qx.ui.table.selection.Manager;
Sm.prototype._handleSelectEvent.call(this,index,evt);
}},_handleExtendedClick:function(tree,evt,node,left){return false;
}},destruct:function(){this.__table=null;
}});
qx.Class.define("qx.ui.core.selection.Abstract",{type:"abstract",extend:qx.core.Object,construct:function(){this.base(arguments);
this.__selection={};
},events:{"changeSelection":"qx.event.type.Data"},properties:{mode:{check:["single","multi","additive","one"],init:"single",apply:"_applyMode"},drag:{check:"Boolean",init:false},quick:{check:"Boolean",init:false}},members:{__scrollStepX:0,__scrollStepY:0,__scrollTimer:null,__frameScroll:null,__lastRelX:null,__lastRelY:null,__frameLocation:null,__dragStartX:null,__dragStartY:null,__inCapture:null,__mouseX:null,__mouseY:null,__moveDirectionX:null,__moveDirectionY:null,__selectionModified:null,__selectionContext:null,__leadItem:null,__selection:null,__anchorItem:null,__mouseDownOnSelected:null,getSelectionContext:function(){return this.__selectionContext;
},selectAll:function(){var mode=this.getMode();

if(mode=="single"||mode=="one"){throw new Error("Can not select all items in selection mode: "+mode);
}this._selectAllItems();
this._fireChange();
},selectItem:function(item){this._setSelectedItem(item);
var mode=this.getMode();

if(mode!=="single"&&mode!=="one"){this._setLeadItem(item);
this._setAnchorItem(item);
}this._scrollItemIntoView(item);
this._fireChange();
},addItem:function(item){var mode=this.getMode();

if(mode==="single"||mode==="one"){this._setSelectedItem(item);
}else{if(!this._getAnchorItem()){this._setAnchorItem(item);
}this._setLeadItem(item);
this._addToSelection(item);
}this._scrollItemIntoView(item);
this._fireChange();
},removeItem:function(item){this._removeFromSelection(item);

if(this.getMode()==="one"&&this.isSelectionEmpty()){var first=this._getFirstSelectable();

if(first){this.addItem(first);
}if(first==item){return;
}}
if(this.getLeadItem()==item){this._setLeadItem(null);
}
if(this._getAnchorItem()==item){this._setAnchorItem(null);
}this._fireChange();
},selectItemRange:function(begin,end){var mode=this.getMode();

if(mode=="single"||mode=="one"){throw new Error("Can not select multiple items in selection mode: "+mode);
}this._selectItemRange(begin,end);
this._setAnchorItem(begin);
this._setLeadItem(end);
this._scrollItemIntoView(end);
this._fireChange();
},clearSelection:function(){if(this.getMode()=="one"){return;
}this._clearSelection();
this._setLeadItem(null);
this._setAnchorItem(null);
this._fireChange();
},replaceSelection:function(items){var mode=this.getMode();

if(mode=="one"||mode==="single"){if(items.length>1){throw new Error("Could not select more than one items in mode: "+mode+"!");
}
if(items.length==1){this.selectItem(items[0]);
}else{this.clearSelection();
}return;
}else{this._replaceMultiSelection(items);
}},getSelectedItem:function(){var mode=this.getMode();

if(mode==="single"||mode==="one"){return this._getSelectedItem()||null;
}throw new Error("The method getSelectedItem() is only supported in 'single' and 'one' selection mode!");
},getSelection:function(){return qx.lang.Object.getValues(this.__selection);
},getSortedSelection:function(){var children=this.getSelectables();
var sel=qx.lang.Object.getValues(this.__selection);
sel.sort(function(a,b){return children.indexOf(a)-children.indexOf(b);
});
return sel;
},isItemSelected:function(item){var hash=this._selectableToHashCode(item);
return this.__selection[hash]!==undefined;
},isSelectionEmpty:function(){return qx.lang.Object.isEmpty(this.__selection);
},invertSelection:function(){var mode=this.getMode();

if(mode==="single"||mode==="one"){throw new Error("The method invertSelection() is only supported in 'multi' and 'additive' selection mode!");
}var selectables=this.getSelectables();

for(var i=0;i<selectables.length;i++){this._toggleInSelection(selectables[i]);
}this._fireChange();
},_setLeadItem:function(value){var old=this.__leadItem;

if(old!==null){this._styleSelectable(old,"lead",false);
}
if(value!==null){this._styleSelectable(value,"lead",true);
}this.__leadItem=value;
},_getLeadItem:function(){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use public 'getLeadItem' instead.");
};
return this.getLeadItem();
},getLeadItem:function(){return this.__leadItem!==null?this.__leadItem:null;
},_setAnchorItem:function(value){var old=this.__anchorItem;

if(old){this._styleSelectable(old,"anchor",false);
}
if(value){this._styleSelectable(value,"anchor",true);
}this.__anchorItem=value;
},_getAnchorItem:function(){return this.__anchorItem!==null?this.__anchorItem:null;
},_isSelectable:function(item){throw new Error("Abstract method call: _isSelectable()");
},_getSelectableFromMouseEvent:function(event){var target=event.getTarget();
return this._isSelectable(target)?target:null;
},_selectableToHashCode:function(item){throw new Error("Abstract method call: _selectableToHashCode()");
},_styleSelectable:function(item,type,enabled){throw new Error("Abstract method call: _styleSelectable()");
},_capture:function(){throw new Error("Abstract method call: _capture()");
},_releaseCapture:function(){throw new Error("Abstract method call: _releaseCapture()");
},_getLocation:function(){throw new Error("Abstract method call: _getLocation()");
},_getDimension:function(){throw new Error("Abstract method call: _getDimension()");
},_getSelectableLocationX:function(item){throw new Error("Abstract method call: _getSelectableLocationX()");
},_getSelectableLocationY:function(item){throw new Error("Abstract method call: _getSelectableLocationY()");
},_getScroll:function(){throw new Error("Abstract method call: _getScroll()");
},_scrollBy:function(xoff,yoff){throw new Error("Abstract method call: _scrollBy()");
},_scrollItemIntoView:function(item){throw new Error("Abstract method call: _scrollItemIntoView()");
},getSelectables:function(){throw new Error("Abstract method call: getSelectables()");
},_getSelectableRange:function(item1,item2){throw new Error("Abstract method call: _getSelectableRange()");
},_getFirstSelectable:function(){throw new Error("Abstract method call: _getFirstSelectable()");
},_getLastSelectable:function(){throw new Error("Abstract method call: _getLastSelectable()");
},_getRelatedSelectable:function(item,relation){throw new Error("Abstract method call: _getRelatedSelectable()");
},_getPage:function(lead,up){throw new Error("Abstract method call: _getPage()");
},_applyMode:function(value,old){this._setLeadItem(null);
this._setAnchorItem(null);
this._clearSelection();
if(value==="one"){var first=this._getFirstSelectable();

if(first){this._setSelectedItem(first);
this._scrollItemIntoView(first);
}}this._fireChange();
},handleMouseOver:function(event){if(!this.getQuick()){return;
}var mode=this.getMode();

if(mode!=="one"&&mode!=="single"){return;
}var item=this._getSelectableFromMouseEvent(event);

if(item===null){return;
}this._setSelectedItem(item);
this._fireChange("quick");
},handleMouseDown:function(event){var item=this._getSelectableFromMouseEvent(event);

if(item===null){return;
}var isCtrlPressed=event.isCtrlPressed()||(qx.bom.client.Platform.MAC&&event.isMetaPressed());
var isShiftPressed=event.isShiftPressed();
if(this.isItemSelected(item)&&!isShiftPressed&&!isCtrlPressed&&!this.getDrag()){this.__mouseDownOnSelected=item;
return;
}else{this.__mouseDownOnSelected=null;
}this._scrollItemIntoView(item);
switch(this.getMode()){case "single":case "one":this._setSelectedItem(item);
break;
case "additive":this._setLeadItem(item);
this._setAnchorItem(item);
this._toggleInSelection(item);
break;
case "multi":this._setLeadItem(item);
if(isShiftPressed){var anchor=this._getAnchorItem();

if(anchor===null){anchor=this._getFirstSelectable();
this._setAnchorItem(anchor);
}this._selectItemRange(anchor,item,isCtrlPressed);
}else if(isCtrlPressed){this._setAnchorItem(item);
this._toggleInSelection(item);
}else{this._setAnchorItem(item);
this._setSelectedItem(item);
}break;
}var mode=this.getMode();

if(this.getDrag()&&mode!=="single"&&mode!=="one"&&!isShiftPressed&&!isCtrlPressed){this.__frameLocation=this._getLocation();
this.__frameScroll=this._getScroll();
this.__dragStartX=event.getDocumentLeft()+this.__frameScroll.left;
this.__dragStartY=event.getDocumentTop()+this.__frameScroll.top;
this.__inCapture=true;
this._capture();
}this._fireChange("click");
},handleMouseUp:function(event){var isCtrlPressed=event.isCtrlPressed()||(qx.bom.client.Platform.MAC&&event.isMetaPressed());
var isShiftPressed=event.isShiftPressed();

if(!isCtrlPressed&&!isShiftPressed&&this.__mouseDownOnSelected){var item=this._getSelectableFromMouseEvent(event);

if(item===null||!this.isItemSelected(item)){return;
}var mode=this.getMode();

if(mode==="additive"){this._removeFromSelection(item);
}else{this._setSelectedItem(item);

if(this.getMode()==="multi"){this._setLeadItem(item);
this._setAnchorItem(item);
}}}this._cleanup();
},handleLoseCapture:function(event){this._cleanup();
},handleMouseMove:function(event){if(!this.__inCapture){return;
}this.__mouseX=event.getDocumentLeft();
this.__mouseY=event.getDocumentTop();
var dragX=this.__mouseX+this.__frameScroll.left;

if(dragX>this.__dragStartX){this.__moveDirectionX=1;
}else if(dragX<this.__dragStartX){this.__moveDirectionX=-1;
}else{this.__moveDirectionX=0;
}var dragY=this.__mouseY+this.__frameScroll.top;

if(dragY>this.__dragStartY){this.__moveDirectionY=1;
}else if(dragY<this.__dragStartY){this.__moveDirectionY=-1;
}else{this.__moveDirectionY=0;
}var location=this.__frameLocation;

if(this.__mouseX<location.left){this.__scrollStepX=this.__mouseX-location.left;
}else if(this.__mouseX>location.right){this.__scrollStepX=this.__mouseX-location.right;
}else{this.__scrollStepX=0;
}
if(this.__mouseY<location.top){this.__scrollStepY=this.__mouseY-location.top;
}else if(this.__mouseY>location.bottom){this.__scrollStepY=this.__mouseY-location.bottom;
}else{this.__scrollStepY=0;
}if(!this.__scrollTimer){this.__scrollTimer=new qx.event.Timer(100);
this.__scrollTimer.addListener("interval",this._onInterval,this);
}this.__scrollTimer.start();
this._autoSelect();
event.stopPropagation();
},handleAddItem:function(e){var item=e.getData();

if(this.getMode()==="one"&&this.isSelectionEmpty()){this.addItem(item);
}},handleRemoveItem:function(e){this.removeItem(e.getData());
},_cleanup:function(){if(!this.getDrag()&&this.__inCapture){return;
}if(this.__selectionModified){this._fireChange("click");
}delete this.__inCapture;
delete this.__lastRelX;
delete this.__lastRelY;
this._releaseCapture();
if(this.__scrollTimer){this.__scrollTimer.stop();
}},_onInterval:function(e){this._scrollBy(this.__scrollStepX,this.__scrollStepY);
this.__frameScroll=this._getScroll();
this._autoSelect();
},_autoSelect:function(){var inner=this._getDimension();
var relX=Math.max(0,Math.min(this.__mouseX-this.__frameLocation.left,inner.width))+this.__frameScroll.left;
var relY=Math.max(0,Math.min(this.__mouseY-this.__frameLocation.top,inner.height))+this.__frameScroll.top;
if(this.__lastRelX===relX&&this.__lastRelY===relY){return;
}this.__lastRelX=relX;
this.__lastRelY=relY;
var anchor=this._getAnchorItem();
var lead=anchor;
var moveX=this.__moveDirectionX;
var nextX,locationX;

while(moveX!==0){nextX=moveX>0?this._getRelatedSelectable(lead,"right"):this._getRelatedSelectable(lead,"left");
if(nextX!==null){locationX=this._getSelectableLocationX(nextX);
if((moveX>0&&locationX.left<=relX)||(moveX<0&&locationX.right>=relX)){lead=nextX;
continue;
}}break;
}var moveY=this.__moveDirectionY;
var nextY,locationY;

while(moveY!==0){nextY=moveY>0?this._getRelatedSelectable(lead,"under"):this._getRelatedSelectable(lead,"above");
if(nextY!==null){locationY=this._getSelectableLocationY(nextY);
if((moveY>0&&locationY.top<=relY)||(moveY<0&&locationY.bottom>=relY)){lead=nextY;
continue;
}}break;
}var mode=this.getMode();

if(mode==="multi"){this._selectItemRange(anchor,lead);
}else if(mode==="additive"){if(this.isItemSelected(anchor)){this._selectItemRange(anchor,lead,true);
}else{this._deselectItemRange(anchor,lead);
}this._setAnchorItem(lead);
}this._fireChange("drag");
},__navigationKeys:{Home:1,Down:1,Right:1,PageDown:1,End:1,Up:1,Left:1,PageUp:1},handleKeyPress:function(event){var current,next;
var key=event.getKeyIdentifier();
var mode=this.getMode();
var isCtrlPressed=event.isCtrlPressed()||(qx.bom.client.Platform.MAC&&event.isMetaPressed());
var isShiftPressed=event.isShiftPressed();
var consumed=false;

if(key==="A"&&isCtrlPressed){if(mode!=="single"&&mode!=="one"){this._selectAllItems();
consumed=true;
}}else if(key==="Escape"){if(mode!=="single"&&mode!=="one"){this._clearSelection();
consumed=true;
}}else if(key==="Space"){var lead=this.getLeadItem();

if(lead&&!isShiftPressed){if(isCtrlPressed||mode==="additive"){this._toggleInSelection(lead);
}else{this._setSelectedItem(lead);
}consumed=true;
}}else if(this.__navigationKeys[key]){consumed=true;

if(mode==="single"||mode=="one"){current=this._getSelectedItem();
}else{current=this.getLeadItem();
}
if(current!==null){switch(key){case "Home":next=this._getFirstSelectable();
break;
case "End":next=this._getLastSelectable();
break;
case "Up":next=this._getRelatedSelectable(current,"above");
break;
case "Down":next=this._getRelatedSelectable(current,"under");
break;
case "Left":next=this._getRelatedSelectable(current,"left");
break;
case "Right":next=this._getRelatedSelectable(current,"right");
break;
case "PageUp":next=this._getPage(current,true);
break;
case "PageDown":next=this._getPage(current,false);
break;
}}else{switch(key){case "Home":case "Down":case "Right":case "PageDown":next=this._getFirstSelectable();
break;
case "End":case "Up":case "Left":case "PageUp":next=this._getLastSelectable();
break;
}}if(next!==null){switch(mode){case "single":case "one":this._setSelectedItem(next);
break;
case "additive":this._setLeadItem(next);
break;
case "multi":if(isShiftPressed){var anchor=this._getAnchorItem();

if(anchor===null){this._setAnchorItem(anchor=this._getFirstSelectable());
}this._setLeadItem(next);
this._selectItemRange(anchor,next,isCtrlPressed);
}else{this._setAnchorItem(next);
this._setLeadItem(next);

if(!isCtrlPressed){this._setSelectedItem(next);
}}break;
}this._scrollItemIntoView(next);
}}
if(consumed){event.stop();
this._fireChange("key");
}},_selectAllItems:function(){var range=this.getSelectables();

for(var i=0,l=range.length;i<l;i++){this._addToSelection(range[i]);
}},_clearSelection:function(){var selection=this.__selection;

for(var hash in selection){this._removeFromSelection(selection[hash]);
}this.__selection={};
},_selectItemRange:function(item1,item2,extend){var range=this._getSelectableRange(item1,item2);
if(!extend){var selected=this.__selection;
var mapped=this.__rangeToMap(range);

for(var hash in selected){if(!mapped[hash]){this._removeFromSelection(selected[hash]);
}}}for(var i=0,l=range.length;i<l;i++){this._addToSelection(range[i]);
}},_deselectItemRange:function(item1,item2){var range=this._getSelectableRange(item1,item2);

for(var i=0,l=range.length;i<l;i++){this._removeFromSelection(range[i]);
}},__rangeToMap:function(range){var mapped={};
var item;

for(var i=0,l=range.length;i<l;i++){item=range[i];
mapped[this._selectableToHashCode(item)]=item;
}return mapped;
},_getSelectedItem:function(){for(var hash in this.__selection){return this.__selection[hash];
}return null;
},_setSelectedItem:function(item){if(this._isSelectable(item)){var current=this.__selection;
var hash=this._selectableToHashCode(item);

if(!current[hash]||qx.lang.Object.hasMinLength(current,2)){this._clearSelection();
this._addToSelection(item);
}}},_addToSelection:function(item){var hash=this._selectableToHashCode(item);

if(!this.__selection[hash]&&this._isSelectable(item)){this.__selection[hash]=item;
this._styleSelectable(item,"selected",true);
this.__selectionModified=true;
}},_toggleInSelection:function(item){var hash=this._selectableToHashCode(item);

if(!this.__selection[hash]){this.__selection[hash]=item;
this._styleSelectable(item,"selected",true);
}else{delete this.__selection[hash];
this._styleSelectable(item,"selected",false);
}this.__selectionModified=true;
},_removeFromSelection:function(item){var hash=this._selectableToHashCode(item);

if(this.__selection[hash]!=null){delete this.__selection[hash];
this._styleSelectable(item,"selected",false);
this.__selectionModified=true;
}},_replaceMultiSelection:function(items){var modified=false;
var selectable,hash;
var incoming={};

for(var i=0,l=items.length;i<l;i++){selectable=items[i];

if(this._isSelectable(selectable)){hash=this._selectableToHashCode(selectable);
incoming[hash]=selectable;
}}var last=selectable;
var current=this.__selection;

for(var hash in current){if(incoming[hash]){delete incoming[hash];
}else{selectable=current[hash];
delete current[hash];
this._styleSelectable(selectable,"selected",false);
modified=true;
}}for(var hash in incoming){selectable=current[hash]=incoming[hash];
this._styleSelectable(selectable,"selected",true);
modified=true;
}if(!modified){return false;
}this._scrollItemIntoView(last);
this._setLeadItem(null);
this._setAnchorItem(null);
this.__selectionModified=true;
this._fireChange();
},_fireChange:function(context){if(this.__selectionModified){this.__selectionContext=context||null;
this.fireDataEvent("changeSelection",this.getSelection());
delete this.__selectionModified;
}}},destruct:function(){this._disposeObjects("__scrollTimer");
this.__selection=this.__mouseDownOnSelected=this.__anchorItem=null;
this.__leadItem=null;
}});
qx.Class.define("qx.ui.virtual.selection.Abstract",{extend:qx.ui.core.selection.Abstract,construct:function(pane,selectionDelegate){this.base(arguments);
{this.assertInstance(pane,qx.ui.virtual.core.Pane);
};
this._pane=pane;
this._delegate=selectionDelegate||{};
},members:{_isSelectable:function(item){return this._delegate.isItemSelectable?this._delegate.isItemSelectable(item):true;
},_styleSelectable:function(item,type,enabled){if(this._delegate.styleSelectable){this._delegate.styleSelectable(item,type,enabled);
}},attachMouseEvents:function(){var paneElement=this._pane.getContainerElement();
paneElement.addListener("mousedown",this.handleMouseDown,this);
paneElement.addListener("mouseup",this.handleMouseUp,this);
paneElement.addListener("mouseover",this.handleMouseOver,this);
paneElement.addListener("mousemove",this.handleMouseMove,this);
paneElement.addListener("losecapture",this.handleLoseCapture,this);
},detatchMouseEvents:function(){var paneElement=this._pane.getContainerElement();
paneElement.removeListener("mousedown",this.handleMouseDown,this);
paneElement.removeListener("mouseup",this.handleMouseUp,this);
paneElement.removeListener("mouseover",this.handleMouseOver,this);
paneElement.removeListener("mousemove",this.handleMouseMove,this);
paneElement.removeListener("losecapture",this.handleLoseCapture,this);
},attachKeyEvents:function(target){target.addListener("keypress",this.handleKeyPress,this);
},detachKeyEvents:function(target){target.removeListener("keypress",this.handleKeyPress,this);
},attachListEvents:function(list){list.addListener("addItem",this.handleAddItem,this);
list.addListener("removeItem",this.handleRemoveItem,this);
},detachListEvents:function(list){list.removeListener("addItem",this.handleAddItem,this);
list.removeListener("removeItem",this.handleRemoveItem,this);
},_capture:function(){this._pane.capture();
},_releaseCapture:function(){this._pane.releaseCapture();
},_getScroll:function(){return {left:this._pane.getScrollX(),top:this._pane.getScrollY()};
},_scrollBy:function(xoff,yoff){this._pane.setScrollX(this._pane.getScrollX()+xoff);
this._pane.setScrollY(this._pane.getScrollY()+yoff);
},_getLocation:function(){var elem=this._pane.getContentElement().getDomElement();
return elem?qx.bom.element.Location.get(elem):null;
},_getDimension:function(){return this._pane.getInnerSize();
}},destruct:function(){this._pane=this._delegate=null;
}});
qx.Class.define("qx.ui.virtual.selection.Row",{extend:qx.ui.virtual.selection.Abstract,members:{_getItemCount:function(){return this._pane.getRowConfig().getItemCount();
},_getSelectableFromMouseEvent:function(event){var cell=this._pane.getCellAtPosition(event.getDocumentLeft(),event.getDocumentTop());

if(!cell){return null;
}return this._isSelectable(cell.row)?cell.row:null;
},getSelectables:function(){var selectables=[];

for(var i=0,l=this._getItemCount();i<l;i++){if(this._isSelectable(i)){selectables.push(i);
}}return selectables;
},_getSelectableRange:function(item1,item2){var selectables=[];
var min=Math.min(item1,item2);
var max=Math.max(item1,item2);

for(var i=min;i<=max;i++){if(this._isSelectable(i)){selectables.push(i);
}}return selectables;
},_getFirstSelectable:function(){var count=this._getItemCount();

for(var i=0;i<count;i++){if(this._isSelectable(i)){return i;
}}return null;
},_getLastSelectable:function(){var count=this._getItemCount();

for(var i=count-1;i>=0;i--){if(this._isSelectable(i)){return i;
}}return null;
},_getRelatedSelectable:function(item,relation){if(relation=="above"){var startIndex=item-1;
var endIndex=0;
var increment=-1;
}else if(relation=="under"){var startIndex=item+1;
var endIndex=this._getItemCount()-1;
var increment=1;
}else{return null;
}
for(var i=startIndex;i!==endIndex+increment;i+=increment){if(this._isSelectable(i)){return i;
}}return null;
},_getPage:function(lead,up){if(up){return this._getFirstSelectable();
}else{return this._getLastSelectable();
}},_selectableToHashCode:function(item){return item;
},_scrollItemIntoView:function(item){this._pane.scrollRowIntoView(item);
},_getSelectableLocationX:function(item){return {left:0,right:this._pane.getColumnConfig().getTotalSize()-1};
},_getSelectableLocationY:function(item){var rowConfig=this._pane.getRowConfig();
var itemTop=rowConfig.getItemPosition(item);
var itemBottom=itemTop+rowConfig.getItemSize(item)-1;
return {top:itemTop,bottom:itemBottom};
}}});
qx.Class.define("qx.ui.virtual.selection.Column",{extend:qx.ui.virtual.selection.Row,members:{_getItemCount:function(){return this._pane.getColumnConfig().getItemCount();
},_getSelectableFromMouseEvent:function(event){var cell=this._pane.getCellAtPosition(event.getDocumentLeft(),event.getDocumentTop());

if(!cell){return null;
}return this._isSelectable(cell.column)?cell.column:null;
},_getRelatedSelectable:function(item,relation){if(relation=="left"){var startIndex=item-1;
var endIndex=0;
var increment=-1;
}else if(relation=="right"){var startIndex=item+1;
var endIndex=this._getItemCount()-1;
var increment=1;
}else{return null;
}
for(var i=startIndex;i!==endIndex+increment;i+=increment){if(this._isSelectable(i)){return i;
}}return null;
},_scrollItemIntoView:function(item){this._pane.scrollColumnIntoView(item);
},_getSelectableLocationX:function(item){var columnConfig=this._pane.getColumnConfig();
var itemLeft=columnConfig.getItemPosition(item);
var itemRight=itemLeft+columnConfig.getItemSize(item)-1;
return {left:itemLeft,right:itemRight};
},_getSelectableLocationY:function(item){return {top:0,bottom:this._pane.getRowConfig().getTotalSize()-1};
}}});
qx.Class.define("qx.ui.virtual.core.Pane",{extend:qx.ui.core.Widget,construct:function(rowCount,columnCount,cellHeight,cellWidth){this.base(arguments);
this.__rowConfig=new qx.ui.virtual.core.Axis(cellHeight,rowCount);
this.__columnConfig=new qx.ui.virtual.core.Axis(cellWidth,columnCount);
this.__scrollTop=0;
this.__scrollLeft=0;
this.__paneHeight=0;
this.__paneWidth=0;
this.__layerWindow={};
this.__jobs={};
this.__layerContainer=new qx.ui.container.Composite();
this.__layerContainer.setUserBounds(0,0,0,0);
this._add(this.__layerContainer);
this.__layers=[];
this.__rowConfig.addListener("change",this.fullUpdate,this);
this.__columnConfig.addListener("change",this.fullUpdate,this);
this.addListener("resize",this._onResize,this);
this.addListenerOnce("appear",this._onAppear,this);
this.addListener("click",this._onClick,this);
this.addListener("dblclick",this._onDblclick,this);
this.addListener("contextmenu",this._onContextmenu,this);
},events:{cellClick:"qx.ui.virtual.core.CellEvent",cellContextmenu:"qx.ui.virtual.core.CellEvent",cellDblclick:"qx.ui.virtual.core.CellEvent",update:"qx.event.type.Event",scrollX:"qx.event.type.Data",scrollY:"qx.event.type.Data"},properties:{width:{refine:true,init:400},height:{refine:true,init:300}},members:{__rowConfig:null,__columnConfig:null,__scrollTop:null,__scrollLeft:null,__paneHeight:null,__paneWidth:null,__layerWindow:null,__jobs:null,__layerContainer:null,__layers:null,__dontFireUpdate:null,__columnSizes:null,__rowSizes:null,DEBUG:false,getRowConfig:function(){return this.__rowConfig;
},getColumnConfig:function(){return this.__columnConfig;
},getChildren:function(){return [this.__layerContainer];
},addLayer:function(layer){{this.assertInterface(layer,qx.ui.virtual.core.ILayer);
};
this.__layers.push(layer);
layer.setUserBounds(0,0,0,0);
this.__layerContainer.add(layer);
},getLayers:function(){return this.__layers;
},getVisibleLayers:function(){var layers=[];

for(var i=0;i<this.__layers.length;i++){var layer=this.__layers[i];

if(layer.isVisible()){layers.push(layer);
}}return layers;
},getScrollMaxX:function(){var paneSize=this.getBounds();

if(paneSize){return Math.max(0,this.__columnConfig.getTotalSize()-paneSize.width);
}return 0;
},getScrollMaxY:function(){var paneSize=this.getBounds();

if(paneSize){return Math.max(0,this.__rowConfig.getTotalSize()-paneSize.height);
}return 0;
},setScrollY:function(value){var max=this.getScrollMaxY();

if(value<0){value=0;
}else if(value>max){value=max;
}
if(this.__scrollTop!==value){var old=this.__scrollTop;
this.__scrollTop=value;
this._deferredUpdateScrollPosition();
this.fireDataEvent("scrollY",value,old);
}},getScrollY:function(){return this.__scrollTop;
},setScrollX:function(value){var max=this.getScrollMaxX();

if(value<0){value=0;
}else if(value>max){value=max;
}
if(value!==this.__scrollLeft){var old=this.__scrollLeft;
this.__scrollLeft=value;
this._deferredUpdateScrollPosition();
this.fireDataEvent("scrollX",value,old);
}},getScrollX:function(){return this.__scrollLeft;
},getScrollSize:function(){return {width:this.__columnConfig.getTotalSize(),height:this.__rowConfig.getTotalSize()};
},scrollRowIntoView:function(row){var bounds=this.getBounds();

if(!bounds){this.addListenerOnce("appear",function(){this.scrollRowIntoView(row);
},this);
return;
}var itemTop=this.__rowConfig.getItemPosition(row);
var itemBottom=itemTop+this.__rowConfig.getItemSize(row);
var scrollTop=this.getScrollY();

if(itemTop<scrollTop){this.setScrollY(itemTop);
}else if(itemBottom>scrollTop+bounds.height){this.setScrollY(itemBottom-bounds.height);
}},scrollColumnIntoView:function(column){var bounds=this.getBounds();

if(!bounds){this.addListenerOnce("appear",function(){this.scrollColumnIntoView(column);
},this);
return;
}var itemLeft=this.__columnConfig.getItemPosition(column);
var itemRight=itemLeft+this.__columnConfig.getItemSize(column);
var scrollLeft=this.getScrollX();

if(itemLeft<scrollLeft){this.setScrollX(itemLeft);
}else if(itemRight>scrollLeft+bounds.width){this.setScrollX(itemRight-bounds.width);
}},scrollCellIntoView:function(column,row){var bounds=this.getBounds();

if(!bounds){this.addListenerOnce("appear",function(){this.scrollCellIntoView(column,row);
},this);
return;
}this.scrollColumnIntoView(column);
this.scrollRowIntoView(row);
},getCellAtPosition:function(documentX,documentY){var rowData,columnData;
var paneLocation=this.getContentLocation();

if(!paneLocation||documentY<paneLocation.top||documentY>=paneLocation.bottom||documentX<paneLocation.left||documentX>=paneLocation.right){return null;
}rowData=this.__rowConfig.getItemAtPosition(this.getScrollY()+documentY-paneLocation.top);
columnData=this.__columnConfig.getItemAtPosition(this.getScrollX()+documentX-paneLocation.left);

if(!rowData||!columnData){return null;
}return {row:rowData.index,column:columnData.index};
},prefetchX:function(minLeft,maxLeft,minRight,maxRight){var layers=this.getVisibleLayers();

if(layers.length==0){return;
}var bounds=this.getBounds();

if(!bounds){return;
}var paneRight=this.__scrollLeft+bounds.width;
var rightAvailable=this.__paneWidth-paneRight;

if(this.__scrollLeft-this.__layerWindow.left<Math.min(this.__scrollLeft,minLeft)||this.__layerWindow.right-paneRight<Math.min(rightAvailable,minRight)){this.DEBUG&&console.log("prefetch x");
var left=Math.min(this.__scrollLeft,maxLeft);
var right=Math.min(rightAvailable,maxRight);
this._setLayerWindow(layers,this.__scrollLeft-left,this.__scrollTop,bounds.width+left+right,bounds.height,false);
}},prefetchY:function(minAbove,maxAbove,minBelow,maxBelow){var layers=this.getVisibleLayers();

if(layers.length==0){return;
}var bounds=this.getBounds();

if(!bounds){return;
}var paneBottom=this.__scrollTop+bounds.height;
var belowAvailable=this.__paneHeight-paneBottom;

if(this.__scrollTop-this.__layerWindow.top<Math.min(this.__scrollTop,minAbove)||this.__layerWindow.bottom-paneBottom<Math.min(belowAvailable,minBelow)){this.DEBUG&&console.log("prefetch y");
var above=Math.min(this.__scrollTop,maxAbove);
var below=Math.min(belowAvailable,maxBelow);
this._setLayerWindow(layers,this.__scrollLeft,this.__scrollTop-above,bounds.width,bounds.height+above+below,false);
}},_onResize:function(){if(this.getContainerElement().getDomElement()){this.__dontFireUpdate=true;
this._updateScrollPosition();
this.__dontFireUpdate=null;
this.fireEvent("update");
}},_onAppear:function(){this.fullUpdate();
},_onClick:function(e){this.__handleMouseCellEvent(e,"cellClick");
},_onContextmenu:function(e){this.__handleMouseCellEvent(e,"cellContextmenu");
},_onDblclick:function(e){this.__handleMouseCellEvent(e,"cellDblclick");
},__handleMouseCellEvent:function(e,cellEventType){var coords=this.getCellAtPosition(e.getDocumentLeft(),e.getDocumentTop());

if(!coords){return;
}this.fireNonBubblingEvent(cellEventType,qx.ui.virtual.core.CellEvent,[this,e,coords.row,coords.column]);
},syncWidget:function(){if(this.__jobs._fullUpdate){this._fullUpdate();
}else if(this.__jobs._updateScrollPosition){this._updateScrollPosition();
}this.__jobs={};
},_setLayerWindow:function(layers,left,top,minWidth,minHeight,doFullUpdate){var rowCellData=this.__rowConfig.getItemAtPosition(top);

if(rowCellData){var firstRow=rowCellData.index;
var rowSizes=this.__rowConfig.getItemSizes(firstRow,minHeight+rowCellData.offset);
var layerHeight=qx.lang.Array.sum(rowSizes);
var layerTop=top-rowCellData.offset;
var layerBottom=top-rowCellData.offset+layerHeight;
}else{var firstRow=0;
var rowSizes=[];
var layerHeight=0;
var layerTop=0;
var layerBottom=0;
}var columnCellData=this.__columnConfig.getItemAtPosition(left);

if(columnCellData){var firstColumn=columnCellData.index;
var columnSizes=this.__columnConfig.getItemSizes(firstColumn,minWidth+columnCellData.offset);
var layerWidth=qx.lang.Array.sum(columnSizes);
var layerLeft=left-columnCellData.offset;
var layerRight=left-columnCellData.offset+layerWidth;
}else{var firstColumn=0;
var columnSizes=[];
var layerWidth=0;
var layerLeft=0;
var layerRight=0;
}this.__layerWindow={top:layerTop,bottom:layerBottom,left:layerLeft,right:layerRight};
this.__layerContainer.setUserBounds(this.__layerWindow.left-this.__scrollLeft,this.__layerWindow.top-this.__scrollTop,layerWidth,layerHeight);
this.__columnSizes=columnSizes;
this.__rowSizes=rowSizes;
this.DEBUG&&qx.ui.core.queue.Manager.flush();

for(var i=0;i<this.__layers.length;i++){var start=new Date();
var layer=this.__layers[i];
layer.setUserBounds(0,0,layerWidth,layerHeight);

if(doFullUpdate){layer.fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
}else{layer.updateLayerWindow(firstRow,firstColumn,rowSizes,columnSizes);
}if(this.DEBUG){this.debug("layer update ("+layer.classname+"): "+(new Date()-start)+"ms");
var start=new Date();
qx.ui.core.queue.Manager.flush();
this.debug("layer flush ("+layer.classname+"): "+(new Date()-start)+"ms");
}}},__checkPaneResize:function(){if(this.__dontFireUpdate){return;
}var scrollSize=this.getScrollSize();

if(this.__paneHeight!==scrollSize.height||this.__paneWidth!==scrollSize.width){this.__paneHeight=scrollSize.height;
this.__paneWidth=scrollSize.width;
this.fireEvent("update");
}},fullUpdate:function(){this.__jobs._fullUpdate=1;
qx.ui.core.queue.Widget.add(this);
},isUpdatePending:function(){return !!this.__jobs._fullUpdate;
},_fullUpdate:function(){var layers=this.getVisibleLayers();

if(layers.length==0){this.__checkPaneResize();
return;
}
if(!this.getContainerElement().getDomElement()){return ;
}var bounds=this.getBounds();
this.DEBUG&&console.log("full update");
this._setLayerWindow(layers,this.__scrollLeft,this.__scrollTop,bounds.width,bounds.height,true);
this.__checkPaneResize();
},_deferredUpdateScrollPosition:function(){this.__jobs._updateScrollPosition=1;
qx.ui.core.queue.Widget.add(this);
},_updateScrollPosition:function(){var layers=this.getVisibleLayers();

if(layers.length==0){this.__checkPaneResize();
return;
}var bounds=this.getBounds();

if(!bounds){return ;
}var paneWindow={top:this.__scrollTop,bottom:this.__scrollTop+bounds.height,left:this.__scrollLeft,right:this.__scrollLeft+bounds.width};

if(this.__layerWindow.top<=paneWindow.top&&this.__layerWindow.bottom>=paneWindow.bottom&&this.__layerWindow.left<=paneWindow.left&&this.__layerWindow.right>=paneWindow.right){this.DEBUG&&console.log("scroll");
this.__layerContainer.setUserBounds(this.__layerWindow.left-paneWindow.left,this.__layerWindow.top-paneWindow.top,this.__layerWindow.right-this.__layerWindow.left,this.__layerWindow.bottom-this.__layerWindow.top);
}else{this.DEBUG&&console.log("update layer window");
this._setLayerWindow(layers,this.__scrollLeft,this.__scrollTop,bounds.width,bounds.height,false);
}this.__checkPaneResize();
}},destruct:function(){this._disposeArray("__layers");
this._disposeObjects("__rowConfig","__columnConfig","__layerContainer");
this.__layerWindow=this.__jobs=this.__columnSizes=this.__rowSizes=null;
}});
qx.Class.define("qx.ui.virtual.core.CellEvent",{extend:qx.event.type.Mouse,properties:{row:{check:"Integer",nullable:true},column:{check:"Integer",nullable:true}},members:{init:function(scroller,me,row,column){me.clone(this);
this.setBubbles(false);
this.setRow(row);
this.setColumn(column);
}}});
qx.Interface.define("qx.ui.form.IBooleanForm",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){return arguments.length==1;
},resetValue:function(){},getValue:function(){}}});
qx.Class.define("qx.ui.form.ToggleButton",{extend:qx.ui.basic.Atom,include:[qx.ui.core.MExecutable],implement:[qx.ui.form.IBooleanForm,qx.ui.form.IExecutable],construct:function(label,icon){this.base(arguments,label,icon);
this.addListener("mouseover",this._onMouseOver);
this.addListener("mouseout",this._onMouseOut);
this.addListener("mousedown",this._onMouseDown);
this.addListener("mouseup",this._onMouseUp);
this.addListener("keydown",this._onKeyDown);
this.addListener("keyup",this._onKeyUp);
this.addListener("execute",this._onExecute,this);
},properties:{appearance:{refine:true,init:"button"},focusable:{refine:true,init:true},value:{check:"Boolean",nullable:true,event:"changeValue",apply:"_applyValue",init:false}},members:{_applyValue:function(value,old){value?this.addState("checked"):this.removeState("checked");
},_onExecute:function(e){this.toggleValue();
},_onMouseOver:function(e){if(e.getTarget()!==this){return;
}this.addState("hovered");

if(this.hasState("abandoned")){this.removeState("abandoned");
this.addState("pressed");
}},_onMouseOut:function(e){if(e.getTarget()!==this){return;
}this.removeState("hovered");

if(this.hasState("pressed")){if(!this.getValue()){this.removeState("pressed");
}this.addState("abandoned");
}},_onMouseDown:function(e){if(!e.isLeftPressed()){return;
}this.capture();
this.removeState("abandoned");
this.addState("pressed");
e.stopPropagation();
},_onMouseUp:function(e){this.releaseCapture();

if(this.hasState("abandoned")){this.removeState("abandoned");
}else if(this.hasState("pressed")){this.execute();
}this.removeState("pressed");
e.stopPropagation();
},_onKeyDown:function(e){switch(e.getKeyIdentifier()){case "Enter":case "Space":this.removeState("abandoned");
this.addState("pressed");
e.stopPropagation();
}},_onKeyUp:function(e){if(!this.hasState("pressed")){return;
}
switch(e.getKeyIdentifier()){case "Enter":case "Space":this.removeState("abandoned");
this.execute();
this.removeState("pressed");
e.stopPropagation();
}}}});
qx.Class.define("qx.ui.decoration.Abstract",{extend:qx.core.Object,implement:[qx.ui.decoration.IDecorator],type:"abstract",properties:{insetLeft:{check:"Number",nullable:true,apply:"_applyInsets"},insetRight:{check:"Number",nullable:true,apply:"_applyInsets"},insetBottom:{check:"Number",nullable:true,apply:"_applyInsets"},insetTop:{check:"Number",nullable:true,apply:"_applyInsets"},insets:{group:["insetTop","insetRight","insetBottom","insetLeft"],mode:"shorthand"}},members:{__insets:null,_getDefaultInsets:function(){throw new Error("Abstract method called.");
},_isInitialized:function(){throw new Error("Abstract method called.");
},_resetInsets:function(){this.__insets=null;
},getInsets:function(){if(this.__insets){return this.__insets;
}var defaults=this._getDefaultInsets();
return this.__insets={left:this.getInsetLeft()==null?defaults.left:this.getInsetLeft(),right:this.getInsetRight()==null?defaults.right:this.getInsetRight(),bottom:this.getInsetBottom()==null?defaults.bottom:this.getInsetBottom(),top:this.getInsetTop()==null?defaults.top:this.getInsetTop()};
},_applyInsets:function(){{if(this._isInitialized()){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
this.__insets=null;
}},destruct:function(){this.__insets=null;
}});
qx.Class.define("qx.ui.decoration.css3.BorderImage",{extend:qx.ui.decoration.Abstract,construct:function(borderImage,slice){this.base(arguments);
if(borderImage!=null){this.setBorderImage(borderImage);
}
if(slice!=null){this.setSlice(slice);
}},statics:{IS_SUPPORTED:qx.bom.element.Style.isPropertySupported("borderImage")},properties:{borderImage:{check:"String",nullable:true,apply:"_applyStyle"},sliceTop:{check:"Integer",init:0,apply:"_applyStyle"},sliceRight:{check:"Integer",init:0,apply:"_applyStyle"},sliceBottom:{check:"Integer",init:0,apply:"_applyStyle"},sliceLeft:{check:"Integer",init:0,apply:"_applyStyle"},slice:{group:["sliceTop","sliceRight","sliceBottom","sliceLeft"],mode:"shorthand"},repeatX:{check:["stretch","repeat","round"],init:"stretch",apply:"_applyStyle"},repeatY:{check:["stretch","repeat","round"],init:"stretch",apply:"_applyStyle"},repeat:{group:["repeatX","repeatY"],mode:"shorthand"}},members:{__markup:null,_getDefaultInsets:function(){return {top:0,right:0,bottom:0,left:0};
},_isInitialized:function(){return !!this.__markup;
},getMarkup:function(){if(this.__markup){return this.__markup;
}var source=this._resolveImageUrl(this.getBorderImage());
var slice=[this.getSliceTop(),this.getSliceRight(),this.getSliceBottom(),this.getSliceLeft()];
var repeat=[this.getRepeatX(),this.getRepeatY()].join(" ");
this.__markup=["<div style='",qx.bom.element.Style.compile({"borderImage":'url("'+source+'") '+slice.join(" ")+" "+repeat,position:"absolute",lineHeight:0,fontSize:0,overflow:"hidden",boxSizing:"border-box",borderWidth:slice.join("px ")+"px"}),";'></div>"].join("");
return this.__markup;
},resize:function(element,width,height){element.style.width=width+"px";
element.style.height=height+"px";
},tint:function(element,bgcolor){},_applyStyle:function(){{if(this._isInitialized()){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
},_resolveImageUrl:function(image){return qx.util.ResourceManager.getInstance().toUri(qx.util.AliasManager.getInstance().resolve(image));
}},destruct:function(){this.__markup=null;
}});
qx.Interface.define("qx.ui.form.IColorForm",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){return arguments.length==1;
},resetValue:function(){},getValue:function(){}}});
qx.Class.define("qx.ui.control.ColorSelector",{extend:qx.ui.core.Widget,implement:[qx.ui.form.IColorForm],construct:function(){this.base(arguments);
this._setLayout(new qx.ui.layout.VBox());
this._createChildControl("control-bar");
this.addListener("appear",this._onAppear,this);
},events:{"dialogok":"qx.event.type.Event","dialogcancel":"qx.event.type.Event","changeValue":"qx.event.type.Data"},properties:{appearance:{refine:true,init:"colorselector"},red:{check:"Integer",init:255,apply:"_applyRed"},green:{check:"Integer",init:255,apply:"_applyGreen"},blue:{check:"Integer",init:255,apply:"_applyBlue"},hue:{check:"Number",init:0,apply:"_applyHue"},saturation:{check:"Number",init:0,apply:"_applySaturation"},brightness:{check:"Number",init:100,apply:"_applyBrightness"}},members:{__updateContext:null,__presetTable:["maroon","red","orange","yellow","olive","purple","fuchsia","lime","green","navy","blue","aqua","teal","black","#333","#666","#999","#BBB","#EEE","white"],__capture:"",__brightnessSubtract:0,__hueSaturationSubtractTop:0,__hueSaturationSubtractLeft:0,__nullValue:true,__preventChangeValueEvent:false,_createChildControlImpl:function(id){var control;

switch(id){case "control-bar":control=new qx.ui.container.Composite(new qx.ui.layout.HBox(10));
control.add(this.getChildControl("control-pane"));
control.add(this.getChildControl("visual-pane"));
this._add(control);
break;
case "visual-pane":control=new qx.ui.groupbox.GroupBox(this.tr("Visual"));
control.setLayout(new qx.ui.layout.HBox(10));
control.add(this.getChildControl("hue-saturation-pane"));
control.add(this.getChildControl("brightness-pane"));
break;
case "control-pane":control=new qx.ui.container.Composite(new qx.ui.layout.VBox(12));
control.add(this.getChildControl("preset-field-set"));
control.add(this.getChildControl("input-field-set"));
control.add(this.getChildControl("preview-field-set"),{flex:1});
break;
case "hue-saturation-pane":control=new qx.ui.container.Composite(new qx.ui.layout.Canvas());
control.setAllowGrowY(false);
control.addListener("mousewheel",this._onHueSaturationPaneMouseWheel,this);
control.add(this.getChildControl("hue-saturation-field"));
control.add(this.getChildControl("hue-saturation-handle"),{left:0,top:256});
break;
case "hue-saturation-field":control=new qx.ui.basic.Image("decoration/colorselector/huesaturation-field.jpg");
control.addListener("mousedown",this._onHueSaturationFieldMouseDown,this);
break;
case "hue-saturation-handle":control=new qx.ui.basic.Image("decoration/colorselector/huesaturation-handle.gif");
control.addListener("mousedown",this._onHueSaturationFieldMouseDown,this);
control.addListener("mouseup",this._onHueSaturationHandleMouseUp,this);
control.addListener("mousemove",this._onHueSaturationHandleMouseMove,this);
break;
case "brightness-pane":control=new qx.ui.container.Composite(new qx.ui.layout.Canvas());
control.setAllowGrowY(false);
control.addListener("mousewheel",this._onBrightnessPaneMouseWheel,this);
control.add(this.getChildControl("brightness-field"));
control.add(this.getChildControl("brightness-handle"));
break;
case "brightness-field":control=new qx.ui.basic.Image("decoration/colorselector/brightness-field.png");
control.addListener("mousedown",this._onBrightnessFieldMouseDown,this);
break;
case "brightness-handle":control=new qx.ui.basic.Image("decoration/colorselector/brightness-handle.gif");
control.addListener("mousedown",this._onBrightnessHandleMouseDown,this);
control.addListener("mouseup",this._onBrightnessHandleMouseUp,this);
control.addListener("mousemove",this._onBrightnessHandleMouseMove,this);
break;
case "preset-field-set":control=new qx.ui.groupbox.GroupBox(this.tr("Presets"));
control.setLayout(new qx.ui.layout.Grow());
control.add(this.getChildControl("preset-grid"));
break;
case "colorbucket":control=new qx.ui.core.Widget();
control.addListener("mousedown",this._onColorFieldClick,this);
break;
case "preset-grid":controlLayout=new qx.ui.layout.Grid(3,3);
control=new qx.ui.container.Composite(controlLayout);
var colorField;
var colorPos;

for(var i=0;i<2;i++){for(var j=0;j<10;j++){colorPos=i*10+j;
colorField=this.getChildControl("colorbucket#"+colorPos);
colorField.setBackgroundColor(this.__presetTable[colorPos]);
control.add(colorField,{column:j,row:i});
}}break;
case "input-field-set":control=new qx.ui.groupbox.GroupBox(this.tr("Details"));
var controlLayout=new qx.ui.layout.VBox();
controlLayout.setSpacing(10);
control.setLayout(controlLayout);
control.add(this.getChildControl("hex-field-composite"));
control.add(this.getChildControl("rgb-spinner-composite"));
control.add(this.getChildControl("hsb-spinner-composite"));
break;
case "preview-field-set":control=new qx.ui.groupbox.GroupBox(this.tr("Preview (Old/New)"));
var controlLayout=new qx.ui.layout.HBox(10);
control.setLayout(controlLayout);
control.add(this.getChildControl("preview-content-old"),{flex:1});
control.add(this.getChildControl("preview-content-new"),{flex:1});
break;
case "hex-field-composite":var layout=new qx.ui.layout.HBox(4);
layout.setAlignY("middle");
control=new qx.ui.container.Composite(layout);
var hexLabel=new qx.ui.basic.Label(this.tr("Hex"));
control.add(hexLabel);
var hexHelper=new qx.ui.basic.Label("#");
control.add(hexHelper);
control.add(this.getChildControl("hex-field"));
break;
case "hex-field":control=new qx.ui.form.TextField("FFFFFF");
control.setMaxLength(6);
control.setFilter(/[0-9A-Fa-f]/);
control.setWidth(55);
control.addListener("changeValue",this._onHexFieldChange,this);
break;
case "rgb-spinner-composite":var layout=new qx.ui.layout.HBox(4);
layout.setAlignY("middle");
control=new qx.ui.container.Composite(layout);
var rgbSpinLabel=new qx.ui.basic.Label(this.tr("RGB"));
rgbSpinLabel.setWidth(25);
control.add(rgbSpinLabel);
control.add(this.getChildControl("rgb-spinner-red"));
control.add(this.getChildControl("rgb-spinner-green"));
control.add(this.getChildControl("rgb-spinner-blue"));
break;
case "rgb-spinner-red":control=new qx.ui.form.Spinner(0,255,255);
control.setWidth(50);
control.addListener("changeValue",this._setRedFromSpinner,this);
break;
case "rgb-spinner-green":control=new qx.ui.form.Spinner(0,255,255);
control.setWidth(50);
control.addListener("changeValue",this._setGreenFromSpinner,this);
break;
case "rgb-spinner-blue":control=new qx.ui.form.Spinner(0,255,255);
control.setWidth(50);
control.addListener("changeValue",this._setBlueFromSpinner,this);
break;
case "hsb-spinner-composite":var layout=new qx.ui.layout.HBox(4);
layout.setAlignY("middle");
control=new qx.ui.container.Composite(layout);
var hsbSpinLabel=new qx.ui.basic.Label(this.tr("HSB"));
hsbSpinLabel.setWidth(25);
control.add(hsbSpinLabel);
control.add(this.getChildControl("hsb-spinner-hue"));
control.add(this.getChildControl("hsb-spinner-saturation"));
control.add(this.getChildControl("hsb-spinner-brightness"));
break;
case "hsb-spinner-hue":control=new qx.ui.form.Spinner(0,0,360);
control.setWidth(50);
control.addListener("changeValue",this._setHueFromSpinner,this);
break;
case "hsb-spinner-saturation":control=new qx.ui.form.Spinner(0,0,100);
control.setWidth(50);
control.addListener("changeValue",this._setSaturationFromSpinner,this);
break;
case "hsb-spinner-brightness":control=new qx.ui.form.Spinner(0,100,100);
control.setWidth(50);
control.addListener("changeValue",this._setBrightnessFromSpinner,this);
break;
case "preview-content-old":control=new qx.ui.core.Widget();
break;
case "preview-content-new":control=new qx.ui.core.Widget();
break;
}return control||this.base(arguments,id);
},setValue:function(value){var rgb;

if(value==null){this.__nullValue=true;
rgb=[255,255,255];
}else{rgb=qx.util.ColorUtil.stringToRgb(value);
this.__nullValue=false;
}this.__preventChangeValueEvent=true;
this.setRed(rgb[0]);
this.setGreen(rgb[1]);
this.__preventChangeValueEvent=false;
this.setBlue(rgb[2]);
},getValue:function(){return this.__nullValue?null:"#"+qx.util.ColorUtil.rgbToHexString([this.getRed(),this.getGreen(),this.getBlue()]);
},resetValue:function(){this.__nullValue=true;
this.__preventChangeValueEvent=true;
this.setRed(255);
this.setGreen(255);
this.__preventChangeValueEvent=false;
this.setBlue(255);
},__fireChangeValueEvent:function(){if(!this.__preventChangeValueEvent){this.__nullValue=false;
this.fireDataEvent("changeValue",this.getValue());
}},_applyRed:function(value,old){if(this.__updateContext===null){this.__updateContext="redModifier";
}
if(this.__updateContext!=="rgbSpinner"){this.getChildControl("rgb-spinner-red").setValue(value);
}
if(this.__updateContext!=="hexField"){this._setHexFromRgb();
}
switch(this.__updateContext){case "rgbSpinner":case "hexField":case "redModifier":this._setHueFromRgb();
}this._setPreviewFromRgb();
this.__fireChangeValueEvent();

if(this.__updateContext==="redModifier"){this.__updateContext=null;
}},_applyGreen:function(value,old){if(this.__updateContext===null){this.__updateContext="greenModifier";
}
if(this.__updateContext!=="rgbSpinner"){this.getChildControl("rgb-spinner-green").setValue(value);
}
if(this.__updateContext!=="hexField"){this._setHexFromRgb();
}
switch(this.__updateContext){case "rgbSpinner":case "hexField":case "greenModifier":this._setHueFromRgb();
}this._setPreviewFromRgb();
this.__fireChangeValueEvent();

if(this.__updateContext==="greenModifier"){this.__updateContext=null;
}},_applyBlue:function(value,old){if(this.__updateContext===null){this.__updateContext="blueModifier";
}
if(this.__updateContext!=="rgbSpinner"){this.getChildControl("rgb-spinner-blue").setValue(value);
}
if(this.__updateContext!=="hexField"){this._setHexFromRgb();
}
switch(this.__updateContext){case "rgbSpinner":case "hexField":case "blueModifier":this._setHueFromRgb();
}this._setPreviewFromRgb();
this.__fireChangeValueEvent();

if(this.__updateContext==="blueModifier"){this.__updateContext=null;
}},_applyHue:function(value,old){if(this.__updateContext===null){this.__updateContext="hueModifier";
}
if(this.__updateContext!=="hsbSpinner"){this.getChildControl("hsb-spinner-hue").setValue(value);
}
if(this.__updateContext!=="hueSaturationField"){if(this.getChildControl("hue-saturation-handle").getBounds()){this.getChildControl("hue-saturation-handle").setDomLeft(Math.round(value/1.40625)+this.getChildControl("hue-saturation-pane").getPaddingLeft());
}else{this.getChildControl("hue-saturation-handle").setLayoutProperties({left:Math.round(value/1.40625)});
}}
switch(this.__updateContext){case "hsbSpinner":case "hueSaturationField":case "hueModifier":this._setRgbFromHue();
}this._setBrightnessGradiant();

if(this.__updateContext==="hueModifier"){this.__updateContext=null;
}},_applySaturation:function(value,old){if(this.__updateContext===null){this.__updateContext="saturationModifier";
}
if(this.__updateContext!=="hsbSpinner"){this.getChildControl("hsb-spinner-saturation").setValue(value);
}
if(this.__updateContext!=="hueSaturationField"){this._setBrightnessGradiant();

if(this.getChildControl("hue-saturation-handle").getBounds()){this.getChildControl("hue-saturation-handle").setDomTop(256-Math.round(value*2.56)+this.getChildControl("hue-saturation-pane").getPaddingTop());
}else{this.getChildControl("hue-saturation-handle").setLayoutProperties({top:256-Math.round(value*2.56)});
}}
switch(this.__updateContext){case "hsbSpinner":case "hueSaturationField":case "saturationModifier":this._setRgbFromHue();
}
if(this.__updateContext==="saturationModifier"){this.__updateContext=null;
}},_applyBrightness:function(value,old){if(this.__updateContext===null){this.__updateContext="brightnessModifier";
}
if(this.__updateContext!=="hsbSpinner"){this.getChildControl("hsb-spinner-brightness").setValue(value);
}
if(this.__updateContext!=="brightnessField"){var topValue=256-Math.round(value*2.56);

if(this.getChildControl("brightness-handle").getBounds()){this.getChildControl("brightness-handle").setDomTop(topValue+this.getChildControl("brightness-pane").getPaddingTop());
}else{this.getChildControl("brightness-handle").setLayoutProperties({top:topValue});
}}
switch(this.__updateContext){case "hsbSpinner":case "brightnessField":case "brightnessModifier":this._setRgbFromHue();
}
if(this.__updateContext==="brightnessModifier"){this.__updateContext=null;
}},_onBrightnessHandleMouseDown:function(e){this.getChildControl("brightness-handle").capture();
this.__capture="brightness-handle";
var locationBrightnessField=this.getChildControl("brightness-field").getContainerLocation();
var locationBrightnessHandle=this.getChildControl("brightness-handle").getContainerLocation();
var fieldBounds=this.getChildControl("brightness-field").getBounds();
this.__brightnessSubtract=locationBrightnessField.top+(e.getDocumentTop()-locationBrightnessHandle.top)-fieldBounds.top;
e.stopPropagation();
},_onBrightnessHandleMouseUp:function(e){this.getChildControl("brightness-handle").releaseCapture();
this.__capture=null;
},_onBrightnessHandleMouseMove:function(e){if(this.__capture==="brightness-handle"){this._setBrightnessOnFieldEvent(e);
e.stopPropagation();
}},_onBrightnessFieldMouseDown:function(e){var location=this.getChildControl("brightness-field").getContainerLocation();
var bounds=this.getChildControl("brightness-handle").getBounds();
this.__brightnessSubtract=location.top+(bounds.height/2);
this._setBrightnessOnFieldEvent(e);
this.getChildControl("brightness-handle").capture();
this.__capture="brightness-handle";
},_onBrightnessPaneMouseWheel:function(e){this.setBrightness(qx.lang.Number.limit(this.getBrightness()+e.getWheelDelta(),0,100));
e.stop();
},_setBrightnessOnFieldEvent:function(e){var value=qx.lang.Number.limit(e.getDocumentTop()-this.__brightnessSubtract,0,256);
this.__updateContext="brightnessField";

if(this.getChildControl("brightness-handle").getBounds()){this.getChildControl("brightness-handle").setDomTop(value);
}else{this.getChildControl("brightness-handle").setLayoutProperties({top:value});
}this.setBrightness(100-Math.round(value/2.56));
this.__updateContext=null;
},_onHueSaturationHandleMouseUp:function(e){if(this.__capture){e.stopPropagation();
this.getChildControl("hue-saturation-handle").releaseCapture();
this.__capture=null;
}},_onHueSaturationHandleMouseMove:function(e){if(this.__capture==="hue-saturation-handle"){this._setHueSaturationOnFieldEvent(e);
e.stopPropagation();
}},_onHueSaturationFieldMouseDown:function(e){var location=this.getChildControl("hue-saturation-field").getContainerLocation();
var handleBounds=this.getChildControl("hue-saturation-handle").getBounds();
var fieldBounds=this.getChildControl("hue-saturation-field").getBounds();
this.__hueSaturationSubtractTop=location.top+(handleBounds.height/2)-fieldBounds.top;
this.__hueSaturationSubtractLeft=location.left+(handleBounds.width/2)-fieldBounds.left;
this._setHueSaturationOnFieldEvent(e);
this.getChildControl("hue-saturation-handle").capture();
this.__capture="hue-saturation-handle";
},_onHueSaturationPaneMouseWheel:function(e){this.setSaturation(qx.lang.Number.limit(this.getSaturation()+e.getWheelDelta(),0,100));
e.stop();
},_setHueSaturationOnFieldEvent:function(e){var vTop=qx.lang.Number.limit(e.getDocumentTop()-this.__hueSaturationSubtractTop,0,256);
var vLeft=qx.lang.Number.limit(e.getDocumentLeft()-this.__hueSaturationSubtractLeft,0,256);
this.getChildControl("hue-saturation-handle").setDomPosition(vLeft,vTop);
this.__updateContext="hueSaturationField";
this.setSaturation(100-Math.round(vTop/2.56));
this.setHue(Math.round(vLeft*1.40625));
this.__updateContext=null;
},_setRedFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="rgbSpinner";
this.setRed(this.getChildControl("rgb-spinner-red").getValue());
this.__updateContext=null;
},_setGreenFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="rgbSpinner";
this.setGreen(this.getChildControl("rgb-spinner-green").getValue());
this.__updateContext=null;
},_setBlueFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="rgbSpinner";
this.setBlue(this.getChildControl("rgb-spinner-blue").getValue());
this.__updateContext=null;
},_setHueFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="hsbSpinner";
this.setHue(this.getChildControl("hsb-spinner-hue").getValue());
this.__updateContext=null;
},_setSaturationFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="hsbSpinner";
this.setSaturation(this.getChildControl("hsb-spinner-saturation").getValue());
this.__updateContext=null;
},_setBrightnessFromSpinner:function(){if(this.__updateContext!==null){return;
}this.__updateContext="hsbSpinner";
this.setBrightness(this.getChildControl("hsb-spinner-brightness").getValue());
this.__updateContext=null;
},_onHexFieldChange:function(e){if(this.__updateContext!==null){return;
}
try{var hexField=this.getChildControl("hex-field");
var rgb=qx.util.ColorUtil.hexStringToRgb("#"+hexField.getValue());
}catch(ex){return;
}this.__updateContext="hexField";
this.setRed(rgb[0]);
this.setGreen(rgb[1]);
this.setBlue(rgb[2]);
this.__updateContext=null;
},_setHexFromRgb:function(){var value=qx.util.ColorUtil.rgbToHexString([this.getRed(),this.getGreen(),this.getBlue()]);
this.getChildControl("hex-field").setValue(value);
},_onColorFieldClick:function(e){var vColor=e.getTarget().getBackgroundColor();

if(!vColor){return this.error("Missing backgroundColor value for field: "+e.getTarget());
}var rgb=qx.util.ColorUtil.stringToRgb(vColor);
this.setRed(rgb[0]);
this.setGreen(rgb[1]);
this.setBlue(rgb[2]);
},_setHueFromRgb:function(){switch(this.__updateContext){case "hsbSpinner":case "hueSaturationField":case "brightnessField":break;
default:var hsb=qx.util.ColorUtil.rgbToHsb([this.getRed(),this.getGreen(),this.getBlue()]);
this.setHue(hsb[0]);
this.setSaturation(hsb[1]);
this.setBrightness(hsb[2]);
}},_setRgbFromHue:function(){switch(this.__updateContext){case "rgbSpinner":case "hexField":break;
default:var vRgb=qx.util.ColorUtil.hsbToRgb([this.getHue(),this.getSaturation(),this.getBrightness()]);
this.setRed(vRgb[0]);
this.setGreen(vRgb[1]);
this.setBlue(vRgb[2]);
}},_setPreviewFromRgb:function(){var rgbString=qx.util.ColorUtil.rgbToRgbString([this.getRed(),this.getGreen(),this.getBlue()]);
this.getChildControl("preview-content-new").setBackgroundColor(rgbString);
},setPreviousColor:function(red,green,blue){var color=qx.util.ColorUtil.rgbToRgbString([red,green,blue]);
this.getChildControl("preview-content-old").setBackgroundColor(color);
this.setRed(red);
this.setGreen(green);
this.setBlue(blue);
},_setBrightnessGradiant:function(){var ColorUtil=qx.util.ColorUtil;
var helpRgb=ColorUtil.hsbToRgb([this.getHue(),this.getSaturation(),255]);
var helpRgbString=ColorUtil.rgbToRgbString(helpRgb);
this.getChildControl("brightness-field").setBackgroundColor(helpRgbString);
},_onAppear:function(e){var color=qx.util.ColorUtil.rgbToRgbString([this.getRed(),this.getGreen(),this.getBlue()]);
this.getChildControl("preview-content-old").setBackgroundColor(color);
this.getChildControl("preview-content-new").setBackgroundColor(color);
}}});
qx.Mixin.define("qx.ui.core.MContentPadding",{properties:{contentPaddingTop:{check:"Integer",init:0,apply:"_applyContentPadding",themeable:true},contentPaddingRight:{check:"Integer",init:0,apply:"_applyContentPadding",themeable:true},contentPaddingBottom:{check:"Integer",init:0,apply:"_applyContentPadding",themeable:true},contentPaddingLeft:{check:"Integer",init:0,apply:"_applyContentPadding",themeable:true},contentPadding:{group:["contentPaddingTop","contentPaddingRight","contentPaddingBottom","contentPaddingLeft"],mode:"shorthand",themeable:true}},members:{__contentPaddingSetter:{contentPaddingTop:"setPaddingTop",contentPaddingRight:"setPaddingRight",contentPaddingBottom:"setPaddingBottom",contentPaddingLeft:"setPaddingLeft"},__contentPaddingResetter:{contentPaddingTop:"resetPaddingTop",contentPaddingRight:"resetPaddingRight",contentPaddingBottom:"resetPaddingBottom",contentPaddingLeft:"resetPaddingLeft"},_applyContentPadding:function(value,old,name){var target=this._getContentPaddingTarget();

if(value==null){var resetter=this.__contentPaddingResetter[name];
target[resetter]();
}else{var setter=this.__contentPaddingSetter[name];
target[setter](value);
}}}});
qx.Class.define("qx.ui.groupbox.GroupBox",{extend:qx.ui.core.Widget,include:[qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MRemoteLayoutHandling,qx.ui.core.MContentPadding,qx.ui.form.MForm],implement:[qx.ui.form.IForm],construct:function(legend,icon){this.base(arguments);
this._setLayout(new qx.ui.layout.Canvas);
this._createChildControl("frame");
this._createChildControl("legend");
if(legend!=null){this.setLegend(legend);
}
if(icon!=null){this.setIcon(icon);
}},properties:{appearance:{refine:true,init:"groupbox"},legendPosition:{check:["top","middle"],init:"middle",apply:"_applyLegendPosition",themeable:true}},members:{_forwardStates:{invalid:true},_createChildControlImpl:function(id){var control;

switch(id){case "frame":control=new qx.ui.container.Composite();
this._add(control,{left:0,top:6,right:0,bottom:0});
break;
case "legend":control=new qx.ui.basic.Atom();
control.addListener("resize",this._repositionFrame,this);
this._add(control);
break;
}return control||this.base(arguments,id);
},_getContentPaddingTarget:function(){return this.getChildControl("frame");
},_applyLegendPosition:function(e){if(this.getChildControl("legend").getBounds()){this._repositionFrame();
}},_repositionFrame:function(){var legend=this.getChildControl("legend");
var frame=this.getChildControl("frame");
var height=legend.getBounds().height;
if(this.getLegendPosition()=="middle"){frame.setLayoutProperties({"top":Math.round(height/2)});
}else if(this.getLegendPosition()=="top"){frame.setLayoutProperties({"top":height});
}},getChildrenContainer:function(){return this.getChildControl("frame");
},setLegend:function(legend){var control=this.getChildControl("legend");

if(legend!==null){control.setLabel(legend);
control.show();
}else{control.exclude();
}},getLegend:function(){return this.getChildControl("legend").getLabel();
},setIcon:function(icon){this.getChildControl("legend").setIcon(icon);
},getIcon:function(){this.getChildControl("legend").getIcon();
}}});
qx.Interface.define("qx.ui.form.INumberForm",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){return arguments.length==1;
},resetValue:function(){},getValue:function(){}}});
qx.Interface.define("qx.ui.form.IRange",{members:{setMinimum:function(min){return arguments.length==1;
},getMinimum:function(){},setMaximum:function(max){return arguments.length==1;
},getMaximum:function(){},setSingleStep:function(step){return arguments.length==1;
},getSingleStep:function(){},setPageStep:function(step){return arguments.length==1;
},getPageStep:function(){}}});
qx.Class.define("qx.ui.form.Spinner",{extend:qx.ui.core.Widget,implement:[qx.ui.form.INumberForm,qx.ui.form.IRange,qx.ui.form.IForm],include:[qx.ui.core.MContentPadding,qx.ui.form.MForm],construct:function(min,value,max){this.base(arguments);
var layout=new qx.ui.layout.Grid();
layout.setColumnFlex(0,1);
layout.setRowFlex(0,1);
layout.setRowFlex(1,1);
this._setLayout(layout);
this.addListener("keydown",this._onKeyDown,this);
this.addListener("keyup",this._onKeyUp,this);
this.addListener("mousewheel",this._onMouseWheel,this);
{};
this._createChildControl("textfield");
this._createChildControl("upbutton");
this._createChildControl("downbutton");
if(min!=null){this.setMinimum(min);
}
if(max!=null){this.setMaximum(max);
}
if(value!==undefined){this.setValue(value);
}else{this.initValue();
}},properties:{appearance:{refine:true,init:"spinner"},focusable:{refine:true,init:true},singleStep:{check:"Number",init:1},pageStep:{check:"Number",init:10},minimum:{check:"Number",apply:"_applyMinimum",init:0,event:"changeMinimum"},value:{check:"this._checkValue(value)",nullable:true,apply:"_applyValue",init:0,event:"changeValue"},maximum:{check:"Number",apply:"_applyMaximum",init:100,event:"changeMaximum"},wrap:{check:"Boolean",init:false,apply:"_applyWrap"},editable:{check:"Boolean",init:true,apply:"_applyEditable"},numberFormat:{check:"qx.util.format.NumberFormat",apply:"_applyNumberFormat",nullable:true},allowShrinkY:{refine:true,init:false}},members:{__lastValidValue:null,__pageUpMode:false,__pageDownMode:false,_createChildControlImpl:function(id){var control;

switch(id){case "textfield":control=new qx.ui.form.TextField();
control.setFilter(this._getFilterRegExp());
control.addState("inner");
control.setWidth(40);
control.setFocusable(false);
control.addListener("changeValue",this._onTextChange,this);
this._add(control,{column:0,row:0,rowSpan:2});
break;
case "upbutton":control=new qx.ui.form.RepeatButton();
control.addState("inner");
control.setFocusable(false);
control.addListener("execute",this._countUp,this);
this._add(control,{column:1,row:0});
break;
case "downbutton":control=new qx.ui.form.RepeatButton();
control.addState("inner");
control.setFocusable(false);
control.addListener("execute",this._countDown,this);
this._add(control,{column:1,row:1});
break;
}return control||this.base(arguments,id);
},_getFilterRegExp:function(){var decimalSeparator=qx.locale.Number.getDecimalSeparator(qx.locale.Manager.getInstance().getLocale());
var groupSeparator=qx.locale.Number.getGroupSeparator(qx.locale.Manager.getInstance().getLocale());
var prefix="";
var postfix="";

if(this.getNumberFormat()!==null){prefix=this.getNumberFormat().getPrefix()||"";
postfix=this.getNumberFormat().getPostfix()||"";
}var filterRegExp=new RegExp("[0-9"+qx.lang.String.escapeRegexpChars(decimalSeparator)+qx.lang.String.escapeRegexpChars(groupSeparator)+qx.lang.String.escapeRegexpChars(prefix)+qx.lang.String.escapeRegexpChars(postfix)+"\-]");
return filterRegExp;
},_forwardStates:{focused:true,invalid:true},tabFocus:function(){var field=this.getChildControl("textfield");
field.getFocusElement().focus();
field.selectAllText();
},_applyMinimum:function(value,old){if(this.getMaximum()<value){this.setMaximum(value);
}
if(this.getValue()<value){this.setValue(value);
}else{this._updateButtons();
}},_applyMaximum:function(value,old){if(this.getMinimum()>value){this.setMin(value);
}
if(this.getValue()>value){this.setValue(value);
}else{this._updateButtons();
}},_applyEnabled:function(value,old){this.base(arguments,value,old);
this._updateButtons();
},_checkValue:function(value){return typeof value==="number"&&value>=this.getMinimum()&&value<=this.getMaximum();
},_applyValue:function(value,old){var textField=this.getChildControl("textfield");
this._updateButtons();
this.__lastValidValue=value;
if(value!==null){if(this.getNumberFormat()){textField.setValue(this.getNumberFormat().format(value));
}else{textField.setValue(value+"");
}}else{textField.setValue("");
}},_applyEditable:function(value,old){var textField=this.getChildControl("textfield");

if(textField){textField.setReadOnly(!value);
}},_applyWrap:function(value,old){this._updateButtons();
},_applyNumberFormat:function(value,old){var textfield=this.getChildControl("textfield");
textfield.setFilter(this._getFilterRegExp());
this.getNumberFormat().addListener("changeNumberFormat",this._onChangeNumberFormat,this);
this._applyValue(this.__lastValidValue,undefined);
},_getContentPaddingTarget:function(){return this.getChildControl("textfield");
},_updateButtons:function(){var upButton=this.getChildControl("upbutton");
var downButton=this.getChildControl("downbutton");
var value=this.getValue();

if(!this.getEnabled()){upButton.setEnabled(false);
downButton.setEnabled(false);
}else{if(this.getWrap()){upButton.setEnabled(true);
downButton.setEnabled(true);
}else{if(value!==null&&value<this.getMaximum()){upButton.setEnabled(true);
}else{upButton.setEnabled(false);
}if(value!==null&&value>this.getMinimum()){downButton.setEnabled(true);
}else{downButton.setEnabled(false);
}}}},_onKeyDown:function(e){switch(e.getKeyIdentifier()){case "PageUp":this.__pageUpMode=true;
case "Up":this.getChildControl("upbutton").press();
break;
case "PageDown":this.__pageDownMode=true;
case "Down":this.getChildControl("downbutton").press();
break;
default:return ;
}e.stopPropagation();
e.preventDefault();
},_onKeyUp:function(e){switch(e.getKeyIdentifier()){case "PageUp":this.getChildControl("upbutton").release();
this.__pageUpMode=false;
break;
case "Up":this.getChildControl("upbutton").release();
break;
case "PageDown":this.getChildControl("downbutton").release();
this.__pageDownMode=false;
break;
case "Down":this.getChildControl("downbutton").release();
break;
}},_onMouseWheel:function(e){if(e.getWheelDelta()>0){this._countDown();
}else{this._countUp();
}e.stop();
},_onTextChange:function(e){var textField=this.getChildControl("textfield");
var value;
if(this.getNumberFormat()){try{value=this.getNumberFormat().parse(textField.getValue());
}catch(ex){}}if(value===undefined){value=parseFloat(textField.getValue(),10);
}if(!isNaN(value)){if(value>this.getMaximum()){textField.setValue(this.getMaximum()+"");
return;
}else if(value<this.getMinimum()){textField.setValue(this.getMinimum()+"");
return;
}this.setValue(value);
}else{this._applyValue(this.__lastValidValue,undefined);
}},_onChangeLocale:function(ev){if(this.getNumberFormat()!==null){this.setNumberFormat(this.getNumberFormat());
var textfield=this.getChildControl("textfield");
textfield.setFilter(this._getFilterRegExp());
textfield.setValue(this.getNumberFormat().format(this.getValue()));
}},_onChangeNumberFormat:function(ev){var textfield=this.getChildControl("textfield");
textfield.setFilter(this._getFilterRegExp());
textfield.setValue(this.getNumberFormat().format(this.getValue()));
},_countUp:function(){if(this.__pageUpMode){var newValue=this.getValue()+this.getPageStep();
}else{var newValue=this.getValue()+this.getSingleStep();
}if(this.getWrap()){if(newValue>this.getMaximum()){var diff=this.getMaximum()-newValue;
newValue=this.getMinimum()+diff;
}}this.gotoValue(newValue);
},_countDown:function(){if(this.__pageDownMode){var newValue=this.getValue()-this.getPageStep();
}else{var newValue=this.getValue()-this.getSingleStep();
}if(this.getWrap()){if(newValue<this.getMinimum()){var diff=this.getMinimum()+newValue;
newValue=this.getMaximum()-diff;
}}this.gotoValue(newValue);
},gotoValue:function(value){return this.setValue(Math.min(this.getMaximum(),Math.max(this.getMinimum(),value)));
}},destruct:function(){{};
}});
qx.Class.define("qx.ui.decoration.GridDiv",{extend:qx.ui.decoration.Abstract,construct:function(baseImage,insets){this.base(arguments);
if(baseImage!=null){this.setBaseImage(baseImage);
}
if(insets!=null){this.setInsets(insets);
}},properties:{baseImage:{check:"String",nullable:true,apply:"_applyBaseImage"}},members:{__markup:null,__images:null,__edges:null,_getDefaultInsets:function(){return {top:0,right:0,bottom:0,left:0};
},_isInitialized:function(){return !!this.__markup;
},getMarkup:function(){if(this.__markup){return this.__markup;
}var Decoration=qx.bom.element.Decoration;
var images=this.__images;
var edges=this.__edges;
var html=[];
html.push('<div style="position:absolute;top:0;left:0;overflow:hidden;font-size:0;line-height:0;">');
html.push(Decoration.create(images.tl,"no-repeat",{top:0,left:0}));
html.push(Decoration.create(images.t,"scale-x",{top:0,left:edges.left+"px"}));
html.push(Decoration.create(images.tr,"no-repeat",{top:0,right:0}));
html.push(Decoration.create(images.bl,"no-repeat",{bottom:0,left:0}));
html.push(Decoration.create(images.b,"scale-x",{bottom:0,left:edges.left+"px"}));
html.push(Decoration.create(images.br,"no-repeat",{bottom:0,right:0}));
html.push(Decoration.create(images.l,"scale-y",{top:edges.top+"px",left:0}));
html.push(Decoration.create(images.c,"scale",{top:edges.top+"px",left:edges.left+"px"}));
html.push(Decoration.create(images.r,"scale-y",{top:edges.top+"px",right:0}));
html.push('</div>');
return this.__markup=html.join("");
},resize:function(element,width,height){var edges=this.__edges;
var innerWidth=width-edges.left-edges.right;
var innerHeight=height-edges.top-edges.bottom;
if(innerWidth<0){innerWidth=0;
}
if(innerHeight<0){innerHeight=0;
}element.style.width=width+"px";
element.style.height=height+"px";
element.childNodes[1].style.width=innerWidth+"px";
element.childNodes[4].style.width=innerWidth+"px";
element.childNodes[7].style.width=innerWidth+"px";
element.childNodes[6].style.height=innerHeight+"px";
element.childNodes[7].style.height=innerHeight+"px";
element.childNodes[8].style.height=innerHeight+"px";

if(qx.core.Variant.isSet("qx.client","mshtml")){if(qx.bom.client.Engine.VERSION<7||(qx.bom.client.Feature.QUIRKS_MODE&&qx.bom.client.Engine.VERSION<8)){if(width%2==1){element.childNodes[2].style.marginRight="-1px";
element.childNodes[5].style.marginRight="-1px";
element.childNodes[8].style.marginRight="-1px";
}else{element.childNodes[2].style.marginRight="0px";
element.childNodes[5].style.marginRight="0px";
element.childNodes[8].style.marginRight="0px";
}
if(height%2==1){element.childNodes[3].style.marginBottom="-1px";
element.childNodes[4].style.marginBottom="-1px";
element.childNodes[5].style.marginBottom="-1px";
}else{element.childNodes[3].style.marginBottom="0px";
element.childNodes[4].style.marginBottom="0px";
element.childNodes[5].style.marginBottom="0px";
}}}},tint:function(element,bgcolor){},_applyBaseImage:function(value,old){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};

if(value){var base=this._resolveImageUrl(value);
var split=/(.*)(\.[a-z]+)$/.exec(base);
var prefix=split[1];
var ext=split[2];
var images=this.__images={tl:prefix+"-tl"+ext,t:prefix+"-t"+ext,tr:prefix+"-tr"+ext,bl:prefix+"-bl"+ext,b:prefix+"-b"+ext,br:prefix+"-br"+ext,l:prefix+"-l"+ext,c:prefix+"-c"+ext,r:prefix+"-r"+ext};
this.__edges=this._computeEdgeSizes(images);
}},_resolveImageUrl:function(image){return qx.util.AliasManager.getInstance().resolve(image);
},_computeEdgeSizes:function(images){var ResourceManager=qx.util.ResourceManager.getInstance();
return {top:ResourceManager.getImageHeight(images.t),bottom:ResourceManager.getImageHeight(images.b),left:ResourceManager.getImageWidth(images.l),right:ResourceManager.getImageWidth(images.r)};
}},destruct:function(){this.__markup=this.__images=this.__edges=null;
}});
qx.Class.define("qx.ui.embed.AbstractIframe",{extend:qx.ui.core.Widget,construct:function(source){this.base(arguments);

if(source){this.setSource(source);
}},events:{"load":"qx.event.type.Event"},properties:{source:{check:"String",apply:"_applySource",nullable:true},frameName:{check:"String",init:"",apply:"_applyFrameName"}},members:{_getIframeElement:function(){throw new Error("Abstract method call");
},_applySource:function(value,old){this._getIframeElement().setSource(value);
},_applyFrameName:function(value,old){this._getIframeElement().setAttribute("name",value);
},getWindow:function(){return this._getIframeElement().getWindow();
},getDocument:function(){return this._getIframeElement().getDocument();
},getBody:function(){return this._getIframeElement().getBody();
},getName:function(){return this._getIframeElement().getName();
},reload:function(){this._getIframeElement().reload();
}}});
qx.Class.define("qx.ui.embed.ThemedIframe",{extend:qx.ui.embed.AbstractIframe,construct:function(source){this.base(arguments,source);
var grid=new qx.ui.layout.Grid();
grid.setColumnFlex(0,1);
grid.setRowFlex(0,1);
this._setLayout(grid);
this._showChildControl("iframe");
},properties:{appearance:{refine:true,init:"scrollarea"},scrollbarX:{check:["auto","on","off"],init:"auto",themeable:true,apply:"_updateScrollbars"},scrollbarY:{check:["auto","on","off"],init:"auto",themeable:true,apply:"_updateScrollbars"},scrollbar:{group:["scrollbarX","scrollbarY"]}},members:{__iframeSize:null,__iframeObserverId:null,_getIframeElement:function(){return this.getChildControl("iframe").getContentElement();
},_createChildControlImpl:function(id){var control;

switch(id){case "iframe":control=new qx.ui.embed.Iframe(this.getSource());
control.addListener("load",this._onIframeLoad,this);
control.addListener("resize",this._onIframeResize,this);
this._add(control,{row:0,column:0});
break;
case "scrollbar-x":control=new qx.ui.core.scroll.ScrollBar("horizontal");
control.setMinWidth(0);
control.exclude();
control.addListener("scroll",this._onScrollBarX,this);
this._add(control,{row:1,column:0});
break;
case "scrollbar-y":control=new qx.ui.core.scroll.ScrollBar("vertical");
control.setMinHeight(0);
control.exclude();
control.addListener("scroll",this._onScrollBarY,this);
this._add(control,{row:0,column:1});
break;
case "corner":control=new qx.ui.core.Widget();
control.setWidth(0);
control.setHeight(0);
control.exclude();
this._add(control,{row:1,column:1});
break;
}return control||this.base(arguments,id);
},_onIframeLoad:function(){this._disableScollbars();
var body=this._getIframeElement().getBody();

if(body){this._startIframeObserver();
this._addWheelListener();
}this.fireEvent("load");
},_onIframeResize:function(){this._updateScrollbars();
},_disableScollbars:function(){this._excludeChildControl("scrollbar-x");
this._excludeChildControl("scrollbar-y");
this._excludeChildControl("corner");
this._stopIframeObserver();
},_addWheelListener:function(){try{var body=this._getIframeElement().getBody();
qx.bom.Element.addListener(body,"mousewheel",this._onMouseWheel,this);
}catch(e){this._disableScollbars();
}},_onMouseWheel:function(e){var showY=this._isChildControlVisible("scrollbar-y")&&this.getChildControl("scrollbar-y").isEnabled();

if(!showY){return;
}var scrollbar=this.getChildControl("scrollbar-y",true);
scrollbar.scrollBySteps(e.getWheelDelta());
e.stop();
},_startIframeObserver:function(){if(this.__iframeObserverId){this._stopIframeObserver();
}var idle=qx.event.Idle.getInstance();
this.__iframeObserverId=idle.addListener("interval",this._onIframeObserverInterval,this);
},_stopIframeObserver:function(){this.__iframeSize=null;

if(!this.__iframeObserverId){return;
}var idle=qx.event.Idle.getInstance();
idle.removeListenerById(this.__iframeObserverId);
},_onIframeObserverInterval:function(){var iframeSize=this._getIframeSize();

if(!iframeSize){this._disableScollbars();
return;
}
if(this.__iframeSize&&iframeSize.width==this.__iframeSize.width&&iframeSize.height==this.__iframeSize.height){return;
}this.__iframeSize=iframeSize;
this._preventIframeScrolling();
this._updateScrollbars();
},_preventIframeScrolling:function(){try{var doc=this._getIframeElement().getDocument();
doc.documentElement.style.overflow="hidden";
doc.body.style.overflow="hidden";
}catch(e){this._disableScollbars();
}},_updateScrollbars:function(){var iframeSize=this.__iframeSize;
var paneSize=this.getChildControl("iframe").getBounds();
var innerSize=this.getChildControl("iframe").getInnerSize();

if(!iframeSize||!innerSize||!innerSize){return;
}var showX=false;
var showY=false;
var scrollbarX=this.getScrollbarX();
var scrollbarY=this.getScrollbarY();

if(scrollbarX==="auto"&&scrollbarY==="auto"){var showX=iframeSize.width>innerSize.width;
var showY=iframeSize.height>innerSize.height;
if((showX||showY)&&!(showX&&showY)){if(showX){showY=iframeSize.height>paneSize.height;
}else if(showY){showX=iframeSize.width>paneSize.width;
}}}else{var showX=scrollbarX==="on";
var showY=scrollbarY==="on";
if(iframeSize.width>(showX?paneSize.width:innerSize.width)&&scrollbarX==="auto"){showX=true;
}
if(iframeSize.height>(showX?paneSize.height:innerSize.height)&&scrollbarY==="auto"){showY=true;
}}this._configureScrollbar("scrollbar-x",showX,innerSize.width,iframeSize.width);
this._configureScrollbar("scrollbar-y",showY,innerSize.height,iframeSize.height);
this._updateCornerWidget();
},_getIframeSize:function(){try{var win=this._getIframeElement().getWindow();
var frameSize={width:qx.bom.Document.getWidth(win),height:qx.bom.Document.getHeight(win)};
return frameSize;
}catch(e){return null;
}},_updateCornerWidget:function(){if(this._isChildControlVisible("scrollbar-x")&&this._isChildControlVisible("scrollbar-y")){this._showChildControl("corner");
}else{this._excludeChildControl("corner");
}},_configureScrollbar:function(scrollbarId,show,containerSize,contentSize){if(!show){this._excludeChildControl(scrollbarId);
return;
}var bar=this._showChildControl(scrollbarId);

if(containerSize>=contentSize){bar.set({position:0,maximum:contentSize,knobFactor:1,enabled:false});
}else{bar.setMaximum(1000000);
bar.set({position:Math.min(bar.getPosition(),contentSize),maximum:contentSize-containerSize,knobFactor:containerSize/contentSize,enabled:true});
}},_onScrollBarX:function(e){this.scrollToX(e.getData());
},_onScrollBarY:function(e){this.scrollToY(e.getData());
},scrollToX:function(x){try{var win=this._getIframeElement().getWindow();
win.scroll(x,qx.bom.Viewport.getScrollTop(win));
}catch(e){this._disableScollbars();
}},scrollToY:function(y){try{var win=this._getIframeElement().getWindow();
win.scroll(qx.bom.Viewport.getScrollLeft(win),y);
}catch(e){this._disableScollbars();
}}},destruct:function(){this._stopIframeObserver();
this.__iframeSize=null;
}});
qx.Mixin.define("qx.ui.core.MNativeOverflow",{properties:{overflowX:{check:["hidden","visible","scroll","auto"],nullable:true,apply:"_applyOverflowX"},overflowY:{check:["hidden","visible","scroll","auto"],nullable:true,apply:"_applyOverflowY"},overflow:{group:["overflowX","overflowY"]}},members:{_applyOverflowX:function(value){this.getContentElement().setStyle("overflowX",value);
},_applyOverflowY:function(value){this.getContentElement().setStyle("overflowY",value);
}}});
qx.Class.define("qx.ui.embed.Iframe",{extend:qx.ui.embed.AbstractIframe,include:qx.ui.core.MNativeOverflow,construct:function(source){if(source!=null){this.__source=source;
}this.base(arguments,source);
qx.event.Registration.addListener(document.body,"mousedown",this.block,this,true);
qx.event.Registration.addListener(document.body,"mouseup",this.release,this,true);
qx.event.Registration.addListener(document.body,"losecapture",this.release,this,true);
this.__blockerElement=this._createBlockerElement();
this.getContainerElement().add(this.__blockerElement);

if(qx.core.Variant.isSet("qx.client","gecko")){this.addListenerOnce("appear",function(e){var element=this.getContainerElement().getDomElement();
qx.bom.Event.addNativeListener(element,"DOMNodeInserted",this._onDOMNodeInserted);
});
this._onDOMNodeInserted=qx.lang.Function.listener(this._syncSourceAfterDOMMove,this);
}},properties:{appearance:{refine:true,init:"iframe"},nativeContextMenu:{refine:true,init:false},nativeHelp:{check:"Boolean",init:false,apply:"_applyNativeHelp"}},members:{__source:null,__blockerElement:null,renderLayout:function(left,top,width,height){this.base(arguments,left,top,width,height);
var pixel="px";
var insets=this.getInsets();
this.__blockerElement.setStyles({"left":insets.left+pixel,"top":insets.top+pixel,"width":(width-insets.left-insets.right)+pixel,"height":(height-insets.top-insets.bottom)+pixel});
},_createContentElement:function(){var iframe=new qx.html.Iframe(this.__source);
iframe.addListener("load",this._onIframeLoad,this);
return iframe;
},_getIframeElement:function(){return this.getContentElement();
},_createBlockerElement:function(){var el=new qx.html.Element("div");
el.setStyles({"zIndex":20,"position":"absolute","display":"none"});
if(qx.core.Variant.isSet("qx.client","mshtml")){el.setStyles({backgroundImage:"url("+qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif")+")",backgroundRepeat:"repeat"});
}return el;
},_onIframeLoad:function(e){this._applyNativeContextMenu(this.getNativeContextMenu(),null);
this._applyNativeHelp(this.getNativeHelp(),null);
this.fireNonBubblingEvent("load");
},block:function(){this.__blockerElement.setStyle("display","block");
},release:function(){this.__blockerElement.setStyle("display","none");
},_applyNativeContextMenu:function(value,old){if(value!==false&&old!==false){return;
}var doc=this.getDocument();

if(!doc){return;
}
try{var documentElement=doc.documentElement;
}catch(e){return ;
}
if(old===false){qx.event.Registration.removeListener(documentElement,"contextmenu",this._onNativeContextMenu,this,true);
}
if(value===false){qx.event.Registration.addListener(documentElement,"contextmenu",this._onNativeContextMenu,this,true);
}},_onNativeContextMenu:function(e){e.preventDefault();
},_applyNativeHelp:qx.core.Variant.select("qx.client",{"mshtml":function(value,old){var document=this.getDocument();

if(!document){return;
}
try{if(old===false){qx.bom.Event.removeNativeListener(document,"help",qx.lang.Function.returnFalse);
}
if(value===false){qx.bom.Event.addNativeListener(document,"help",qx.lang.Function.returnFalse);
}}catch(e){}},"default":function(){}}),_syncSourceAfterDOMMove:function(){var iframeDomElement=this.getContentElement().getDomElement();
var iframeSource=iframeDomElement.src;
if(iframeSource.charAt(iframeSource.length-1)=="/"){iframeSource=iframeSource.substring(0,iframeSource.length-1);
}
if(iframeSource!=this.getSource()){qx.bom.Iframe.getWindow(iframeDomElement).stop();
iframeDomElement.src=this.getSource();
}}},destruct:function(){this._disposeObjects("__blockerElement");
qx.event.Registration.removeListener(document.body,"mousedown",this.block,this,true);
qx.event.Registration.removeListener(document.body,"mouseup",this.release,this,true);
qx.event.Registration.removeListener(document.body,"losecapture",this.release,this,true);
}});
qx.Interface.define("qx.ui.core.scroll.IScrollBar",{events:{"scroll":"qx.event.type.Data"},properties:{orientation:{},maximum:{},position:{},knobFactor:{}},members:{scrollTo:function(position){this.assertNumber(position);
},scrollBy:function(offset){this.assertNumber(offset);
},scrollBySteps:function(steps){this.assertNumber(steps);
}}});
qx.Class.define("qx.ui.core.scroll.ScrollBar",{extend:qx.ui.core.Widget,implement:qx.ui.core.scroll.IScrollBar,construct:function(orientation){this.base(arguments);
this._createChildControl("button-begin");
this._createChildControl("slider").addListener("resize",this._onResizeSlider,this);
this._createChildControl("button-end");
if(orientation!=null){this.setOrientation(orientation);
}else{this.initOrientation();
}},properties:{appearance:{refine:true,init:"scrollbar"},orientation:{check:["horizontal","vertical"],init:"horizontal",apply:"_applyOrientation"},maximum:{check:"PositiveInteger",apply:"_applyMaximum",init:100},position:{check:"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()",init:0,apply:"_applyPosition",event:"scroll"},singleStep:{check:"Integer",init:20},pageStep:{check:"Integer",init:10,apply:"_applyPageStep"},knobFactor:{check:"PositiveNumber",apply:"_applyKnobFactor",nullable:true}},members:{__offset:2,_createChildControlImpl:function(id){var control;

switch(id){case "slider":control=new qx.ui.core.scroll.ScrollSlider();
control.setPageStep(100);
control.setFocusable(false);
control.addListener("changeValue",this._onChangeSliderValue,this);
this._add(control,{flex:1});
break;
case "button-begin":control=new qx.ui.form.RepeatButton();
control.setFocusable(false);
control.addListener("execute",this._onExecuteBegin,this);
this._add(control);
break;
case "button-end":control=new qx.ui.form.RepeatButton();
control.setFocusable(false);
control.addListener("execute",this._onExecuteEnd,this);
this._add(control);
break;
}return control||this.base(arguments,id);
},_applyMaximum:function(value){this.getChildControl("slider").setMaximum(value);
},_applyPosition:function(value){this.getChildControl("slider").setValue(value);
},_applyKnobFactor:function(value){this.getChildControl("slider").setKnobFactor(value);
},_applyPageStep:function(value){this.getChildControl("slider").setPageStep(value);
},_applyOrientation:function(value,old){var oldLayout=this._getLayout();

if(oldLayout){oldLayout.dispose();
}if(value==="horizontal"){this._setLayout(new qx.ui.layout.HBox());
this.setAllowStretchX(true);
this.setAllowStretchY(false);
this.replaceState("vertical","horizontal");
this.getChildControl("button-begin").replaceState("up","left");
this.getChildControl("button-end").replaceState("down","right");
}else{this._setLayout(new qx.ui.layout.VBox());
this.setAllowStretchX(false);
this.setAllowStretchY(true);
this.replaceState("horizontal","vertical");
this.getChildControl("button-begin").replaceState("left","up");
this.getChildControl("button-end").replaceState("right","down");
}this.getChildControl("slider").setOrientation(value);
},scrollTo:function(position){this.getChildControl("slider").slideTo(position);
},scrollBy:function(offset){this.getChildControl("slider").slideBy(offset);
},scrollBySteps:function(steps){var size=this.getSingleStep();
this.getChildControl("slider").slideBy(steps*size);
},_onExecuteBegin:function(e){this.scrollBy(-this.getSingleStep());
},_onExecuteEnd:function(e){this.scrollBy(this.getSingleStep());
},_onChangeSliderValue:function(e){this.setPosition(e.getData());
},_onResizeSlider:function(e){var knob=this.getChildControl("slider").getChildControl("knob");
var knobHint=knob.getSizeHint();
var hideKnob=false;
var sliderSize=this.getChildControl("slider").getInnerSize();

if(this.getOrientation()=="vertical"){if(sliderSize.height<knobHint.minHeight+this.__offset){hideKnob=true;
}}else{if(sliderSize.width<knobHint.minWidth+this.__offset){hideKnob=true;
}}
if(hideKnob){knob.exclude();
}else{knob.show();
}}}});
qx.Class.define("qx.ui.form.Slider",{extend:qx.ui.core.Widget,implement:[qx.ui.form.IForm,qx.ui.form.INumberForm,qx.ui.form.IRange],include:[qx.ui.form.MForm],construct:function(orientation){this.base(arguments);
this._setLayout(new qx.ui.layout.Canvas());
this.addListener("keypress",this._onKeyPress);
this.addListener("mousewheel",this._onMouseWheel);
this.addListener("mousedown",this._onMouseDown);
this.addListener("mouseup",this._onMouseUp);
this.addListener("losecapture",this._onMouseUp);
this.addListener("resize",this._onUpdate);
this.addListener("contextmenu",this._onStopEvent);
this.addListener("click",this._onStopEvent);
this.addListener("dblclick",this._onStopEvent);
if(orientation!=null){this.setOrientation(orientation);
}else{this.initOrientation();
}},properties:{appearance:{refine:true,init:"slider"},focusable:{refine:true,init:true},orientation:{check:["horizontal","vertical"],init:"horizontal",apply:"_applyOrientation"},value:{check:"typeof value==='number'&&value>=this.getMinimum()&&value<=this.getMaximum()",init:0,apply:"_applyValue",event:"changeValue",nullable:true},minimum:{check:"Integer",init:0,apply:"_applyMinimum",event:"changeMinimum"},maximum:{check:"Integer",init:100,apply:"_applyMaximum",event:"changeMaximum"},singleStep:{check:"Integer",init:1},pageStep:{check:"Integer",init:10},knobFactor:{check:"Number",apply:"_applyKnobFactor",nullable:true}},members:{__sliderLocation:null,__knobLocation:null,__knobSize:null,__dragMode:null,__dragOffset:null,__trackingMode:null,__trackingDirection:null,__trackingEnd:null,__timer:null,_forwardStates:{invalid:true},_createChildControlImpl:function(id){var control;

switch(id){case "knob":control=new qx.ui.core.Widget();
control.addListener("resize",this._onUpdate,this);
control.addListener("mouseover",this._onMouseOver);
control.addListener("mouseout",this._onMouseOut);
this._add(control);
break;
}return control||this.base(arguments,id);
},_onMouseOver:function(e){this.addState("hovered");
},_onMouseOut:function(e){this.removeState("hovered");
},_onMouseWheel:function(e){var direction=e.getWheelDelta()>0?1:-1;
this.slideBy(direction*this.getSingleStep());
e.stop();
},_onKeyPress:function(e){var isHorizontal=this.getOrientation()==="horizontal";
var backward=isHorizontal?"Left":"Up";
var forward=isHorizontal?"Right":"Down";

switch(e.getKeyIdentifier()){case forward:this.slideForward();
break;
case backward:this.slideBack();
break;
case "PageDown":this.slidePageForward();
break;
case "PageUp":this.slidePageBack();
break;
case "Home":this.slideToBegin();
break;
case "End":this.slideToEnd();
break;
default:return;
}e.stop();
},_onMouseDown:function(e){if(this.__dragMode){return;
}var isHorizontal=this.__isHorizontal;
var knob=this.getChildControl("knob");
var locationProperty=isHorizontal?"left":"top";
var cursorLocation=isHorizontal?e.getDocumentLeft():e.getDocumentTop();
var sliderLocation=this.__sliderLocation=qx.bom.element.Location.get(this.getContentElement().getDomElement())[locationProperty];
var knobLocation=this.__knobLocation=qx.bom.element.Location.get(knob.getContainerElement().getDomElement())[locationProperty];

if(e.getTarget()===knob){this.__dragMode=true;
this.__dragOffset=cursorLocation+sliderLocation-knobLocation;
knob.addState("pressed");
}else{this.__trackingMode=true;
this.__trackingDirection=cursorLocation<=knobLocation?-1:1;
this.__computeTrackingEnd(e);
this._onInterval();
if(!this.__timer){this.__timer=new qx.event.Timer(100);
this.__timer.addListener("interval",this._onInterval,this);
}this.__timer.start();
}this.addListener("mousemove",this._onMouseMove);
this.capture();
e.stopPropagation();
},_onMouseUp:function(e){if(this.__dragMode){this.releaseCapture();
delete this.__dragMode;
delete this.__dragOffset;
this.getChildControl("knob").removeState("pressed");
if(e.getType()==="mouseup"){var deltaSlider;
var deltaPosition;
var positionSlider;

if(this.__isHorizontal){deltaSlider=e.getDocumentLeft()-(this._valueToPosition(this.getValue())+this.__sliderLocation);
positionSlider=qx.bom.element.Location.get(this.getContentElement().getDomElement())["top"];
deltaPosition=e.getDocumentTop()-(positionSlider+this.getChildControl("knob").getBounds().top);
}else{deltaSlider=e.getDocumentTop()-(this._valueToPosition(this.getValue())+this.__sliderLocation);
positionSlider=qx.bom.element.Location.get(this.getContentElement().getDomElement())["left"];
deltaPosition=e.getDocumentLeft()-(positionSlider+this.getChildControl("knob").getBounds().left);
}
if(deltaPosition<0||deltaPosition>this.__knobSize||deltaSlider<0||deltaSlider>this.__knobSize){this.getChildControl("knob").removeState("hovered");
}}}else if(this.__trackingMode){this.__timer.stop();
this.releaseCapture();
delete this.__trackingMode;
delete this.__trackingDirection;
delete this.__trackingEnd;
}this.removeListener("mousemove",this._onMouseMove);
if(e.getType()==="mouseup"){e.stopPropagation();
}},_onMouseMove:function(e){if(this.__dragMode){var dragStop=this.__isHorizontal?e.getDocumentLeft():e.getDocumentTop();
var position=dragStop-this.__dragOffset;
this.slideTo(this._positionToValue(position));
}else if(this.__trackingMode){this.__computeTrackingEnd(e);
}e.stopPropagation();
},_onInterval:function(e){var value=this.getValue()+(this.__trackingDirection*this.getPageStep());
if(value<this.getMinimum()){value=this.getMinimum();
}else if(value>this.getMaximum()){value=this.getMaximum();
}var slideBack=this.__trackingDirection==-1;

if((slideBack&&value<=this.__trackingEnd)||(!slideBack&&value>=this.__trackingEnd)){value=this.__trackingEnd;
}this.slideTo(value);
},_onUpdate:function(e){var availSize=this.getInnerSize();
var knobSize=this.getChildControl("knob").getBounds();
var sizeProperty=this.__isHorizontal?"width":"height";
this._updateKnobSize();
this.__slidingSpace=availSize[sizeProperty]-knobSize[sizeProperty];
this.__knobSize=knobSize[sizeProperty];
this._updateKnobPosition();
},__isHorizontal:false,__slidingSpace:0,__computeTrackingEnd:function(e){var isHorizontal=this.__isHorizontal;
var cursorLocation=isHorizontal?e.getDocumentLeft():e.getDocumentTop();
var sliderLocation=this.__sliderLocation;
var knobLocation=this.__knobLocation;
var knobSize=this.__knobSize;
var position=cursorLocation-sliderLocation;

if(cursorLocation>=knobLocation){position-=knobSize;
}var value=this._positionToValue(position);
var min=this.getMinimum();
var max=this.getMaximum();

if(value<min){value=min;
}else if(value>max){value=max;
}else{var old=this.getValue();
var step=this.getPageStep();
var method=this.__trackingDirection<0?"floor":"ceil";
value=old+(Math[method]((value-old)/step)*step);
}if(this.__trackingEnd==null||(this.__trackingDirection==-1&&value<=this.__trackingEnd)||(this.__trackingDirection==1&&value>=this.__trackingEnd)){this.__trackingEnd=value;
}},_positionToValue:function(position){var avail=this.__slidingSpace;
if(avail==null||avail==0){return 0;
}var percent=position/avail;

if(percent<0){percent=0;
}else if(percent>1){percent=1;
}var range=this.getMaximum()-this.getMinimum();
return this.getMinimum()+Math.round(range*percent);
},_valueToPosition:function(value){var avail=this.__slidingSpace;

if(avail==null){return 0;
}var range=this.getMaximum()-this.getMinimum();
if(range==0){return 0;
}var value=value-this.getMinimum();
var percent=value/range;

if(percent<0){percent=0;
}else if(percent>1){percent=1;
}return Math.round(avail*percent);
},_updateKnobPosition:function(){this._setKnobPosition(this._valueToPosition(this.getValue()));
},_setKnobPosition:function(position){var container=this.getChildControl("knob").getContainerElement();

if(this.__isHorizontal){container.setStyle("left",position+"px",true);
}else{container.setStyle("top",position+"px",true);
}},_updateKnobSize:function(){var knobFactor=this.getKnobFactor();

if(knobFactor==null){return;
}var avail=this.getInnerSize();

if(avail==null){return;
}if(this.__isHorizontal){this.getChildControl("knob").setWidth(Math.round(knobFactor*avail.width));
}else{this.getChildControl("knob").setHeight(Math.round(knobFactor*avail.height));
}},slideToBegin:function(){this.slideTo(this.getMinimum());
},slideToEnd:function(){this.slideTo(this.getMaximum());
},slideForward:function(){this.slideBy(this.getSingleStep());
},slideBack:function(){this.slideBy(-this.getSingleStep());
},slidePageForward:function(){this.slideBy(this.getPageStep());
},slidePageBack:function(){this.slideBy(-this.getPageStep());
},slideBy:function(offset){this.slideTo(this.getValue()+offset);
},slideTo:function(value){if(value<this.getMinimum()){value=this.getMinimum();
}else if(value>this.getMaximum()){value=this.getMaximum();
}else{value=this.getMinimum()+Math.round((value-this.getMinimum())/this.getSingleStep())*this.getSingleStep();
}this.setValue(value);
},_applyOrientation:function(value,old){var knob=this.getChildControl("knob");
this.__isHorizontal=value==="horizontal";
if(this.__isHorizontal){this.removeState("vertical");
knob.removeState("vertical");
this.addState("horizontal");
knob.addState("horizontal");
knob.setLayoutProperties({top:0,right:null,bottom:0});
}else{this.removeState("horizontal");
knob.removeState("horizontal");
this.addState("vertical");
knob.addState("vertical");
knob.setLayoutProperties({right:0,bottom:null,left:0});
}this._updateKnobPosition();
},_applyKnobFactor:function(value,old){if(value!=null){this._updateKnobSize();
}else{if(this.__isHorizontal){this.getChildControl("knob").resetWidth();
}else{this.getChildControl("knob").resetHeight();
}}},_applyValue:function(value,old){if(value!=null){this._updateKnobPosition();
}else{this.resetValue();
}},_applyMinimum:function(value,old){if(this.getValue()<value){this.setValue(value);
}this._updateKnobPosition();
},_applyMaximum:function(value,old){if(this.getValue()>value){this.setValue(value);
}this._updateKnobPosition();
}}});
qx.Class.define("qx.ui.core.scroll.ScrollSlider",{extend:qx.ui.form.Slider,construct:function(orientation){this.base(arguments,orientation);
this.removeListener("keypress",this._onKeyPress);
this.removeListener("mousewheel",this._onMouseWheel);
}});
qx.Interface.define("qx.ui.table.IColumnMenuItem",{properties:{visible:{}},events:{changeVisible:"qx.event.type.Data"}});
qx.Class.define("qx.ui.core.selection.Widget",{extend:qx.ui.core.selection.Abstract,construct:function(widget){this.base(arguments);
this.__widget=widget;
},members:{__widget:null,_isSelectable:function(item){return item.isEnabled()&&item.isVisible()&&item.getLayoutParent()===this.__widget;
},_selectableToHashCode:function(item){return item.$$hash;
},_styleSelectable:function(item,type,enabled){enabled?item.addState(type):item.removeState(type);
},_capture:function(){this.__widget.capture();
},_releaseCapture:function(){this.__widget.releaseCapture();
},_getWidget:function(){return this.__widget;
},_getLocation:function(){var elem=this.__widget.getContentElement().getDomElement();
return elem?qx.bom.element.Location.get(elem):null;
},_getDimension:function(){return this.__widget.getInnerSize();
},_getSelectableLocationX:function(item){var computed=item.getBounds();

if(computed){return {left:computed.left,right:computed.left+computed.width};
}},_getSelectableLocationY:function(item){var computed=item.getBounds();

if(computed){return {top:computed.top,bottom:computed.top+computed.height};
}},_getScroll:function(){return {left:0,top:0};
},_scrollBy:function(xoff,yoff){},_scrollItemIntoView:function(item){this.__widget.scrollChildIntoView(item);
},getSelectables:function(){var children=this.__widget.getChildren();
var result=[];
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child.isEnabled()&&child.isVisible()){result.push(child);
}}return result;
},_getSelectableRange:function(item1,item2){if(item1===item2){return [item1];
}var children=this.__widget.getChildren();
var result=[];
var active=false;
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child===item1||child===item2){if(active){result.push(child);
break;
}else{active=true;
}}
if(active&&child.isEnabled()&&child.isVisible()){result.push(child);
}}return result;
},_getFirstSelectable:function(){var children=this.__widget.getChildren();

for(var i=0,l=children.length;i<l;i++){if(children[i].isEnabled()&&children[i].isVisible()){return children[i];
}}return null;
},_getLastSelectable:function(){var children=this.__widget.getChildren();

for(var i=children.length-1;i>0;i--){if(children[i].isEnabled()&&children[i].isVisible()){return children[i];
}}return null;
},_getRelatedSelectable:function(item,relation){var vertical=this.__widget.getOrientation()==="vertical";
var children=this.__widget.getChildren();
var index=children.indexOf(item);
var sibling;

if((vertical&&relation==="above")||(!vertical&&relation==="left")){for(var i=index-1;i>=0;i--){sibling=children[i];

if(sibling.isEnabled()&&sibling.isVisible()){return sibling;
}}}else if((vertical&&relation==="under")||(!vertical&&relation==="right")){for(var i=index+1;i<children.length;i++){sibling=children[i];

if(sibling.isEnabled()&&sibling.isVisible()){return sibling;
}}}return null;
},_getPage:function(lead,up){if(up){return this._getFirstSelectable();
}else{return this._getLastSelectable();
}}},destruct:function(){this.__widget=null;
}});
qx.Interface.define("qx.ui.table.ITableModel",{events:{"dataChanged":"qx.event.type.Data","metaDataChanged":"qx.event.type.Event","sorted":"qx.event.type.Data"},statics:{EVENT_TYPE_DATA_CHANGED:"dataChanged",EVENT_TYPE_META_DATA_CHANGED:"metaDataChanged"},members:{getRowCount:function(){},getRowData:function(rowIndex){},getColumnCount:function(){},getColumnId:function(columnIndex){},getColumnIndexById:function(columnId){},getColumnName:function(columnIndex){},isColumnEditable:function(columnIndex){},isColumnSortable:function(columnIndex){},sortByColumn:function(columnIndex,ascending){},getSortColumnIndex:function(){},isSortAscending:function(){},prefetchRows:function(firstRowIndex,lastRowIndex){},getValue:function(columnIndex,rowIndex){},getValueById:function(columnId,rowIndex){},setValue:function(columnIndex,rowIndex,value){},setValueById:function(columnId,rowIndex,value){}}});
qx.log.Logger.deprecatedConstantWarning(qx.ui.table.ITableModel,"EVENT_TYPE_DATA_CHANGED","New code should not use this. Instead, use the text string 'dataChanged' literally.");
qx.log.Logger.deprecatedConstantWarning(qx.ui.table.ITableModel,"EVENT_TYPE_META_DATA_CHANGED","New code should not use this. Instead, use the text string 'metaDataChanged' literally.");
qx.Class.define("qx.ui.table.model.Abstract",{type:"abstract",extend:qx.core.Object,implement:qx.ui.table.ITableModel,events:{"dataChanged":"qx.event.type.Data","metaDataChanged":"qx.event.type.Event","sorted":"qx.event.type.Data"},construct:function(){this.base(arguments);
this.__columnIdArr=[];
this.__columnNameArr=[];
this.__columnIndexMap={};
},members:{__columnIdArr:null,__columnNameArr:null,__columnIndexMap:null,__internalChange:null,getRowCount:function(){throw new Error("getRowCount is abstract");
},getRowData:function(rowIndex){return null;
},isColumnEditable:function(columnIndex){return false;
},isColumnSortable:function(columnIndex){return false;
},sortByColumn:function(columnIndex,ascending){},getSortColumnIndex:function(){return -1;
},isSortAscending:function(){return true;
},prefetchRows:function(firstRowIndex,lastRowIndex){},getValue:function(columnIndex,rowIndex){throw new Error("getValue is abstract");
},getValueById:function(columnId,rowIndex){return this.getValue(this.getColumnIndexById(columnId),rowIndex);
},setValue:function(columnIndex,rowIndex,value){throw new Error("setValue is abstract");
},setValueById:function(columnId,rowIndex,value){this.setValue(this.getColumnIndexById(columnId),rowIndex,value);
},getColumnCount:function(){return this.__columnIdArr.length;
},getColumnIndexById:function(columnId){return this.__columnIndexMap[columnId];
},getColumnId:function(columnIndex){return this.__columnIdArr[columnIndex];
},getColumnName:function(columnIndex){return this.__columnNameArr[columnIndex];
},setColumnIds:function(columnIdArr){this.__columnIdArr=columnIdArr;
this.__columnIndexMap={};

for(var i=0;i<columnIdArr.length;i++){this.__columnIndexMap[columnIdArr[i]]=i;
}this.__columnNameArr=new Array(columnIdArr.length);
if(!this.__internalChange){this.fireEvent("metaDataChanged");
}},setColumnNamesByIndex:function(columnNameArr){if(this.__columnIdArr.length!=columnNameArr.length){throw new Error("this.__columnIdArr and columnNameArr have different length: "+this.__columnIdArr.length+" != "+columnNameArr.length);
}this.__columnNameArr=columnNameArr;
this.fireEvent("metaDataChanged");
},setColumnNamesById:function(columnNameMap){this.__columnNameArr=new Array(this.__columnIdArr.length);

for(var i=0;i<this.__columnIdArr.length;++i){this.__columnNameArr[i]=columnNameMap[this.__columnIdArr[i]];
}},setColumns:function(columnNameArr,columnIdArr){var bSetIds=this.__columnIdArr.length==0||columnIdArr;

if(columnIdArr==null){if(this.__columnIdArr.length==0){columnIdArr=columnNameArr;
}else{columnIdArr=this.__columnIdArr;
}}
if(columnIdArr.length!=columnNameArr.length){throw new Error("columnIdArr and columnNameArr have different length: "+columnIdArr.length+" != "+columnNameArr.length);
}
if(bSetIds){this.__internalChange=true;
this.setColumnIds(columnIdArr);
this.__internalChange=false;
}this.setColumnNamesByIndex(columnNameArr);
}},destruct:function(){this.__columnIdArr=this.__columnNameArr=this.__columnIndexMap=null;
}});
qx.Class.define("qx.ui.table.model.Simple",{extend:qx.ui.table.model.Abstract,construct:function(){this.base(arguments);
this.__rowArr=[];
this.__sortColumnIndex=-1;
this.__sortMethods=[];
this.__editableColArr=null;
},properties:{caseSensitiveSorting:{check:"Boolean",init:true}},statics:{_defaultSortComparatorAscending:function(row1,row2){var obj1=row1[arguments.callee.columnIndex];
var obj2=row2[arguments.callee.columnIndex];

if(qx.lang.Type.isNumber(obj1)&&qx.lang.Type.isNumber(obj2)){var result=isNaN(obj1)?isNaN(obj2)?0:1:isNaN(obj2)?-1:null;

if(result!=null){return result;
}}return (obj1>obj2)?1:((obj1==obj2)?0:-1);
},_defaultSortComparatorInsensitiveAscending:function(row1,row2){var obj1=(row1[arguments.callee.columnIndex].toLowerCase?row1[arguments.callee.columnIndex].toLowerCase():row1[arguments.callee.columnIndex]);
var obj2=(row2[arguments.callee.columnIndex].toLowerCase?row2[arguments.callee.columnIndex].toLowerCase():row2[arguments.callee.columnIndex]);

if(qx.lang.Type.isNumber(obj1)&&qx.lang.Type.isNumber(obj2)){var result=isNaN(obj1)?isNaN(obj2)?0:1:isNaN(obj2)?-1:null;

if(result!=null){return result;
}}return (obj1>obj2)?1:((obj1==obj2)?0:-1);
},_defaultSortComparatorDescending:function(row1,row2){var obj1=row1[arguments.callee.columnIndex];
var obj2=row2[arguments.callee.columnIndex];

if(qx.lang.Type.isNumber(obj1)&&qx.lang.Type.isNumber(obj2)){var result=isNaN(obj1)?isNaN(obj2)?0:1:isNaN(obj2)?-1:null;

if(result!=null){return result;
}}return (obj1<obj2)?1:((obj1==obj2)?0:-1);
},_defaultSortComparatorInsensitiveDescending:function(row1,row2){var obj1=(row1[arguments.callee.columnIndex].toLowerCase?row1[arguments.callee.columnIndex].toLowerCase():row1[arguments.callee.columnIndex]);
var obj2=(row2[arguments.callee.columnIndex].toLowerCase?row2[arguments.callee.columnIndex].toLowerCase():row2[arguments.callee.columnIndex]);

if(qx.lang.Type.isNumber(obj1)&&qx.lang.Type.isNumber(obj2)){var result=isNaN(obj1)?isNaN(obj2)?0:1:isNaN(obj2)?-1:null;

if(result!=null){return result;
}}return (obj1<obj2)?1:((obj1==obj2)?0:-1);
}},members:{__rowArr:null,__editableColArr:null,__sortableColArr:null,__sortMethods:null,__sortColumnIndex:null,__sortAscending:null,getRowData:function(rowIndex){var rowData=this.__rowArr[rowIndex];

if(rowData==null||rowData.originalData==null){return rowData;
}else{return rowData.originalData;
}},getRowDataAsMap:function(rowIndex){var columnArr=this.__rowArr[rowIndex];
var map={};

for(var col=0;col<this.getColumnCount();col++){map[this.getColumnId(col)]=columnArr[col];
}return map;
},getDataAsMapArray:function(){var len=this.getRowCount();
var data=[];

for(var i=0;i<len;i++){data.push(this.getRowDataAsMap(i));
}return data;
},setEditable:function(editable){this.__editableColArr=[];

for(var col=0;col<this.getColumnCount();col++){this.__editableColArr[col]=editable;
}this.fireEvent("metaDataChanged");
},setColumnEditable:function(columnIndex,editable){if(editable!=this.isColumnEditable(columnIndex)){if(this.__editableColArr==null){this.__editableColArr=[];
}this.__editableColArr[columnIndex]=editable;
this.fireEvent("metaDataChanged");
}},isColumnEditable:function(columnIndex){return this.__editableColArr?(this.__editableColArr[columnIndex]==true):false;
},setColumnSortable:function(columnIndex,sortable){if(sortable!=this.isColumnSortable(columnIndex)){if(this.__sortableColArr==null){this.__sortableColArr=[];
}this.__sortableColArr[columnIndex]=sortable;
this.fireEvent("metaDataChanged");
}},isColumnSortable:function(columnIndex){return (this.__sortableColArr?(this.__sortableColArr[columnIndex]!==false):true);
},sortByColumn:function(columnIndex,ascending){var comparator;
var sortMethods=this.__sortMethods[columnIndex];

if(sortMethods){comparator=(ascending?sortMethods.ascending:sortMethods.descending);
}else{if(this.getCaseSensitiveSorting()){comparator=(ascending?qx.ui.table.model.Simple._defaultSortComparatorAscending:qx.ui.table.model.Simple._defaultSortComparatorDescending);
}else{comparator=(ascending?qx.ui.table.model.Simple._defaultSortComparatorInsensitiveAscending:qx.ui.table.model.Simple._defaultSortComparatorInsensitiveDescending);
}}comparator.columnIndex=columnIndex;
this.__rowArr.sort(comparator);
this.__sortColumnIndex=columnIndex;
this.__sortAscending=ascending;
var data={columnIndex:columnIndex,ascending:ascending};
this.fireDataEvent("sorted",data);
this.fireEvent("metaDataChanged");
},setSortMethods:function(columnIndex,compare){var methods;

if(qx.lang.Type.isFunction(compare)){methods={ascending:compare,descending:function(row1,row2){return compare(row2,row1);
}};
}else{methods=compare;
}this.__sortMethods[columnIndex]=methods;
},getSortMethods:function(columnIndex){return this.__sortMethods[columnIndex];
},clearSorting:function(){if(this.__sortColumnIndex!=-1){this.__sortColumnIndex=-1;
this.__sortAscending=true;
this.fireEvent("metaDataChanged");
}},getSortColumnIndex:function(){return this.__sortColumnIndex;
},isSortAscending:function(){return this.__sortAscending;
},getRowCount:function(){return this.__rowArr.length;
},getValue:function(columnIndex,rowIndex){if(rowIndex<0||rowIndex>=this.__rowArr.length){throw new Error("this.__rowArr out of bounds: "+rowIndex+" (0.."+this.__rowArr.length+")");
}return this.__rowArr[rowIndex][columnIndex];
},setValue:function(columnIndex,rowIndex,value){if(this.__rowArr[rowIndex][columnIndex]!=value){this.__rowArr[rowIndex][columnIndex]=value;
if(this.hasListener("dataChanged")){var data={firstRow:rowIndex,lastRow:rowIndex,firstColumn:columnIndex,lastColumn:columnIndex};
this.fireDataEvent("dataChanged",data);
}
if(columnIndex==this.__sortColumnIndex){this.clearSorting();
}}},setData:function(rowArr,clearSorting){this.__rowArr=rowArr;
if(this.hasListener("dataChanged")){var data={firstRow:0,lastRow:rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
}
if(clearSorting!==false){this.clearSorting();
}},getData:function(){return this.__rowArr;
},setDataAsMapArray:function(mapArr,rememberMaps,clearSorting){this.setData(this._mapArray2RowArr(mapArr,rememberMaps),clearSorting);
},addRows:function(rowArr,startIndex,clearSorting){if(startIndex==null){startIndex=this.__rowArr.length;
}rowArr.splice(0,0,startIndex,0);
Array.prototype.splice.apply(this.__rowArr,rowArr);
var data={firstRow:startIndex,lastRow:this.__rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);

if(clearSorting!==false){this.clearSorting();
}},addRowsAsMapArray:function(mapArr,startIndex,rememberMaps,clearSorting){this.addRows(this._mapArray2RowArr(mapArr,rememberMaps),startIndex,clearSorting);
},setRows:function(rowArr,startIndex,clearSorting){if(startIndex==null){startIndex=0;
}rowArr.splice(0,0,startIndex,rowArr.length);
Array.prototype.splice.apply(this.__rowArr,rowArr);
var data={firstRow:startIndex,lastRow:this.__rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);

if(clearSorting!==false){this.clearSorting();
}},setRowsAsMapArray:function(mapArr,startIndex,rememberMaps,clearSorting){this.setRows(this._mapArray2RowArr(mapArr,rememberMaps),startIndex,clearSorting);
},removeRows:function(startIndex,howMany,clearSorting){this.__rowArr.splice(startIndex,howMany);
var data={firstRow:startIndex,lastRow:this.__rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1,removeStart:startIndex,removeCount:howMany};
this.fireDataEvent("dataChanged",data);

if(clearSorting!==false){this.clearSorting();
}},_mapArray2RowArr:function(mapArr,rememberMaps){var rowCount=mapArr.length;
var columnCount=this.getColumnCount();
var dataArr=new Array(rowCount);
var columnArr;

for(var i=0;i<rowCount;++i){columnArr=[];

if(rememberMaps){columnArr.originalData=mapArr[i];
}
for(var j=0;j<columnCount;++j){columnArr[j]=mapArr[i][this.getColumnId(j)];
}dataArr[i]=columnArr;
}return dataArr;
}},destruct:function(){this.__rowArr=this.__editableColArr=this.__sortMethods=this.__sortableColArr=null;
}});
qx.Class.define("qx.ui.table.model.Filtered",{extend:qx.ui.table.model.Simple,construct:function(){this.base(arguments);
this.numericAllowed=new Array("==","!=",">","<",">=","<=");
this.betweenAllowed=new Array("between","!between");
this.__applyingFilters=false;
this.Filters=new Array();
},members:{__fullArr:null,__applyingFilters:null,_js_in_array:function(the_needle,the_haystack){var the_hay=the_haystack.toString();

if(the_hay==''){return false;
}var the_pattern=new RegExp(the_needle,'g');
var matched=the_pattern.test(the_haystack);
return matched;
},addBetweenFilter:function(filter,value1,value2,target){if(this._js_in_array(filter,this.betweenAllowed)&&target!=null){if(value1!=null&&value2!=null){var temp=new Array(filter,value1,value2,target);
}}
if(temp!=null){this.Filters.push(temp);
}else{throw new Error("Filter not recognized or value1/value2 is null!");
}},addNumericFilter:function(filter,value1,target){var temp=null;

if(this._js_in_array(filter,this.numericAllowed)&&target!=null){if(value1!=null){temp=[filter,value1,target];
}}
if(temp!=null){this.Filters.push(temp);
}else{throw new Error("Filter not recognized: value or target is null!");
}},addRegex:function(regex,target,ignorecase){var regexarg;

if(ignorecase){regexarg='gi';
}else{regexarg='g';
}
if(regex!=null&&target!=null){var temp=new Array("regex",regex,target,regexarg);
}
if(temp!=null){this.Filters.push(temp);
}else{throw new Error("regex cannot be null!");
}},addNotRegex:function(regex,target,ignorecase){var regexarg;

if(ignorecase){regexarg='gi';
}else{regexarg='g';
}
if(regex!=null&&target!=null){var temp=new Array("notregex",regex,target,regexarg);
}
if(temp!=null){this.Filters.push(temp);
}else{throw new Error("notregex cannot be null!");
}},applyFilters:function(){var i;
var filter_test;
var compareValue;
var rowArr=this.getData();
var rowLength=rowArr.length;

for(var row=0;row<rowLength;row++){filter_test=false;

for(i in this.Filters){if(this._js_in_array(this.Filters[i][0],this.numericAllowed)&&filter_test==false){compareValue=this.getValueById(this.Filters[i][2],row);

switch(this.Filters[i][0]){case "==":if(compareValue==this.Filters[i][1]){filter_test=true;
}break;
case "!=":if(compareValue!=this.Filters[i][1]){filter_test=true;
}break;
case ">":if(compareValue>this.Filters[i][1]){filter_test=true;
}break;
case "<":if(compareValue<this.Filters[i][1]){filter_test=true;
}break;
case ">=":if(compareValue>=this.Filters[i][1]){filter_test=true;
}break;
case "<=":if(compareValue<=this.Filters[i][1]){filter_test=true;
}break;
}}else if(this._js_in_array(this.Filters[i][0],this.betweenAllowed)&&filter_test==false){compareValue=this.getValueById(this.Filters[i][3],row);

switch(this.Filters[i][0]){case "between":if(compareValue>=this.Filters[i][1]&&compareValue<=this.Filters[i][2]){filter_test=true;
}break;
case "!between":if(compareValue<this.Filters[i][1]&&compareValue>this.Filters[i][2]){filter_test=true;
}break;
}}else if(this.Filters[i][0]=="regex"&&filter_test==false){compareValue=this.getValueById(this.Filters[i][2],row);
var the_pattern=new RegExp(this.Filters[i][1],this.Filters[i][3]);
filter_test=the_pattern.test(compareValue);
}else if(this.Filters[i][0]=="notregex"&&filter_test==false){compareValue=this.getValueById(this.Filters[i][2],row);
var the_pattern=new RegExp(this.Filters[i][1],this.Filters[i][3]);
filter_test=!the_pattern.test(compareValue);
}}if(filter_test==true){this.hideRows(row,1,false);
row--;
rowLength--;
}}var data={firstRow:0,lastRow:rowLength-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
},hideRows:function(rowNum,numOfRows,dispatchEvent){var rowArr=this.getData();
dispatchEvent=(dispatchEvent!=null?dispatchEvent:true);

if(!this.__applyingFilters){this.__fullArr=rowArr.slice(0);
this.__applyingFilters=true;
}
if(numOfRows==null||numOfRows<1){numOfRows=1;
}
for(var kludge=rowNum;kludge<(rowArr.length-numOfRows);kludge++){rowArr[kludge]=rowArr[kludge+numOfRows];
}this.removeRows(kludge,numOfRows);
if(dispatchEvent){var data={firstRow:0,lastRow:rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
}},resetHiddenRows:function(){if(!this.__fullArr){return ;
}this.Filters=[];
this.setData(qx.lang.Array.clone(this.__fullArr));
},setData:function(rowArr,clearSorting){this.__fullArr=qx.lang.Array.clone(rowArr);
this.Filters=[];
this.base(arguments,rowArr,clearSorting);
}},destruct:function(){this.__fullArr=this.numericAllowed=this.betweenAllowed=this.Filters=null;
}});
qx.Interface.define("qx.ui.form.IDateForm",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){return arguments.length==1;
},resetValue:function(){},getValue:function(){}}});
qx.Class.define("qx.ui.control.DateChooser",{extend:qx.ui.core.Widget,include:[qx.ui.core.MExecutable,qx.ui.form.MForm],implement:[qx.ui.form.IExecutable,qx.ui.form.IForm,qx.ui.form.IDateForm],construct:function(date){this.base(arguments);
var layout=new qx.ui.layout.VBox();
this._setLayout(layout);
this._createChildControl("navigation-bar");
this._createChildControl("date-pane");
this.addListener("keypress",this._onKeyPress);
var shownDate=(date!=null)?date:new Date();
this.showMonth(shownDate.getMonth(),shownDate.getFullYear());
{};
this.addListener("mousedown",this._onMouseUpDown,this);
this.addListener("mouseup",this._onMouseUpDown,this);
},statics:{MONTH_YEAR_FORMAT:qx.locale.Date.getDateTimeFormat("yyyyMMMM","MMMM yyyy")},properties:{appearance:{refine:true,init:"datechooser"},width:{refine:true,init:200},height:{refine:true,init:150},shownMonth:{check:"Integer",init:null,nullable:true,event:"changeShownMonth"},shownYear:{check:"Integer",init:null,nullable:true,event:"changeShownYear"},value:{check:"Date",init:null,nullable:true,event:"changeValue",apply:"_applyValue"}},members:{__weekdayLabelArr:null,__dayLabelArr:null,__weekLabelArr:null,_forwardStates:{invalid:true},_createChildControlImpl:function(id){var control;

switch(id){case "navigation-bar":control=new qx.ui.container.Composite(new qx.ui.layout.HBox());
control.add(this.getChildControl("last-year-button"));
control.add(this.getChildControl("last-month-button"));
control.add(this.getChildControl("month-year-label"),{flex:1});
control.add(this.getChildControl("next-month-button"));
control.add(this.getChildControl("next-year-button"));
this._add(control);
break;
case "last-year-button-tooltip":control=new qx.ui.tooltip.ToolTip(this.tr("Last year"));
break;
case "last-year-button":control=new qx.ui.form.Button();
control.addState("lastYear");
control.setFocusable(false);
control.setToolTip(this.getChildControl("last-year-button-tooltip"));
control.addListener("click",this._onNavButtonClicked,this);
break;
case "last-month-button-tooltip":control=new qx.ui.tooltip.ToolTip(this.tr("Last month"));
break;
case "last-month-button":control=new qx.ui.toolbar.Button();
control.addState("lastMonth");
control.setFocusable(false);
control.setToolTip(this.getChildControl("last-month-button-tooltip"));
control.addListener("click",this._onNavButtonClicked,this);
break;
case "next-month-button-tooltip":control=new qx.ui.tooltip.ToolTip(this.tr("Next month"));
break;
case "next-month-button":control=new qx.ui.toolbar.Button();
control.addState("nextMonth");
control.setFocusable(false);
control.setToolTip(this.getChildControl("next-month-button-tooltip"));
control.addListener("click",this._onNavButtonClicked,this);
break;
case "next-year-button-tooltip":control=new qx.ui.tooltip.ToolTip(this.tr("Next year"));
break;
case "next-year-button":control=new qx.ui.toolbar.Button();
control.addState("nextYear");
control.setFocusable(false);
control.setToolTip(this.getChildControl("next-year-button-tooltip"));
control.addListener("click",this._onNavButtonClicked,this);
break;
case "month-year-label":control=new qx.ui.basic.Label();
control.setAllowGrowX(true);
control.setAnonymous(true);
break;
case "week":control=new qx.ui.basic.Label();
control.setAllowGrowX(true);
control.setAllowGrowY(true);
control.setSelectable(false);
control.setAnonymous(true);
control.setCursor("default");
break;
case "weekday":control=new qx.ui.basic.Label();
control.setAllowGrowX(true);
control.setAllowGrowY(true);
control.setSelectable(false);
control.setAnonymous(true);
control.setCursor("default");
break;
case "day":control=new qx.ui.basic.Label();
control.setAllowGrowX(true);
control.setAllowGrowY(true);
control.setCursor("default");
control.addListener("mousedown",this._onDayClicked,this);
control.addListener("dblclick",this._onDayDblClicked,this);
break;
case "date-pane":var controlLayout=new qx.ui.layout.Grid();
control=new qx.ui.container.Composite(controlLayout);

for(var i=0;i<8;i++){controlLayout.setColumnFlex(i,1);
}
for(var i=0;i<7;i++){controlLayout.setRowFlex(i,1);
}var label=this.getChildControl("week#0");
label.addState("header");
control.add(label,{column:0,row:0});
this.__weekdayLabelArr=[];

for(var i=0;i<7;i++){label=this.getChildControl("weekday#"+i);
control.add(label,{column:i+1,row:0});
this.__weekdayLabelArr.push(label);
}this.__dayLabelArr=[];
this.__weekLabelArr=[];

for(var y=0;y<6;y++){var label=this.getChildControl("week#"+(y+1));
control.add(label,{column:0,row:y+1});
this.__weekLabelArr.push(label);
for(var x=0;x<7;x++){var label=this.getChildControl("day#"+((y*7)+x));
control.add(label,{column:x+1,row:y+1});
this.__dayLabelArr.push(label);
}}this._add(control);
break;
}return control||this.base(arguments,id);
},_applyValue:function(value,old){if((value!=null)&&(this.getShownMonth()!=value.getMonth()||this.getShownYear()!=value.getFullYear())){this.showMonth(value.getMonth(),value.getFullYear());
}else{var newDay=(value==null)?-1:value.getDate();

for(var i=0;i<6*7;i++){var dayLabel=this.__dayLabelArr[i];

if(dayLabel.hasState("otherMonth")){if(dayLabel.hasState("selected")){dayLabel.removeState("selected");
}}else{var day=parseInt(dayLabel.getValue());

if(day==newDay){dayLabel.addState("selected");
}else if(dayLabel.hasState("selected")){dayLabel.removeState("selected");
}}}}},_onMouseUpDown:function(e){var target=e.getTarget();

if(target==this.getChildControl("navigation-bar")||target==this.getChildControl("date-pane")){e.stopPropagation();
return;
}},_onNavButtonClicked:function(evt){var year=this.getShownYear();
var month=this.getShownMonth();

switch(evt.getCurrentTarget()){case this.getChildControl("last-year-button"):year--;
break;
case this.getChildControl("last-month-button"):month--;

if(month<0){month=11;
year--;
}break;
case this.getChildControl("next-month-button"):month++;

if(month>=12){month=0;
year++;
}break;
case this.getChildControl("next-year-button"):year++;
break;
}this.showMonth(month,year);
},_onDayClicked:function(evt){var time=evt.getCurrentTarget().dateTime;
this.setValue(new Date(time));
},_onDayDblClicked:function(){this.execute();
},_onKeyPress:function(evt){var dayIncrement=null;
var monthIncrement=null;
var yearIncrement=null;

if(evt.getModifiers()==0){switch(evt.getKeyIdentifier()){case "Left":dayIncrement=-1;
break;
case "Right":dayIncrement=1;
break;
case "Up":dayIncrement=-7;
break;
case "Down":dayIncrement=7;
break;
case "PageUp":monthIncrement=-1;
break;
case "PageDown":monthIncrement=1;
break;
case "Escape":if(this.getValue()!=null){this.setValue(null);
return true;
}break;
case "Enter":case "Space":if(this.getValue()!=null){this.execute();
}return;
}}else if(evt.isShiftPressed()){switch(evt.getKeyIdentifier()){case "PageUp":yearIncrement=-1;
break;
case "PageDown":yearIncrement=1;
break;
}}
if(dayIncrement!=null||monthIncrement!=null||yearIncrement!=null){var date=this.getValue();

if(date!=null){date=new Date(date.getTime());
}
if(date==null){date=new Date();
}else{if(dayIncrement!=null){date.setDate(date.getDate()+dayIncrement);
}
if(monthIncrement!=null){date.setMonth(date.getMonth()+monthIncrement);
}
if(yearIncrement!=null){date.setFullYear(date.getFullYear()+yearIncrement);
}}this.setValue(date);
}},showMonth:function(month,year){if((month!=null&&month!=this.getShownMonth())||(year!=null&&year!=this.getShownYear())){if(month!=null){this.setShownMonth(month);
}
if(year!=null){this.setShownYear(year);
}this._updateDatePane();
}},handleKeyPress:function(e){this._onKeyPress(e);
},_updateDatePane:function(){var DateChooser=qx.ui.control.DateChooser;
var today=new Date();
var todayYear=today.getFullYear();
var todayMonth=today.getMonth();
var todayDayOfMonth=today.getDate();
var selDate=this.getValue();
var selYear=(selDate==null)?-1:selDate.getFullYear();
var selMonth=(selDate==null)?-1:selDate.getMonth();
var selDayOfMonth=(selDate==null)?-1:selDate.getDate();
var shownMonth=this.getShownMonth();
var shownYear=this.getShownYear();
var startOfWeek=qx.locale.Date.getWeekStart();
var helpDate=new Date(this.getShownYear(),this.getShownMonth(),1);
var monthYearFormat=new qx.util.format.DateFormat(DateChooser.MONTH_YEAR_FORMAT);
this.getChildControl("month-year-label").setValue(monthYearFormat.format(helpDate));
var firstDayOfWeek=helpDate.getDay();
var firstSundayInMonth=1+((7-firstDayOfWeek)%7);
var weekDayFormat=new qx.util.format.DateFormat("EE");

for(var i=0;i<7;i++){var day=(i+startOfWeek)%7;
var dayLabel=this.__weekdayLabelArr[i];
helpDate.setDate(firstSundayInMonth+day);
dayLabel.setValue(weekDayFormat.format(helpDate));

if(qx.locale.Date.isWeekend(day)){dayLabel.addState("weekend");
}else{dayLabel.removeState("weekend");
}}helpDate=new Date(shownYear,shownMonth,1,12,0,0);
var nrDaysOfLastMonth=(7+firstDayOfWeek-startOfWeek)%7;
helpDate.setDate(helpDate.getDate()-nrDaysOfLastMonth);
var weekFormat=new qx.util.format.DateFormat("ww");

for(var week=0;week<6;week++){this.__weekLabelArr[week].setValue(weekFormat.format(helpDate));

for(var i=0;i<7;i++){var dayLabel=this.__dayLabelArr[week*7+i];
var year=helpDate.getFullYear();
var month=helpDate.getMonth();
var dayOfMonth=helpDate.getDate();
var isSelectedDate=(selYear==year&&selMonth==month&&selDayOfMonth==dayOfMonth);

if(isSelectedDate){dayLabel.addState("selected");
}else{dayLabel.removeState("selected");
}
if(month!=shownMonth){dayLabel.addState("otherMonth");
}else{dayLabel.removeState("otherMonth");
}var isToday=(year==todayYear&&month==todayMonth&&dayOfMonth==todayDayOfMonth);

if(isToday){dayLabel.addState("today");
}else{dayLabel.removeState("today");
}dayLabel.setValue(""+dayOfMonth);
dayLabel.dateTime=helpDate.getTime();
helpDate.setDate(helpDate.getDate()+1);
}}monthYearFormat.dispose();
weekDayFormat.dispose();
weekFormat.dispose();
}},destruct:function(){{};
this.__weekdayLabelArr=this.__dayLabelArr=this.__weekLabelArr=null;
}});
qx.Class.define("qx.ui.toolbar.Button",{extend:qx.ui.form.Button,construct:function(label,icon,command){this.base(arguments,label,icon,command);
this.removeListener("keydown",this._onKeyDown);
this.removeListener("keyup",this._onKeyUp);
},properties:{appearance:{refine:true,init:"toolbar-button"},show:{refine:true,init:"inherit"},focusable:{refine:true,init:false}}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Abstract",{type:"abstract",extend:qx.core.Object,members:{_getCellStyle:function(cellInfo){return "";
},_getCellExtras:function(cellInfo){return "";
},_getContentHtml:function(cellInfo){return cellInfo.cellData||"";
},render:function(cellInfo){var html=[];
var style=this._getCellStyle(cellInfo);
html.push("<div ","class='",cellInfo.stylesheet,"' ");

if(style){html.push("style='",style,"'");
}html.push(this._getCellExtras(cellInfo),">",this._getContentHtml(cellInfo),"</div>");
return html.join("");
}}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.String",{extend:qx.ui.progressive.renderer.table.cell.Abstract,construct:function(){this.base(arguments);
},members:{_getContentHtml:function(cellInfo){return qx.bom.String.escape(cellInfo.cellData);
}}});
qx.Interface.define("qx.ui.form.renderer.IFormRenderer",{members:{addItems:function(items,names,title){},addButton:function(button){}}});
qx.Class.define("qx.ui.table.cellrenderer.Conditional",{extend:qx.ui.table.cellrenderer.Default,construct:function(align,color,style,weight){this.base(arguments);
this.numericAllowed=["==","!=",">","<",">=","<="];
this.betweenAllowed=["between","!between"];
this.conditions=[];
this.__defaultTextAlign=align||"";
this.__defaultColor=color||"";
this.__defaultFontStyle=style||"";
this.__defaultFontWeight=weight||"";
},members:{__defaultTextAlign:null,__defaultColor:null,__defaultFontStyle:null,__defaultFontWeight:null,__applyFormatting:function(condition,style){if(condition[1]!=null){style["text-align"]=condition[1];
}
if(condition[2]!=null){style["color"]=condition[2];
}
if(condition[3]!=null){style["font-style"]=condition[3];
}
if(condition[4]!=null){style["font-weight"]=condition[4];
}},addNumericCondition:function(condition,value1,align,color,style,weight,target){var temp=null;

if(qx.lang.Array.contains(this.numericAllowed,condition)){if(value1!=null){temp=[condition,align,color,style,weight,value1,target];
}}
if(temp!=null){this.conditions.push(temp);
}else{throw new Error("Condition not recognized or value is null!");
}},addBetweenCondition:function(condition,value1,value2,align,color,style,weight,target){if(qx.lang.Array.contains(this.betweenAllowed,condition)){if(value1!=null&&value2!=null){var temp=[condition,align,color,style,weight,value1,value2,target];
}}
if(temp!=null){this.conditions.push(temp);
}else{throw new Error("Condition not recognized or value1/value2 is null!");
}},addRegex:function(regex,align,color,style,weight,target){if(regex!=null){var temp=["regex",align,color,style,weight,regex,target];
}
if(temp!=null){this.conditions.push(temp);
}else{throw new Error("regex cannot be null!");
}},_getCellStyle:function(cellInfo){if(!this.conditions.length){return cellInfo.style||"";
}var tableModel=cellInfo.table.getTableModel();
var i;
var cond_test;
var compareValue;
var style={"text-align":this.__defaultTextAlign,"color":this.__defaultColor,"font-style":this.__defaultFontStyle,"font-weight":this.__defaultFontWeight};

for(i in this.conditions){cond_test=false;

if(qx.lang.Array.contains(this.numericAllowed,this.conditions[i][0])){if(this.conditions[i][6]==null){compareValue=cellInfo.value;
}else{compareValue=tableModel.getValueById(this.conditions[i][6],cellInfo.row);
}
switch(this.conditions[i][0]){case "==":if(compareValue==this.conditions[i][5]){cond_test=true;
}break;
case "!=":if(compareValue!=this.conditions[i][5]){cond_test=true;
}break;
case ">":if(compareValue>this.conditions[i][5]){cond_test=true;
}break;
case "<":if(compareValue<this.conditions[i][5]){cond_test=true;
}break;
case ">=":if(compareValue>=this.conditions[i][5]){cond_test=true;
}break;
case "<=":if(compareValue<=this.conditions[i][5]){cond_test=true;
}break;
}}else if(qx.lang.Array.contains(this.betweenAllowed,this.conditions[i][0])){if(this.conditions[i][7]==null){compareValue=cellInfo.value;
}else{compareValue=tableModel.getValueById(this.conditions[i][7],cellInfo.row);
}
switch(this.conditions[i][0]){case "between":if(compareValue>=this.conditions[i][5]&&compareValue<=this.conditions[i][6]){cond_test=true;
}break;
case "!between":if(compareValue<this.conditions[i][5]&&compareValue>this.conditions[i][6]){cond_test=true;
}break;
}}else if(this.conditions[i][0]=="regex"){if(this.conditions[i][6]==null){compareValue=cellInfo.value;
}else{compareValue=tableModel.getValueById(this.conditions[i][6],cellInfo.row);
}var the_pattern=new RegExp(this.conditions[i][5],'g');
cond_test=the_pattern.test(compareValue);
}if(cond_test==true){this.__applyFormatting(this.conditions[i],style);
}}var styleString=[];

for(var key in style){if(style[key]){styleString.push(key,":",style[key],";");
}}return styleString.join("");
}},destruct:function(){this.numericAllowed=this.betweenAllowed=this.conditions=null;
}});
qx.Class.define("qx.ui.table.cellrenderer.Date",{extend:qx.ui.table.cellrenderer.Conditional,properties:{dateFormat:{check:"qx.util.format.DateFormat",init:null,nullable:true}},members:{_getContentHtml:function(cellInfo){var df=this.getDateFormat();

if(df){if(cellInfo.value){return qx.bom.String.escape(df.format(cellInfo.value));
}else{return "";
}}else{return cellInfo.value||"";
}},_getCellClass:function(cellInfo){return "qooxdoo-table-cell";
}}});
qx.Class.define("qx.ui.virtual.layer.HtmlCell",{extend:qx.ui.virtual.layer.Abstract,construct:function(htmlCellProvider){this.base(arguments);
this.setZIndex(2);
{this.assertInterface(htmlCellProvider,qx.ui.virtual.core.IHtmlCellProvider);
};
this._cellProvider=htmlCellProvider;
},members:{_getCellSizeStyle:function(width,height,insetX,insetY){var style="";

if(qx.bom.client.Feature.CONTENT_BOX){width-=insetX;
height-=insetY;
}style+="width:"+width+"px;";
style+="height:"+height+"px;";
return style;
},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var html=[];
var left=0;
var top=0;
var row=firstRow;
var column=firstColumn;

for(var y=0;y<rowSizes.length;y++){var left=0;
var column=firstColumn;
var height=rowSizes[y];

for(var x=0;x<columnSizes.length;x++){var width=columnSizes[x];
var cellProperties=this._cellProvider.getCellProperties(row,column);
var insets=cellProperties.insets||[0,0];
html.push("<div ","style='","left:",left,"px;","top:",top,"px;",this._getCellSizeStyle(width,height,insets[0],insets[1]),cellProperties.style||"","' ","class='",cellProperties.classes||"","' ",cellProperties.attributes||"",">",cellProperties.content||"","</div>");
column++;
left+=width;
}top+=height;
row++;
}this.getContentElement().setAttribute("html",html.join(""));
}},destruct:function(){this._cellProvider=null;
}});
qx.Interface.define("qx.ui.virtual.core.IHtmlCellProvider",{members:{getCellProperties:function(row,column){}}});
qx.Interface.define("qx.ui.form.IRadioItem",{events:{"changeValue":"qx.event.type.Data"},members:{setValue:function(value){},getValue:function(){},setGroup:function(value){this.assertInstance(value,qx.ui.form.RadioGroup);
},getGroup:function(){}}});
qx.Class.define("qx.ui.groupbox.RadioGroupBox",{extend:qx.ui.groupbox.GroupBox,implement:[qx.ui.form.IRadioItem,qx.ui.form.IExecutable,qx.ui.form.IBooleanForm],properties:{appearance:{refine:true,init:"radio-groupbox"}},events:{"changeValue":"qx.event.type.Data","execute":"qx.event.type.Event"},members:{_createChildControlImpl:function(id){var control;

switch(id){case "legend":control=new qx.ui.form.RadioButton;
control.setValue(true);
control.addListener("changeValue",this._onRadioChangeValue,this);
control.addListener("resize",this._repositionFrame,this);
control.addListener("execute",this._onExecute,this);
this._add(control);
}return control||this.base(arguments,id);
},_onExecute:function(e){this.fireEvent("execute");
},_onRadioChangeValue:function(e){var checked=e.getData()?true:false;
this.getChildrenContainer().setEnabled(checked);
this.fireDataEvent("changeChecked",checked);
this.fireDataEvent("changeValue",checked,e.getOldData());
},_onRadioChangeName:function(e){this.fireDataEvent("changeName",e.getData());
},execute:function(){this.getChildControl("legend").execute();
},setCommand:function(command){this.getChildControl("legend").setCommand(command);
},getCommand:function(){return this.getChildControl("legend").getCommand();
},getGroup:function(){return this.getChildControl("legend").getGroup();
},setGroup:function(value){if(value!=null){value.add(this);
}return;
},getValue:function(){return this.getChildControl("legend").getValue();
},setValue:function(value){this.getChildControl("legend").setValue(value);
},resetValue:function(){this.getChildControl("legend").resetValue();
},getLabel:function(){return this.getChildControl("legend").getLabel();
}}});
qx.Class.define("qx.ui.form.RadioButton",{extend:qx.ui.form.Button,include:[qx.ui.form.MForm,qx.ui.form.MModelProperty],implement:[qx.ui.form.IRadioItem,qx.ui.form.IForm,qx.ui.form.IBooleanForm,qx.ui.form.IModel],construct:function(label){{this.assertArgumentsCount(arguments,0,1);
};
this.base(arguments,label);
this.addListener("execute",this._onExecute);
this.addListener("keypress",this._onKeyPress);
},properties:{group:{check:"qx.ui.form.RadioGroup",nullable:true,apply:"_applyGroup"},value:{check:"Boolean",nullable:true,event:"changeValue",apply:"_applyValue",init:false},appearance:{refine:true,init:"radiobutton"},allowGrowX:{refine:true,init:false}},members:{_applyValue:function(value,old){value?this.addState("checked"):this.removeState("checked");

if(value&&this.getFocusable()){this.focus();
}},_applyGroup:function(value,old){if(old){old.remove(this);
}
if(value){value.add(this);
}},_onExecute:function(e){this.setValue(true);
},_onKeyPress:function(e){var grp=this.getGroup();

if(!grp){return;
}
switch(e.getKeyIdentifier()){case "Left":case "Up":grp.selectPrevious();
break;
case "Right":case "Down":grp.selectNext();
break;
}}}});
qx.Class.define("qx.ui.form.SplitButton",{extend:qx.ui.core.Widget,include:[qx.ui.core.MExecutable],implement:[qx.ui.form.IExecutable],construct:function(label,icon,menu,command){this.base(arguments);
this._setLayout(new qx.ui.layout.HBox);
this._createChildControl("arrow");
this.addListener("mouseover",this._onMouseOver,this,true);
this.addListener("mouseout",this._onMouseOut,this,true);
this.addListener("keydown",this._onKeyDown);
this.addListener("keyup",this._onKeyUp);
if(label!=null){this.setLabel(label);
}
if(icon!=null){this.setIcon(icon);
}
if(menu!=null){this.setMenu(menu);
}
if(command!=null){this.setCommand(command);
}},properties:{appearance:{refine:true,init:"splitbutton"},focusable:{refine:true,init:true},label:{apply:"_applyLabel",nullable:true,check:"String"},icon:{check:"String",apply:"_applyIcon",nullable:true,themeable:true},show:{init:"both",check:["both","label","icon"],themeable:true,inheritable:true,apply:"_applyShow",event:"changeShow"},menu:{check:"qx.ui.menu.Menu",nullable:true,apply:"_applyMenu",event:"changeMenu"}},members:{__cursorIsOut:null,_createChildControlImpl:function(id){var control;

switch(id){case "button":control=new qx.ui.form.Button;
control.addListener("execute",this._onButtonExecute,this);
control.setFocusable(false);
this._addAt(control,0,{flex:1});
break;
case "arrow":control=new qx.ui.form.MenuButton;
control.setFocusable(false);
this._addAt(control,1);
break;
}return control||this.base(arguments,id);
},_forwardStates:{hovered:1,focused:1},_applyLabel:function(value,old){var button=this.getChildControl("button");
value==null?button.resetLabel():button.setLabel(value);
},_applyIcon:function(value,old){var button=this.getChildControl("button");
value==null?button.resetIcon():button.setIcon(value);
},_applyMenu:function(value,old){var arrow=this.getChildControl("arrow");

if(value){arrow.resetEnabled();
arrow.setMenu(value);
value.setOpener(this);
value.addListener("changeVisibility",this._onChangeMenuVisibility,this);
}else{arrow.setEnabled(false);
arrow.resetMenu();
}
if(old){old.removeListener("changeVisibility",this._onChangeMenuVisibility,this);
old.resetOpener();
}},_applyShow:function(value,old){},_onMouseOver:function(e){e.stopPropagation();
this.addState("hovered");
delete this.__cursorIsOut;
},_onMouseOut:function(e){e.stopPropagation();
if(!this.hasState("hovered")){return;
}var related=e.getRelatedTarget();

if(qx.ui.core.Widget.contains(this,related)){return;
}var menu=this.getMenu();

if(menu&&menu.isVisible()){this.__cursorIsOut=true;
return;
}this.removeState("hovered");
},_onKeyDown:function(e){var button=this.getChildControl("button");

switch(e.getKeyIdentifier()){case "Enter":case "Space":button.removeState("abandoned");
button.addState("pressed");
}},_onKeyUp:function(e){var button=this.getChildControl("button");

switch(e.getKeyIdentifier()){case "Enter":case "Space":if(button.hasState("pressed")){button.removeState("abandoned");
button.removeState("pressed");
button.execute();
}}},_onButtonExecute:function(e){this.execute();
},_onChangeMenuVisibility:function(e){if(!this.getMenu().isVisible()&&this.__cursorIsOut){this.removeState("hovered");
}}}});
qx.Class.define("qx.ui.toolbar.SplitButton",{extend:qx.ui.form.SplitButton,construct:function(label,icon,menu,command){this.base(arguments,label,icon,menu,command);
this.removeListener("keydown",this._onKeyDown);
this.removeListener("keyup",this._onKeyUp);
},properties:{appearance:{refine:true,init:"toolbar-splitbutton"},focusable:{refine:true,init:false}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "button":control=new qx.ui.toolbar.Button;
control.addListener("execute",this._onButtonExecute,this);
this._addAt(control,0);
break;
case "arrow":control=new qx.ui.toolbar.MenuButton;
this._addAt(control,1);
break;
}return control||this.base(arguments,id);
}}});
qx.Class.define("qx.ui.toolbar.MenuButton",{extend:qx.ui.menubar.Button,properties:{appearance:{refine:true,init:"toolbar-menubutton"},showArrow:{check:"Boolean",init:false,themeable:true,apply:"_applyShowArrow"}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "arrow":control=new qx.ui.basic.Image();
control.setAnonymous(true);
this._addAt(control,10);
break;
}return control||this.base(arguments,id);
},_applyShowArrow:function(value,old){if(value){this._showChildControl("arrow");
}else{this._excludeChildControl("arrow");
}}}});
qx.Class.define("qx.ui.core.selection.ScrollArea",{extend:qx.ui.core.selection.Widget,members:{_isSelectable:function(item){return (item.isEnabled()&&item.isVisible()&&item.getLayoutParent()===this._getWidget().getChildrenContainer());
},_getDimension:function(){return this._getWidget().getPaneSize();
},_getScroll:function(){var widget=this._getWidget();
return {left:widget.getScrollX(),top:widget.getScrollY()};
},_scrollBy:function(xoff,yoff){var widget=this._getWidget();
widget.scrollByX(xoff);
widget.scrollByY(yoff);
},_getPage:function(lead,up){var selectables=this.getSelectables();
var length=selectables.length;
var start=selectables.indexOf(lead);
if(start===-1){throw new Error("Invalid lead item: "+lead);
}var widget=this._getWidget();
var scrollTop=widget.getScrollY();
var innerHeight=widget.getInnerSize().height;
var top,bottom,found;

if(up){var min=scrollTop;
var i=start;
while(1){for(;i>=0;i--){top=widget.getItemTop(selectables[i]);
if(top<min){found=i+1;
break;
}}if(found==null){var first=this._getFirstSelectable();
return first==lead?null:first;
}if(found>=start){min-=innerHeight+scrollTop-widget.getItemBottom(lead);
found=null;
continue;
}return selectables[found];
}}else{var max=innerHeight+scrollTop;
var i=start;
while(1){for(;i<length;i++){bottom=widget.getItemBottom(selectables[i]);
if(bottom>max){found=i-1;
break;
}}if(found==null){var last=this._getLastSelectable();
return last==lead?null:last;
}if(found<=start){max+=widget.getItemTop(lead)-scrollTop;
found=null;
continue;
}return selectables[found];
}}}}});
qx.Class.define("qx.ui.tree.SelectionManager",{extend:qx.ui.core.selection.ScrollArea,members:{_getSelectableLocationY:function(item){var computed=item.getBounds();

if(computed){var top=this._getWidget().getItemTop(item);
return {top:top,bottom:top+computed.height};
}},_isSelectable:function(item){return item instanceof qx.ui.tree.AbstractTreeItem&&item.isEnabled()&&item.isVisible();
},_getSelectableFromMouseEvent:function(event){return this._getWidget().getTreeItem(event.getTarget());
},getSelectables:function(){var widget=this._getWidget();
var result=[];

if(widget.getRoot()!=null){var items=widget.getRoot().getItems(true,false,widget.getHideRoot());

for(var i=0;i<items.length;i++){if(this._isSelectable(items[i])){result.push(items[i]);
}}}return result;
},_getSelectableRange:function(item1,item2){if(item1===item2){return [item1];
}var selectables=this.getSelectables();
var item1Index=selectables.indexOf(item1);
var item2Index=selectables.indexOf(item2);

if(item1Index<0||item2Index<0){return [];
}
if(item1Index<item2Index){return selectables.slice(item1Index,item2Index+1);
}else{return selectables.slice(item2Index,item1Index+1);
}},_getFirstSelectable:function(){return this.getSelectables()[0]||null;
},_getLastSelectable:function(){var selectables=this.getSelectables();

if(selectables.length>0){return selectables[selectables.length-1];
}else{return null;
}},_getRelatedSelectable:function(item,relation){var widget=this._getWidget();
var related=null;

switch(relation){case "above":related=widget.getPreviousNodeOf(item,false);
break;
case "under":related=widget.getNextNodeOf(item,false);
break;
case "left":case "right":break;
}
if(!related){return null;
}
if(this._isSelectable(related)){return related;
}else{return this._getRelatedSelectable(related,relation);
}}}});
qx.Class.define("qx.ui.form.AbstractSelectBox",{extend:qx.ui.core.Widget,include:[qx.ui.core.MRemoteChildrenHandling,qx.ui.form.MForm],implement:[qx.ui.form.IForm],type:"abstract",construct:function(){this.base(arguments);
var layout=new qx.ui.layout.HBox();
this._setLayout(layout);
layout.setAlignY("middle");
this.addListener("keypress",this._onKeyPress);
this.addListener("blur",this._onBlur,this);
var root=qx.core.Init.getApplication().getRoot();
root.addListener("mousewheel",this._onMousewheel,this,true);
this.addListener("resize",this._onResize,this);
},properties:{focusable:{refine:true,init:true},width:{refine:true,init:120},maxListHeight:{check:"Number",apply:"_applyMaxListHeight",nullable:true,init:200},format:{check:"Function",init:function(item){return this._defaultFormat(item);
},nullable:true}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "list":control=new qx.ui.form.List().set({focusable:false,keepFocus:true,height:null,width:null,maxHeight:this.getMaxListHeight(),selectionMode:"one",quickSelection:true});
control.addListener("changeSelection",this._onListChangeSelection,this);
control.addListener("mousedown",this._onListMouseDown,this);
break;
case "popup":control=new qx.ui.popup.Popup(new qx.ui.layout.VBox);
control.setAutoHide(false);
control.setKeepActive(true);
control.addListener("mouseup",this.close,this);
control.add(this.getChildControl("list"));
control.addListener("changeVisibility",this._onPopupChangeVisibility,this);
break;
}return control||this.base(arguments,id);
},_applyMaxListHeight:function(value,old){this.getChildControl("list").setMaxHeight(value);
},getChildrenContainer:function(){return this.getChildControl("list");
},open:function(){var popup=this.getChildControl("popup");
popup.placeToWidget(this,true);
popup.show();
},close:function(){this.getChildControl("popup").hide();
},toggle:function(){var isListOpen=this.getChildControl("popup").isVisible();

if(isListOpen){this.close();
}else{this.open();
}},_defaultFormat:function(item){var valueLabel=item?item.getLabel():"";
var rich=item?item.getRich():false;

if(rich){valueLabel=valueLabel.replace(/<[^>]+?>/g,"");
valueLabel=qx.bom.String.unescape(valueLabel);
}return valueLabel;
},_onBlur:function(e){this.close();
},_onKeyPress:function(e){var identifier=e.getKeyIdentifier();
var listPopup=this.getChildControl("popup");
if(listPopup.isHidden()&&(identifier=="PageDown"||identifier=="PageUp")){e.stopPropagation();
}else if(!listPopup.isHidden()&&identifier=="Escape"){this.close();
e.stop();
}else{this.getChildControl("list").handleKeyPress(e);
}},_onMousewheel:function(e){var target=e.getTarget();
var popup=this.getChildControl("popup");

if(qx.ui.core.Widget.contains(popup,target)){e.preventDefault();
}else{this.close();
}},_onResize:function(e){this.getChildControl("popup").setMinWidth(e.getData().width);
},_onListChangeSelection:function(e){throw new Error("Abstract method: _onListChangeSelection()");
},_onListMouseDown:function(e){throw new Error("Abstract method: _onListMouseDown()");
},_onPopupChangeVisibility:function(e){throw new Error("Abstract method: _onPopupChangeVisibility()");
}},destruct:function(){var root=qx.core.Init.getApplication().getRoot();

if(root){root.removeListener("mousewheel",this._onMousewheel,this,true);
}}});
qx.Class.define("qx.ui.form.ComboBox",{extend:qx.ui.form.AbstractSelectBox,implement:[qx.ui.form.IStringForm],construct:function(){this.base(arguments);
var textField=this._createChildControl("textfield");
this._createChildControl("button");
this.addListener("click",this._onClick);
this.addListener("focusin",function(e){textField.fireNonBubblingEvent("focusin",qx.event.type.Focus);
},this);
this.addListener("focusout",function(e){textField.fireNonBubblingEvent("focusout",qx.event.type.Focus);
},this);
},properties:{appearance:{refine:true,init:"combobox"},placeholder:{check:"String",nullable:true,apply:"_applyPlaceholder"}},events:{"changeValue":"qx.event.type.Data"},members:{__preSelectedItem:null,__onInputId:null,_applyPlaceholder:function(value,old){this.getChildControl("textfield").setPlaceholder(value);
},_createChildControlImpl:function(id){var control;

switch(id){case "textfield":control=new qx.ui.form.TextField();
control.setFocusable(false);
control.addState("inner");
control.addListener("changeValue",this._onTextFieldChangeValue,this);
control.addListener("blur",this.close,this);
this._add(control,{flex:1});
break;
case "button":control=new qx.ui.form.Button();
control.setFocusable(false);
control.setKeepActive(true);
control.addState("inner");
this._add(control);
break;
case "list":control=this.base(arguments,id);
control.setSelectionMode("single");
break;
}return control||this.base(arguments,id);
},_forwardStates:{focused:true},tabFocus:function(){var field=this.getChildControl("textfield");
field.getFocusElement().focus();
field.selectAllText();
},setValue:function(value){var textfield=this.getChildControl("textfield");

if(textfield.getValue()==value){return;
}textfield.setValue(value);
},getValue:function(){return this.getChildControl("textfield").getValue();
},resetValue:function(){this.getChildControl("textfield").setValue(null);
},_onKeyPress:function(e){var popup=this.getChildControl("popup");
var iden=e.getKeyIdentifier();

if(iden=="Down"&&e.isAltPressed()){this.getChildControl("button").addState("selected");
this.toggle();
e.stopPropagation();
}else if(iden=="Enter"){if(popup.isVisible()){this.close();
e.stop();
}}else if(popup.isVisible()){this.base(arguments,e);
}},_onClick:function(e){var target=e.getTarget();

if(target==this.getChildControl("button")){this.toggle();
}else{this.close();
}},_onListMouseDown:function(e){if(this.__preSelectedItem){var label=this.__preSelectedItem.getLabel();

if(this.getFormat()!=null){label=this.getFormat().call(this,this.__preSelectedItem);
}if(label&&label.translate){label=label.translate();
}this.setValue(label);
this.__preSelectedItem=null;
}},_onListChangeSelection:function(e){var current=e.getData();

if(current.length>0){var list=this.getChildControl("list");

if(list.getSelectionContext()=="quick"){this.__preSelectedItem=current[0];
}else{var label=current[0].getLabel();

if(this.getFormat()!=null){label=this.getFormat().call(this,current[0]);
}if(label&&label.translate){label=label.translate();
}this.setValue(label);
this.__preSelectedItem=null;
}}},_onPopupChangeVisibility:function(e){var popup=this.getChildControl("popup");

if(popup.isVisible()){var list=this.getChildControl("list");
var value=this.getValue();
var item=null;

if(value){item=list.findItem(value);
}
if(item){list.setSelection([item]);
}else{list.resetSelection();
}}else{this.tabFocus();
}this.getChildControl("button").removeState("selected");
},_onTextFieldChangeValue:function(e){var value=e.getData();
var list=this.getChildControl("list");

if(value!=null){var item=list.findItem(value,false);

if(item){list.setSelection([item]);
}else{list.resetSelection();
}}else{list.resetSelection();
}this.fireDataEvent("changeValue",value,e.getOldData());
},getTextSelection:function(){return this.getChildControl("textfield").getTextSelection();
},getTextSelectionLength:function(){return this.getChildControl("textfield").getTextSelectionLength();
},setTextSelection:function(start,end){this.getChildControl("textfield").setTextSelection(start,end);
},clearTextSelection:function(){this.getChildControl("textfield").clearTextSelection();
},selectAllText:function(){this.getChildControl("textfield").selectAllText();
}}});
qx.core.Setting.define("qx.nativeScrollBars",false);
qx.Mixin.define("qx.ui.core.scroll.MScrollBarFactory",{members:{_createScrollBar:function(orientation){if(qx.core.Setting.get("qx.nativeScrollBars")){return new qx.ui.core.scroll.NativeScrollBar(orientation);
}else{return new qx.ui.core.scroll.ScrollBar(orientation);
}}}});
qx.Class.define("qx.ui.core.scroll.AbstractScrollArea",{extend:qx.ui.core.Widget,include:qx.ui.core.scroll.MScrollBarFactory,type:"abstract",construct:function(){this.base(arguments);
var grid=new qx.ui.layout.Grid();
grid.setColumnFlex(0,1);
grid.setRowFlex(0,1);
this._setLayout(grid);
this.addListener("mousewheel",this._onMouseWheel,this);
},properties:{appearance:{refine:true,init:"scrollarea"},width:{refine:true,init:100},height:{refine:true,init:200},scrollbarX:{check:["auto","on","off"],init:"auto",themeable:true,apply:"_computeScrollbars"},scrollbarY:{check:["auto","on","off"],init:"auto",themeable:true,apply:"_computeScrollbars"},scrollbar:{group:["scrollbarX","scrollbarY"]}},members:{_createChildControlImpl:function(id){var control;

switch(id){case "pane":control=new qx.ui.core.scroll.ScrollPane();
control.addListener("update",this._computeScrollbars,this);
control.addListener("scrollX",this._onScrollPaneX,this);
control.addListener("scrollY",this._onScrollPaneY,this);
this._add(control,{row:0,column:0});
break;
case "scrollbar-x":control=this._createScrollBar("horizontal");
control.setMinWidth(0);
control.exclude();
control.addListener("scroll",this._onScrollBarX,this);
control.addListener("changeVisibility",this._onChangeScrollbarXVisibility,this);
this._add(control,{row:1,column:0});
break;
case "scrollbar-y":control=this._createScrollBar("vertical");
control.setMinHeight(0);
control.exclude();
control.addListener("scroll",this._onScrollBarY,this);
control.addListener("changeVisibility",this._onChangeScrollbarYVisibility,this);
this._add(control,{row:0,column:1});
break;
case "corner":control=new qx.ui.core.Widget();
control.setWidth(0);
control.setHeight(0);
control.exclude();
this._add(control,{row:1,column:1});
break;
}return control||this.base(arguments,id);
},getPaneSize:function(){return this.getChildControl("pane").getInnerSize();
},getItemTop:function(item){return this.getChildControl("pane").getItemTop(item);
},getItemBottom:function(item){return this.getChildControl("pane").getItemBottom(item);
},getItemLeft:function(item){return this.getChildControl("pane").getItemLeft(item);
},getItemRight:function(item){return this.getChildControl("pane").getItemRight(item);
},scrollToX:function(value){qx.ui.core.queue.Manager.flush();
this.getChildControl("scrollbar-x").scrollTo(value);
},scrollByX:function(value){qx.ui.core.queue.Manager.flush();
this.getChildControl("scrollbar-x").scrollBy(value);
},getScrollX:function(){var scrollbar=this.getChildControl("scrollbar-x",true);
return scrollbar?scrollbar.getPosition():0;
},scrollToY:function(value){qx.ui.core.queue.Manager.flush();
this.getChildControl("scrollbar-y").scrollTo(value);
},scrollByY:function(value){qx.ui.core.queue.Manager.flush();
this.getChildControl("scrollbar-y").scrollBy(value);
},getScrollY:function(){var scrollbar=this.getChildControl("scrollbar-y",true);
return scrollbar?scrollbar.getPosition():0;
},_onScrollBarX:function(e){this.getChildControl("pane").scrollToX(e.getData());
},_onScrollBarY:function(e){this.getChildControl("pane").scrollToY(e.getData());
},_onScrollPaneX:function(e){this.scrollToX(e.getData());
},_onScrollPaneY:function(e){this.scrollToY(e.getData());
},_onMouseWheel:function(e){var showX=this._isChildControlVisible("scrollbar-x");
var showY=this._isChildControlVisible("scrollbar-y");
var scrollbar=(showY)?this.getChildControl("scrollbar-y",true):(showX?this.getChildControl("scrollbar-x",true):null);

if(scrollbar){scrollbar.scrollBySteps(e.getWheelDelta());
}e.stop();
},_onChangeScrollbarXVisibility:function(e){var showX=this._isChildControlVisible("scrollbar-x");
var showY=this._isChildControlVisible("scrollbar-y");

if(!showX){this.scrollToX(0);
}showX&&showY?this._showChildControl("corner"):this._excludeChildControl("corner");
},_onChangeScrollbarYVisibility:function(e){var showX=this._isChildControlVisible("scrollbar-x");
var showY=this._isChildControlVisible("scrollbar-y");

if(!showY){this.scrollToY(0);
}showX&&showY?this._showChildControl("corner"):this._excludeChildControl("corner");
},_computeScrollbars:function(){var pane=this.getChildControl("pane");
var content=pane.getChildren()[0];

if(!content){this._excludeChildControl("scrollbar-x");
this._excludeChildControl("scrollbar-y");
return;
}var innerSize=this.getInnerSize();
var paneSize=pane.getInnerSize();
var scrollSize=pane.getScrollSize();
if(!paneSize||!scrollSize){return;
}var scrollbarX=this.getScrollbarX();
var scrollbarY=this.getScrollbarY();

if(scrollbarX==="auto"&&scrollbarY==="auto"){var showX=scrollSize.width>innerSize.width;
var showY=scrollSize.height>innerSize.height;
if((showX||showY)&&!(showX&&showY)){if(showX){showY=scrollSize.height>paneSize.height;
}else if(showY){showX=scrollSize.width>paneSize.width;
}}}else{var showX=scrollbarX==="on";
var showY=scrollbarY==="on";
if(scrollSize.width>(showX?paneSize.width:innerSize.width)&&scrollbarX==="auto"){showX=true;
}
if(scrollSize.height>(showX?paneSize.height:innerSize.height)&&scrollbarY==="auto"){showY=true;
}}if(showX){var barX=this.getChildControl("scrollbar-x");
barX.show();
barX.setMaximum(Math.max(0,scrollSize.width-paneSize.width));
barX.setKnobFactor(paneSize.width/scrollSize.width);
}else{this._excludeChildControl("scrollbar-x");
}
if(showY){var barY=this.getChildControl("scrollbar-y");
barY.show();
barY.setMaximum(Math.max(0,scrollSize.height-paneSize.height));
barY.setKnobFactor(paneSize.height/scrollSize.height);
}else{this._excludeChildControl("scrollbar-y");
}}}});
qx.Mixin.define("qx.ui.core.MMultiSelectionHandling",{construct:function(){var clazz=this.SELECTION_MANAGER;
var manager=this.__manager=new clazz(this);
this.addListener("mousedown",manager.handleMouseDown,manager);
this.addListener("mouseup",manager.handleMouseUp,manager);
this.addListener("mouseover",manager.handleMouseOver,manager);
this.addListener("mousemove",manager.handleMouseMove,manager);
this.addListener("losecapture",manager.handleLoseCapture,manager);
this.addListener("keypress",manager.handleKeyPress,manager);
this.addListener("addItem",manager.handleAddItem,manager);
this.addListener("removeItem",manager.handleRemoveItem,manager);
manager.addListener("changeSelection",this._onSelectionChange,this);
},events:{"changeSelection":"qx.event.type.Data"},properties:{selectionMode:{check:["single","multi","additive","one"],init:"single",apply:"_applySelectionMode"},dragSelection:{check:"Boolean",init:false,apply:"_applyDragSelection"},quickSelection:{check:"Boolean",init:false,apply:"_applyQuickSelection"}},members:{__manager:null,selectAll:function(){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selecting all items."));
this.trace();
}this.__manager.selectAll();
},isSelected:function(item){if(!qx.ui.core.Widget.contains(this,item)){throw new Error("Could not test if "+item+" is selected, because it is not a child element!");
}return this.__manager.isItemSelected(item);
},addToSelection:function(item){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selecting the given items."));
this.trace();
}
if(!qx.ui.core.Widget.contains(this,item)){throw new Error("Could not add + "+item+" to selection, because it is not a child element!");
}this.__manager.addItem(item);
},removeFromSelection:function(item){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to removing the given items."));
this.trace();
}
if(!qx.ui.core.Widget.contains(this,item)){throw new Error("Could not remove "+item+" from selection, because it is not a child element!");
}this.__manager.removeItem(item);
},selectRange:function(begin,end){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selecting the given items."));
this.trace();
}this.__manager.selectItemRange(begin,end);
},resetSelection:function(){if(!this.getEnabled()){this.warn("Resetting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to resetting the selection."));
this.trace();
}this.__manager.clearSelection();
},setSelection:function(items){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selectiong the given items."));
this.trace();
}
for(var i=0;i<items.length;i++){if(!qx.ui.core.Widget.contains(this,items[i])){throw new Error("Could not select "+items[i]+", because it is not a child element!");
}}
if(items.length===0){this.resetSelection();
}else{var currentSelection=this.getSelection();

if(!qx.lang.Array.equals(currentSelection,items)){this.__manager.replaceSelection(items);
}}},getSelection:function(){return this.__manager.getSelection();
},getSortedSelection:function(){return this.__manager.getSortedSelection();
},isSelectionEmpty:function(){return this.__manager.isSelectionEmpty();
},getSelectionContext:function(){return this.__manager.getSelectionContext();
},_getManager:function(){return this.__manager;
},getSelectables:function(){return this.__manager.getSelectables();
},invertSelection:function(){if(!this.getEnabled()){this.warn("Setting the selection on disabled '"+this.classname+"' is deprecated: "+("The current behavior will change from doing nothing to selecting the given items."));
this.trace();
}this.__manager.invertSelection();
},_getLeadItem:function(){var mode=this.__manager.getMode();

if(mode==="single"||mode==="one"){return this.__manager.getSelectedItem();
}else{return this.__manager.getLeadItem();
}},_applySelectionMode:function(value,old){this.__manager.setMode(value);
},_applyDragSelection:function(value,old){this.__manager.setDrag(value);
},_applyQuickSelection:function(value,old){this.__manager.setQuick(value);
},_onSelectionChange:function(e){this.fireDataEvent("changeSelection",e.getData());
}},destruct:function(){this._disposeObjects("__manager");
}});
qx.Class.define("qx.ui.form.List",{extend:qx.ui.core.scroll.AbstractScrollArea,implement:[qx.ui.core.IMultiSelection,qx.ui.form.IForm,qx.ui.form.IModelSelection],include:[qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MMultiSelectionHandling,qx.ui.form.MForm,qx.ui.form.MModelSelection],construct:function(horizontal){this.base(arguments);
this.__content=new qx.ui.container.Composite();
this.__content.addListener("addChildWidget",this._onAddChild,this);
this.__content.addListener("removeChildWidget",this._onRemoveChild,this);
this.getChildControl("pane").add(this.__content);
if(horizontal){this.setOrientation("horizontal");
}else{this.initOrientation();
}this.addListener("keypress",this._onKeyPress);
this.addListener("keyinput",this._onKeyInput);
this.__pressedString="";
},events:{addItem:"qx.event.type.Data",removeItem:"qx.event.type.Data"},properties:{appearance:{refine:true,init:"list"},focusable:{refine:true,init:true},orientation:{check:["horizontal","vertical"],init:"vertical",apply:"_applyOrientation"},spacing:{check:"Integer",init:0,apply:"_applySpacing",themeable:true},enableInlineFind:{check:"Boolean",init:true}},members:{__pressedString:null,__lastKeyPress:null,__content:null,SELECTION_MANAGER:qx.ui.core.selection.ScrollArea,getChildrenContainer:function(){return this.__content;
},_onAddChild:function(e){this.fireDataEvent("addItem",e.getData());
},_onRemoveChild:function(e){this.fireDataEvent("removeItem",e.getData());
},handleKeyPress:function(e){if(!this._onKeyPress(e)){this._getManager().handleKeyPress(e);
}},_applyOrientation:function(value,old){var horizontal=value==="horizontal";
var layout=horizontal?new qx.ui.layout.HBox():new qx.ui.layout.VBox();
var content=this.__content;
content.setLayout(layout);
content.setAllowGrowX(!horizontal);
content.setAllowGrowY(horizontal);
this._applySpacing(this.getSpacing());
},_applySpacing:function(value,old){this.__content.getLayout().setSpacing(value);
},_onKeyPress:function(e){if(e.getKeyIdentifier()=="Enter"&&!e.isAltPressed()){var items=this.getSelection();

for(var i=0;i<items.length;i++){items[i].fireEvent("action");
}return true;
}return false;
},_onKeyInput:function(e){if(!this.getEnableInlineFind()){return;
}var mode=this.getSelectionMode();

if(!(mode==="single"||mode==="one")){return;
}if(((new Date).valueOf()-this.__lastKeyPress)>1000){this.__pressedString="";
}this.__pressedString+=e.getChar();
var matchedItem=this.findItemByLabelFuzzy(this.__pressedString);
if(matchedItem){this.setSelection([matchedItem]);
}this.__lastKeyPress=(new Date).valueOf();
},findItemByLabelFuzzy:function(search){search=search.toLowerCase();
var items=this.getChildren();
for(var i=0,l=items.length;i<l;i++){var currentLabel=items[i].getLabel();
if(currentLabel&&currentLabel.toLowerCase().indexOf(search)==0){return items[i];
}}return null;
},findItem:function(search,ignoreCase){if(ignoreCase!==false){search=search.toLowerCase();
}var items=this.getChildren();
var item;
for(var i=0,l=items.length;i<l;i++){item=items[i];
var label=item.getLabel();

if(label!=null){if(label.translate){label=label.translate();
}
if(ignoreCase!==false){label=label.toLowerCase();
}
if(label.toString()==search.toString()){return item;
}}}return null;
}},destruct:function(){this._disposeObjects("__content");
}});
qx.Class.define("qx.ui.core.scroll.NativeScrollBar",{extend:qx.ui.core.Widget,implement:qx.ui.core.scroll.IScrollBar,construct:function(orientation){this.base(arguments);
this.addState("native");
this.getContentElement().addListener("scroll",this._onScroll,this);
this.addListener("mousedown",this._stopPropagation,this);
this.addListener("mouseup",this._stopPropagation,this);
this.addListener("mousemove",this._stopPropagation,this);

if(qx.core.Variant.isSet("qx.client","opera")){this.addListener("appear",this._onAppear,this);
}this.getContentElement().add(this._getScrollPaneElement());
if(orientation!=null){this.setOrientation(orientation);
}else{this.initOrientation();
}},properties:{appearance:{refine:true,init:"scrollbar"},orientation:{check:["horizontal","vertical"],init:"horizontal",apply:"_applyOrientation"},maximum:{check:"PositiveInteger",apply:"_applyMaximum",init:100},position:{check:"Number",init:0,apply:"_applyPosition",event:"scroll"},singleStep:{check:"Integer",init:20},knobFactor:{check:"PositiveNumber",nullable:true}},members:{__isHorizontal:null,__scrollPaneElement:null,_getScrollPaneElement:function(){if(!this.__scrollPaneElement){this.__scrollPaneElement=new qx.html.Element();
}return this.__scrollPaneElement;
},renderLayout:function(left,top,width,height){var changes=this.base(arguments,left,top,width,height);
this._updateScrollBar();
return changes;
},_getContentHint:function(){var scrollbarWidth=qx.bom.element.Overflow.getScrollbarWidth();
return {width:this.__isHorizontal?100:scrollbarWidth,maxWidth:this.__isHorizontal?null:scrollbarWidth,minWidth:this.__isHorizontal?null:scrollbarWidth,height:this.__isHorizontal?scrollbarWidth:100,maxHeight:this.__isHorizontal?scrollbarWidth:null,minHeight:this.__isHorizontal?scrollbarWidth:null};
},_applyEnabled:function(value,old){this.base(arguments,value,old);
this._updateScrollBar();
},_applyMaximum:function(value){this._updateScrollBar();
},_applyPosition:function(value){var content=this.getContentElement();

if(this.__isHorizontal){content.scrollToX(value);
}else{content.scrollToY(value);
}},_applyOrientation:function(value,old){var isHorizontal=this.__isHorizontal=value==="horizontal";
this.set({allowGrowX:isHorizontal,allowShrinkX:isHorizontal,allowGrowY:!isHorizontal,allowShrinkY:!isHorizontal});

if(isHorizontal){this.replaceState("vertical","horizontal");
}else{this.replaceState("horizontal","vertical");
}this.getContentElement().setStyles({overflowX:isHorizontal?"scroll":"hidden",overflowY:isHorizontal?"hidden":"scroll"});
qx.ui.core.queue.Layout.add(this);
},_updateScrollBar:function(){var isHorizontal=this.__isHorizontal;
var bounds=this.getBounds();

if(!bounds){return;
}
if(this.isEnabled()){var containerSize=isHorizontal?bounds.width:bounds.height;
var innerSize=this.getMaximum()+containerSize;
}else{innerSize=0;
}if(qx.core.Variant.isSet("qx.client","mshtml")){var bounds=this.getBounds();
this.getContentElement().setStyles({left:isHorizontal?"0":"-1px",top:isHorizontal?"-1px":"0",width:(isHorizontal?bounds.width:bounds.width+1)+"px",height:(isHorizontal?bounds.height+1:bounds.height)+"px"});
}this._getScrollPaneElement().setStyles({left:0,top:0,width:(isHorizontal?innerSize:1)+"px",height:(isHorizontal?1:innerSize)+"px"});
this.scrollTo(this.getPosition());
},scrollTo:function(position){this.setPosition(Math.max(0,Math.min(this.getMaximum(),position)));
},scrollBy:function(offset){this.scrollTo(this.getPosition()+offset);
},scrollBySteps:function(steps){var size=this.getSingleStep();
this.scrollBy(steps*size);
},_onScroll:function(e){var container=this.getContentElement();
var position=this.__isHorizontal?container.getScrollX():container.getScrollY();
this.setPosition(position);
},_onAppear:function(e){this.scrollTo(this.getPosition());
},_stopPropagation:function(e){e.stopPropagation();
}},destruct:function(){this._disposeObjects("__scrollPaneElement");
}});
qx.Class.define("qx.ui.table.cellrenderer.Replace",{extend:qx.ui.table.cellrenderer.Default,properties:{replaceMap:{check:"Object",nullable:true,init:null},replaceFunction:{check:"Function",nullable:true,init:null}},members:{_getContentHtml:function(cellInfo){var value=cellInfo.value;
var replaceMap=this.getReplaceMap();
var replaceFunc=this.getReplaceFunction();
var label;
if(replaceMap){label=replaceMap[value];

if(typeof label!="undefined"){cellInfo.value=label;
return qx.bom.String.escape(this._formatValue(cellInfo));
}}if(replaceFunc){cellInfo.value=replaceFunc(value);
}return qx.bom.String.escape(this._formatValue(cellInfo));
},addReversedReplaceMap:function(){var map=this.getReplaceMap();

for(var key in map){var value=map[key];
map[value]=key;
}return true;
}}});
qx.Class.define("qx.ui.progressive.model.Abstract",{type:"abstract",extend:qx.core.Object,events:{"dataAvailable":"qx.event.type.Data"},members:{getElementCount:function(){throw new Error("getElementCount() is abstract");
},getNextElement:function(){throw new Error("getNextElement() is abstract");
}}});
qx.Class.define("qx.ui.table.cellrenderer.AbstractImage",{extend:qx.ui.table.cellrenderer.Abstract,type:"abstract",construct:function(){this.base(arguments);
var clazz=this.self(arguments);

if(!clazz.stylesheet){clazz.stylesheet=qx.bom.Stylesheet.createElement(".qooxdoo-table-cell-icon {"+"  text-align:center;"+"  padding-top:1px;"+"}");
}},members:{__defaultWidth:16,__defaultHeight:16,_insetY:2,__imageData:null,_identifyImage:function(cellInfo){throw new Error("_identifyImage is abstract");
},_getImageInfos:function(cellInfo){var imageData=this._identifyImage(cellInfo);
if(imageData==null||typeof cellInfo=="string"){imageData={url:imageData,tooltip:null};
}
if(cellInfo.width&&cellInfo.height){var sizes={width:cellInfo.imageWidth,height:cellInfo.imageHeight};
}else{sizes=this.__getImageSize(imageData.url);
}imageData.width=sizes.width;
imageData.height=sizes.height;
return imageData;
},__getImageSize:function(source){var ResourceManager=qx.util.ResourceManager.getInstance();
var ImageLoader=qx.io.ImageLoader;
var width,height;
if(ResourceManager.has(source)){width=ResourceManager.getImageWidth(source);
height=ResourceManager.getImageHeight(source);
}else if(ImageLoader.isLoaded(source)){width=ImageLoader.getWidth(source);
height=ImageLoader.getHeight(source);
}else{width=this.__defaultWidth;
height=this.__defaultHeight;
}return {width:width,height:height};
},createDataCellHtml:function(cellInfo,htmlArr){this.__imageData=this._getImageInfos(cellInfo);
return this.base(arguments,cellInfo,htmlArr);
},_getCellClass:function(cellInfo){return this.base(arguments)+" qooxdoo-table-cell-icon";
},_getContentHtml:function(cellInfo){var content="<div></div>";
if(this.__imageData.url){var content=qx.bom.element.Decoration.create(this.__imageData.url,"no-repeat",{width:this.__imageData.width+"px",height:this.__imageData.height+"px",display:qx.bom.client.Engine.GECKO&&qx.bom.client.Engine.VERSION<1.9?"-moz-inline-box":"inline-block",verticalAlign:"top",position:"static"});
}return content;
},_getCellAttributes:function(cellInfo){var tooltip=this.__imageData.tooltip;

if(tooltip){return "title='"+tooltip+"'";
}else{return "";
}}},destruct:function(){this.__imageData=null;
}});
qx.Class.define("qx.ui.table.cellrenderer.Boolean",{extend:qx.ui.table.cellrenderer.AbstractImage,construct:function(){this.base(arguments);
this.__aliasManager=qx.util.AliasManager.getInstance();
this.initIconTrue();
this.initIconFalse();
},properties:{iconTrue:{check:"String",init:"decoration/table/boolean-true.png",apply:"_applyIconTrue"},iconFalse:{check:"String",init:"decoration/table/boolean-false.png",apply:"_applyIconFalse"}},members:{__iconUrlTrue:null,__iconUrlFalse:false,__aliasManager:null,_applyIconTrue:function(value){this.__iconUrlTrue=this.__aliasManager.resolve(value);
},_applyIconFalse:function(value){this.__iconUrlFalse=this.__aliasManager.resolve(value);
},_insetY:5,_getCellStyle:function(cellInfo){return this.base(arguments,cellInfo)+";padding-top:4px;";
},_identifyImage:function(cellInfo){var imageHints={imageWidth:11,imageHeight:11};

switch(cellInfo.value){case true:imageHints.url=this.__iconUrlTrue;
break;
case false:imageHints.url=this.__iconUrlFalse;
break;
default:imageHints.url=null;
break;
}return imageHints;
}},destruct:function(){this.__aliasManager=null;
}});
qx.Class.define("qx.ui.form.Resetter",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__items=[];
},members:{__items:null,add:function(item){if(this.__supportsValue(item)){var init=item.getValue();
}else if(this.__supportsSingleSelection(item)){var init=item.getSelection();
}else{throw new Error("Item "+item+" not supported for reseting.");
}this.__items.push({item:item,init:init});
},reset:function(){for(var i=0;i<this.__items.length;i++){var dataEntry=this.__items[i];
this.__setItem(dataEntry.item,dataEntry.init);
}},resetItem:function(item){var init;

for(var i=0;i<this.__items.length;i++){var dataEntry=this.__items[i];

if(dataEntry.item===item){init=dataEntry.init;
break;
}}if(init===undefined){throw new Error("The given item has not been added.");
}this.__setItem(item,init);
},__setItem:function(item,init){if(this.__supportsValue(item)){item.setValue(init);
}else if(this.__supportsSingleSelection(item)){item.setSelection(init);
}},redefine:function(){for(var i=0;i<this.__items.length;i++){var item=this.__items[i].item;
this.__items[i].init=this.__getCurrentValue(item);
}},redefineItem:function(item){var dataEntry;

for(var i=0;i<this.__items.length;i++){if(this.__items[i].item===item){dataEntry=this.__items[i];
break;
}}if(dataEntry===undefined){throw new Error("The given item has not been added.");
}dataEntry.init=this.__getCurrentValue(dataEntry.item);
},__getCurrentValue:function(item){if(this.__supportsValue(item)){return item.getValue();
}else if(this.__supportsSingleSelection(item)){return item.getSelection();
}},__supportsSingleSelection:function(formItem){var clazz=formItem.constructor;
return qx.Class.hasInterface(clazz,qx.ui.core.ISingleSelection);
},__supportsValue:function(formItem){var clazz=formItem.constructor;
return (qx.Class.hasInterface(clazz,qx.ui.form.IBooleanForm)||qx.Class.hasInterface(clazz,qx.ui.form.IColorForm)||qx.Class.hasInterface(clazz,qx.ui.form.IDateForm)||qx.Class.hasInterface(clazz,qx.ui.form.INumberForm)||qx.Class.hasInterface(clazz,qx.ui.form.IStringForm));
}}});
qx.Class.define("qx.ui.embed.HtmlArea",{extend:qx.ui.core.Widget,construct:function(value,styleInformation,source){this.__postPonedProperties={};
this.base(arguments);
this._setLayout(new qx.ui.layout.Grow);
this.__addAppearListener();
this.__initValues={content:value,styleInfo:styleInformation,source:source};
qx.event.Registration.addListener(document.body,"mousedown",this.block,this,true);
qx.event.Registration.addListener(document.body,"mouseup",this.release,this,true);
qx.event.Registration.addListener(document.body,"losecapture",this.release,this,true);
},events:{"loadingError":"qx.event.type.Data","messengerContent":"qx.event.type.Data","cursorContext":"qx.event.type.Data","ready":"qx.event.type.Event","readyAfterInvalid":"qx.event.type.Event","focused":"qx.event.type.Event","focusOut":"qx.event.type.Event","contextmenu":"qx.event.type.Data","undoRedoState":"qx.event.type.Data"},statics:{isBlockNode:function(node){return qx.bom.htmlarea.HtmlArea.isBlockNode(node);
},isParagraphParent:function(node){return qx.bom.htmlarea.HtmlArea.isParagraphParent(node);
}},properties:{contentType:{check:"String",init:"xhtml",apply:"_applyContentType"},messengerMode:{check:"Boolean",init:false,apply:"_applyMessengerMode"},insertParagraphOnLinebreak:{check:"Boolean",init:true,apply:"_applyInsertParagraphOnLinebreak"},insertLinebreakOnCtrlEnter:{check:"Boolean",init:true,apply:"_applyInsertLinebreakOnCtrlEnter"},postProcess:{check:"Function",nullable:true,init:null,apply:"_applyPostProcess"},useUndoRedo:{check:"Boolean",init:true,apply:"_applyUseUndoRedo"},appearance:{refine:true,init:"htmlarea"},defaultFontFamily:{check:"String",init:"Verdana",apply:"_applyDefaultFontFamily"},defaultFontSize:{check:"Integer",init:4,apply:"_applyDefaultFontSize"},focusable:{refine:true,init:true}},members:{__editorComponent:null,__postPonedProperties:null,__blockerElement:null,__initValues:null,_initBlockerElement:function(){if(!this.__blockerElement){this.__blockerElement=this._createBlockerElement();
}},_applyContentType:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setContentType(value);
}else{this.__postPonedProperties["ContentType"]=value;
}},_applyMessengerMode:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setMessengerMode(value);
}else{this.__postPonedProperties["MessengerMode"]=value;
}},_applyInsertParagraphOnLinebreak:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setInsertParagraphOnLinebreak(value);
}else{this.__postPonedProperties["InsertParagraphOnLinebreak"]=value;
}},_applyInsertLinebreakOnCtrlEnter:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setInsertLinebreakOnCtrlEnter(value);
}else{this.__postPonedProperties["InsertLinebreakOnCtrlEnter"]=value;
}},_applyPostProcess:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setPostProcess(value);
}else{this.__postPonedProperties["PostProcess"]=value;
}},_applyUseUndoRedo:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setUseUndoRedo(value);
}else{this.__postPonedProperties["UseUndoRedo"]=value;
}},_applyDefaultFontFamily:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setDefaultFontFamily(value);
}else{this.__postPonedProperties["DefaultFontFamily"]=value;
}},_applyDefaultFontSize:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setDefaultFontSize(value);
}else{this.__postPonedProperties["DefaultFontSize"]=value;
}},_applyNativeContextMenu:function(value,old){if(this.__editorComponent!=null){this.__editorComponent.setNativeContextMenu(value);
}else{this.__postPonedProperties["NativeContextMenu"]=value;
}},_createBlockerElement:function(){var el=new qx.html.Element("div");
el.setStyles({zIndex:20,position:"absolute",display:"none"});
if(qx.core.Variant.isSet("qx.client","mshtml")){el.setStyles({backgroundImage:"url("+qx.util.ResourceManager.getInstance().toUri("qx/static/blank.gif")+")",backgroundRepeat:"repeat"});
}return el;
},__addAppearListener:function(){this.addListenerOnce("appear",this.__setupEditorComponent);
},__setupEditorComponent:function(){var domElement=this.getContentElement().getDomElement();
this.__editorComponent=new qx.bom.htmlarea.HtmlArea(domElement,this.__initValues.content,this.__initValues.styleInfo,this.__initValues.source);
this.__applyPostPonedProperties();
this.__setupDelegateListeners();

if(qx.core.Variant.isSet("qx.client","gecko")){this.__setupInvalidateListener();
}this.addListener("appear",this.forceEditable);
},__applyPostPonedProperties:function(){for(var propertyName in this.__postPonedProperties){this.__editorComponent["set"+propertyName](this.__postPonedProperties[propertyName]);
}},__setupDelegateListeners:function(){this.__editorComponent.addListener("ready",this.__delegateEvent,this);
this.__editorComponent.addListener("readyAfterInvalid",this.__delegateEvent,this);
this.__editorComponent.addListener("focused",this.__delegateEvent,this);
this.__editorComponent.addListener("focusOut",this.__delegateEvent,this);
this.__editorComponent.addListener("loadingError",this.__delegateDataEvent,this);
this.__editorComponent.addListener("cursorContext",this.__delegateDataEvent,this);
this.__editorComponent.addListener("contextmenu",this.__delegateDataEvent,this);
this.__editorComponent.addListener("undoRedoState",this.__delegateDataEvent,this);
this.__editorComponent.addListener("messengerContent",this.__delegateDataEvent,this);
},__delegateEvent:function(e){var clone=e.clone();
this.fireEvent(clone.getType());
},__delegateDataEvent:function(e){var clone=e.clone();
this.fireDataEvent(clone.getType(),e.getData());
},__setupInvalidateListener:function(){var element=this.getContainerElement().getDomElement();
var invalidateEditor=function(e){this.__editorComponent.invalidateEditor();
};
var boundFunction=qx.lang.Function.bind(invalidateEditor,this);
qx.bom.Event.addNativeListener(element,"DOMNodeRemoved",qx.event.GlobalError.observeMethod(boundFunction));
},renderLayout:function(left,top,width,height){this.base(arguments,left,top,width,height);
var pixel="px";
var insets=this.getInsets();

if(!this.__blockerElement){this._initBlockerElement();
}this.__blockerElement.setStyles({left:insets.left+pixel,top:insets.top+pixel,width:(width-insets.left-insets.right)+pixel,height:(height-insets.top-insets.bottom)+pixel});
},getIframeObject:function(){return this.__editorComponent!=null?this.__editorComponent.getIframeObject():null;
},getCommandManager:function(){return this.__editorComponent!=null?this.__editorComponent.getCommandManager():null;
},setValue:function(value){if(this.__editorComponent!=null){this.__editorComponent.setValue(value);
}},getValue:function(){return this.__editorComponent!=null?this.__editorComponent.getValue():null;
},getComputedValue:function(skipHtmlEncoding){return this.__editorComponent!=null?this.__editorComponent.getHtml(skipHtmlEncoding):null;
},getCompleteHtml:function(){return this.__editorComponent!=null?this.__editorComponent.getCompleteHtml():null;
},getContentDocument:function(){return this.__editorComponent!=null?this.__editorComponent.getContentDocument():null;
},getContentBody:function(){return this.__editorComponent!=null?this.__editorComponent.getContentBody():null;
},getContentWindow:function(){return this.__editorComponent!=null?this.__editorComponent.getContentWindow():null;
},getWords:function(node){return this.__editorComponent!=null?this.__editorComponent.getWords(node):null;
},getWordsWithElement:function(){return this.__editorComponent!=null?this.__editorComponent.getWordsWithElement():null;
},getTextNodes:function(){return this.__editorComponent!=null?this.__editorComponent.getTextNodes():null;
},isReady:function(){return this.__editorComponent!=null?this.__editorComponent.isReady():false;
},forceEditable:function(){if(this.__editorComponent!=null){this.__editorComponent.forceEditable();
}},isLoaded:function(){return this.__editorComponent!=null?this.__editorComponent.isLoaded():false;
},setEditable:function(value){if(this.__editorComponent!=null){this.__editorComponent.setEditable(value);
}},getEditable:function(){return this.__editorComponent!=null?this.__editorComponent.getEditable():false;
},isEditable:function(){return this.__editorComponent!=null?this.__editorComponent.isEditable():false;
},insertHtml:function(value){return this.__editorComponent!=null?this.__editorComponent.insertHtml(value):false;
},removeFormat:function(){return this.__editorComponent!=null?this.__editorComponent.removeFormat():false;
},setBold:function(){return this.__editorComponent!=null?this.__editorComponent.setBold():false;
},setItalic:function(){return this.__editorComponent!=null?this.__editorComponent.setItalic():false;
},setUnderline:function(){return this.__editorComponent!=null?this.__editorComponent.setUnderline():false;
},setStrikeThrough:function(){return this.__editorComponent!=null?this.__editorComponent.setStrikeThrough():false;
},setFontSize:function(value){return this.__editorComponent!=null?this.__editorComponent.setFontSize(value):false;
},setFontFamily:function(value){return this.__editorComponent!=null?this.__editorComponent.setFontFamily(value):false;
},setTextColor:function(value){return this.__editorComponent!=null?this.__editorComponent.setTextColor(value):false;
},setTextBackgroundColor:function(value){return this.__editorComponent!=null?this.__editorComponent.setTextBackgroundColor(value):false;
},setJustifyLeft:function(){return this.__editorComponent!=null?this.__editorComponent.setJustifyLeft():false;
},setJustifyCenter:function(){return this.__editorComponent!=null?this.__editorComponent.setJustifyCenter():false;
},setJustifyRight:function(){return this.__editorComponent!=null?this.__editorComponent.setJustifyRight():false;
},setJustifyFull:function(){return this.__editorComponent!=null?this.__editorComponent.setJustifyFull():false;
},insertIndent:function(){return this.__editorComponent!=null?this.__editorComponent.insertIndent():false;
},insertOutdent:function(){return this.__editorComponent!=null?this.__editorComponent.insertOutdent():false;
},insertOrderedList:function(){return this.__editorComponent!=null?this.__editorComponent.insertOrderedList():false;
},insertUnorderedList:function(){return this.__editorComponent!=null?this.__editorComponent.insertUnorderedList():false;
},insertHorizontalRuler:function(){return this.__editorComponent!=null?this.__editorComponent.insertHorizontalRuler():false;
},insertImage:function(attributes){return this.__editorComponent!=null?this.__editorComponent.insertImage(attributes):false;
},insertHyperLink:function(url){return this.__editorComponent!=null?this.__editorComponent.insertHyperLink(url):false;
},removeBackgroundColor:function(){return this.__editorComponent!=null?this.__editorComponent.removeBackgroundColor():false;
},setBackgroundColor:function(value){return this.__editorComponent!=null?this.__editorComponent.setBackgroundColor(value):false;
},removeBackgroundImage:function(){return this.__editorComponent!=null?this.__editorComponent.removeBackgroundImage():false;
},setBackgroundImage:function(url,repeat,position){return this.__editorComponent!=null?this.__editorComponent.setBackgroundImage(url,repeat,position):false;
},selectAll:function(){return this.__editorComponent!=null?this.__editorComponent.selectAll():false;
},undo:function(){return this.__editorComponent!=null?this.__editorComponent.undo():false;
},redo:function(){return this.__editorComponent!=null?this.__editorComponent.redo():false;
},resetHtml:function(){if(this.__editorComponent!=null){this.__editorComponent.resetHtml();
}},getHtml:function(skipHtmlEncoding){return this.__editorComponent!=null?this.__editorComponent.getHtml(skipHtmlEncoding):null;
},containsOnlyPlaceholder:function(){return this.__editorComponent!=null?this.__editorComponent.containsOnlyPlaceHolder():false;
},getContextInformation:function(){return this.__editorComponent!=null?this.__editorComponent.getContextInformation():null;
},getSelection:function(){return this.__editorComponent!=null?this.__editorComponent.getSelection():null;
},getSelectedText:function(){return this.__editorComponent!=null?this.__editorComponent.getSelectedText():null;
},getSelectedHtml:function(){return this.__editorComponent!=null?this.__editorComponent.getSelectedHtml():null;
},clearSelection:function(){if(this.__editorComponent!=null){this.__editorComponent.clearSelection();
}},getRange:function(){return this.__editorComponent.getRange();
},saveRange:function(){this.__editorComponent.saveRange();
},getSavedRange:function(){return this.__editorComponent.getSavedRange();
},resetSavedRange:function(){this.__editorComponent.resetSavedRange();
},getFocusNode:function(){return this.__editorComponent!=null?this.__editorComponent.getFocusNode():null;
},block:function(){if(!this.__blockerElement){this._initBlockerElement();
}
if(!this.getContainerElement().hasChild(this.__blockerElement)){this.getContainerElement().add(this.__blockerElement);
}this.__blockerElement.setStyle("display","block");
},release:function(){if(this.__blockerElement){this.__blockerElement.setStyle("display","none");
}},focus:function(){this.base(arguments);
this.__focusContent();
},tabFocus:function(){this.base(arguments);
this.__focusContent();
},__focusContent:function(){if(this.__editorComponent!=null){qx.event.Timer.once(function(){this.__editorComponent.focusContent();
},this,0);
}}},destruct:function(){this.__postPonedProperties=this.__initValues=null;
qx.event.Registration.removeListener(document.body,"mousedown",this.block,this,true);
qx.event.Registration.removeListener(document.body,"mouseup",this.release,this,true);
qx.event.Registration.removeListener(document.body,"losecapture",this.release,this,true);
this._disposeObjects("__blockerElement","__editorComponent");
}});
qx.Class.define("qx.ui.table.headerrenderer.Icon",{extend:qx.ui.table.headerrenderer.Default,construct:function(iconUrl,tooltip){this.base(arguments);

if(iconUrl==null){iconUrl="";
}this.setIconUrl(iconUrl);

if(tooltip){this.setToolTip(tooltip);
}},properties:{iconUrl:{check:"String",init:""}},members:{updateHeaderCell:function(cellInfo,cellWidget){this.base(arguments,cellInfo,cellWidget);
cellWidget.setIcon(this.getIconUrl());
}}});
qx.Class.define("qx.ui.form.validation.Manager",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__formItems=[];
this.__asyncResults={};
this.setRequiredFieldMessage(qx.locale.Manager.tr("This field is required"));
},events:{"changeValid":"qx.event.type.Data","complete":"qx.event.type.Event"},properties:{validator:{check:"value instanceof Function || qx.Class.isSubClassOf(value.constructor, qx.ui.form.validation.AsyncValidator)",init:null,nullable:true},invalidMessage:{check:"String",init:""},requiredFieldMessage:{check:"String",init:""}},members:{__formItems:null,__valid:null,__asyncResults:null,__syncValid:null,add:function(formItem,validator){if(!this.__supportsInvalid(formItem)){throw new Error("Added widget not supported.");
}if(this.__supportsSingleSelection(formItem)){if(validator!=null){throw new Error("Widgets suporting selection can only be validated "+"in the form validator");
}}var dataEntry={item:formItem,validator:validator,valid:null};
this.__formItems.push(dataEntry);
},validate:function(){var valid=true;
this.__syncValid=true;
var items=[];
for(var i=0;i<this.__formItems.length;i++){var formItem=this.__formItems[i].item;
var validator=this.__formItems[i].validator;
items.push(formItem);
if(validator==null){var validatorResult=this.__validateRequired(formItem);
valid=valid&&validatorResult;
this.__syncValid=validatorResult&&this.__syncValid;
continue;
}var validatorResult=this.__validateItem(this.__formItems[i],formItem.getValue());
valid=validatorResult&&valid;

if(validatorResult!=null){this.__syncValid=validatorResult&&this.__syncValid;
}}var formValid=this.__validateForm(items);

if(qx.lang.Type.isBoolean(formValid)){this.__syncValid=formValid&&this.__syncValid;
}valid=formValid&&valid;
this.__setValid(valid);

if(qx.lang.Object.isEmpty(this.__asyncResults)){this.fireEvent("complete");
}return valid;
},__validateRequired:function(formItem){if(formItem.getRequired()){if(this.__supportsSingleSelection(formItem)){var validatorResult=!!formItem.getSelection()[0];
}else{var validatorResult=!!formItem.getValue();
}formItem.setValid(validatorResult);
formItem.setInvalidMessage(this.getRequiredFieldMessage());
return validatorResult;
}return true;
},__validateItem:function(dataEntry,value){var formItem=dataEntry.item;
var validator=dataEntry.validator;
if(this.__isAsyncValidator(validator)){this.__asyncResults[formItem.toHashCode()]=null;
validator.validate(formItem,formItem.getValue(),this);
return null;
}var validatorResult=null;

try{var validatorResult=validator(value,formItem);

if(validatorResult===undefined){validatorResult=true;
}}catch(e){if(e instanceof qx.core.ValidationError){validatorResult=false;

if(e.message&&e.message!=qx.type.BaseError.DEFAULTMESSAGE){var invalidMessage=e.message;
}else{var invalidMessage=e.getComment();
}formItem.setInvalidMessage(invalidMessage);
}else{throw e;
}}formItem.setValid(validatorResult);
dataEntry.valid=validatorResult;
return validatorResult;
},__validateForm:function(items){var formValidator=this.getValidator();

if(formValidator==null){return true;
}this.setInvalidMessage("");

if(this.__isAsyncValidator(formValidator)){this.__asyncResults[this.toHashCode()]=null;
formValidator.validateForm(items,this);
return null;
}
try{var formValid=formValidator(items,this);

if(formValid===undefined){formValid=true;
}}catch(e){if(e instanceof qx.core.ValidationError){formValid=false;

if(e.message&&e.message!=qx.type.BaseError.DEFAULTMESSAGE){var invalidMessage=e.message;
}else{var invalidMessage=e.getComment();
}this.setInvalidMessage(invalidMessage);
}else{throw e;
}}return formValid;
},__isAsyncValidator:function(validator){var async=false;

if(!qx.lang.Type.isFunction(validator)){async=qx.Class.isSubClassOf(validator.constructor,qx.ui.form.validation.AsyncValidator);
}return async;
},__supportsInvalid:function(formItem){var clazz=formItem.constructor;
return qx.Class.hasInterface(clazz,qx.ui.form.IForm);
},__supportsSingleSelection:function(formItem){var clazz=formItem.constructor;
return qx.Class.hasInterface(clazz,qx.ui.core.ISingleSelection);
},__supportsValue:function(formItem){var clazz=formItem.constructor;
return (qx.Class.hasInterface(clazz,qx.ui.form.IBooleanForm)||qx.Class.hasInterface(clazz,qx.ui.form.IColorForm)||qx.Class.hasInterface(clazz,qx.ui.form.IDateForm)||qx.Class.hasInterface(clazz,qx.ui.form.INumberForm)||qx.Class.hasInterface(clazz,qx.ui.form.IStringForm));
},__setValid:function(value){var oldValue=this.__valid;
this.__valid=value;
if(oldValue!=value){this.fireDataEvent("changeValid",value,oldValue);
}},getValid:function(){return this.__valid;
},isValid:function(){return this.getValid();
},getInvalidMessages:function(){var messages=[];
for(var i=0;i<this.__formItems.length;i++){var formItem=this.__formItems[i].item;

if(!formItem.getValid()){messages.push(formItem.getInvalidMessage());
}}if(this.getInvalidMessage()!=""){messages.push(this.getInvalidMessage());
}return messages;
},reset:function(){for(var i=0;i<this.__formItems.length;i++){var dataEntry=this.__formItems[i];
dataEntry.item.setValid(true);
}this.__valid=null;
},setItemValid:function(formItem,valid){this.__asyncResults[formItem.toHashCode()]=valid;
formItem.setValid(valid);
this.__checkValidationComplete();
},setFormValid:function(valid){this.__asyncResults[this.toHashCode()]=valid;
this.__checkValidationComplete();
},__checkValidationComplete:function(){var valid=this.__syncValid;
for(var hash in this.__asyncResults){var currentResult=this.__asyncResults[hash];
valid=currentResult&&valid;
if(currentResult==null){return;
}}this.__setValid(valid);
this.__asyncResults={};
this.fireEvent("complete");
}},destruct:function(){this.__formItems=null;
}});
qx.Class.define("qx.ui.form.validation.AsyncValidator",{extend:qx.core.Object,construct:function(validator){this.base(arguments);
this.__validatorFunction=validator;
},members:{__validatorFunction:null,__item:null,__manager:null,__usedForForm:null,validate:function(item,value,manager){this.__usedForForm=false;
this.__item=item;
this.__manager=manager;
this.__validatorFunction(this,value);
},validateForm:function(items,manager){this.__usedForForm=true;
this.__manager=manager;
this.__validatorFunction(items,this);
},setValid:function(valid,message){if(this.__usedForForm){if(message!==undefined){this.__manager.setInvalidMessage(message);
}this.__manager.setFormValid(valid);
}else{if(message!==undefined){this.__item.setInvalidMessage(message);
}this.__manager.setItemValid(this.__item,valid);
}}},destruct:function(){this.__manager=this.__item=null;
}});
qx.Class.define("qx.ui.form.renderer.AbstractRenderer",{type:"abstract",extend:qx.ui.core.Widget,implement:qx.ui.form.renderer.IFormRenderer,construct:function(form){this.base(arguments);
{};
var groups=form.getGroups();

for(var i=0;i<groups.length;i++){var group=groups[i];
this.addItems(group.items,group.labels,group.title);
}var buttons=form.getButtons();

for(var i=0;i<buttons.length;i++){this.addButton(buttons[i]);
}},members:{_names:null,_onChangeLocale:null,_createLabelText:function(name,item){var required="";

if(item.getRequired()){required=" <span style='color:red'>*</span> ";
}var colon=name.length>0||item.getRequired()?" :":"";
return name+required+colon;
},addItems:function(items,names,title){throw new Error("Abstract method call");
},addButton:function(button){throw new Error("Abstract method call");
}},destruct:function(){{};
this._names=null;
}});
qx.Class.define("qx.ui.form.renderer.Single",{extend:qx.ui.form.renderer.AbstractRenderer,construct:function(form){var layout=new qx.ui.layout.Grid();
layout.setSpacing(6);
layout.setColumnFlex(0,1);
layout.setColumnAlign(0,"right","top");
this._setLayout(layout);
this.base(arguments,form);
},members:{_row:0,_buttonRow:null,addItems:function(items,names,title){if(title!=null){this._add(this._createHeader(title),{row:this._row,column:0,colSpan:2});
this._row++;
}for(var i=0;i<items.length;i++){var label=this._createLabel(names[i],items[i]);
this._add(label,{row:this._row,column:0});
var item=items[i];
label.setBuddy(item);
this._add(item,{row:this._row,column:1});
this._row++;
{};
}},addButton:function(button){if(this._buttonRow==null){this._buttonRow=new qx.ui.container.Composite();
this._buttonRow.setMarginTop(5);
var hbox=new qx.ui.layout.HBox();
hbox.setAlignX("right");
hbox.setSpacing(5);
this._buttonRow.setLayout(hbox);
this._add(this._buttonRow,{row:this._row,column:0,colSpan:2});
this._row++;
}this._buttonRow.add(button);
},getLayout:function(){return this._getLayout();
},_createLabel:function(name,item){var label=new qx.ui.basic.Label(this._createLabelText(name,item));
label.setRich(true);
return label;
},_createHeader:function(title){var header=new qx.ui.basic.Label(title);
header.setFont("bold");

if(this._row!=0){header.setMarginTop(10);
}header.setAlignX("left");
return header;
}},destruct:function(){if(this._buttonRow){this._buttonRow.removeAll();
this._disposeObjects("_buttonRow");
}}});
qx.Class.define("qx.ui.menu.RadioButton",{extend:qx.ui.menu.AbstractButton,include:[qx.ui.form.MModelProperty],implement:[qx.ui.form.IRadioItem,qx.ui.form.IBooleanForm,qx.ui.form.IModel],construct:function(label,menu){this.base(arguments);
if(label!=null){this.setLabel(label);
}
if(menu!=null){this.setMenu(menu);
}this.addListener("execute",this._onExecute,this);
},properties:{appearance:{refine:true,init:"menu-radiobutton"},value:{check:"Boolean",nullable:true,event:"changeValue",apply:"_applyValue",init:false},group:{check:"qx.ui.form.RadioGroup",nullable:true,apply:"_applyGroup"}},members:{_applyValue:function(value,old){value?this.addState("checked"):this.removeState("checked");
},_applyGroup:function(value,old){if(old){old.remove(this);
}
if(value){value.add(this);
}},_onExecute:function(e){this.setValue(true);
},_onMouseUp:function(e){if(e.isLeftPressed()){this.execute();
}qx.ui.menu.Manager.getInstance().hideAll();
},_onKeyPress:function(e){this.execute();
}}});
qx.Class.define("qx.ui.tabview.TabView",{extend:qx.ui.core.Widget,implement:qx.ui.core.ISingleSelection,include:[qx.ui.core.MContentPadding],construct:function(barPosition){this.base(arguments);
this.__barPositionToState={top:"barTop",right:"barRight",bottom:"barBottom",left:"barLeft"};
this._createChildControl("bar");
this._createChildControl("pane");
var mgr=this.__radioGroup=new qx.ui.form.RadioGroup;
mgr.setWrap(false);
mgr.addListener("changeSelection",this._onChangeSelection,this);
if(barPosition!=null){this.setBarPosition(barPosition);
}else{this.initBarPosition();
}},events:{"changeSelection":"qx.event.type.Data"},properties:{appearance:{refine:true,init:"tabview"},barPosition:{check:["left","right","top","bottom"],init:"top",apply:"_applyBarPosition"}},members:{__radioGroup:null,_createChildControlImpl:function(id){var control;

switch(id){case "bar":control=new qx.ui.container.SlideBar();
control.setZIndex(10);
this._add(control);
break;
case "pane":control=new qx.ui.container.Stack;
control.setZIndex(5);
this._add(control,{flex:1});
break;
}return control||this.base(arguments,id);
},_getContentPaddingTarget:function(){return this.getChildControl("pane");
},add:function(page){{if(!(page instanceof qx.ui.tabview.Page)){throw new Error("Incompatible child for TabView: "+page);
}};
var button=page.getButton();
var bar=this.getChildControl("bar");
var pane=this.getChildControl("pane");
page.exclude();
bar.add(button);
pane.add(page);
this.__radioGroup.add(button);
page.addState(this.__barPositionToState[this.getBarPosition()]);
page.addState("lastTab");
var children=this.getChildren();

if(children[0]==page){page.addState("firstTab");
}else{children[children.length-2].removeState("lastTab");
}page.addListener("close",this._onPageClose,this);
},remove:function(page){var pane=this.getChildControl("pane");
var bar=this.getChildControl("bar");
var button=page.getButton();
var children=pane.getChildren();
if(this.getSelection()[0]==page){var index=children.indexOf(page);

if(index==0){if(children[1]){this.setSelection([children[1]]);
}else{this.resetSelection();
}}else{this.setSelection([children[index-1]]);
}}bar.remove(button);
pane.remove(page);
this.__radioGroup.remove(button);
page.removeState(this.__barPositionToState[this.getBarPosition()]);
if(page.hasState("firstTab")){page.removeState("firstTab");

if(children[0]){children[0].addState("firstTab");
}}
if(page.hasState("lastTab")){page.removeState("lastTab");

if(children.length>0){children[children.length-1].addState("lastTab");
}}page.removeListener("close",this._onPageClose,this);
},getChildren:function(){return this.getChildControl("pane").getChildren();
},indexOf:function(page){return this.getChildControl("pane").indexOf(page);
},__barPositionToState:null,_applyBarPosition:function(value,old){var bar=this.getChildControl("bar");
var horizontal=value=="left"||value=="right";
var reversed=value=="right"||value=="bottom";
var layoutClass=horizontal?qx.ui.layout.HBox:qx.ui.layout.VBox;
var layout=this._getLayout();

if(layout&&layout instanceof layoutClass){}else{this._setLayout(layout=new layoutClass);
}layout.setReversed(reversed);
bar.setOrientation(horizontal?"vertical":"horizontal");
var children=this.getChildren();
if(old){var oldState=this.__barPositionToState[old];
bar.removeState(oldState);
for(var i=0,l=children.length;i<l;i++){children[i].removeState(oldState);
}}
if(value){var newState=this.__barPositionToState[value];
bar.addState(newState);
for(var i=0,l=children.length;i<l;i++){children[i].addState(newState);
}}},getSelection:function(){var buttons=this.__radioGroup.getSelection();
var result=[];

for(var i=0;i<buttons.length;i++){result.push(buttons[i].getUserData("page"));
}return result;
},setSelection:function(items){var buttons=[];

for(var i=0;i<items.length;i++){buttons.push(items[i].getChildControl("button"));
}this.__radioGroup.setSelection(buttons);
},resetSelection:function(){this.__radioGroup.resetSelection();
},isSelected:function(item){var button=item.getChildControl("button");
return this.__radioGroup.isSelected(button);
},isSelectionEmpty:function(){return this.__radioGroup.isSelectionEmpty();
},getSelectables:function(){var buttons=this.__radioGroup.getSelectables();
var result=[];

for(var i=0;i<buttons.length;i++){result.push(buttons[i].getUserData("page"));
}return result;
},_onChangeSelection:function(e){var pane=this.getChildControl("pane");
var button=e.getData()[0];

if(button){pane.setSelection([button.getUserData("page")]);
button.focus();
this.scrollChildIntoView(button,null,null,false);
}else{pane.resetSelection();
}var value=pane.getSelection();
var old=e.getOldData();
this.fireDataEvent("changeSelection",value,old);
},_onBeforeChangeSelection:function(e){if(!this.fireNonBubblingEvent("beforeChangeSelection",qx.event.type.Event,[false,true])){e.preventDefault();
}},_onRadioChangeSelection:function(e){var element=e.getData()[0];

if(element){this.setSelection([element.getUserData("page")]);
}else{this.resetSelection();
}},_onPageClose:function(e){this.remove(e.getTarget());
}},destruct:function(){this._disposeObjects("__radioGroup");
this.__barPositionToState=null;
}});
qx.Class.define("qx.ui.container.Stack",{extend:qx.ui.core.Widget,implement:qx.ui.core.ISingleSelection,include:qx.ui.core.MSingleSelectionHandling,construct:function(){this.base(arguments);
this._setLayout(new qx.ui.layout.Grow);
this.addListener("changeSelection",this.__onChangeSelection,this);
},properties:{dynamic:{check:"Boolean",init:false,apply:"_applyDynamic"}},members:{_applyDynamic:function(value){var children=this._getChildren();
var selected=this.getSelection()[0];
var child;

for(var i=0,l=children.length;i<l;i++){child=children[i];

if(child!=selected){if(value){children[i].exclude();
}else{children[i].hide();
}}}},_getItems:function(){return this.getChildren();
},_isAllowEmptySelection:function(){return true;
},_isItemSelectable:function(item){return item.isEnabled();
},__onChangeSelection:function(e){var old=e.getOldData()[0];
var value=e.getData()[0];

if(old){if(this.isDynamic()){old.exclude();
}else{old.hide();
}}
if(value){value.show();
}},add:function(widget){this._add(widget);
var selected=this.getSelection()[0];

if(!selected){this.setSelection([widget]);
}else if(selected!==widget){if(this.isDynamic()){widget.exclude();
}else{widget.hide();
}}},remove:function(widget){this._remove(widget);

if(this.getSelection()[0]===widget){var first=this._getChildren()[0];

if(first){this.setSelection([first]);
}else{this.resetSelection();
}}},indexOf:function(widget){return this._indexOf(widget);
},getChildren:function(){return this._getChildren();
},previous:function(){var selected=this.getSelection()[0];
var go=this._indexOf(selected)-1;
var children=this._getChildren();

if(go<0){go=children.length-1;
}var prev=children[go];
this.setSelection([prev]);
},next:function(){var selected=this.getSelection()[0];
var go=this._indexOf(selected)+1;
var children=this._getChildren();
var next=children[go]||children[0];
this.setSelection([next]);
}}});
qx.Class.define("qx.ui.tabview.Page",{extend:qx.ui.container.Composite,construct:function(label,icon){this.base(arguments);
this._createChildControl("button");
if(label!=null){this.setLabel(label);
}
if(icon!=null){this.setIcon(icon);
}},events:{"close":"qx.event.type.Event"},properties:{appearance:{refine:true,init:"tabview-page"},label:{check:"String",init:"",apply:"_applyLabel"},icon:{check:"String",init:"",apply:"_applyIcon"},showCloseButton:{check:"Boolean",init:false,apply:"_applyShowCloseButton"}},members:{_forwardStates:{barTop:1,barRight:1,barBottom:1,barLeft:1,firstTab:1,lastTab:1},_applyIcon:function(value,old){this.getChildControl("button").setIcon(value);
},_applyLabel:function(value,old){this.getChildControl("button").setLabel(value);
},_applyEnabled:function(value,old){this.base(arguments,value,old);
var btn=this.getChildControl("button");
value==null?btn.resetEnabled():btn.setEnabled(value);
},_createChildControlImpl:function(id){var control;

switch(id){case "button":control=new qx.ui.tabview.TabButton;
control.setAllowGrowX(true);
control.setAllowGrowY(true);
control.setUserData("page",this);
control.addListener("close",this._onButtonClose,this);
break;
}return control||this.base(arguments,id);
},_applyShowCloseButton:function(value,old){this.getChildControl("button").setShowCloseButton(value);
},_onButtonClose:function(){this.fireEvent("close");
},getButton:function(){return this.getChildControl("button");
}}});
qx.Class.define("qx.ui.tabview.TabButton",{extend:qx.ui.form.RadioButton,implement:qx.ui.form.IRadioItem,construct:function(){this.base(arguments);
var layout=new qx.ui.layout.Grid(2,0);
layout.setRowAlign(0,"left","middle");
layout.setColumnAlign(0,"right","middle");
this._getLayout().dispose();
this._setLayout(layout);
this.initShowCloseButton();
},events:{"close":"qx.event.type.Data"},properties:{showCloseButton:{check:"Boolean",init:false,apply:"_applyShowCloseButton"}},members:{_forwardStates:{focused:true,checked:true},_applyIconPosition:function(value,old){var children={icon:this.getChildControl("icon"),label:this.getChildControl("label"),closeButton:this.getShowCloseButton()?this.getChildControl("close-button"):null};
for(var child in children){if(children[child]){this._remove(children[child]);
}}
switch(value){case "top":this._add(children.label,{row:3,column:2});
this._add(children.icon,{row:1,column:2});

if(children.closeButton){this._add(children.closeButton,{row:0,column:4});
}break;
case "bottom":this._add(children.label,{row:1,column:2});
this._add(children.icon,{row:3,column:2});

if(children.closeButton){this._add(children.closeButton,{row:0,column:4});
}break;
case "left":this._add(children.label,{row:0,column:2});
this._add(children.icon,{row:0,column:0});

if(children.closeButton){this._add(children.closeButton,{row:0,column:4});
}break;
case "right":this._add(children.label,{row:0,column:0});
this._add(children.icon,{row:0,column:2});

if(children.closeButton){this._add(children.closeButton,{row:0,column:4});
}break;
}},_createChildControlImpl:function(id){var control;

switch(id){case "label":var control=new qx.ui.basic.Label(this.getLabel());
control.setAnonymous(true);
this._add(control,{row:0,column:2});
this._getLayout().setColumnFlex(2,1);
break;
case "icon":control=new qx.ui.basic.Image(this.getIcon());
control.setAnonymous(true);
this._add(control,{row:0,column:0});
break;
case "close-button":control=new qx.ui.form.Button();
control.addListener("click",this._onCloseButtonClick,this);
this._add(control,{row:0,column:4});

if(!this.getShowCloseButton()){control.exclude();
}break;
}return control||this.base(arguments,id);
},_onCloseButtonClick:function(){this.fireDataEvent("close",this);
},_applyShowCloseButton:function(value,old){if(value){this._showChildControl("close-button");
}else{this._excludeChildControl("close-button");
}},_applyCenter:function(value){var layout=this._getLayout();

if(value){layout.setColumnAlign(2,"center","middle");
}else{layout.setColumnAlign(2,"left","middle");
}}}});
qx.Class.define("qx.ui.form.renderer.SinglePlaceholder",{extend:qx.ui.form.renderer.Single,implement:qx.ui.form.renderer.IFormRenderer,members:{addItems:function(items,names,title){if(title!=null){this._add(this._createHeader(title),{row:this._row,column:0,colSpan:2});
this._row++;
}for(var i=0;i<items.length;i++){if(items[i].setPlaceholder===undefined){throw new Error("Only widgets with placeholders supported.");
}items[i].setPlaceholder(names[i]);
this._add(items[i],{row:this._row,column:0});
this._row++;
}}}});
qx.Class.define("qx.ui.table.pane.CellEvent",{extend:qx.event.type.Mouse,properties:{row:{check:"Integer",nullable:true},column:{check:"Integer",nullable:true}},members:{init:function(scroller,me,row,column){me.clone(this);
this.setBubbles(false);

if(row!=null){this.setRow(row);
}else{this.setRow(scroller._getRowForPagePos(this.getDocumentLeft(),this.getDocumentTop()));
}
if(column!=null){this.setColumn(column);
}else{this.setColumn(scroller._getColumnForPageX(this.getDocumentLeft()));
}},clone:function(embryo){var clone=this.base(arguments,embryo);
clone.set({row:this.getRow(),column:this.getColumn()});
return clone;
}}});
qx.Mixin.define("qx.ui.core.MMovable",{properties:{movable:{check:"Boolean",init:true},useMoveFrame:{check:"Boolean",init:false}},members:{__moveHandle:null,__moveFrame:null,__dragRange:null,__dragLeft:null,__dragTop:null,__parentLeft:null,__parentTop:null,__blockerAdded:false,__oldBlockerColor:null,__oldBlockerOpacity:0,_activateMoveHandle:function(widget){if(this.__moveHandle){throw new Error("The move handle could not be redefined!");
}this.__moveHandle=widget;
widget.addListener("mousedown",this._onMoveMouseDown,this);
widget.addListener("mouseup",this._onMoveMouseUp,this);
widget.addListener("mousemove",this._onMoveMouseMove,this);
widget.addListener("losecapture",this.__onMoveLoseCapture,this);
},__getMoveFrame:function(){var frame=this.__moveFrame;

if(!frame){frame=this.__moveFrame=new qx.ui.core.Widget();
frame.setAppearance("move-frame");
frame.exclude();
qx.core.Init.getApplication().getRoot().add(frame);
}return frame;
},__showMoveFrame:function(){var location=this.getContainerLocation();
var bounds=this.getBounds();
var frame=this.__getMoveFrame();
frame.setUserBounds(location.left,location.top,bounds.width,bounds.height);
frame.show();
frame.setZIndex(this.getZIndex()+1);
},__computeMoveCoordinates:function(e){var range=this.__dragRange;
var mouseLeft=Math.max(range.left,Math.min(range.right,e.getDocumentLeft()));
var mouseTop=Math.max(range.top,Math.min(range.bottom,e.getDocumentTop()));
var viewportLeft=this.__dragLeft+mouseLeft;
var viewportTop=this.__dragTop+mouseTop;
return {viewportLeft:viewportLeft,viewportTop:viewportTop,parentLeft:viewportLeft-this.__parentLeft,parentTop:viewportTop-this.__parentTop};
},_onMoveMouseDown:function(e){if(!this.getMovable()||this.hasState("maximized")){return;
}var parent=this.getLayoutParent();
var parentLocation=parent.getContentLocation();
var parentBounds=parent.getBounds();
if(qx.Class.implementsInterface(parent,qx.ui.window.IDesktop)){if(!parent.isContentBlocked()){this.__blockerAdded=true;
this.__oldBlockerColor=parent.getBlockerColor();
this.__oldBlockerOpacity=parent.getBlockerOpacity();
parent.setBlockerColor(null);
parent.setBlockerOpacity(1);
parent.blockContent(this.getZIndex()-1);
}}this.__dragRange={left:parentLocation.left,top:parentLocation.top,right:parentLocation.left+parentBounds.width,bottom:parentLocation.top+parentBounds.height};
var widgetLocation=this.getContainerLocation();
this.__parentLeft=parentLocation.left;
this.__parentTop=parentLocation.top;
this.__dragLeft=widgetLocation.left-e.getDocumentLeft();
this.__dragTop=widgetLocation.top-e.getDocumentTop();
this.addState("move");
this.__moveHandle.capture();
if(this.getUseMoveFrame()){this.__showMoveFrame();
}e.stop();
},_onMoveMouseMove:function(e){if(!this.hasState("move")){return;
}var coords=this.__computeMoveCoordinates(e);

if(this.getUseMoveFrame()){this.__getMoveFrame().setDomPosition(coords.viewportLeft,coords.viewportTop);
}else{this.setDomPosition(coords.parentLeft,coords.parentTop);
}e.stopPropagation();
},_onMoveMouseUp:function(e){if(!this.hasState("move")){return;
}this.removeState("move");
var parent=this.getLayoutParent();

if(qx.Class.implementsInterface(parent,qx.ui.window.IDesktop)){if(this.__blockerAdded){parent.unblockContent();
parent.setBlockerColor(this.__oldBlockerColor);
parent.setBlockerOpacity(this.__oldBlockerOpacity);
this.__oldBlockerColor=null;
this.__oldBlockerOpacity=0;
}}this.__moveHandle.releaseCapture();
var coords=this.__computeMoveCoordinates(e);
this.setLayoutProperties({left:coords.parentLeft,top:coords.parentTop});
if(this.getUseMoveFrame()){this.__getMoveFrame().exclude();
}e.stopPropagation();
},__onMoveLoseCapture:function(e){if(!this.hasState("move")){return;
}this.removeState("move");
if(this.getUseMoveFrame()){this.__getMoveFrame().exclude();
}}},destruct:function(){this._disposeObjects("__moveFrame","__moveHandle");
this.__dragRange=null;
}});
qx.Interface.define("qx.ui.window.IDesktop",{members:{setWindowManager:function(manager){this.assertInterface(manager,qx.ui.window.IWindowManager);
},getWindows:function(){},supportsMaximize:function(){},blockContent:function(zIndex){this.assertInteger(zIndex);
},unblockContent:function(){},isContentBlocked:function(){}}});
qx.Interface.define("qx.ui.window.IWindowManager",{members:{setDesktop:function(desktop){this.assertInterface(desktop,qx.ui.window.IDesktop);
},changeActiveWindow:function(active,oldActive){},updateStack:function(){},bringToFront:function(win){this.assertInstance(win,qx.ui.window.Window);
},sendToBack:function(win){this.assertInstance(win,qx.ui.window.Window);
}}});
qx.Mixin.define("qx.ui.core.MResizable",{construct:function(){this.addListener("mousedown",this.__onResizeMouseDown,this,true);
this.addListener("mouseup",this.__onResizeMouseUp,this);
this.addListener("mousemove",this.__onResizeMouseMove,this);
this.addListener("mouseout",this.__onResizeMouseOut,this);
this.addListener("losecapture",this.__onResizeLoseCapture,this);
var domElement=this.getContainerElement().getDomElement();

if(domElement==null){domElement=window;
}this.__dragDropHandler=qx.event.Registration.getManager(domElement).getHandler(qx.event.handler.DragDrop);
},properties:{resizableTop:{check:"Boolean",init:true},resizableRight:{check:"Boolean",init:true},resizableBottom:{check:"Boolean",init:true},resizableLeft:{check:"Boolean",init:true},resizable:{group:["resizableTop","resizableRight","resizableBottom","resizableLeft"],mode:"shorthand"},resizeSensitivity:{check:"Integer",init:5},useResizeFrame:{check:"Boolean",init:true}},members:{__dragDropHandler:null,__resizeFrame:null,__resizeActive:null,__resizeLeft:null,__resizeTop:null,__resizeStart:null,RESIZE_TOP:1,RESIZE_BOTTOM:2,RESIZE_LEFT:4,RESIZE_RIGHT:8,__getResizeFrame:function(){var frame=this.__resizeFrame;

if(!frame){frame=this.__resizeFrame=new qx.ui.core.Widget();
frame.setAppearance("resize-frame");
frame.exclude();
qx.core.Init.getApplication().getRoot().add(frame);
}return frame;
},__showResizeFrame:function(){var bounds=this.__resizeStart;
var frame=this.__getResizeFrame();
frame.setUserBounds(bounds.left,bounds.top,bounds.width,bounds.height);
frame.show();
frame.setZIndex(this.getZIndex()+1);
},__computeResizeResult:function(e){var resizeActive=this.__resizeActive;
var hint=this.getSizeHint();
var start=this.__resizeStart;
var width=start.width;
var height=start.height;
var left=start.left;
var top=start.top;
var diff;

if((resizeActive&this.RESIZE_TOP)||(resizeActive&this.RESIZE_BOTTOM)){diff=e.getDocumentTop()-this.__resizeTop;

if(resizeActive&this.RESIZE_TOP){height-=diff;
}else{height+=diff;
}
if(height<hint.minHeight){height=hint.minHeight;
}else if(height>hint.maxHeight){height=hint.maxHeight;
}
if(resizeActive&this.RESIZE_TOP){top+=start.height-height;
}}
if((resizeActive&this.RESIZE_LEFT)||(resizeActive&this.RESIZE_RIGHT)){diff=e.getDocumentLeft()-this.__resizeLeft;

if(resizeActive&this.RESIZE_LEFT){width-=diff;
}else{width+=diff;
}
if(width<hint.minWidth){width=hint.minWidth;
}else if(width>hint.maxWidth){width=hint.maxWidth;
}
if(resizeActive&this.RESIZE_LEFT){left+=start.width-width;
}}return {viewportLeft:left,viewportTop:top,parentLeft:start.bounds.left+left-start.left,parentTop:start.bounds.top+top-start.top,width:width,height:height};
},__resizeCursors:{1:"n-resize",2:"s-resize",4:"w-resize",8:"e-resize",5:"nw-resize",6:"sw-resize",9:"ne-resize",10:"se-resize"},__computeResizeMode:function(e){var contentLocation=this.getContentLocation();
var mouseTolerance=this.getResizeSensitivity();
var mouseLeft=e.getDocumentLeft();
var mouseTop=e.getDocumentTop();
var resizeActive=0;

if(this.getResizableTop()&&Math.abs(contentLocation.top-mouseTop)<mouseTolerance){resizeActive+=this.RESIZE_TOP;
}else if(this.getResizableBottom()&&Math.abs(contentLocation.bottom-mouseTop)<mouseTolerance){resizeActive+=this.RESIZE_BOTTOM;
}
if(this.getResizableLeft()&&Math.abs(contentLocation.left-mouseLeft)<mouseTolerance){resizeActive+=this.RESIZE_LEFT;
}else if(this.getResizableRight()&&Math.abs(contentLocation.right-mouseLeft)<mouseTolerance){resizeActive+=this.RESIZE_RIGHT;
}this.__resizeActive=resizeActive;
},__onResizeMouseDown:function(e){if(!this.__resizeActive){return;
}this.addState("resize");
this.__resizeLeft=e.getDocumentLeft();
this.__resizeTop=e.getDocumentTop();
var location=this.getContainerLocation();
var bounds=this.getBounds();
this.__resizeStart={top:location.top,left:location.left,width:bounds.width,height:bounds.height,bounds:qx.lang.Object.clone(bounds)};
if(this.getUseResizeFrame()){this.__showResizeFrame();
}this.capture();
e.stop();
},__onResizeMouseUp:function(e){if(!this.hasState("resize")){return;
}if(this.getUseResizeFrame()){this.__getResizeFrame().exclude();
}var bounds=this.__computeResizeResult(e);
this.setWidth(bounds.width);
this.setHeight(bounds.height);
if(this.getResizableLeft()||this.getResizableTop()){this.setLayoutProperties({left:bounds.parentLeft,top:bounds.parentTop});
}this.__resizeActive=0;
this.removeState("resize");
this.resetCursor();
this.getApplicationRoot().resetGlobalCursor();
this.releaseCapture();
e.stopPropagation();
},__onResizeLoseCapture:function(e){if(!this.__resizeActive){return;
}this.resetCursor();
this.getApplicationRoot().resetGlobalCursor();
this.removeState("move");
if(this.getUseResizeFrame()){this.__getResizeFrame().exclude();
}},__onResizeMouseMove:function(e){if(this.hasState("resize")){var bounds=this.__computeResizeResult(e);
if(this.getUseResizeFrame()){var frame=this.__getResizeFrame();
frame.setUserBounds(bounds.viewportLeft,bounds.viewportTop,bounds.width,bounds.height);
}else{this.setWidth(bounds.width);
this.setHeight(bounds.height);
if(this.getResizableLeft()||this.getResizableTop()){this.setLayoutProperties({left:bounds.parentLeft,top:bounds.parentTop});
}}e.stopPropagation();
}else if(!this.hasState("maximized")&&!this.__dragDropHandler.isSessionActive()){this.__computeResizeMode(e);
var resizeActive=this.__resizeActive;
var root=this.getApplicationRoot();

if(resizeActive){var cursor=this.__resizeCursors[resizeActive];
this.setCursor(cursor);
root.setGlobalCursor(cursor);
}else if(this.getCursor()){this.resetCursor();
root.resetGlobalCursor();
}}},__onResizeMouseOut:function(e){if(this.getCursor()&&!this.hasState("resize")){this.resetCursor();
this.getApplicationRoot().resetGlobalCursor();
}}},destruct:function(){if(this.__resizeFrame!=null&&!qx.core.ObjectRegistry.inShutDown){this.__resizeFrame.destroy();
this.__resizeFrame=null;
}this.__dragDropHandler=null;
}});
qx.Class.define("qx.ui.window.Manager",{extend:qx.core.Object,implement:qx.ui.window.IWindowManager,members:{__desktop:null,setDesktop:function(desktop){this.__desktop=desktop;
this.updateStack();
},getDesktop:function(){return this.__desktop;
},changeActiveWindow:function(active,oldActive){if(active){this.bringToFront(active);
}},_minZIndex:1e5,updateStack:function(){qx.ui.core.queue.Widget.add(this);
},syncWidget:function(){this.__desktop.forceUnblockContent();
var windows=this.__desktop.getWindows();
var zIndex=this._minZIndex-1;
var hasActive=false;
var win,last=null;

for(var i=0,l=windows.length;i<l;i++){win=windows[i];

if(!win.isVisible()){continue;
}zIndex+=2;
win.setZIndex(zIndex);
if(win.getModal()){this.__desktop.blockContent(zIndex-1);
}hasActive=hasActive||win.isActive();
last=win;
}
if(!hasActive){this.__desktop.setActiveWindow(last);
}},bringToFront:function(win){var windows=this.__desktop.getWindows();
var removed=qx.lang.Array.remove(windows,win);

if(removed){windows.push(win);
this.updateStack();
}},sendToBack:function(win){var windows=this.__desktop.getWindows();
var removed=qx.lang.Array.remove(windows,win);

if(removed){windows.unshift(win);
this.updateStack();
}}},destruct:function(){this._disposeObjects("__desktop");
}});
qx.Class.define("qx.ui.window.Window",{extend:qx.ui.core.Widget,include:[qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MRemoteLayoutHandling,qx.ui.core.MResizable,qx.ui.core.MMovable,qx.ui.core.MContentPadding],construct:function(caption,icon){this.base(arguments);
this._setLayout(new qx.ui.layout.VBox());
this._createChildControl("captionbar");
this._createChildControl("pane");
if(icon!=null){this.setIcon(icon);
}
if(caption!=null){this.setCaption(caption);
}this._updateCaptionBar();
this.addListener("mousedown",this._onWindowMouseDown,this,true);
this.addListener("focusout",this._onWindowFocusOut,this);
qx.core.Init.getApplication().getRoot().add(this);
this.initVisibility();
qx.ui.core.FocusHandler.getInstance().addRoot(this);
{qx.log.Logger.deprecateMethodOverriding(this,qx.ui.window.Window,"_applyCaption");
qx.log.Logger.deprecateMethodOverriding(this,qx.ui.window.Window,"_applyIcon");
};
},statics:{DEFAULT_MANAGER_CLASS:qx.ui.window.Manager},events:{"beforeClose":"qx.event.type.Event","close":"qx.event.type.Event","beforeMinimize":"qx.event.type.Event","minimize":"qx.event.type.Event","beforeMaximize":"qx.event.type.Event","maximize":"qx.event.type.Event","beforeRestore":"qx.event.type.Event","restore":"qx.event.type.Event"},properties:{appearance:{refine:true,init:"window"},visibility:{refine:true,init:"excluded"},focusable:{refine:true,init:true},active:{check:"Boolean",init:false,apply:"_applyActive",event:"changeActive"},modal:{check:"Boolean",init:false,event:"changeModal"},caption:{apply:"_applyCaptionBarChange",event:"changeCaption",nullable:true},icon:{check:"String",nullable:true,apply:"_applyCaptionBarChange",event:"changeIcon",themeable:true},status:{check:"String",nullable:true,apply:"_applyStatus",event:"changeStatus"},showClose:{check:"Boolean",init:true,apply:"_applyCaptionBarChange",themeable:true},showMaximize:{check:"Boolean",init:true,apply:"_applyCaptionBarChange",themeable:true},showMinimize:{check:"Boolean",init:true,apply:"_applyCaptionBarChange",themeable:true},allowClose:{check:"Boolean",init:true,apply:"_applyCaptionBarChange"},allowMaximize:{check:"Boolean",init:true,apply:"_applyCaptionBarChange"},allowMinimize:{check:"Boolean",init:true,apply:"_applyCaptionBarChange"},showStatusbar:{check:"Boolean",init:false,apply:"_applyShowStatusbar"}},members:{__restoredTop:null,__restoredLeft:null,getChildrenContainer:function(){return this.getChildControl("pane");
},_forwardStates:{active:true,maximized:true},setLayoutParent:function(parent){{parent&&this.assertInterface(parent,qx.ui.window.IDesktop,"Windows can only be added to widgets, which implement the interface "+"qx.ui.window.IDesktop. All root widgets implement this interface.");
};
this.base(arguments,parent);
},_createChildControlImpl:function(id){var control;

switch(id){case "statusbar":control=new qx.ui.container.Composite(new qx.ui.layout.HBox());
this._add(control);
control.add(this.getChildControl("statusbar-text"));
break;
case "statusbar-text":control=new qx.ui.basic.Label();
control.setValue(this.getStatus());
break;
case "pane":control=new qx.ui.container.Composite();
this._add(control,{flex:1});
break;
case "captionbar":var layout=new qx.ui.layout.Grid();
layout.setRowFlex(0,1);
layout.setColumnFlex(1,1);
control=new qx.ui.container.Composite(layout);
this._add(control);
control.addListener("dblclick",this._onCaptionMouseDblClick,this);
this._activateMoveHandle(control);
break;
case "icon":control=new qx.ui.basic.Image(this.getIcon());
this.getChildControl("captionbar").add(control,{row:0,column:0});
break;
case "title":control=new qx.ui.basic.Label(this.getCaption());
control.setWidth(0);
control.setAllowGrowX(true);
var captionBar=this.getChildControl("captionbar");
captionBar.add(control,{row:0,column:1});
break;
case "minimize-button":control=new qx.ui.form.Button();
control.setFocusable(false);
control.addListener("execute",this._onMinimizeButtonClick,this);
this.getChildControl("captionbar").add(control,{row:0,column:2});
break;
case "restore-button":control=new qx.ui.form.Button();
control.setFocusable(false);
control.addListener("execute",this._onRestoreButtonClick,this);
this.getChildControl("captionbar").add(control,{row:0,column:3});
break;
case "maximize-button":control=new qx.ui.form.Button();
control.setFocusable(false);
control.addListener("execute",this._onMaximizeButtonClick,this);
this.getChildControl("captionbar").add(control,{row:0,column:4});
break;
case "close-button":control=new qx.ui.form.Button();
control.setFocusable(false);
control.addListener("execute",this._onCloseButtonClick,this);
this.getChildControl("captionbar").add(control,{row:0,column:6});
break;
}return control||this.base(arguments,id);
},_updateCaptionBar:function(){var btn;
var icon=this.getIcon();

if(icon){this.getChildControl("icon").setSource(icon);
this._showChildControl("icon");
}else{this._excludeChildControl("icon");
}var caption=this.getCaption();

if(caption){this.getChildControl("title").setValue(caption);
this._showChildControl("title");
}else{this._excludeChildControl("title");
}
if(this.getShowMinimize()){this._showChildControl("minimize-button");
btn=this.getChildControl("minimize-button");
this.getAllowMinimize()?btn.resetEnabled():btn.setEnabled(false);
}else{this._excludeChildControl("minimize-button");
}
if(this.getShowMaximize()){if(this.isMaximized()){this._showChildControl("restore-button");
this._excludeChildControl("maximize-button");
}else{this._showChildControl("maximize-button");
this._excludeChildControl("restore-button");
}btn=this.getChildControl("maximize-button");
this.getAllowMaximize()?btn.resetEnabled():btn.setEnabled(false);
}else{this._excludeChildControl("maximize-button");
this._excludeChildControl("restore-button");
}
if(this.getShowClose()){this._showChildControl("close-button");
btn=this.getChildControl("close-button");
this.getAllowClose()?btn.resetEnabled():btn.setEnabled(false);
}else{this._excludeChildControl("close-button");
}},close:function(){if(!this.isVisible()){return;
}
if(this.fireNonBubblingEvent("beforeClose",qx.event.type.Event,[false,true])){this.hide();
this.fireEvent("close");
}},open:function(){this.show();
this.setActive(true);
this.focus();
},center:function(){var parent=this.getLayoutParent();

if(parent){var bounds=parent.getBounds();

if(bounds){var hint=this.getSizeHint();
var left=Math.round((bounds.width-hint.width)/2);
var top=Math.round((bounds.height-hint.height)/2);

if(top<0){top=0;
}this.moveTo(left,top);
return;
}}{this.warn("Centering depends on parent bounds!");
};
},maximize:function(){if(this.isMaximized()){return;
}var parent=this.getLayoutParent();

if(parent!=null&&parent.supportsMaximize()){if(this.fireNonBubblingEvent("beforeMaximize",qx.event.type.Event,[false,true])){if(!this.isVisible()){this.open();
}var props=this.getLayoutProperties();
this.__restoredLeft=props.left===undefined?0:props.left;
this.__restoredTop=props.top===undefined?0:props.top;
this.setLayoutProperties({left:null,top:null,edge:0});
this.addState("maximized");
this._updateCaptionBar();
this.fireEvent("maximize");
}}},minimize:function(){if(!this.isVisible()){return;
}
if(this.fireNonBubblingEvent("beforeMinimize",qx.event.type.Event,[false,true])){var props=this.getLayoutProperties();
this.__restoredLeft=props.left===undefined?0:props.left;
this.__restoredTop=props.top===undefined?0:props.top;
this.removeState("maximized");
this.hide();
this.fireEvent("minimize");
}},restore:function(){if(this.getMode()==="normal"){return;
}
if(this.fireNonBubblingEvent("beforeRestore",qx.event.type.Event,[false,true])){if(!this.isVisible()){this.open();
}var left=this.__restoredLeft;
var top=this.__restoredTop;
this.setLayoutProperties({edge:null,left:left,top:top});
this.removeState("maximized");
this._updateCaptionBar();
this.fireEvent("restore");
}},moveTo:function(left,top){if(this.isMaximized()){return;
}this.setLayoutProperties({left:left,top:top});
},isMaximized:function(){return this.hasState("maximized");
},getMode:function(){if(!this.isVisible()){return "minimized";
}else{if(this.isMaximized()){return "maximized";
}else{return "normal";
}}},_applyActive:function(value,old){if(old){this.removeState("active");
}else{this.addState("active");
}},_getContentPaddingTarget:function(){return this.getChildControl("pane");
},_applyShowStatusbar:function(value,old){if(value){this._showChildControl("statusbar");
}else{this._excludeChildControl("statusbar");
}},_applyCaptionBarChange:function(value,old){this._updateCaptionBar();
},_applyStatus:function(value,old){var label=this.getChildControl("statusbar-text",true);

if(label){label.setValue(value);
}},_applyCaption:function(value,old){{qx.log.Logger.deprecatedMethodWarning(arguments.callee);
};
this.getChildControl("title").setValue(value);
},_applyIcon:function(value,old){{qx.log.Logger.deprecatedMethodWarning(arguments.callee);
};
this.getChildControl("icon").setSource(value);
},_onWindowEventStop:function(e){e.stopPropagation();
},_onWindowMouseDown:function(e){this.setActive(true);
},_onWindowFocusOut:function(e){if(this.getModal()){return;
}var current=e.getRelatedTarget();

if(current!=null&&!qx.ui.core.Widget.contains(this,current)){this.setActive(false);
}},_onCaptionMouseDblClick:function(e){if(this.getAllowMaximize()){this.isMaximized()?this.restore():this.maximize();
}},_onMinimizeButtonClick:function(e){this.minimize();
this.getChildControl("minimize-button").reset();
},_onRestoreButtonClick:function(e){this.restore();
this.getChildControl("restore-button").reset();
},_onMaximizeButtonClick:function(e){this.maximize();
this.getChildControl("maximize-button").reset();
},_onCloseButtonClick:function(e){this.close();
this.getChildControl("close-button").reset();
}}});
qx.Class.define("qx.ui.decoration.BoxDiv",{extend:qx.ui.decoration.Abstract,construct:function(baseImage,insets,orientation){this.base(arguments);
this._setOrientation(orientation);
if(baseImage!=null){this.setBaseImage(baseImage);
}
if(insets!=null){this.setInsets(insets);
}},properties:{baseImage:{check:"String",nullable:true,apply:"_applyBaseImage"}},members:{__markup:null,__images:null,__edges:null,_getDefaultInsets:function(){return {top:0,right:0,bottom:0,left:0};
},_isInitialized:function(){return !!this.__markup;
},_setOrientation:function(orientation){this._isHorizontal=orientation=="horizontal";
},getMarkup:function(){if(this.__markup){return this.__markup;
}var Decoration=qx.bom.element.Decoration;
var images=this.__images;
var edges=this.__edges;
var html=[];
html.push('<div style="position:absolute;top:0;left:0;overflow:hidden;font-size:0;line-height:0;">');

if(this._isHorizontal){html.push(Decoration.create(images.l,"no-repeat",{top:0,left:0}));
html.push(Decoration.create(images.c,"repeat-x",{top:0,left:edges.left+"px"}));
html.push(Decoration.create(images.r,"no-repeat",{top:0,right:0}));
}else{html.push(Decoration.create(images.t,"no-repeat",{top:0,left:0}));
html.push(Decoration.create(images.c,"repeat-y",{top:edges.top+"px",left:edges.left+"px"}));
html.push(Decoration.create(images.b,"no-repeat",{bottom:0,left:0}));
}html.push('</div>');
return this.__markup=html.join("");
},resize:function(element,width,height){element.style.width=width+"px";
element.style.height=height+"px";
var edges=this.__edges;

if(this._isHorizontal){var innerWidth=width-edges.left-edges.right;
element.childNodes[1].style.width=innerWidth+"px";
}else{var innerHeight=height-edges.top-edges.bottom;
element.childNodes[1].style.height=innerHeight+"px";
}
if(qx.core.Variant.isSet("qx.client","mshtml")){if(qx.bom.client.Engine.VERSION<7||(qx.bom.client.Feature.QUIRKS_MODE&&qx.bom.client.Engine.VERSION<8)){if(this._isHorizontal){element.childNodes[2].style.marginRight=(width%2==1)?"-1px":"0";
}else{element.childNodes[2].style.marginBottom=(height%2==1)?"-1px":"0";
}}}},tint:function(element,bgcolor){},_applyBaseImage:function(value,old){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
var ResourceManager=qx.util.ResourceManager.getInstance();

if(value){var Alias=qx.util.AliasManager.getInstance();
var base=Alias.resolve(value);
var split=/(.*)(\.[a-z]+)$/.exec(base);
var prefix=split[1];
var ext=split[2];
var images=this.__images={t:prefix+"-t"+ext,b:prefix+"-b"+ext,c:prefix+"-c"+ext,l:prefix+"-l"+ext,r:prefix+"-r"+ext};
this.__edges={top:ResourceManager.getImageHeight(images.t),bottom:ResourceManager.getImageHeight(images.b),left:ResourceManager.getImageWidth(images.l),right:ResourceManager.getImageWidth(images.r)};
}}},destruct:function(){this.__markup=this.__images=this.__edges=null;
}});
qx.Class.define("qx.ui.layout.LineSizeIterator",{extend:Object,construct:function(children,spacing){this.__children=children;
this.__spacing=spacing;
this.__hasMoreLines=children.length>0;
this.__childIndex=0;
},members:{__children:null,__spacing:null,__hasMoreLines:null,__childIndex:null,computeNextLine:function(availWidth){var availWidth=availWidth||Infinity;

if(!this.__hasMoreLines){throw new Error("No more lines to compute");
}var children=this.__children;
var lineHeight=0;
var lineWidth=0;
var lineChildren=[];
var gapsBefore=[];

for(var i=this.__childIndex;i<children.length;i++){var child=children[i];
var size=child.getSizeHint();
var gapBefore=this.__computeGapBeforeChild(i);
var childWidth=size.width+gapBefore;
var isFirstChild=i==this.__childIndex;

if(!isFirstChild&&lineWidth+childWidth>availWidth){this.__childIndex=i;
break;
}var childHeight=size.height+child.getMarginTop()+child.getMarginBottom();
lineChildren.push(child);
gapsBefore.push(gapBefore);
lineWidth+=childWidth;
lineHeight=Math.max(lineHeight,childHeight);

if(child.getLayoutProperties().lineBreak){this.__childIndex=i+1;
break;
}}
if(i>=children.length){this.__hasMoreLines=false;
}return {height:lineHeight,width:lineWidth,children:lineChildren,gapsBefore:gapsBefore};
},__computeGapBeforeChild:function(childIndex){var isFirstInLine=childIndex==this.__childIndex;

if(isFirstInLine){return this.__children[childIndex].getMarginLeft();
}else{return Math.max(this.__children[childIndex-1].getMarginRight(),this.__children[childIndex].getMarginLeft(),this.__spacing);
}},hasMoreLines:function(){return this.__hasMoreLines;
}}});
qx.Class.define("qx.ui.form.SelectBox",{extend:qx.ui.form.AbstractSelectBox,implement:[qx.ui.core.ISingleSelection,qx.ui.form.IModelSelection],include:[qx.ui.core.MSingleSelectionHandling,qx.ui.form.MModelSelection],construct:function(){this.base(arguments);
this._createChildControl("atom");
this._createChildControl("spacer");
this._createChildControl("arrow");
this.addListener("mouseover",this._onMouseOver,this);
this.addListener("mouseout",this._onMouseOut,this);
this.addListener("click",this._onClick,this);
this.addListener("mousewheel",this._onMouseWheel,this);
this.addListener("keyinput",this._onKeyInput,this);
this.addListener("changeSelection",this.__onChangeSelection,this);
},properties:{appearance:{refine:true,init:"selectbox"}},members:{__preSelectedItem:null,_createChildControlImpl:function(id){var control;

switch(id){case "spacer":control=new qx.ui.core.Spacer();
this._add(control,{flex:1});
break;
case "atom":control=new qx.ui.basic.Atom(" ");
control.setCenter(false);
control.setAnonymous(true);
this._add(control,{flex:1});
break;
case "arrow":control=new qx.ui.basic.Image();
control.setAnonymous(true);
this._add(control);
break;
}return control||this.base(arguments,id);
},_forwardStates:{focused:true},_getItems:function(){return this.getChildrenContainer().getChildren();
},_isAllowEmptySelection:function(){return this.getChildrenContainer().getSelectionMode()!=="one";
},__onChangeSelection:function(e){var listItem=e.getData()[0];
var list=this.getChildControl("list");

if(list.getSelection()[0]!=listItem){if(listItem){list.setSelection([listItem]);
}else{list.resetSelection();
}}this.__updateIcon();
this.__updateLabel();
},__updateIcon:function(){var listItem=this.getChildControl("list").getSelection()[0];
var atom=this.getChildControl("atom");
var icon=listItem?listItem.getIcon():"";
icon==null?atom.resetIcon():atom.setIcon(icon);
},__updateLabel:function(){var listItem=this.getChildControl("list").getSelection()[0];
var atom=this.getChildControl("atom");
var label=listItem?listItem.getLabel():"";
var format=this.getFormat();

if(format!=null){label=format.call(this,listItem);
}if(label&&label.translate){label=label.translate();
}label==null?atom.resetLabel():atom.setLabel(label);
},_onMouseOver:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}
if(this.hasState("abandoned")){this.removeState("abandoned");
this.addState("pressed");
}this.addState("hovered");
},_onMouseOut:function(e){if(!this.isEnabled()||e.getTarget()!==this){return;
}this.removeState("hovered");

if(this.hasState("pressed")){this.removeState("pressed");
this.addState("abandoned");
}},_onClick:function(e){this.toggle();
},_onMouseWheel:function(e){if(this.getChildControl("popup").isVisible()){return;
}var direction=e.getWheelDelta()>0?1:-1;
var children=this.getSelectables();
var selected=this.getSelection()[0];

if(!selected){selected=children[0];
}var index=children.indexOf(selected)+direction;
var max=children.length-1;
if(index<0){index=0;
}else if(index>=max){index=max;
}this.setSelection([children[index]]);
e.stopPropagation();
e.preventDefault();
},_onKeyPress:function(e){var iden=e.getKeyIdentifier();

if(iden=="Enter"||iden=="Space"){if(this.__preSelectedItem){this.setSelection([this.__preSelectedItem]);
this.__preSelectedItem=null;
}this.toggle();
}else{this.base(arguments,e);
}},_onKeyInput:function(e){var clone=e.clone();
clone.setTarget(this._list);
clone.setBubbles(false);
this.getChildControl("list").dispatchEvent(clone);
},_onListMouseDown:function(e){if(this.__preSelectedItem){this.setSelection([this.__preSelectedItem]);
this.__preSelectedItem=null;
}},_onListChangeSelection:function(e){var current=e.getData();
var old=e.getOldData();
if(old&&old.length>0){old[0].removeListener("changeIcon",this.__updateIcon,this);
old[0].removeListener("changeLabel",this.__updateLabel,this);
}
if(current.length>0){var popup=this.getChildControl("popup");
var list=this.getChildControl("list");
var context=list.getSelectionContext();

if(popup.isVisible()&&(context=="quick"||context=="key")){this.__preSelectedItem=current[0];
}else{this.setSelection([current[0]]);
this.__preSelectedItem=null;
}current[0].addListener("changeIcon",this.__updateIcon,this);
current[0].addListener("changeLabel",this.__updateLabel,this);
}else{this.resetSelection();
}},_onPopupChangeVisibility:function(e){var popup=this.getChildControl("popup");

if(!popup.isVisible()){var list=this.getChildControl("list");
if(list.hasChildren()){list.setSelection(this.getSelection());
}}else{var distance=popup.getLayoutLocation(this);
var viewPortHeight=qx.bom.Viewport.getHeight();
var toTop=distance.top;
var toBottom=viewPortHeight-distance.bottom;
var availableHeigth=toTop>toBottom?toTop:toBottom;
var maxListHeight=this.getMaxListHeight();
var list=this.getChildControl("list");

if(maxListHeight==null||maxListHeight>availableHeigth){list.setMaxHeight(availableHeigth);
}else if(maxListHeight<availableHeigth){list.setMaxHeight(maxListHeight);
}}}},destruct:function(){this.__preSelectedItem=null;
}});
qx.Class.define("qx.ui.container.Scroll",{extend:qx.ui.core.scroll.AbstractScrollArea,include:[qx.ui.core.MContentPadding],construct:function(content){this.base(arguments);

if(content){this.add(content);
}},members:{add:function(widget){this.getChildControl("pane").add(widget);
},remove:function(widget){this.getChildControl("pane").remove(widget);
},getChildren:function(){return this.getChildControl("pane").getChildren();
},_getContentPaddingTarget:function(){return this.getChildControl("pane");
}}});
qx.Class.define("qx.ui.virtual.cell.Number",{extend:qx.ui.virtual.cell.Cell,construct:function(numberFormat){this.base(arguments);

if(numberFormat){this.setNumberFormat(numberFormat);
}},properties:{numberFormat:{check:"qx.util.format.NumberFormat",init:qx.util.format.NumberFormat.getInstance()},appearance:{refine:true,init:"cell-number"}},members:{getContent:function(value,states){return value!==null?this.getNumberFormat().format(value):"";
}}});
qx.Class.define("qx.ui.progressive.renderer.Abstract",{type:"abstract",extend:qx.core.Object,members:{render:function(state,element){throw new Error("render() is abstract");
},join:function(progressive,name){}}});
qx.Class.define("qx.ui.virtual.core.Scroller",{extend:qx.ui.core.scroll.AbstractScrollArea,construct:function(rowCount,columnCount,cellHeight,cellWidth){this.base(arguments);
this.__pane=new qx.ui.virtual.core.Pane(rowCount,columnCount,cellHeight,cellWidth);
this.__pane.addListener("update",this._computeScrollbars,this);
this.__pane.addListener("scrollX",this._onScrollPaneX,this);
this.__pane.addListener("scrollY",this._onScrollPaneY,this);
this._add(this.__pane,{row:0,column:0});
},properties:{width:{refine:true,init:null},height:{refine:true,init:null}},members:{__pane:null,getPane:function(){return this.__pane;
},_createChildControlImpl:function(id){if(id=="pane"){return this.__pane;
}else{return this.base(arguments,id);
}},getItemTop:function(item){throw new Error("The method 'getItemTop' is not implemented!");
},getItemBottom:function(item){throw new Error("The method 'getItemBottom' is not implemented!");
},getItemLeft:function(item){throw new Error("The method 'getItemLeft' is not implemented!");
},getItemRight:function(item){throw new Error("The method 'getItemRight' is not implemented!");
},_onScrollBarX:function(e){this.__pane.setScrollX(e.getData());
},_onScrollBarY:function(e){this.__pane.setScrollY(e.getData());
}},destruct:function(){this._disposeObjects("__pane");
}});
qx.Class.define("qx.ui.virtual.form.List",{extend:qx.ui.virtual.core.Scroller,construct:function(){this.base(arguments,0,1,20,100);
qx.ui.core.queue.Widget.add(this);
this.getPane().addListener("resize",this._onResize,this);
this._initSelectionManager();
this.initRowHeight();
this.initDelegate();
},properties:{appearance:{refine:true,init:"virtual-list"},rowCount:{check:"Integer",event:"changeRowCount",init:0,apply:"_applyRowCount"},rowHeight:{check:"Integer",event:"changeRowHeight",init:20,apply:"_applyRowHeight",themeable:true},showGridLines:{check:"Boolean",event:"changeShowGridLines",init:false,apply:"_applyShowGridLines",themeable:true},useWidgetCells:{check:"Boolean",init:false,apply:"_applyUseWidgetCells",themeable:true},cellRenderer:{event:"changeCellRenderer",apply:"_applyCellRenderer",themeable:true},delegate:{check:"Object",event:"changeDelegate",init:null,nullable:true,apply:"_applyDelegate"}},members:{__defaultCellRenderer:null,__manager:null,__cellLayer:null,__useWidgetCells:null,_initWidgetLayer:function(){var self=this;
var widgetCellDelegate={getCellWidget:function(row,column){var data=self._getCellData(row);

if(!data){return null;
}var states={};

if(self.__manager.isItemSelected(row)){states.selected=true;
}var cell=self._getCellRenderer(row);
var widget=cell.getCellWidget(data,states);
widget.setUserData("cell.row",row);
widget.setUserData("cell.renderer",cell);
return widget;
},poolCellWidget:function(widget){var cellRenderer=widget.getUserData("cell.renderer");
cellRenderer.pool(widget);
}};
this._showChildControl("row-layer");
this.__cellLayer=new qx.ui.virtual.layer.WidgetCell(widgetCellDelegate);
this.getPane().addLayer(this.__cellLayer);

if(!this.__defaultCellRenderer){this.setCellRenderer(qx.ui.virtual.form.ListItemCell.getInstance());
}},_initHtmlLayer:function(){var self=this;
var htmlLayerDelegate={getCellProperties:function(row,column){var states={};

if(self.__manager.isItemSelected(row)){states.selected=true;
}return self._getCellRenderer(row).getCellProperties(self._getCellData(row),states);
}};
this._showChildControl("row-layer");
this.__cellLayer=new qx.ui.virtual.layer.HtmlCell(htmlLayerDelegate);
this.getPane().addLayer(this.__cellLayer);

if(!this.__defaultCellRenderer){this.setCellRenderer(new qx.ui.virtual.cell.Cell());
}},_initSelectionManager:function(){var self=this;
var selectionDelegate={isItemSelectable:function(item){return self._delegate.isRowSelectable?self._delegate.isRowSelectable(item):true;
},styleSelectable:function(item,type,wasAdded){if(self.__useWidgetCells){self._styleWidgetSelectable(item,type,wasAdded);
}else{self._styleHtmlSelectable(item,type,wasAdded);
}}};
this.__manager=new qx.ui.virtual.selection.Row(this.getPane(),selectionDelegate);
this.__manager.attachMouseEvents(this.getPane());
this.__manager.attachKeyEvents(this);
},getSelectionManager:function(){return this.__manager;
},_createChildControlImpl:function(id){var control;

switch(id){case "row-layer":control=new qx.ui.virtual.layer.Row(null,null);
this.getPane().addLayer(control);
break;
case "grid-lines":control=new qx.ui.virtual.layer.GridLines("horizontal");
this.getPane().addLayer(control);
break;
}return control||this.base(arguments,id);
},update:function(){if(this.__cellLayer){this.__cellLayer.updateLayerData();
}},_applyRowCount:function(value,old){this.getPane().getRowConfig().setItemCount(value);
},_applyRowHeight:function(value,old){this.getPane().getRowConfig().setDefaultItemSize(value);
},_applyShowGridLines:function(value,old){if(value){this._showChildControl("grid-lines");
}else{this._excludeChildControl("grid-lines");
}},_applyDelegate:function(value,old){this._delegate=value||{};
},_applyUseWidgetCells:function(value,old){if(this.__useWidgetCells!==null){throw new Error("The property 'useWidgetCells' cannot be set after the list has "+"been rendered.");
}},_applyCellRenderer:function(value,old){this.__defaultCellRenderer=value;

if(this.__cellLayer){this.__cellLayer.fullUpdate();
}},_getCellData:function(row){return this._delegate.getCellData?this._delegate.getCellData(row):null;
},_getCellRenderer:function(row){return this._delegate.getCellRenderer?this._delegate.getCellRenderer(row):this.__defaultCellRenderer;
},_styleHtmlSelectable:function(item,type,wasAdded){if(type!=="selected"){return;
}var rowLayer=this.getChildControl("row-layer");

if(wasAdded){rowLayer.setBackground(item,"selected");
}else{rowLayer.setBackground(item,null);
}this.__cellLayer.updateLayerData();
},_styleWidgetSelectable:function(item,type,wasAdded){if(type!=="selected"){return;
}var widgets=this.__cellLayer.getChildren();

for(var i=0;i<widgets.length;i++){var widget=widgets[i];
var cellRow=widget.getUserData("cell.row");

if(item!==cellRow){continue;
}
if(this.getPane().isUpdatePending()){continue;
}var cell=this._getCellRenderer(item);

if(wasAdded){cell.updateStates(widget,{selected:1});
}else{cell.updateStates(widget,{});
}}},syncWidget:function(){if(this.__useWidgetCells!==null){return;
}this.__useWidgetCells=this.getUseWidgetCells();

if(this.__useWidgetCells){this._initWidgetLayer();
}else{this._initHtmlLayer();
}},_onResize:function(e){this.getPane().getColumnConfig().setItemSize(0,e.getData().width);
}},destruct:function(){this._delegate=this.__defaultCellRenderer=null;
this._disposeObjects("__manager","__cellLayer");
}});
qx.Interface.define("qx.ui.virtual.cell.IWidgetCell",{members:{getCellWidget:function(data,states){},pool:function(widget){},updateStates:function(widget,states){},updateData:function(widget,data){}}});
qx.Class.define("qx.ui.virtual.cell.AbstractWidget",{extend:qx.core.Object,implement:[qx.ui.virtual.cell.IWidgetCell],construct:function(){this.base(arguments);
this.__pool=[];
},members:{__pool:null,_createWidget:function(){throw new Error("abstract method call");
},updateData:function(widget,data){throw new Error("abstract method call");
},updateStates:function(widget,states){var oldStates=widget.getUserData("cell.states");
if(oldStates){var newStates=states||{};

for(var state in oldStates){if(!newStates[state]){widget.removeState(state);
}}}else{oldStates={};
}if(states){for(var state in states){if(!oldStates.state){widget.addState(state);
}}}widget.setUserData("cell.states",states);
},getCellWidget:function(data,states){var widget=this.__pool.pop()||this._createWidget();
this.updateStates(widget,states);
this.updateData(widget,data);
return widget;
},pool:function(widget){this.__pool.push(widget);
}},destruct:function(){this.__pool=null;
}});
qx.Class.define("qx.ui.virtual.form.ListItemCell",{extend:qx.ui.virtual.cell.AbstractWidget,type:"singleton",members:{_createWidget:function(){return new qx.ui.form.ListItem();
},updateData:function(widget,data){widget.setLabel(data);
}}});
qx.Class.define("qx.ui.virtual.layer.AbstractBackground",{extend:qx.ui.virtual.layer.Abstract,construct:function(colorEven,colorOdd){this.base(arguments);

if(colorEven){this.setColorEven(colorEven);
}
if(colorOdd){this.setColorOdd(colorOdd);
}this.__customColors={};
this.__decorators={};
},properties:{colorEven:{nullable:true,check:"Color",apply:"_applyColorEven",themeable:true},colorOdd:{nullable:true,check:"Color",apply:"_applyColorOdd",themeable:true}},members:{__colorEven:null,__colorOdd:null,__customColors:null,__decorators:null,setColor:function(index,color){if(color){this.__customColors[index]=qx.theme.manager.Color.getInstance().resolve(color);
}else{delete (this.__customColors[index]);
}},clearCustomColors:function(){this.__customColors={};
this.updateLayerData();
},getColor:function(index){var customColor=this.__customColors[index];

if(customColor){return customColor;
}else{return index%2==0?this.__colorEven:this.__colorOdd;
}},_applyColorEven:function(value,old){if(value){this.__colorEven=qx.theme.manager.Color.getInstance().resolve(value);
}else{this.__colorEven=null;
}this.updateLayerData();
},_applyColorOdd:function(value,old){if(value){this.__colorOdd=qx.theme.manager.Color.getInstance().resolve(value);
}else{this.__colorOdd=null;
}this.updateLayerData();
},setBackground:function(index,decorator){if(decorator){this.__decorators[index]=qx.theme.manager.Decoration.getInstance().resolve(decorator);
}else{delete (this.__decorators[index]);
}this.updateLayerData();
},getBackground:function(index){return this.__decorators[index];
}},destruct:function(){this.__customColors=this.__decorators=null;
}});
qx.Class.define("qx.ui.virtual.layer.Row",{extend:qx.ui.virtual.layer.AbstractBackground,properties:{appearance:{refine:true,init:"row-layer"}},members:{_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var html=[];
var width=qx.lang.Array.sum(columnSizes);
var decorations=[];
var top=0;
var row=firstRow;
var childIndex=0;

for(var y=0;y<rowSizes.length;y++){var decorator=this.getBackground(row);

if(decorator){decorations.push({childIndex:childIndex,decorator:decorator,width:width,height:rowSizes[y]});
html.push("<div style='","position: absolute;","left: 0;","top:",top,"px;","'>",decorator.getMarkup(),"</div>");
childIndex++;
}else{var color=this.getColor(row);

if(color){html.push("<div style='","position: absolute;","left: 0;","top:",top,"px;","height:",rowSizes[y],"px;","width:",width,"px;","background-color:",color,"'>","</div>");
childIndex++;
}}top+=rowSizes[y];
row+=1;
}var el=this.getContentElement().getDomElement();
el.style.display="none";
el.innerHTML=html.join("");
for(var i=0,l=decorations.length;i<l;i++){var deco=decorations[i];
deco.decorator.resize(el.childNodes[deco.childIndex].firstChild,deco.width,deco.height);
}el.style.display="block";
this._width=width;
},_updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){if(firstRow!==this.getFirstRow()||rowSizes.length!==this.getRowSizes().length||this._width<qx.lang.Array.sum(columnSizes)){this._fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
}},setColor:function(index,color){this.base(arguments,index,color);

if(this.__isRowRendered(index)){this.updateLayerData();
}},setBackground:function(index,decorator){this.base(arguments,index,decorator);

if(this.__isRowRendered(index)){this.updateLayerData();
}},__isRowRendered:function(index){var firstRow=this.getFirstRow();
var lastRow=firstRow+this.getRowSizes().length-1;
return index>=firstRow&&index<=lastRow;
}}});
qx.Class.define("qx.ui.virtual.layer.GridLines",{extend:qx.ui.virtual.layer.Abstract,construct:function(orientation,lineColor,lineSize){this.base(arguments);
this.setZIndex(1);

if(lineColor){this.setDefaultLineColor(lineColor);
}
if(lineSize!==undefined){this.setDefaultLineSize(lineSize);
}this.__lineColors=[];
this.__lineSizes=[];
this._isHorizontal=(orientation||"horizontal")=="horizontal";
},properties:{defaultLineColor:{init:"gray",check:"Color",themeable:true},defaultLineSize:{init:1,check:"PositiveInteger",themeable:true}},members:{__lineColors:null,__lineSizes:null,isHorizontal:function(){return this._isHorizontal;
},setLineColor:function(index,color){{qx.core.Assert.assertPositiveNumber(index);
qx.core.Assert.assertString(color);
};
this.__lineColors[index]=color;

if(this.__isLineRendered(index)){this.updateLayerData();
}},setLineSize:function(index,size){{qx.core.Assert.assertPositiveInteger(index);
qx.core.Assert.assertPositiveInteger(size);
};
this.__lineSizes[index]=size;

if(this.__isLineRendered(index)){this.updateLayerData();
}},__isLineRendered:function(index){if(this._isHorizontal){var firstColumn=this.getFirstColumn();
var lastColumn=firstColumn+this.getColumnSizes().length-1;
return index>=firstColumn&&index<=lastColumn;
}else{var firstRow=this.getFirstRow();
var lastRow=firstRow+this.getRowSizes().length-1;
return index>=firstRow&&index<=lastRow;
}},getLineSize:function(index){return this.__lineSizes[index]||this.getDefaultLineSize();
},getLineColor:function(index){return this.__lineColors[index]||this.getDefaultLineColor();
},__renderHorizontalLines:function(htmlArr,firstRow,rowSizes){var top=0;
var color,height;

for(var y=0;y<rowSizes.length-1;y++){color=this.getLineColor(firstRow+y);
height=this.getLineSize(firstRow+y);
top+=rowSizes[y];
htmlArr.push("<div style='","position: absolute;","height: "+height+"px;","width: 100%;","top:",top-((height>1)?Math.floor(height/2):1),"px;","background-color:",color,"'>","</div>");
}},__renderVerticalLines:function(htmlArr,firstColumn,columnSizes){var left=0;
var color,width;

for(var x=0;x<columnSizes.length-1;x++){color=this.getLineColor(firstColumn+x);
width=this.getLineSize(firstColumn+x);
left+=columnSizes[x];
htmlArr.push("<div style='","position: absolute;","width: "+width+"px;","height: 100%;","top: 0px;","left:",left-((width>1)?Math.floor(width/2):1),"px;","background-color:",color,"'>","</div>");
}},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var html=[];

if(this._isHorizontal){this.__renderHorizontalLines(html,firstRow,rowSizes);
}else{this.__renderVerticalLines(html,firstColumn,columnSizes);
}this.getContentElement().setAttribute("html",html.join(""));
},_updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){var rowChanged=firstRow!==this.getFirstRow()||rowSizes.length!==this.getRowSizes().length;
var columnChanged=firstColumn!==this.getFirstColumn()||columnSizes.length!==this.getColumnSizes().length;

if((this._isHorizontal&&rowChanged)||(!this._isHorizontal&&columnChanged)){this._fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
}}},destruct:function(){this.__lineColors=this.__lineSizes=null;
}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Icon",{type:"abstract",extend:qx.ui.progressive.renderer.table.cell.Abstract,construct:function(){this.base(arguments);
var aliasManager=qx.util.AliasManager.getInstance();
var resourceManager=qx.util.ResourceManager.getInstance();
var blankImg=aliasManager.resolve("qx/static/blank.gif");
this.__imageBlank=resourceManager.toUri(blankImg);
},members:{__imageBlank:null,getBlankImage:function(){return this.__imageBlank;
},_identifyImage:function(cellInfo){throw new Error("_identifyImage() is abstract");
},_getCellStyle:function(cellInfo){var ret=this.base(arguments,cellInfo)+"text-align:center;"+"vertical-align:middle;";
return ret;
},_getContentHtml:function(cellInfo){var html=[];
var imageData=this.__getImageData(cellInfo);
html.push('<img ');
if(qx.core.Variant.isSet("qx.client","mshtml")&&/\.png$/i.test(imageData.url)){html.push('src="',this.__imageBlank,'" style="filter:',"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='",imageData.url,"',sizingMethod='scale')",'" ');
}else{html.push('src="',imageData.url,'" ');
}if(imageData.imageWidth){html.push(" width='",imageData.imageWidth,"px'");
}if(imageData.imageHeight){html.push(" height='",imageData.imageHeight,"px'");
}html.push(" style='padding-top:2px;'");
if(imageData.tooltip){html.push(" title='",imageData.tooltip,"'");
}if(imageData.extras){html.push(imageData.extras);
}html.push(">");
return html.join("");
},__getImageData:function(cellInfo){var imageData=this._identifyImage(cellInfo);
if(imageData==null||typeof imageData=="string"){imageData={url:imageData,tooltip:null};
}if(imageData.url==null){imageData.url=this.__imageBlank;
}return imageData;
}}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Image",{extend:qx.ui.progressive.renderer.table.cell.Icon,construct:function(width,height){this.base(arguments);

if(width===undefined){this.__imageWidth=width;
}else{this.__imageWidth=16;
}
if(height===undefined){this.__imageHeight=height;
}else{this.__imageHeight=16;
}},members:{__imageWidth:null,__imageHeight:null,_identifyImage:function(cellInfo){var imageData={imageWidth:this.__imageWidth,imageHeight:this.__imageHeight};
var height;
if(typeof (cellInfo.cellData)=="string"){imageData.url=cellInfo.cellData;
}else{imageData.url=cellInfo.cellData.url;
imageData.tooltip=cellInfo.cellData.tooltip;
height=cellInfo.cellData.height;
}
if(imageData.url==""){imageData.url=this._imageBlank;
}else{var aliasManager=qx.util.AliasManager.getInstance();
var resourceManager=qx.util.ResourceManager.getInstance();
var resolved=aliasManager.resolve(imageData.url);
imageData.url=resourceManager.toUri(resolved);
}if(height){cellInfo.height=height;
}return imageData;
}}});
qx.Class.define("qx.ui.progressive.structure.Abstract",{type:"abstract",extend:qx.core.Object,construct:function(pane){this.base(arguments);
if(!pane){this.__container=new qx.ui.core.Widget();
this.__pane=this.__container;
}else{this.__container=null;
this.__pane=pane;
}this.__pane.getContentElement().setStyle("overflowY","auto");
},members:{__container:null,__pane:null,applyStructure:function(progressive){throw new Error("applyStructure() is abstract");
},getPane:function(){return this.__pane;
}},destruct:function(){if(this.__container){this.__container.dispose();
}this.__container=this.__pane=null;
}});
qx.Class.define("qx.ui.progressive.structure.Default",{extend:qx.ui.progressive.structure.Abstract,construct:function(header,footer,pane){this.base(arguments,pane);
if(!header){this.__nullHeader=new qx.ui.progressive.headfoot.Null();
this.__header=this.__nullHeader;
}else{this.__nullHeader=null;
this.__header=header;
}if(!footer){this.__nullFooter=new qx.ui.progressive.headfoot.Null();
this.__footer=this.__nullFooter;
}else{this.__nullFooter=null;
this.__footer=footer;
}},members:{__header:null,__footer:null,__nullHeader:null,__nullFooter:null,applyStructure:function(progressive){this.__header.join(progressive);
this.__footer.join(progressive);
progressive.add(this.__header);
progressive.add(this.getPane(),{flex:1});
progressive.add(this.__footer);
},getHeader:function(){return this.__header;
},getFooter:function(){return this.__footer;
}},destruct:function(){if(this.__nullHeader){this.__nullHeader.dispose();
this.__nullHeader=null;
}
if(this.__nullFooter){this.__nullFooter.dispose();
this.__nullFooter=null;
}this.__header=this.__footer=null;
}});
qx.Class.define("qx.ui.progressive.headfoot.Abstract",{type:"abstract",extend:qx.ui.container.Composite,construct:function(){this.base(arguments,new qx.ui.layout.HBox());
},members:{__progressive:null,join:function(progressive){this.__progressive=progressive;
}},destruct:function(){this.__progressive=null;
}});
qx.Class.define("qx.ui.progressive.headfoot.Null",{extend:qx.ui.progressive.headfoot.Abstract,construct:function(){this.base(arguments);
this.exclude();
}});
qx.Mixin.define("qx.ui.treevirtual.MNode",{members:{nodeGet:function(nodeReference){if(typeof (nodeReference)=="object"){return nodeReference;
}else if(typeof (nodeReference)=="number"){return this.getTableModel().getData()[nodeReference];
}else{throw new Error("Expected node object or node id");
}},nodeToggleOpened:function(nodeReference){var node;
var nodeId;

if(typeof (nodeReference)=="object"){node=nodeReference;
nodeId=node.nodeId;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
node=this.getTableModel().getData()[nodeId];
}else{throw new Error("Expected node object or node id");
}this.getTableModel().setState(nodeId,{bOpened:!node.bOpened});
},nodeSetState:function(nodeReference,attributes){var nodeId;

if(typeof (nodeReference)=="object"){nodeId=nodeReference.nodeId;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
}else{throw new Error("Expected node object or node id");
}this.getTableModel().setState(nodeId,attributes);
},nodeSetLabel:function(nodeReference,label){this.nodeSetState(nodeReference,{label:label});
},nodeGetLabel:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.label;
},nodeSetSelected:function(nodeReference,b){this.nodeSetState(nodeReference,{bSelected:b});
},nodeGetSelected:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.bSelected;
},nodeSetOpened:function(nodeReference,b){var node;

if(typeof (nodeReference)=="object"){node=nodeReference;
}else if(typeof (nodeReference)=="number"){node=this.getTableModel().getData()[nodeReference];
}else{throw new Error("Expected node object or node id");
}if(b!=node.bOpened){this.nodeToggleOpened(node);
}},nodeGetOpened:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.bOpened;
},nodeSetHideOpenClose:function(nodeReference,b){this.nodeSetState(nodeReference,{bHideOpenClose:b});
},nodeGetHideOpenClose:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.bHideOpenClose;
},nodeSetIcon:function(nodeReference,path){this.nodeSetState(nodeReference,{icon:path});
},nodeGetIcon:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.icon;
},nodeSetSelectedIcon:function(nodeReference,path){this.nodeSetState(nodeReference,{iconSelected:path});
},nodeGetSelectedIcon:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.iconSelected;
},nodeSetCellStyle:function(nodeReference,style){this.nodeSetState(nodeReference,{cellStyle:style});
},nodeGetCellStyle:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.cellStyle;
},nodeSetLabelStyle:function(nodeReference,style){this.nodeSetState(nodeReference,{labelStyle:style});
},nodeGetLabelStyle:function(nodeReference){var node=this.nodeGet(nodeReference);
return node.cellStyle;
}}});
qx.Mixin.define("qx.ui.treevirtual.MFamily",{members:{familyGetFirstChild:function(nodeReference){var node;

if(typeof (nodeReference)=="object"){node=nodeReference;
}else if(typeof (nodeReference)=="number"){node=this.getTableModel().getData()[nodeReference];
}else{throw new Error("Expected node object or node id");
}
if(node.children.length>0){return node.children[0];
}return null;
},familyGetLastChild:function(nodeReference){var node;

if(typeof (nodeReference)=="object"){node=nodeReference;
}else if(typeof (nodeReference)=="number"){node=this.getTableModel().getData()[nodeReference];
}else{throw new Error("Expected node object or node id");
}
if(node.children.length>0){return node.children[node.children.length-1];
}return null;
},familyGetNextSibling:function(nodeReference){var node;
var nodeId;
var nodes=this.getTableModel().getData();

if(typeof (nodeReference)=="object"){node=nodeReference;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
node=nodes[nodeId];
}else{throw new Error("Expected node object or node id");
}var myNodeId=node.nodeId;
var parentChildren=nodes[node.parentNodeId].children;
for(var i=0;i<parentChildren.length;i++){if(parentChildren[i]==myNodeId){if(i<parentChildren.length-1){return parentChildren[i+1];
}return null;
}}},familyGetPrevSibling:function(nodeReference){var node;
var nodeId;
var nodes=this.getTableModel().getData();

if(typeof (nodeReference)=="object"){node=nodeReference;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
node=nodes[nodeId];
}else{throw new Error("Expected node object or node id");
}var myNodeId=node.nodeId;
var parentChildren=nodes[node.parentNodeId].children;
for(var i=0;i<parentChildren.length;i++){if(parentChildren[i]==myNodeId){if(i>0){return parentChildren[i-1];
}return null;
}}}}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Conditional",{extend:qx.ui.progressive.renderer.table.cell.Abstract,construct:function(align,color,style,weight){this.base(arguments);
this.__numericAllowed=["==","!=",">","<",">=","<="];
this.__betweenAllowed=["between","!between"];
this.__conditions=[];
this.__defaultTextAlign=align||"";
this.__defaultColor=color||"";
this.__defaultFontStyle=style||"";
this.__defaultFontWeight=weight||"";
},members:{__numericAllowed:null,__betweenAllowed:null,__conditions:null,__defaultTextAlign:null,__defaultColor:null,__defaultFontStyle:null,__defaultFontWeight:null,__applyFormatting:function(condition,style){if(condition.align){style["text-align"]=condition.align;
}
if(condition.color){style["color"]=condition.color;
}
if(condition.style){style["font-style"]=condition.style;
}
if(condition.weight){style["font-weight"]=condition.weight;
}},addNumericCondition:function(condition,value1,align,color,style,weight,target){if(!qx.lang.Array.contains(this.__numericAllowed,condition)||value1==null){throw new Error("Condition not recognized or value is null!");
}this.__conditions.push({condition:condition,align:align,color:color,style:style,weight:weight,value1:value1,target:target});
},addBetweenCondition:function(condition,value1,value2,align,color,style,weight,target){if(!qx.lang.Array.contains(this.__betweenAllowed,condition)||value1==null||value2==null){throw new Error("Condition not recognized or value1/value2 is null!");
}this.__conditions.push({condition:condition,align:align,color:color,style:style,weight:weight,value1:value1,value2:value2,target:target});
},addRegex:function(regex,align,color,style,weight,target){if(!regex){throw new Error("regex cannot be null!");
}this.__conditions.push({condition:"regex",align:align,color:color,style:style,weight:weight,regex:regex,target:target});
},_getCellStyle:function(cellInfo){if(this.__conditions.length==0){return cellInfo.style||"";
}var i;
var bTestPassed;
var compareValue;
var style={"text-align":this.__defaultTextAlign,"color":this.__defaultColor,"font-style":this.__defaultFontStyle,"font-weight":this.__defaultFontWeight};

for(i=0;i<this.__conditions.length;i++){var test=this.__conditions[i];
bTestPassed=false;

if(qx.lang.Array.contains(this.__numericAllowed,test.condition)){if(test.target==null){compareValue=cellInfo.cellData;
}else{compareValue=cellInfo.element.data[test.target];
}
switch(test.condition){case "==":if(compareValue==test.value1){bTestPassed=true;
}break;
case "!=":if(compareValue!=test.value1){bTestPassed=true;
}break;
case ">":if(compareValue>test.value1){bTestPassed=true;
}break;
case "<":if(compareValue<test.value1){bTestPassed=true;
}break;
case ">=":if(compareValue>=test.value1){bTestPassed=true;
}break;
case "<=":if(compareValue<=test.value1){bTestPassed=true;
}break;
}}else if(qx.lang.Array.contains(this.__betweenAllowed,test.condition)){if(test.target==null){compareValue=cellInfo.cellData;
}else{compareValue=cellInfo.element.data[test.target];
}
switch(test.condition){case "between":if(compareValue>=test.value1&&compareValue<=test.value2){bTestPassed=true;
}break;
case "!between":if(compareValue<test.value1&&compareValue>test.value2){bTestPassed=true;
}break;
}}else if(test.condition=="regex"){if(test.target==null){compareValue=cellInfo.cellData;
}else{compareValue=cellInfo.element.data[test.target];
}var the_pattern=new RegExp(test.value1,'g');
bTestPassed=the_pattern.test(compareValue);
}if(bTestPassed){this.__applyFormatting(test,style);
}var styleString=[];

for(var key in style){if(style[key]){styleString.push(key,":",style[key],";");
}}}return styleString.join("");
}},destruct:function(){this.__numericAllowed=this.__betweenAllowed=this.__conditions=null;
}});
qx.Interface.define("qx.ui.virtual.form.IListDelegate",{members:{getCellData:function(row){},getCellRenderer:function(row){},isRowSelectable:function(row){}}});
qx.Class.define("qx.ui.table.pane.FocusIndicator",{extend:qx.ui.container.Composite,construct:function(scroller){this.base(arguments);
this.__scroller=scroller;
this.setKeepActive(true);
this.addListener("keypress",this._onKeyPress,this);
},properties:{visibility:{refine:true,init:"excluded"},row:{check:"Integer",nullable:true},column:{check:"Integer",nullable:true}},members:{__scroller:null,_onKeyPress:function(e){var iden=e.getKeyIdentifier();

if(iden!=="Escape"&&iden!=="Enter"){e.stopPropagation();
}},moveToCell:function(col,row){if(col==null){this.hide();
this.setRow(null);
this.setColumn(null);
}else{var xPos=this.__scroller.getTablePaneModel().getX(col);

if(xPos==-1){this.hide();
this.setRow(null);
this.setColumn(null);
}else{var table=this.__scroller.getTable();
var columnModel=table.getTableColumnModel();
var paneModel=this.__scroller.getTablePaneModel();
var firstRow=this.__scroller.getTablePane().getFirstVisibleRow();
var rowHeight=table.getRowHeight();
this.setUserBounds(paneModel.getColumnLeft(col)-2,(row-firstRow)*rowHeight-2,columnModel.getColumnWidth(col)+3,rowHeight+3);
this.show();
this.setRow(row);
this.setColumn(col);
}}}},destruct:function(){this.__scroller=null;
}});
qx.Class.define("qx.ui.root.Inline",{extend:qx.ui.root.Abstract,include:[qx.ui.core.MLayoutHandling],construct:function(el,dynamicX,dynamicY){this.__elem=el;
el.style.overflow="hidden";
el.style.textAlign="left";
this.__dynX=dynamicX||false;
this.__dynY=dynamicY||false;
this.__initDynamicMode();
this.base(arguments);
this._setLayout(new qx.ui.layout.Basic());
qx.ui.core.queue.Layout.add(this);
qx.ui.core.FocusHandler.getInstance().connectTo(this);
if(qx.core.Variant.isSet("qx.client","opera")){this.setSelectable(true);
}if(qx.core.Variant.isSet("qx.client","mshtml")){this.setKeepFocus(true);
}},members:{__dynX:false,__dynY:false,__elem:null,__initDynamicMode:function(){if(this.__dynX||this.__dynY){var elementDimensions=qx.bom.element.Dimension.getSize(this.__elem);

if(this.__dynX&&elementDimensions.width<1){throw new Error("The root element "+this.__elem+" of "+this+" needs a width when its width size should be used!");
}
if(this.__dynY){if(elementDimensions.height<1){throw new Error("The root element "+this.__elem+" of "+this+" needs a height when its height size should be used!");
}if(elementDimensions.height>=1&&qx.bom.element.Style.get(this.__elem,"height",3)==""){qx.bom.element.Style.set(this.__elem,"height",elementDimensions.height+"px");
}}qx.event.Registration.addListener(this.__elem,"resize",this._onResize,this);
}},_createContainerElement:function(){var el=this.__elem;

if(this.__dynX||this.__dynY){var rootEl=document.createElement("div");
el.appendChild(rootEl);
if(qx.core.Variant.isSet("qx.client","mshtml")&&qx.bom.client.Engine.VERSION==6){var bodyElement=qx.dom.Node.getBodyElement(el);
var ancestorElement;
var position;
var isPositionRelative=false;
var ancestors=qx.dom.Hierarchy.getAncestors(el);

for(var i=0,j=ancestors.length;i<j;i++){ancestorElement=ancestors[i];

if(ancestorElement!=bodyElement){position=qx.bom.element.Style.get(ancestorElement,"position");

if(position=="relative"){isPositionRelative=true;
break;
}}else{break;
}}
if(isPositionRelative){el.style.position="relative";
}}}else{rootEl=el;
}var root=new qx.html.Root(rootEl);
rootEl.style.position="relative";
root.setAttribute("$$widget",this.toHashCode());
qx.event.Timer.once(function(e){this.fireEvent("appear");
},this,0);
return root;
},_onResize:function(e){var data=e.getData();

if((data.oldWidth!==data.width)&&this.__dynX||(data.oldHeight!==data.height)&&this.__dynY){qx.ui.core.queue.Layout.add(this);
}},_computeSizeHint:function(){var dynX=this.__dynX;
var dynY=this.__dynY;

if(!dynX||!dynY){var hint=this.base(arguments);
}else{hint={};
}var Dimension=qx.bom.element.Dimension;

if(dynX){var width=Dimension.getContentWidth(this.__elem);
hint.width=width;
hint.minWidth=width;
hint.maxWidth=width;
}
if(dynY){var height=Dimension.getContentHeight(this.__elem);
hint.height=height;
hint.minHeight=height;
hint.maxHeight=height;
}return hint;
}},defer:function(statics,members){qx.ui.core.MLayoutHandling.remap(members);
},destruct:function(){qx.event.Registration.removeListener(this.__elem,"resize",this._onResize,this);
this.__elem=null;
}});
qx.Class.define("qx.ui.table.cellrenderer.Html",{extend:qx.ui.table.cellrenderer.Conditional,members:{_getContentHtml:function(cellInfo){return (cellInfo.value||"");
},_getCellClass:function(cellInfo){return "qooxdoo-table-cell";
}}});
qx.Class.define("qx.ui.embed.Canvas",{extend:qx.ui.core.Widget,construct:function(canvasWidth,canvasHeight){this.base(arguments);
this.__deferredDraw=new qx.util.DeferredCall(this.__redraw,this);
this.addListener("resize",this._onResize,this);

if(canvasWidth!==undefined){this.setCanvasWidth(canvasWidth);
}
if(canvasHeight!==undefined){this.setCanvasHeight(canvasHeight);
}},events:{"redraw":"qx.event.type.Data"},properties:{syncDimension:{check:"Boolean",init:false},canvasWidth:{check:"Integer",init:300,apply:"_applyCanvasWidth"},canvasHeight:{check:"Integer",init:150,apply:"_applyCanvasHeight"}},members:{__deferredDraw:null,_createContentElement:function(){return new qx.html.Canvas();
},__redraw:function(){var canvas=this.getContentElement();
var height=canvas.getHeight();
var width=canvas.getWidth();
var context=canvas.getContext2d();
this._draw(width,height,context);
this.fireNonBubblingEvent("redraw",qx.event.type.Data,[{width:width,height:height,context:context}]);
},_applyCanvasWidth:function(value,old){this.getContentElement().setWidth(value);
this.__deferredDraw.schedule();
},_applyCanvasHeight:function(value,old){this.getContentElement().setHeight(value);
this.__deferredDraw.schedule();
},update:function(){this.__deferredDraw.schedule();
},_onResize:function(e){var data=e.getData();

if(this.getSyncDimension()){this.setCanvasHeight(data.height);
this.setCanvasWidth(data.width);
}},getContext2d:function(){return this.getContentElement().getContext2d();
},_draw:function(width,height,context){}},destruct:function(){this._disposeObjects("__deferredDraw");
}});
qx.Theme.define("qx.theme.modern.Color",{colors:{"background-application":"#DFDFDF","background-pane":"#F3F3F3","background-light":"#FCFCFC","background-medium":"#EEEEEE","background-splitpane":"#AFAFAF","background-tip":"#ffffdd","background-tip-error":"#C72B2B","background-odd":"#E4E4E4","text-light":"#909090","text-gray":"#4a4a4a","text-label":"#1a1a1a","text-title":"#314a6e","text-input":"#000000","text-hovered":"#001533","text-disabled":"#7B7A7E","text-selected":"#fffefe","text-active":"#26364D","text-inactive":"#404955","text-placeholder":"#CBC8CD","border-main":"#4d4d4d","border-separator":"#808080","border-input":"#334866","border-disabled":"#B6B6B6","border-pane":"#00204D","border-button":"#666666","border-column":"#CCCCCC","border-focused":"#99C3FE","invalid":"#990000","border-focused-invalid":"#FF9999","table-pane":"#F3F3F3","table-focus-indicator":"#0880EF","table-row-background-focused-selected":"#084FAB","table-row-background-focused":"#80B4EF","table-row-background-selected":"#084FAB","table-row-background-even":"#F3F3F3","table-row-background-odd":"#E4E4E4","table-row-selected":"#fffefe","table-row":"#1a1a1a","table-row-line":"#CCCCCC","table-column-line":"#CCCCCC","progressive-table-header":"#AAAAAA","progressive-table-row-background-even":"#F4F4F4","progressive-table-row-background-odd":"#E4E4E4","progressive-progressbar-background":"gray","progressive-progressbar-indicator-done":"#CCCCCC","progressive-progressbar-indicator-undone":"white","progressive-progressbar-percent-background":"gray","progressive-progressbar-percent-text":"white"}});
qx.Mixin.define("qx.ui.decoration.MBackgroundImage",{properties:{backgroundImage:{check:"String",nullable:true,apply:"_applyBackground"},backgroundRepeat:{check:["repeat","repeat-x","repeat-y","no-repeat","scale"],init:"repeat",apply:"_applyBackground"},backgroundPositionX:{nullable:true,apply:"_applyBackground"},backgroundPositionY:{nullable:true,apply:"_applyBackground"},backgroundPosition:{group:["backgroundPositionY","backgroundPositionX"]}},members:{_generateBackgroundMarkup:function(styles){{if(qx.lang.Type.isString(styles)){qx.log.Logger.deprecatedWarning(arguments.callee,"Please provide a map for the 'styles' parameter");
throw new Error("Wrong type for parameter 'styles'.");
}};
var markup="";
var image=this.getBackgroundImage();
var repeat=this.getBackgroundRepeat();
var top=this.getBackgroundPositionY();

if(top==null){top=0;
}var left=this.getBackgroundPositionX();

if(left==null){left=0;
}styles.backgroundPosition=left+" "+top;
if(image){var resolved=qx.util.AliasManager.getInstance().resolve(image);
markup=qx.bom.element.Decoration.create(resolved,repeat,styles);
}else{if(styles){if(qx.core.Variant.isSet("qx.client","mshtml")){if(qx.bom.client.Engine.VERSION<7||qx.bom.client.Feature.QUIRKS_MODE){styles.overflow="hidden";
}}markup='<div style="'+qx.bom.element.Style.compile(styles)+'"></div>';
}}return markup;
},_applyBackground:function(){{if(this._isInitialized()){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
}}});
qx.Class.define("qx.ui.decoration.Uniform",{extend:qx.ui.decoration.Abstract,include:[qx.ui.decoration.MBackgroundImage],construct:function(width,style,color){this.base(arguments);
if(width!=null){this.setWidth(width);
}
if(style!=null){this.setStyle(style);
}
if(color!=null){this.setColor(color);
}},properties:{width:{check:"PositiveInteger",init:0,apply:"_applyWidth"},style:{nullable:true,check:["solid","dotted","dashed","double"],init:"solid",apply:"_applyStyle"},color:{nullable:true,check:"Color",apply:"_applyStyle"},backgroundColor:{check:"Color",nullable:true,apply:"_applyStyle"}},members:{__markup:null,_getDefaultInsets:function(){var width=this.getWidth();
return {top:width,right:width,bottom:width,left:width};
},_isInitialized:function(){return !!this.__markup;
},getMarkup:function(){if(this.__markup){return this.__markup;
}var styles={position:"absolute",top:0,left:0};
var width=this.getWidth();
{if(width===0){throw new Error("Invalid Uniform decorator (zero border width). Use qx.ui.decorator.Background instead!");
}};
var Color=qx.theme.manager.Color.getInstance();
styles.border=width+"px "+this.getStyle()+" "+(Color.resolve(this.getColor())||"");
var html=this._generateBackgroundMarkup(styles);
return this.__markup=html;
},resize:function(element,width,height){var scaledImage=this.getBackgroundImage()&&this.getBackgroundRepeat()=="scale";

if(scaledImage||qx.bom.client.Feature.CONTENT_BOX){var inset=this.getWidth()*2;
width-=inset;
height-=inset;
if(width<0){width=0;
}
if(height<0){height=0;
}}element.style.width=width+"px";
element.style.height=height+"px";
},tint:function(element,bgcolor){var Color=qx.theme.manager.Color.getInstance();

if(bgcolor==null){bgcolor=this.getBackgroundColor();
}element.style.backgroundColor=Color.resolve(bgcolor)||"";
},_applyWidth:function(){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
this._resetInsets();
},_applyStyle:function(){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
}},destruct:function(){this.__markup=null;
}});
qx.Class.define("qx.ui.decoration.Background",{extend:qx.ui.decoration.Abstract,include:[qx.ui.decoration.MBackgroundImage],construct:function(backgroundColor){this.base(arguments);

if(backgroundColor!=null){this.setBackgroundColor(backgroundColor);
}},properties:{backgroundColor:{check:"Color",nullable:true,apply:"_applyStyle"}},members:{__markup:null,_getDefaultInsets:function(){return {top:0,right:0,bottom:0,left:0};
},_isInitialized:function(){return !!this.__markup;
},getMarkup:function(){if(this.__markup){return this.__markup;
}var styles={position:"absolute",top:0,left:0};
var html=this._generateBackgroundMarkup(styles);
return this.__markup=html;
},resize:function(element,width,height){element.style.width=width+"px";
element.style.height=height+"px";
},tint:function(element,bgcolor){var Color=qx.theme.manager.Color.getInstance();

if(bgcolor==null){bgcolor=this.getBackgroundColor();
}element.style.backgroundColor=Color.resolve(bgcolor)||"";
},_applyStyle:function(){{if(this._isInitialized()){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
}},destruct:function(){this.__markup=null;
}});
qx.Class.define("qx.ui.decoration.Single",{extend:qx.ui.decoration.Abstract,include:[qx.ui.decoration.MBackgroundImage],construct:function(width,style,color){this.base(arguments);
if(width!=null){this.setWidth(width);
}
if(style!=null){this.setStyle(style);
}
if(color!=null){this.setColor(color);
}},properties:{widthTop:{check:"Number",init:0,apply:"_applyWidth"},widthRight:{check:"Number",init:0,apply:"_applyWidth"},widthBottom:{check:"Number",init:0,apply:"_applyWidth"},widthLeft:{check:"Number",init:0,apply:"_applyWidth"},styleTop:{nullable:true,check:["solid","dotted","dashed","double"],init:"solid",apply:"_applyStyle"},styleRight:{nullable:true,check:["solid","dotted","dashed","double"],init:"solid",apply:"_applyStyle"},styleBottom:{nullable:true,check:["solid","dotted","dashed","double"],init:"solid",apply:"_applyStyle"},styleLeft:{nullable:true,check:["solid","dotted","dashed","double"],init:"solid",apply:"_applyStyle"},colorTop:{nullable:true,check:"Color",apply:"_applyStyle"},colorRight:{nullable:true,check:"Color",apply:"_applyStyle"},colorBottom:{nullable:true,check:"Color",apply:"_applyStyle"},colorLeft:{nullable:true,check:"Color",apply:"_applyStyle"},backgroundColor:{check:"Color",nullable:true,apply:"_applyStyle"},left:{group:["widthLeft","styleLeft","colorLeft"]},right:{group:["widthRight","styleRight","colorRight"]},top:{group:["widthTop","styleTop","colorTop"]},bottom:{group:["widthBottom","styleBottom","colorBottom"]},width:{group:["widthTop","widthRight","widthBottom","widthLeft"],mode:"shorthand"},style:{group:["styleTop","styleRight","styleBottom","styleLeft"],mode:"shorthand"},color:{group:["colorTop","colorRight","colorBottom","colorLeft"],mode:"shorthand"}},members:{__markup:null,_getDefaultInsets:function(){return {top:this.getWidthTop(),right:this.getWidthRight(),bottom:this.getWidthBottom(),left:this.getWidthLeft()};
},_isInitialized:function(){return !!this.__markup;
},getMarkup:function(element){if(this.__markup){return this.__markup;
}var Color=qx.theme.manager.Color.getInstance();
var styles={};
var width=this.getWidthTop();

if(width>0){styles["border-top"]=width+"px "+this.getStyleTop()+" "+(Color.resolve(this.getColorTop())||"");
}var width=this.getWidthRight();

if(width>0){styles["border-right"]=width+"px "+this.getStyleRight()+" "+(Color.resolve(this.getColorRight())||"");
}var width=this.getWidthBottom();

if(width>0){styles["border-bottom"]=width+"px "+this.getStyleBottom()+" "+(Color.resolve(this.getColorBottom())||"");
}var width=this.getWidthLeft();

if(width>0){styles["border-left"]=width+"px "+this.getStyleLeft()+" "+(Color.resolve(this.getColorLeft())||"");
}{if(styles.length===0){throw new Error("Invalid Single decorator (zero border width). Use qx.ui.decorator.Background instead!");
}};
styles.position="absolute";
styles.top=0;
styles.left=0;
var html=this._generateBackgroundMarkup(styles);
return this.__markup=html;
},resize:function(element,width,height){var scaledImage=this.getBackgroundImage()&&this.getBackgroundRepeat()=="scale";

if(scaledImage||qx.bom.client.Feature.CONTENT_BOX){var insets=this.getInsets();
width-=insets.left+insets.right;
height-=insets.top+insets.bottom;
if(width<0){width=0;
}
if(height<0){height=0;
}}element.style.width=width+"px";
element.style.height=height+"px";
},tint:function(element,bgcolor){var Color=qx.theme.manager.Color.getInstance();

if(bgcolor==null){bgcolor=this.getBackgroundColor();
}element.style.backgroundColor=Color.resolve(bgcolor)||"";
},_applyWidth:function(){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
this._resetInsets();
},_applyStyle:function(){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
}},destruct:function(){this.__markup=null;
}});
qx.Class.define("qx.ui.decoration.Grid",{extend:qx.core.Object,implement:[qx.ui.decoration.IDecorator],construct:function(baseImage,insets){this.base(arguments);

if(qx.ui.decoration.css3.BorderImage.IS_SUPPORTED){this.__impl=new qx.ui.decoration.css3.BorderImage();

if(baseImage){this.__setBorderImage(baseImage);
}}else{this.__impl=new qx.ui.decoration.GridDiv(baseImage);
}
if(insets!=null){this.__impl.setInsets(insets);
}},properties:{baseImage:{check:"String",nullable:true,apply:"_applyBaseImage"},insetLeft:{check:"Number",nullable:true,apply:"_applyInsets"},insetRight:{check:"Number",nullable:true,apply:"_applyInsets"},insetBottom:{check:"Number",nullable:true,apply:"_applyInsets"},insetTop:{check:"Number",nullable:true,apply:"_applyInsets"},insets:{group:["insetTop","insetRight","insetBottom","insetLeft"],mode:"shorthand"}},members:{__impl:null,getMarkup:function(){return this.__impl.getMarkup();
},resize:function(element,width,height){this.__impl.resize(element,width,height);
},tint:function(element,bgcolor){},getInsets:function(){return this.__impl.getInsets();
},_applyInsets:function(value,old,name){var setter="set"+qx.lang.String.firstUp(name);
this.__impl[setter](value);
},_applyBaseImage:function(value,old){if(this.__impl instanceof qx.ui.decoration.GridDiv){this.__impl.setBaseImage(value);
}else{this.__setBorderImage(value);
}},__setBorderImage:function(baseImage){this.__impl.setBorderImage(baseImage);
var base=qx.util.AliasManager.getInstance().resolve(baseImage);
var split=/(.*)(\.[a-z]+)$/.exec(base);
var prefix=split[1];
var ext=split[2];
var ResourceManager=qx.util.ResourceManager.getInstance();
var topSlice=ResourceManager.getImageHeight(prefix+"-t"+ext);
var leftSlice=ResourceManager.getImageWidth(prefix+"-l"+ext);
this.__impl.setSlice([topSlice,leftSlice]);
}},destruct:function(){this.__impl=null;
}});
qx.Class.define("qx.ui.decoration.Beveled",{extend:qx.ui.decoration.Abstract,include:[qx.ui.decoration.MBackgroundImage],construct:function(outerColor,innerColor,innerOpacity){this.base(arguments);
if(outerColor!=null){this.setOuterColor(outerColor);
}
if(innerColor!=null){this.setInnerColor(innerColor);
}
if(innerOpacity!=null){this.setInnerOpacity(innerOpacity);
}},properties:{innerColor:{check:"Color",nullable:true,apply:"_applyStyle"},innerOpacity:{check:"Number",init:1,apply:"_applyStyle"},outerColor:{check:"Color",nullable:true,apply:"_applyStyle"},backgroundColor:{check:"Color",nullable:true,apply:"_applyStyle"}},members:{__markup:null,_getDefaultInsets:function(){return {top:2,right:2,bottom:2,left:2};
},_isInitialized:function(){return !!this.__markup;
},_applyStyle:function(){{if(this.__markup){throw new Error("This decorator is already in-use. Modification is not possible anymore!");
}};
},getMarkup:function(){if(this.__markup){return this.__markup;
}var Color=qx.theme.manager.Color.getInstance();
var html=[];
var outerStyle="1px solid "+Color.resolve(this.getOuterColor())+";";
var innerStyle="1px solid "+Color.resolve(this.getInnerColor())+";";
html.push('<div style="overflow:hidden;font-size:0;line-height:0;">');
html.push('<div style="');
html.push('border:',outerStyle);
html.push(qx.bom.element.Opacity.compile(0.35));
html.push('"></div>');
html.push('<div style="position:absolute;top:1px;left:0px;');
html.push('border-left:',outerStyle);
html.push('border-right:',outerStyle);
html.push('"></div>');
html.push('<div style="');
html.push('position:absolute;top:0px;left:1px;');
html.push('border-top:',outerStyle);
html.push('border-bottom:',outerStyle);
html.push('"></div>');
var backgroundStyle={position:"absolute",top:"1px",left:"1px"};
html.push(this._generateBackgroundMarkup(backgroundStyle));
html.push('<div style="position:absolute;top:1px;left:1px;');
html.push('border:',innerStyle);
html.push(qx.bom.element.Opacity.compile(this.getInnerOpacity()));
html.push('"></div>');
html.push('</div>');
return this.__markup=html.join("");
},resize:function(element,width,height){if(width<4){width=4;
}
if(height<4){height=4;
}if(qx.bom.client.Feature.CONTENT_BOX){var outerWidth=width-2;
var outerHeight=height-2;
var frameWidth=outerWidth;
var frameHeight=outerHeight;
var innerWidth=width-4;
var innerHeight=height-4;
}else{var outerWidth=width;
var outerHeight=height;
var frameWidth=width-2;
var frameHeight=height-2;
var innerWidth=frameWidth;
var innerHeight=frameHeight;
}var pixel="px";
var backgroundFrame=element.childNodes[0].style;
backgroundFrame.width=outerWidth+pixel;
backgroundFrame.height=outerHeight+pixel;
var horizontalFrame=element.childNodes[1].style;
horizontalFrame.width=outerWidth+pixel;
horizontalFrame.height=frameHeight+pixel;
var verticalFrame=element.childNodes[2].style;
verticalFrame.width=frameWidth+pixel;
verticalFrame.height=outerHeight+pixel;
var innerBackground=element.childNodes[3].style;
innerBackground.width=frameWidth+pixel;
innerBackground.height=frameHeight+pixel;
var innerOverlay=element.childNodes[4].style;
innerOverlay.width=innerWidth+pixel;
innerOverlay.height=innerHeight+pixel;
},tint:function(element,bgcolor){var Color=qx.theme.manager.Color.getInstance();

if(bgcolor==null){bgcolor=this.getBackgroundColor();
}element.childNodes[3].style.backgroundColor=Color.resolve(bgcolor)||"";
}},destruct:function(){this.__markup=null;
}});
qx.Theme.define("qx.theme.modern.Decoration",{aliases:{decoration:"qx/decoration/Modern"},decorations:{"main":{decorator:qx.ui.decoration.Uniform,style:{width:1,color:"border-main"}},"selected":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/selection.png",backgroundRepeat:"scale"}},"selected-dragover":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/selection.png",backgroundRepeat:"scale",bottom:[2,"solid","#33508D"]}},"dragover":{decorator:qx.ui.decoration.Single,style:{bottom:[2,"solid","#33508D"]}},"pane":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/pane/pane.png",insets:[0,2,3,0]}},"group":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/groupbox/groupbox.png"}},"border-invalid":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"invalid",innerColor:"white",innerOpacity:0.5,backgroundImage:"decoration/form/input.png",backgroundRepeat:"repeat-x",backgroundColor:"background-light"}},"keyboard-focus":{decorator:qx.ui.decoration.Single,style:{width:1,color:"black",style:"dotted"}},"separator-horizontal":{decorator:qx.ui.decoration.Single,style:{widthLeft:1,colorLeft:"border-separator"}},"separator-vertical":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"border-separator"}},"tooltip-error":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/tooltip-error.png",insets:[2,5,5,2]}},"tooltip-error-arrow":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/form/tooltip-error-arrow.png",backgroundPositionY:"center",backgroundRepeat:"no-repeat",insets:[0,0,0,10]}},"shadow-window":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/shadow/shadow.png",insets:[4,8,8,4]}},"shadow-popup":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/shadow/shadow-small.png",insets:[0,3,3,0]}},"scrollbar-horizontal":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/scrollbar/scrollbar-bg-horizontal.png",backgroundRepeat:"repeat-x"}},"scrollbar-vertical":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/scrollbar/scrollbar-bg-vertical.png",backgroundRepeat:"repeat-y"}},"scrollbar-slider-horizontal":{decorator:qx.ui.decoration.Beveled,style:{backgroundImage:"decoration/scrollbar/scrollbar-button-bg-horizontal.png",backgroundRepeat:"scale",outerColor:"border-main",innerColor:"white",innerOpacity:0.5}},"scrollbar-slider-horizontal-disabled":{decorator:qx.ui.decoration.Beveled,style:{backgroundImage:"decoration/scrollbar/scrollbar-button-bg-horizontal.png",backgroundRepeat:"scale",outerColor:"border-disabled",innerColor:"white",innerOpacity:0.3}},"scrollbar-slider-vertical":{decorator:qx.ui.decoration.Beveled,style:{backgroundImage:"decoration/scrollbar/scrollbar-button-bg-vertical.png",backgroundRepeat:"scale",outerColor:"border-main",innerColor:"white",innerOpacity:0.5}},"scrollbar-slider-vertical-disabled":{decorator:qx.ui.decoration.Beveled,style:{backgroundImage:"decoration/scrollbar/scrollbar-button-bg-vertical.png",backgroundRepeat:"scale",outerColor:"border-disabled",innerColor:"white",innerOpacity:0.3}},"button":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button.png",insets:2}},"button-disabled":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-disabled.png",insets:2}},"button-focused":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-focused.png",insets:2}},"button-hovered":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-hovered.png",insets:2}},"button-pressed":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-pressed.png",insets:2}},"button-checked":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-checked.png",insets:2}},"button-checked-focused":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/form/button-checked-focused.png",insets:2}},"button-invalid-shadow":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"invalid",innerColor:"border-focused-invalid",insets:[1]}},"checkbox-invalid-shadow":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"invalid",innerColor:"border-focused-invalid",insets:[0]}},"input":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"border-input",innerColor:"white",innerOpacity:0.5,backgroundImage:"decoration/form/input.png",backgroundRepeat:"repeat-x",backgroundColor:"background-light"}},"input-focused":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"border-input",innerColor:"border-focused",backgroundImage:"decoration/form/input-focused.png",backgroundRepeat:"repeat-x",backgroundColor:"background-light"}},"input-focused-invalid":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"invalid",innerColor:"border-focused-invalid",backgroundImage:"decoration/form/input-focused.png",backgroundRepeat:"repeat-x",backgroundColor:"background-light",insets:[2]}},"input-disabled":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"border-disabled",innerColor:"white",innerOpacity:0.5,backgroundImage:"decoration/form/input.png",backgroundRepeat:"repeat-x",backgroundColor:"background-light"}},"toolbar":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/toolbar/toolbar-gradient.png",backgroundRepeat:"scale"}},"toolbar-button-hovered":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"#b6b6b6",innerColor:"#f8f8f8",backgroundImage:"decoration/form/button-c.png",backgroundRepeat:"scale"}},"toolbar-button-checked":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"#b6b6b6",innerColor:"#f8f8f8",backgroundImage:"decoration/form/button-checked-c.png",backgroundRepeat:"scale"}},"toolbar-separator":{decorator:qx.ui.decoration.Single,style:{widthLeft:1,widthRight:1,colorLeft:"#b8b8b8",colorRight:"#f4f4f4",styleLeft:"solid",styleRight:"solid"}},"toolbar-part":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/toolbar/toolbar-part.gif",backgroundRepeat:"repeat-y"}},"tabview-pane":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tabview-pane.png",insets:[4,6,7,4]}},"tabview-page-button-top-active":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-top-active.png"}},"tabview-page-button-top-inactive":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-top-inactive.png"}},"tabview-page-button-bottom-active":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-bottom-active.png"}},"tabview-page-button-bottom-inactive":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-bottom-inactive.png"}},"tabview-page-button-left-active":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-left-active.png"}},"tabview-page-button-left-inactive":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-left-inactive.png"}},"tabview-page-button-right-active":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-right-active.png"}},"tabview-page-button-right-inactive":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/tabview/tab-button-right-inactive.png"}},"splitpane":{decorator:qx.ui.decoration.Uniform,style:{backgroundColor:"background-pane",width:3,color:"background-splitpane",style:"solid"}},"window":{decorator:qx.ui.decoration.Single,style:{backgroundColor:"background-pane",width:1,color:"border-main",widthTop:0}},"window-captionbar-active":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/window/captionbar-active.png"}},"window-captionbar-inactive":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/window/captionbar-inactive.png"}},"window-statusbar":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/window/statusbar.png"}},"table":{decorator:qx.ui.decoration.Single,style:{width:1,color:"border-main",style:"solid"}},"table-statusbar":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"border-main",style:"solid"}},"table-scroller-header":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/table/header-cell.png",backgroundRepeat:"scale",widthBottom:1,colorBottom:"border-main",style:"solid"}},"table-header-cell":{decorator:qx.ui.decoration.Single,style:{widthRight:1,colorRight:"border-separator",styleRight:"solid"}},"table-header-cell-hovered":{decorator:qx.ui.decoration.Single,style:{widthRight:1,colorRight:"border-separator",styleRight:"solid",widthBottom:1,colorBottom:"white",styleBottom:"solid"}},"table-column-button":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/table/header-cell.png",backgroundRepeat:"scale",widthBottom:1,colorBottom:"border-main",style:"solid"}},"table-scroller-focus-indicator":{decorator:qx.ui.decoration.Single,style:{width:2,color:"table-focus-indicator",style:"solid"}},"progressive-table-header":{decorator:qx.ui.decoration.Single,style:{width:1,color:"border-main",style:"solid"}},"progressive-table-header-cell":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/table/header-cell.png",backgroundRepeat:"scale",widthRight:1,colorRight:"#F2F2F2",style:"solid"}},"menu":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/menu/background.png",backgroundRepeat:"scale",width:1,color:"border-main",style:"solid"}},"menu-separator":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"#C5C5C5",widthBottom:1,colorBottom:"#FAFAFA"}},"menubar":{decorator:qx.ui.decoration.Single,style:{backgroundImage:"decoration/menu/bar-background.png",backgroundRepeat:"scale",width:1,color:"border-separator",style:"solid"}},"app-header":{decorator:qx.ui.decoration.Background,style:{backgroundImage:"decoration/app-header.png",backgroundRepeat:"scale"}}}});
qx.Theme.define("qx.theme.modern.Font",{fonts:{"default":{size:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?12:11,lineHeight:1.4,family:qx.bom.client.Platform.MAC?["Lucida Grande"]:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?["Segoe UI","Candara"]:["Tahoma","Liberation Sans","Arial","sans-serif"]},"bold":{size:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?12:11,lineHeight:1.4,family:qx.bom.client.Platform.MAC?["Lucida Grande"]:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?["Segoe UI","Candara"]:["Tahoma","Liberation Sans","Arial","sans-serif"],bold:true},"small":{size:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?11:10,lineHeight:1.4,family:qx.bom.client.Platform.MAC?["Lucida Grande"]:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?["Segoe UI","Candara"]:["Tahoma","Liberation Sans","Arial","sans-serif"]},"monospace":{size:11,lineHeight:1.4,family:qx.bom.client.Platform.MAC?["Lucida Console","Monaco"]:(qx.bom.client.System.WINVISTA||qx.bom.client.System.WIN7)?["Consolas"]:["Consolas","DejaVu Sans Mono","Courier New","monospace"]}}});
qx.Theme.define("qx.theme.modern.Appearance",{appearances:{"widget":{},"root":{style:function(states){return {backgroundColor:"background-application",textColor:"text-label",font:"default"};
}},"label":{style:function(states){return {textColor:states.disabled?"text-disabled":undefined};
}},"move-frame":{style:function(states){return {decorator:"main"};
}},"resize-frame":"move-frame","dragdrop-cursor":{style:function(states){var icon="nodrop";

if(states.copy){icon="copy";
}else if(states.move){icon="move";
}else if(states.alias){icon="alias";
}return {source:"decoration/cursors/"+icon+".gif",position:"right-top",offset:[2,16,2,6]};
}},"image":{style:function(states){return {opacity:!states.replacement&&states.disabled?0.3:1};
}},"atom":{},"atom/label":"label","atom/icon":"image","popup":{style:function(states){return {decorator:"main",backgroundColor:"background-light",shadow:"shadow-popup"};
}},"button-frame":{alias:"atom",style:function(states){var decorator,textColor;

if(states.checked&&states.focused&&!states.inner){decorator="button-checked-focused";
textColor=undefined;
}else if(states.disabled){decorator="button-disabled";
textColor=undefined;
}else if(states.pressed){decorator="button-pressed";
textColor="text-hovered";
}else if(states.checked){decorator="button-checked";
textColor=undefined;
}else if(states.hovered){decorator="button-hovered";
textColor="text-hovered";
}else if(states.preselected&&states.focused&&!states.inner){decorator="button-preselected-focused";
textColor="text-hovered";
}else if(states.preselected){decorator="button-preselected";
textColor="text-hovered";
}else if(states.focused&&!states.inner){decorator="button-focused";
textColor=undefined;
}else{decorator="button";
textColor=undefined;
}return {decorator:decorator,textColor:textColor,shadow:states.invalid&&!states.disabled?"button-invalid-shadow":undefined};
}},"button-frame/image":{style:function(states){return {opacity:!states.replacement&&states.disabled?0.5:1};
}},"button":{alias:"button-frame",include:"button-frame",style:function(states){return {padding:[2,8],center:true};
}},"hover-button":{alias:"atom",include:"atom",style:function(states){return {decorator:states.hovered?"selected":undefined,textColor:states.hovered?"text-selected":undefined};
}},"splitbutton":{},"splitbutton/button":"button","splitbutton/arrow":{alias:"button",include:"button",style:function(states){return {icon:"decoration/arrows/down.png",padding:2,marginLeft:1};
}},"checkbox":{alias:"atom",style:function(states){var icon;

if(states.checked&&states.focused){icon="checkbox-checked-focused";
}else if(states.checked&&states.disabled){icon="checkbox-checked-disabled";
}else if(states.checked&&states.pressed){icon="checkbox-checked-pressed";
}else if(states.checked&&states.hovered){icon="checkbox-checked-hovered";
}else if(states.checked){icon="checkbox-checked";
}else if(states.focused){icon="checkbox-focused";
}else if(states.pressed){icon="checkbox-pressed";
}else if(states.hovered){icon="checkbox-hovered";
}else{icon="checkbox";
}var invalid=states.invalid&&!states.disabled?"-invalid":"";
return {icon:"decoration/form/"+icon+invalid+".png",gap:6};
}},"radiobutton":{alias:"atom",style:function(states){var icon;

if(states.checked&&states.focused){icon="radiobutton-checked-focused";
}else if(states.checked&&states.disabled){icon="radiobutton-checked-disabled";
}else if(states.checked&&states.pressed){icon="radiobutton-checked-pressed";
}else if(states.checked&&states.hovered){icon="radiobutton-checked-hovered";
}else if(states.checked){icon="radiobutton-checked";
}else if(states.focused){icon="radiobutton-focused";
}else if(states.pressed){icon="radiobutton-pressed";
}else if(states.hovered){icon="radiobutton-hovered";
}else{icon="radiobutton";
}var invalid=states.invalid&&!states.disabled?"-invalid":"";
return {icon:"decoration/form/"+icon+invalid+".png",gap:6};
}},"textfield":{style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}var textColor;

if(states.disabled){textColor="text-disabled";
}else if(states.showingPlaceholder){textColor="text-placeholder";
}else{textColor="text-input";
}return {decorator:decorator,padding:[2,4,1],textColor:textColor};
}},"textarea":{include:"textfield",style:function(states){return {padding:4};
}},"spinner":{style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}return {decorator:decorator};
}},"spinner/textfield":{style:function(states){return {marginRight:2,padding:[2,4,1],textColor:states.disabled?"text-disabled":"text-input"};
}},"spinner/upbutton":{alias:"button-frame",include:"button-frame",style:function(states){return {icon:"decoration/arrows/up-small.png",padding:states.pressed?[2,2,0,4]:[1,3,1,3],shadow:undefined};
}},"spinner/downbutton":{alias:"button-frame",include:"button-frame",style:function(states){return {icon:"decoration/arrows/down-small.png",padding:states.pressed?[2,2,0,4]:[1,3,1,3],shadow:undefined};
}},"datefield":"combobox","datefield/button":{alias:"combobox/button",include:"combobox/button",style:function(states){return {icon:"icon/16/apps/office-calendar.png",padding:[0,3],decorator:undefined};
}},"datefield/textfield":"combobox/textfield","datefield/list":{alias:"datechooser",include:"datechooser",style:function(states){return {decorator:undefined};
}},"groupbox":{style:function(states){return {legendPosition:"top"};
}},"groupbox/legend":{alias:"atom",style:function(states){return {padding:[1,0,1,4],textColor:states.invalid?"invalid":"text-title",font:"bold"};
}},"groupbox/frame":{style:function(states){return {padding:12,decorator:"group"};
}},"check-groupbox":"groupbox","check-groupbox/legend":{alias:"checkbox",include:"checkbox",style:function(states){return {padding:[1,0,1,4],textColor:states.invalid?"invalid":"text-title",font:"bold"};
}},"radio-groupbox":"groupbox","radio-groupbox/legend":{alias:"radiobutton",include:"radiobutton",style:function(states){return {padding:[1,0,1,4],textColor:states.invalid?"invalid":"text-title",font:"bold"};
}},"scrollarea":{style:function(states){return {minWidth:50,minHeight:50};
}},"scrollarea/corner":{style:function(states){return {backgroundColor:"background-application"};
}},"scrollarea/pane":"widget","scrollarea/scrollbar-x":"scrollbar","scrollarea/scrollbar-y":"scrollbar","scrollbar":{style:function(states){if(states["native"]){return {};
}return {width:states.horizontal?undefined:16,height:states.horizontal?16:undefined,decorator:states.horizontal?"scrollbar-horizontal":"scrollbar-vertical",padding:1};
}},"scrollbar/slider":{alias:"slider",style:function(states){return {padding:states.horizontal?[0,1,0,1]:[1,0,1,0]};
}},"scrollbar/slider/knob":{include:"button-frame",style:function(states){var decorator=states.horizontal?"scrollbar-slider-horizontal":"scrollbar-slider-vertical";

if(states.disabled){decorator+="-disabled";
}return {decorator:decorator,minHeight:states.horizontal?undefined:9,minWidth:states.horizontal?9:undefined};
}},"scrollbar/button":{alias:"button-frame",include:"button-frame",style:function(states){var icon="decoration/scrollbar/scrollbar-";

if(states.left){icon+="left.png";
}else if(states.right){icon+="right.png";
}else if(states.up){icon+="up.png";
}else{icon+="down.png";
}
if(states.left||states.right){return {padding:[0,0,0,states.left?3:4],icon:icon,width:15,height:14};
}else{return {padding:[0,0,0,2],icon:icon,width:14,height:15};
}}},"scrollbar/button-begin":"scrollbar/button","scrollbar/button-end":"scrollbar/button","slider":{style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}return {decorator:decorator};
}},"slider/knob":{include:"button-frame",style:function(states){return {decorator:states.disabled?"scrollbar-slider-horizontal-disabled":"scrollbar-slider-horizontal",shadow:undefined,height:14,width:14};
}},"list":{alias:"scrollarea",style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}return {backgroundColor:"background-light",decorator:decorator};
}},"list/pane":"widget","listitem":{alias:"atom",style:function(states){var decorator;

if(states.dragover){decorator=states.selected?"selected-dragover":"dragover";
}else{decorator=states.selected?"selected":undefined;
}return {padding:states.dragover?[4,4,2,4]:4,textColor:states.selected?"text-selected":undefined,decorator:decorator};
}},"slidebar":{},"slidebar/scrollpane":{},"slidebar/content":{},"slidebar/button-forward":{alias:"button-frame",include:"button-frame",style:function(states){return {padding:5,center:true,icon:states.vertical?"decoration/arrows/down.png":"decoration/arrows/right.png"};
}},"slidebar/button-backward":{alias:"button-frame",include:"button-frame",style:function(states){return {padding:5,center:true,icon:states.vertical?"decoration/arrows/up.png":"decoration/arrows/left.png"};
}},"tabview":{style:function(states){return {contentPadding:16};
}},"tabview/bar":{alias:"slidebar",style:function(states){var result={marginBottom:states.barTop?-1:0,marginTop:states.barBottom?-4:0,marginLeft:states.barRight?-3:0,marginRight:states.barLeft?-1:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0};

if(states.barTop||states.barBottom){result.paddingLeft=5;
result.paddingRight=7;
}else{result.paddingTop=5;
result.paddingBottom=7;
}return result;
}},"tabview/bar/button-forward":{include:"slidebar/button-forward",alias:"slidebar/button-forward",style:function(states){if(states.barTop||states.barBottom){return {marginTop:2,marginBottom:2};
}else{return {marginLeft:2,marginRight:2};
}}},"tabview/bar/button-backward":{include:"slidebar/button-backward",alias:"slidebar/button-backward",style:function(states){if(states.barTop||states.barBottom){return {marginTop:2,marginBottom:2};
}else{return {marginLeft:2,marginRight:2};
}}},"tabview/bar/scrollpane":{},"tabview/pane":{style:function(states){return {decorator:"tabview-pane",minHeight:100,marginBottom:states.barBottom?-1:0,marginTop:states.barTop?-1:0,marginLeft:states.barLeft?-1:0,marginRight:states.barRight?-1:0};
}},"tabview-page":"widget","tabview-page/button":{alias:"atom",style:function(states){var decorator,padding=0;
var marginTop=0,marginBottom=0,marginLeft=0,marginRight=0;

if(states.checked){if(states.barTop){decorator="tabview-page-button-top-active";
padding=[6,14];
marginLeft=states.firstTab?0:-5;
marginRight=states.lastTab?0:-5;
}else if(states.barBottom){decorator="tabview-page-button-bottom-active";
padding=[6,14];
marginLeft=states.firstTab?0:-5;
marginRight=states.lastTab?0:-5;
}else if(states.barRight){decorator="tabview-page-button-right-active";
padding=[6,13];
marginTop=states.firstTab?0:-5;
marginBottom=states.lastTab?0:-5;
}else{decorator="tabview-page-button-left-active";
padding=[6,13];
marginTop=states.firstTab?0:-5;
marginBottom=states.lastTab?0:-5;
}}else{if(states.barTop){decorator="tabview-page-button-top-inactive";
padding=[4,10];
marginTop=4;
marginLeft=states.firstTab?5:1;
marginRight=1;
}else if(states.barBottom){decorator="tabview-page-button-bottom-inactive";
padding=[4,10];
marginBottom=4;
marginLeft=states.firstTab?5:1;
marginRight=1;
}else if(states.barRight){decorator="tabview-page-button-right-inactive";
padding=[4,10];
marginRight=5;
marginTop=states.firstTab?5:1;
marginBottom=1;
marginLeft=1;
}else{decorator="tabview-page-button-left-inactive";
padding=[4,10];
marginLeft=5;
marginTop=states.firstTab?5:1;
marginBottom=1;
marginRight=1;
}}return {zIndex:states.checked?10:5,decorator:decorator,padding:padding,marginTop:marginTop,marginBottom:marginBottom,marginLeft:marginLeft,marginRight:marginRight,textColor:states.checked?"text-active":"text-inactive"};
}},"tabview-page/button/label":{alias:"label",style:function(states){return {padding:[0,1,0,1],margin:states.focused?0:1,decorator:states.focused?"keyboard-focus":undefined};
}},"tabview-page/button/close-button":{alias:"atom",style:function(states){return {icon:"qx/icon/Tango/16/actions/window-close.png"};
}},"toolbar":{style:function(states){return {decorator:"toolbar",spacing:2};
}},"toolbar/part":{style:function(states){return {decorator:"toolbar-part",spacing:2};
}},"toolbar/part/container":{style:function(states){return {paddingLeft:2,paddingRight:2};
}},"toolbar/part/handle":{style:function(states){return {source:"decoration/toolbar/toolbar-handle-knob.gif",marginLeft:3,marginRight:3};
}},"toolbar-button":{alias:"atom",style:function(states){return {marginTop:2,marginBottom:2,padding:(states.pressed||states.checked||states.hovered)&&!states.disabled||(states.disabled&&states.checked)?3:5,decorator:states.pressed||(states.checked&&!states.hovered)||(states.checked&&states.disabled)?"toolbar-button-checked":states.hovered&&!states.disabled?"toolbar-button-hovered":undefined};
}},"toolbar-menubutton":{alias:"toolbar-button",include:"toolbar-button",style:function(states){return {showArrow:true};
}},"toolbar-menubutton/arrow":{alias:"image",include:"image",style:function(states){return {source:"decoration/arrows/down-small.png"};
}},"toolbar-splitbutton":{style:function(states){return {marginTop:2,marginBottom:2};
}},"toolbar-splitbutton/button":{alias:"toolbar-button",include:"toolbar-button",style:function(states){return {icon:"decoration/arrows/down.png",marginTop:undefined,marginBottom:undefined};
}},"toolbar-splitbutton/arrow":{alias:"toolbar-button",include:"toolbar-button",style:function(states){return {padding:states.pressed||states.checked?1:states.hovered?1:3,icon:"decoration/arrows/down.png",marginTop:undefined,marginBottom:undefined};
}},"toolbar-separator":{style:function(states){return {decorator:"toolbar-separator",margin:7};
}},"tree":"list","tree-item":{style:function(states){return {padding:[2,6],textColor:states.selected?"text-selected":undefined,decorator:states.selected?"selected":undefined};
}},"tree-item/icon":{include:"image",style:function(states){return {paddingRight:5};
}},"tree-item/label":"label","tree-item/open":{include:"image",style:function(states){var icon;

if(states.selected&&states.opened){icon="decoration/tree/open-selected.png";
}else if(states.selected&&!states.opened){icon="decoration/tree/closed-selected.png";
}else if(states.opened){icon="decoration/tree/open.png";
}else{icon="decoration/tree/closed.png";
}return {padding:[0,5,0,2],source:icon};
}},"tree-folder":{include:"tree-item",alias:"tree-item",style:function(states){var icon;

if(states.small){icon=states.opened?"icon/16/places/folder-open.png":"icon/16/places/folder.png";
}else if(states.large){icon=states.opened?"icon/32/places/folder-open.png":"icon/32/places/folder.png";
}else{icon=states.opened?"icon/22/places/folder-open.png":"icon/22/places/folder.png";
}return {icon:icon};
}},"tree-file":{include:"tree-item",alias:"tree-item",style:function(states){return {icon:states.small?"icon/16/mimetypes/office-document.png":states.large?"icon/32/mimetypes/office-document.png":"icon/22/mimetypes/office-document.png"};
}},"treevirtual":"table","treevirtual-folder":{style:function(states){return {icon:states.opened?"icon/16/places/folder-open.png":"icon/16/places/folder.png"};
}},"treevirtual-file":{include:"treevirtual-folder",alias:"treevirtual-folder",style:function(states){return {icon:"icon/16/mimetypes/office-document.png"};
}},"treevirtual-line":{style:function(states){return {icon:"qx/static/blank.gif"};
}},"treevirtual-contract":{style:function(states){return {icon:"decoration/tree/open.png",paddingLeft:5,paddingTop:2};
}},"treevirtual-expand":{style:function(states){return {icon:"decoration/tree/closed.png",paddingLeft:5,paddingTop:2};
}},"treevirtual-only-contract":"treevirtual-contract","treevirtual-only-expand":"treevirtual-expand","treevirtual-start-contract":"treevirtual-contract","treevirtual-start-expand":"treevirtual-expand","treevirtual-end-contract":"treevirtual-contract","treevirtual-end-expand":"treevirtual-expand","treevirtual-cross-contract":"treevirtual-contract","treevirtual-cross-expand":"treevirtual-expand","treevirtual-end":{style:function(states){return {icon:"qx/static/blank.gif"};
}},"treevirtual-cross":{style:function(states){return {icon:"qx/static/blank.gif"};
}},"tooltip":{include:"popup",style:function(states){return {backgroundColor:"background-tip",padding:[1,3,2,3],offset:[15,5,5,5]};
}},"tooltip/atom":"atom","tooltip-error":{include:"tooltip",style:function(states){return {textColor:"text-selected",placeMethod:"widget",offset:[0,0,0,14],marginTop:-2,position:"right-top",showTimeout:100,hideTimeout:10000,decorator:"tooltip-error",shadow:"tooltip-error-arrow",font:"bold"};
}},"tooltip-error/atom":"atom","window":{style:function(states){return {shadow:"shadow-window",contentPadding:[10,10,10,10]};
}},"window/pane":{style:function(states){return {decorator:"window"};
}},"window/captionbar":{style:function(states){return {decorator:states.active?"window-captionbar-active":"window-captionbar-inactive",textColor:states.active?"white":"text-gray",minHeight:26,paddingRight:2};
}},"window/icon":{style:function(states){return {margin:[5,0,3,6]};
}},"window/title":{style:function(states){return {alignY:"middle",font:"bold",marginLeft:6,marginRight:12};
}},"window/minimize-button":{alias:"atom",style:function(states){return {icon:states.active?states.hovered?"decoration/window/minimize-active-hovered.png":"decoration/window/minimize-active.png":"decoration/window/minimize-inactive.png",margin:[4,8,2,0]};
}},"window/restore-button":{alias:"atom",style:function(states){return {icon:states.active?states.hovered?"decoration/window/restore-active-hovered.png":"decoration/window/restore-active.png":"decoration/window/restore-inactive.png",margin:[5,8,2,0]};
}},"window/maximize-button":{alias:"atom",style:function(states){return {icon:states.active?states.hovered?"decoration/window/maximize-active-hovered.png":"decoration/window/maximize-active.png":"decoration/window/maximize-inactive.png",margin:[4,8,2,0]};
}},"window/close-button":{alias:"atom",style:function(states){return {icon:states.active?states.hovered?"decoration/window/close-active-hovered.png":"decoration/window/close-active.png":"decoration/window/close-inactive.png",margin:[4,8,2,0]};
}},"window/statusbar":{style:function(states){return {padding:[2,6],decorator:"window-statusbar",minHeight:18};
}},"window/statusbar-text":{style:function(states){return {font:"small"};
}},"iframe":{style:function(states){return {decorator:"main"};
}},"resizer":{style:function(states){return {decorator:"pane"};
}},"splitpane":{style:function(states){return {decorator:"splitpane"};
}},"splitpane/splitter":{style:function(states){return {width:states.horizontal?3:undefined,height:states.vertical?3:undefined,backgroundColor:"background-splitpane"};
}},"splitpane/splitter/knob":{style:function(states){return {source:states.horizontal?"decoration/splitpane/knob-horizontal.png":"decoration/splitpane/knob-vertical.png"};
}},"splitpane/slider":{style:function(states){return {width:states.horizontal?3:undefined,height:states.vertical?3:undefined,backgroundColor:"background-splitpane"};
}},"selectbox":{alias:"button-frame",include:"button-frame",style:function(states){return {padding:[2,8]};
}},"selectbox/atom":"atom","selectbox/popup":"popup","selectbox/list":{alias:"list"},"selectbox/arrow":{include:"image",style:function(states){return {source:"decoration/arrows/down.png",paddingLeft:5};
}},"datechooser":{style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}return {padding:2,decorator:decorator,backgroundColor:"background-light"};
}},"datechooser/navigation-bar":{},"datechooser/nav-button":{include:"button-frame",alias:"button-frame",style:function(states){var result={padding:[2,4],shadow:undefined};

if(states.lastYear){result.icon="decoration/arrows/rewind.png";
result.marginRight=1;
}else if(states.lastMonth){result.icon="decoration/arrows/left.png";
}else if(states.nextYear){result.icon="decoration/arrows/forward.png";
result.marginLeft=1;
}else if(states.nextMonth){result.icon="decoration/arrows/right.png";
}return result;
}},"datechooser/last-year-button-tooltip":"tooltip","datechooser/last-month-button-tooltip":"tooltip","datechooser/next-year-button-tooltip":"tooltip","datechooser/next-month-button-tooltip":"tooltip","datechooser/last-year-button":"datechooser/nav-button","datechooser/last-month-button":"datechooser/nav-button","datechooser/next-month-button":"datechooser/nav-button","datechooser/next-year-button":"datechooser/nav-button","datechooser/month-year-label":{style:function(states){return {font:"bold",textAlign:"center",textColor:states.disabled?"text-disabled":undefined};
}},"datechooser/date-pane":{style:function(states){return {textColor:states.disabled?"text-disabled":undefined,marginTop:2};
}},"datechooser/weekday":{style:function(states){return {textColor:states.disabled?"text-disabled":states.weekend?"text-light":undefined,textAlign:"center",paddingTop:2,backgroundColor:"background-medium"};
}},"datechooser/week":{style:function(states){return {textAlign:"center",padding:[2,4],backgroundColor:"background-medium"};
}},"datechooser/day":{style:function(states){return {textAlign:"center",decorator:states.disabled?undefined:states.selected?"selected":undefined,textColor:states.disabled?"text-disabled":states.selected?"text-selected":states.otherMonth?"text-light":undefined,font:states.today?"bold":undefined,padding:[2,4]};
}},"combobox":{style:function(states){var decorator;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(focused&&invalid&&!disabled){decorator="input-focused-invalid";
}else if(focused&&!invalid&&!disabled){decorator="input-focused";
}else if(disabled){decorator="input-disabled";
}else if(!focused&&invalid&&!disabled){decorator="border-invalid";
}else{decorator="input";
}return {decorator:decorator};
}},"combobox/popup":"popup","combobox/list":{alias:"list"},"combobox/button":{include:"button-frame",alias:"button-frame",style:function(states){var ret={icon:"decoration/arrows/down.png",padding:2};

if(states.selected){ret.decorator="button-focused";
}return ret;
}},"combobox/textfield":{include:"textfield",style:function(states){return {decorator:undefined};
}},"menu":{style:function(states){var result={decorator:"menu",shadow:"shadow-popup",spacingX:6,spacingY:1,iconColumnWidth:16,arrowColumnWidth:4,placementModeY:states.submenu||states.contextmenu?"best-fit":"keep-align"};

if(states.submenu){result.position="right-top";
result.offset=[-2,-3];
}return result;
}},"menu/slidebar":"menu-slidebar","menu-slidebar":"widget","menu-slidebar-button":{style:function(states){return {decorator:states.hovered?"selected":undefined,padding:7,center:true};
}},"menu-slidebar/button-backward":{include:"menu-slidebar-button",style:function(states){return {icon:states.hovered?"decoration/arrows/up-invert.png":"decoration/arrows/up.png"};
}},"menu-slidebar/button-forward":{include:"menu-slidebar-button",style:function(states){return {icon:states.hovered?"decoration/arrows/down-invert.png":"decoration/arrows/down.png"};
}},"menu-separator":{style:function(states){return {height:0,decorator:"menu-separator",margin:[4,2]};
}},"menu-button":{alias:"atom",style:function(states){return {decorator:states.selected?"selected":undefined,textColor:states.selected?"text-selected":undefined,padding:[4,6]};
}},"menu-button/icon":{include:"image",style:function(states){return {alignY:"middle"};
}},"menu-button/label":{include:"label",style:function(states){return {alignY:"middle",padding:1};
}},"menu-button/shortcut":{include:"label",style:function(states){return {alignY:"middle",marginLeft:14,padding:1};
}},"menu-button/arrow":{include:"image",style:function(states){return {source:states.selected?"decoration/arrows/right-invert.png":"decoration/arrows/right.png",alignY:"middle"};
}},"menu-checkbox":{alias:"menu-button",include:"menu-button",style:function(states){return {icon:!states.checked?undefined:states.selected?"decoration/menu/checkbox-invert.gif":"decoration/menu/checkbox.gif"};
}},"menu-radiobutton":{alias:"menu-button",include:"menu-button",style:function(states){return {icon:!states.checked?undefined:states.selected?"decoration/menu/radiobutton-invert.gif":"decoration/menu/radiobutton.gif"};
}},"menubar":{style:function(states){return {decorator:"menubar"};
}},"menubar-button":{alias:"atom",style:function(states){return {decorator:states.pressed||states.hovered?"selected":undefined,textColor:states.pressed||states.hovered?"text-selected":undefined,padding:[3,8]};
}},"colorselector":"widget","colorselector/control-bar":"widget","colorselector/control-pane":"widget","colorselector/visual-pane":"groupbox","colorselector/preset-grid":"widget","colorselector/colorbucket":{style:function(states){return {decorator:"main",width:16,height:16};
}},"colorselector/preset-field-set":"groupbox","colorselector/input-field-set":"groupbox","colorselector/preview-field-set":"groupbox","colorselector/hex-field-composite":"widget","colorselector/hex-field":"textfield","colorselector/rgb-spinner-composite":"widget","colorselector/rgb-spinner-red":"spinner","colorselector/rgb-spinner-green":"spinner","colorselector/rgb-spinner-blue":"spinner","colorselector/hsb-spinner-composite":"widget","colorselector/hsb-spinner-hue":"spinner","colorselector/hsb-spinner-saturation":"spinner","colorselector/hsb-spinner-brightness":"spinner","colorselector/preview-content-old":{style:function(states){return {decorator:"main",width:50,height:10};
}},"colorselector/preview-content-new":{style:function(states){return {decorator:"main",backgroundColor:"background-light",width:50,height:10};
}},"colorselector/hue-saturation-field":{style:function(states){return {decorator:"main",margin:5};
}},"colorselector/brightness-field":{style:function(states){return {decorator:"main",margin:[5,7]};
}},"colorselector/hue-saturation-pane":"widget","colorselector/hue-saturation-handle":"widget","colorselector/brightness-pane":"widget","colorselector/brightness-handle":"widget","colorpopup":{alias:"popup",include:"popup",style:function(states){return {padding:5,backgroundColor:"background-application"};
}},"colorpopup/field":{style:function(states){return {decorator:"main",margin:2,width:14,height:14,backgroundColor:"background-light"};
}},"colorpopup/selector-button":"button","colorpopup/auto-button":"button","colorpopup/preview-pane":"groupbox","colorpopup/current-preview":{style:function(state){return {height:20,padding:4,marginLeft:4,decorator:"main",allowGrowX:true};
}},"colorpopup/selected-preview":{style:function(state){return {height:20,padding:4,marginRight:4,decorator:"main",allowGrowX:true};
}},"colorpopup/colorselector-okbutton":{alias:"button",include:"button",style:function(states){return {icon:"icon/16/actions/dialog-ok.png"};
}},"colorpopup/colorselector-cancelbutton":{alias:"button",include:"button",style:function(states){return {icon:"icon/16/actions/dialog-cancel.png"};
}},"table":{alias:"widget",style:function(states){return {decorator:"table"};
}},"table-header":{},"table/statusbar":{style:function(states){return {decorator:"table-statusbar",padding:[0,2]};
}},"table/column-button":{alias:"button-frame",style:function(states){return {decorator:"table-column-button",padding:3,icon:"decoration/table/select-column-order.png"};
}},"table-column-reset-button":{include:"menu-button",alias:"menu-button",style:function(){return {icon:"icon/16/actions/view-refresh.png"};
}},"table-scroller":"widget","table-scroller/scrollbar-x":"scrollbar","table-scroller/scrollbar-y":"scrollbar","table-scroller/header":{style:function(states){return {decorator:"table-scroller-header"};
}},"table-scroller/pane":{style:function(states){return {backgroundColor:"table-pane"};
}},"table-scroller/focus-indicator":{style:function(states){return {decorator:"table-scroller-focus-indicator"};
}},"table-scroller/resize-line":{style:function(states){return {backgroundColor:"border-separator",width:2};
}},"table-header-cell":{alias:"atom",style:function(states){return {minWidth:13,minHeight:20,padding:states.hovered?[3,4,2,4]:[3,4],decorator:states.hovered?"table-header-cell-hovered":"table-header-cell",sortIcon:states.sorted?(states.sortedAscending?"decoration/table/ascending.png":"decoration/table/descending.png"):undefined};
}},"table-header-cell/label":{style:function(states){return {minWidth:0,alignY:"middle",paddingRight:5};
}},"table-header-cell/sort-icon":{style:function(states){return {alignY:"middle",alignX:"right"};
}},"table-header-cell/icon":{style:function(states){return {minWidth:0,alignY:"middle",paddingRight:5};
}},"table-editor-textfield":{include:"textfield",style:function(states){return {decorator:undefined,padding:[2,2],backgroundColor:"background-light"};
}},"table-editor-selectbox":{include:"selectbox",alias:"selectbox",style:function(states){return {padding:[0,2],backgroundColor:"background-light"};
}},"table-editor-combobox":{include:"combobox",alias:"combobox",style:function(states){return {decorator:undefined,backgroundColor:"background-light"};
}},"progressive-table-header":{alias:"widget",style:function(states){return {decorator:"progressive-table-header"};
}},"progressive-table-header-cell":{alias:"atom",style:function(states){return {minWidth:40,minHeight:25,paddingLeft:6,decorator:"progressive-table-header-cell"};
}},"app-header":{style:function(states){return {font:"bold",textColor:"text-selected",padding:[8,12],decorator:"app-header"};
}},"virtual-list":"list","virtual-list/row-layer":"row-layer","row-layer":{style:function(states){return {colorEven:"white",colorOdd:"#EEE"};
}},"column-layer":"widget","cell":{style:function(states){return {textColor:states.selected?"text-selected":"text-label",padding:[3,6],font:"default"};
}},"cell-string":"cell","cell-number":{include:"cell",style:function(states){return {textAlign:"right"};
}},"cell-image":"cell","cell-boolean":{include:"cell",style:function(states){return {iconTrue:"decoration/table/boolean-true.png",iconFalse:"decoration/table/boolean-false.png"};
}},"cell-atom":"cell","cell-date":"cell","cell-html":"cell","htmlarea":{"include":"widget",style:function(states){return {backgroundColor:"white"};
}}}});
qx.Theme.define("qx.theme.icon.Tango",{title:"Tango",aliases:{"icon":"qx/icon/Tango"},icons:{}});
qx.Theme.define("qx.theme.Modern",{title:"Modern",meta:{color:qx.theme.modern.Color,decoration:qx.theme.modern.Decoration,font:qx.theme.modern.Font,appearance:qx.theme.modern.Appearance,icon:qx.theme.icon.Tango}});
qx.Theme.define("qx.theme.classic.Color",{colors:{"background":"#EBE9ED","background-light":"#F3F0F5","background-focused":"#F3F8FD","background-focused-inner":"#DBEAF9","background-disabled":"#F4F4F4","background-selected":"#3E6CA8","background-field":"white","background-pane":"#FAFBFE","background-invalid":"#FFE0E0","border-lead":"#888888","border-light":"white","border-light-shadow":"#DCDFE4","border-dark-shadow":"#A7A6AA","border-dark":"#85878C","border-main":"#85878C","border-focused-light":"#BCCEE5","border-focused-light-shadow":"#A5BDDE","border-focused-dark-shadow":"#7CA0CF","border-focused-dark":"#3E6CA8","border-separator":"#808080","invalid":"#990000","border-focused-invalid":"#FF9999","text":"black","text-disabled":"#A7A6AA","text-selected":"white","text-focused":"#3E5B97","text-placeholder":"#CBC8CD","tooltip":"#FFFFE1","tooltip-text":"black","tooltip-invalid":"#C82C2C","button":"#EBE9ED","button-hovered":"#F6F5F7","button-abandoned":"#F9F8E9","button-checked":"#F3F0F5","window-active-caption-text":[255,255,255],"window-inactive-caption-text":[255,255,255],"window-active-caption":[51,94,168],"window-inactive-caption":[111,161,217],"date-chooser":"white","date-chooser-title":[116,116,116],"date-chooser-selected":[52,52,52],"effect":[254,200,60],"table-pane":"white","table-header":[242,242,242],"table-header-border":[214,213,217],"table-header-cell":[235,234,219],"table-header-cell-hover":[255,255,255],"table-focus-indicator":[179,217,255],"table-row-background-focused-selected":[90,138,211],"table-row-background-focused":[221,238,255],"table-row-background-selected":[51,94,168],"table-row-background-even":[250,248,243],"table-row-background-odd":[255,255,255],"table-row-selected":[255,255,255],"table-row":[0,0,0],"table-row-line":"#EEE","table-column-line":"#EEE","progressive-table-header":"#AAAAAA","progressive-table-row-background-even":[250,248,243],"progressive-table-row-background-odd":[255,255,255],"progressive-progressbar-background":"gray","progressive-progressbar-indicator-done":"#CCCCCC","progressive-progressbar-indicator-undone":"white","progressive-progressbar-percent-background":"gray","progressive-progressbar-percent-text":"white"}});
qx.Class.define("qx.ui.decoration.Double",{extend:qx.ui.decoration.Single,construct:function(width,style,color,innerWidth,innerColor){this.base(arguments,width,style,color,innerWidth,innerColor);
if(innerWidth!=null){this.setInnerWidth(innerWidth);
}
if(innerColor!=null){this.setInnerColor(innerColor);
}},properties:{innerWidthTop:{check:"Number",init:0},innerWidthRight:{check:"Number",init:0},innerWidthBottom:{check:"Number",init:0},innerWidthLeft:{check:"Number",init:0},innerWidth:{group:["innerWidthTop","innerWidthRight","innerWidthBottom","innerWidthLeft"],mode:"shorthand"},innerColorTop:{nullable:true,check:"Color"},innerColorRight:{nullable:true,check:"Color"},innerColorBottom:{nullable:true,check:"Color"},innerColorLeft:{nullable:true,check:"Color"},innerColor:{group:["innerColorTop","innerColorRight","innerColorBottom","innerColorLeft"],mode:"shorthand"}},members:{__ownMarkup:null,_getDefaultInsets:function(){return {top:this.getWidthTop()+this.getInnerWidthTop(),right:this.getWidthRight()+this.getInnerWidthRight(),bottom:this.getWidthBottom()+this.getInnerWidthBottom(),left:this.getWidthLeft()+this.getInnerWidthLeft()};
},_isInitialized:function(){return !!this.__ownMarkup;
},getMarkup:function(){if(this.__ownMarkup){return this.__ownMarkup;
}var Color=qx.theme.manager.Color.getInstance();
var innerStyles={position:"relative"};
var width=this.getInnerWidthTop();

if(width>0){innerStyles["border-top"]=width+"px "+this.getStyleTop()+" "+Color.resolve(this.getInnerColorTop());
}var width=this.getInnerWidthRight();

if(width>0){innerStyles["border-right"]=width+"px "+this.getStyleRight()+" "+Color.resolve(this.getInnerColorRight());
}var width=this.getInnerWidthBottom();

if(width>0){innerStyles["border-bottom"]=width+"px "+this.getStyleBottom()+" "+Color.resolve(this.getInnerColorBottom());
}var width=this.getInnerWidthLeft();

if(width>0){innerStyles["border-left"]=width+"px "+this.getStyleLeft()+" "+Color.resolve(this.getInnerColorLeft());
}{if(innerStyles.length===0){throw new Error("Invalid Double decorator (zero inner border width). Use qx.ui.decoration.Single instead!");
}};
var innerHtml=this._generateBackgroundMarkup(innerStyles);
var outerStyles='line-height:0;';
var width=this.getWidthTop();

if(width>0){outerStyles+="border-top:"+width+"px "+this.getStyleTop()+" "+Color.resolve(this.getColorTop())+";";
}var width=this.getWidthRight();

if(width>0){outerStyles+="border-right:"+width+"px "+this.getStyleRight()+" "+Color.resolve(this.getColorRight())+";";
}var width=this.getWidthBottom();

if(width>0){outerStyles+="border-bottom:"+width+"px "+this.getStyleBottom()+" "+Color.resolve(this.getColorBottom())+";";
}var width=this.getWidthLeft();

if(width>0){outerStyles+="border-left:"+width+"px "+this.getStyleLeft()+" "+Color.resolve(this.getColorLeft())+";";
}{if(outerStyles.length===0){throw new Error("Invalid Double decorator (zero outer border width). Use qx.ui.decoration.Single instead!");
}};
return this.__ownMarkup='<div style="position:absolute;top:0;left:0;'+outerStyles+'">'+innerHtml+'</div>';
},resize:function(element,width,height){var scaledImage=this.getBackgroundImage()&&this.getBackgroundRepeat()=="scale";

if(scaledImage||qx.bom.client.Feature.CONTENT_BOX){var insets=this.getInsets();
var innerWidth=width-insets.left-insets.right;
var innerHeight=height-insets.top-insets.bottom;
}else{var innerWidth=width-this.getWidthLeft()-this.getWidthRight();
var innerHeight=height-this.getWidthTop()-this.getWidthBottom();
}if(innerWidth<0){innerWidth=0;
}
if(innerHeight<0){innerHeight=0;
}element.firstChild.style.width=innerWidth+"px";
element.firstChild.style.height=innerHeight+"px";
}},destruct:function(){this.__ownMarkup=null;
}});
qx.Theme.define("qx.theme.classic.Decoration",{aliases:{decoration:"qx/decoration/Classic"},decorations:{"main":{decorator:qx.ui.decoration.Uniform,style:{width:1,color:"border-dark"}},"keyboard-focus":{decorator:qx.ui.decoration.Single,style:{width:1,color:"black",style:"dotted"}},"inset":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-dark-shadow","border-light","border-light","border-dark-shadow"],innerColor:["border-dark","border-light-shadow","border-light-shadow","border-dark"]}},"outset":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-light-shadow","border-dark","border-dark","border-light-shadow"],innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"]}},"groove":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-dark-shadow","border-light","border-light","border-dark-shadow"],innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"]}},"ridge":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-light","border-dark-shadow","border-dark-shadow","border-light"],innerColor:["border-dark-shadow","border-light","border-light","border-dark-shadow"]}},"inset-thin":{decorator:qx.ui.decoration.Single,style:{width:1,color:["border-dark-shadow","border-light","border-light","border-dark-shadow"]}},"outset-thin":{decorator:qx.ui.decoration.Single,style:{width:1,color:["border-light","border-dark-shadow","border-dark-shadow","border-light"]}},"focused-inset":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-focused-dark-shadow","border-focused-light","border-focused-light","border-focused-dark-shadow"],innerColor:["border-focused-dark","border-focused-light-shadow","border-focused-light-shadow","border-focused-dark"]}},"focused-outset":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-focused-light-shadow","border-focused-dark","border-focused-dark","border-focused-light-shadow"],innerColor:["border-focused-light","border-focused-dark-shadow","border-focused-dark-shadow","border-focused-light"]}},"border-invalid":{decorator:qx.ui.decoration.Double,style:{width:1,innerWidth:1,color:["border-dark-shadow","border-light","border-light","border-dark-shadow"],innerColor:"invalid"}},"separator-horizontal":{decorator:qx.ui.decoration.Single,style:{widthLeft:1,colorLeft:"border-separator"}},"separator-vertical":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"border-separator"}},"shadow":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/shadow/shadow.png",insets:[4,8,8,4]}},"shadow-window":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/shadow/shadow.png",insets:[4,8,8,4]}},"shadow-small":{decorator:qx.ui.decoration.Grid,style:{baseImage:"decoration/shadow/shadow-small.png",insets:[0,3,3,0]}},"checkbox-invalid-shadow":{decorator:qx.ui.decoration.Beveled,style:{outerColor:"invalid",innerColor:"border-focused-invalid",insets:[0]}},"lead-item":{decorator:qx.ui.decoration.Uniform,style:{width:1,style:"dotted",color:"border-lead"}},"tooltip":{decorator:qx.ui.decoration.Uniform,style:{width:1,color:"tooltip-text"}},"tooltip-error":{decorator:qx.ui.decoration.Uniform,style:{width:1,color:"tooltip-text"}},"toolbar-separator":{decorator:qx.ui.decoration.Single,style:{widthLeft:1,colorLeft:"border-dark-shadow"}},"toolbar-part-handle":{decorator:qx.ui.decoration.Single,style:{width:1,style:"solid",colorTop:"white",colorLeft:"white",colorRight:"border-dark-shadow",colorBottom:"border-dark-shadow"}},"menu-separator":{decorator:qx.ui.decoration.Single,style:{widthTop:1,widthBottom:1,colorTop:"border-dark",colorBottom:"border-light"}},"datechooser-date-pane":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"gray",style:"solid"}},"datechooser-weekday":{decorator:qx.ui.decoration.Single,style:{widthBottom:1,colorBottom:"gray",style:"solid"}},"datechooser-week":{decorator:qx.ui.decoration.Single,style:{widthRight:1,colorRight:"gray",style:"solid"}},"datechooser-week-header":{decorator:qx.ui.decoration.Single,style:{widthBottom:1,colorBottom:"gray",widthRight:1,colorRight:"gray",style:"solid"}},"tabview-page-button-top":{decorator:qx.ui.decoration.Double,style:{width:1,color:["border-light-shadow","border-dark","border-dark","border-light-shadow"],innerWidth:1,innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"],widthBottom:0,innerWidthBottom:0}},"tabview-page-button-bottom":{decorator:qx.ui.decoration.Double,style:{width:1,color:["border-light-shadow","border-dark","border-dark","border-light-shadow"],innerWidth:1,innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"],widthTop:0,innerWidthTop:0}},"tabview-page-button-left":{decorator:qx.ui.decoration.Double,style:{width:1,color:["border-light-shadow","border-dark","border-dark","border-light-shadow"],innerWidth:1,innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"],widthRight:0,innerWidthRight:0}},"tabview-page-button-right":{decorator:qx.ui.decoration.Double,style:{width:1,color:["border-light-shadow","border-dark","border-dark","border-light-shadow"],innerWidth:1,innerColor:["border-light","border-dark-shadow","border-dark-shadow","border-light"],widthLeft:0,innerWidthLeft:0}},"table-statusbar":{decorator:qx.ui.decoration.Single,style:{widthTop:1,colorTop:"border-dark-shadow",styleTop:"solid"}},"table-scroller-header":{decorator:qx.ui.decoration.Single,style:{widthBottom:1,colorBottom:"table-header-border",styleBottom:"solid"}},"table-scroller-focus-indicator":{decorator:qx.ui.decoration.Single,style:{width:2,color:"table-focus-indicator",style:"solid"}},"table-header-cell":{decorator:qx.ui.decoration.Single,style:{widthRight:1,colorRight:"table-header-border",styleRight:"solid"}},"table-header-cell-hovered":{decorator:qx.ui.decoration.Single,style:{widthRight:1,colorRight:"table-header-border",styleRight:"solid",widthBottom:2,colorBottom:"effect",styleBottom:"solid"}}}});
qx.Theme.define("qx.theme.classic.Font",{fonts:{"default":{size:11,lineHeight:1.4,family:["Lucida Grande","Tahoma","Verdana","Bitstream Vera Sans","Liberation Sans"]},"bold":{size:11,lineHeight:1.4,family:["Lucida Grande","Tahoma","Verdana","Bitstream Vera Sans","Liberation Sans"],bold:true},"small":{size:10,lineHeight:1.4,family:["Lucida Grande","Tahoma","Verdana","Bitstream Vera Sans","Liberation Sans"]},"monospace":{size:11,lineHeight:1.4,family:["DejaVu Sans Mono","Courier New","monospace"]}}});
qx.Theme.define("qx.theme.classic.Appearance",{appearances:{"widget":{},"label":{style:function(states){return {textColor:states.disabled?"text-disabled":undefined};
}},"image":{style:function(states){return {opacity:!states.replacement&&states.disabled?0.3:undefined};
}},"atom":{},"atom/label":"label","atom/icon":"image","root":{style:function(states){return {backgroundColor:"background",textColor:"text",font:"default"};
}},"popup":{style:function(states){return {decorator:"main",backgroundColor:"background-pane",shadow:"shadow-small"};
}},"tooltip":{include:"popup",style:function(states){return {backgroundColor:"tooltip",textColor:"tooltip-text",decorator:"tooltip",shadow:"shadow-small",padding:[1,3,2,3],offset:[15,5,5,5]};
}},"tooltip/atom":"atom","tooltip-error":{include:"tooltip",style:function(states){return {textColor:"text-selected",showTimeout:100,hideTimeout:10000,decorator:"tooltip-error",font:"bold",backgroundColor:"tooltip-invalid"};
}},"tooltip-error/atom":"atom","iframe":{style:function(states){return {backgroundColor:"white",decorator:"inset"};
}},"move-frame":{style:function(states){return {decorator:"main"};
}},"resize-frame":"move-frame","dragdrop-cursor":{style:function(states){var icon="nodrop";

if(states.copy){icon="copy";
}else if(states.move){icon="move";
}else if(states.alias){icon="alias";
}return {source:"decoration/cursors/"+icon+".gif",position:"right-top",offset:[2,16,2,6]};
}},"button-frame":{alias:"atom",style:function(states){if(states.pressed||states.abandoned||states.checked){var decorator=!states.inner&&states.focused?"focused-inset":"inset";
var padding=[4,3,2,5];
}else{var decorator=!states.inner&&states.focused?"focused-outset":"outset";
var padding=[3,4];
}return {backgroundColor:states.abandoned?"button-abandoned":states.hovered?"button-hovered":states.checked?"button-checked":"button",decorator:decorator,padding:padding};
}},"button":{alias:"button-frame",include:"button-frame",style:function(states){return {center:true};
}},"hover-button":{alias:"atom",include:"atom",style:function(states){return {backgroundColor:states.hovered?"background-selected":undefined,textColor:states.hovered?"text-selected":undefined};
}},"splitbutton":{},"splitbutton/button":"button","splitbutton/arrow":{alias:"button",include:"button",style:function(states){return {icon:"decoration/arrows/down.gif"};
}},"scrollarea/corner":{style:function(){return {backgroundColor:"background"};
}},"scrollarea":"widget","scrollarea/pane":"widget","scrollarea/scrollbar-x":"scrollbar","scrollarea/scrollbar-y":"scrollbar","list":{alias:"scrollarea",style:function(states){var backgroundColor;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(invalid&&!disabled){backgroundColor="background-invalid";
}else if(focused&&!invalid&&!disabled){backgroundColor="background-focused";
}else if(disabled){backgroundColor="background-disabled";
}else{backgroundColor="white";
}return {decorator:states.focused?"focused-inset":"inset",backgroundColor:backgroundColor};
}},"listitem":{alias:"atom",style:function(states){return {gap:4,padding:states.lead?[2,4]:[3,5],backgroundColor:states.selected?"background-selected":undefined,textColor:states.selected?"text-selected":undefined,decorator:states.lead?"lead-item":undefined};
}},"textfield":{style:function(states){var backgroundColor;
var focused=!!states.focused;
var invalid=!!states.invalid;
var disabled=!!states.disabled;

if(invalid&&!disabled){backgroundColor="background-invalid";
}else if(focused&&!invalid&&!disabled){backgroundColor="background-focused";
}else if(disabled){backgroundColor="background-disabled";
}else{backgroundColor="background-field";
}var textColor;

if(states.disabled){textColor="text-disabled";
}else if(states.showingPlaceholder){textColor="text-placeholder";
}else{textColor=undefined;
}return {decorator:states.focused?"focused-inset":"inset",padding:[2,3],textColor:textColor,backgroundColor:backgroundColor};
}},"textarea":"textfield","checkbox":{alias:"atom",style:function(states){var icon;

if(states.checked&&states.focused){icon="checkbox-checked-focused";
}else if(states.checked&&states.disabled){icon="checkbox-checked-disabled";
}else if(states.checked&&states.pressed){icon="checkbox-checked-pressed";
}else if(states.checked&&states.hovered){icon="checkbox-checked-hovered";
}else if(states.checked){icon="checkbox-checked";
}else if(states.focused){icon="checkbox-focused";
}else if(states.pressed){icon="checkbox-pressed";
}else if(states.hovered){icon="checkbox-hovered";
}else{icon="checkbox";
}var invalid=states.invalid&&!states.disabled?"-invalid":"";
return {icon:"decoration/form/"+icon+invalid+".png",gap:6};
}},"radiobutton":{alias:"checkbox",include:"checkbox",style:function(states){var icon;

if(states.checked&&states.focused){icon="radiobutton-checked-focused";
}else if(states.checked&&states.disabled){icon="radiobutton-checked-disabled";
}else if(states.checked&&states.pressed){icon="radiobutton-checked-pressed";
}else if(states.checked&&states.hovered){icon="radiobutton-checked-hovered";
}else if(states.checked){icon="radiobutton-checked";
}else if(states.focused){icon="radiobutton-focused";
}else if(states.pressed){icon="radiobutton-pressed";
}else if(states.hovered){icon="radiobutton-hovered";
}else{icon="radiobutton";
}var invalid=states.invalid&&!states.disabled?"-invalid":"";
return {icon:"decoration/form/"+icon+invalid+".png",shadow:undefined};
}},"spinner":{style:function(states){return {decorator:states.focused?"focused-inset":"inset",textColor:states.disabled?"text-disabled":undefined};
}},"spinner/textfield":{include:"textfield",style:function(states){return {decorator:undefined,padding:[2,3]};
}},"spinner/upbutton":{alias:"button",include:"button",style:function(states){return {icon:"decoration/arrows/up-small.gif",padding:states.pressed?[2,2,0,4]:[1,3,1,3],backgroundColor:states.hovered?"button-hovered":"button"};
}},"spinner/downbutton":{alias:"button",include:"button",style:function(states){return {icon:"decoration/arrows/down-small.gif",padding:states.pressed?[2,2,0,4]:[1,3,1,3],backgroundColor:states.hovered?"button-hovered":"button"};
}},"datefield":"combobox","datefield/button":{alias:"combobox/button",include:"combobox/button",style:function(states){return {icon:"icon/16/apps/office-calendar.png",padding:[0,3],backgroundColor:undefined,decorator:undefined};
}},"datefield/list":{alias:"datechooser",include:"datechooser",style:function(states){return {decorator:states.focused?"focused-inset":"inset"};
}},"groupbox":{style:function(states){return {backgroundColor:"background"};
}},"groupbox/legend":{alias:"atom",style:function(states){return {backgroundColor:"background",textColor:states.invalid?"invalid":undefined,paddingRight:4,paddingLeft:4,marginRight:10,marginLeft:10};
}},"groupbox/frame":{style:function(states){return {padding:[12,9],decorator:"groove"};
}},"check-groupbox":"groupbox","check-groupbox/legend":{alias:"checkbox",include:"checkbox",style:function(states){return {backgroundColor:"background",textColor:states.invalid?"invalid":undefined,paddingRight:3,paddingLeft:3,marginRight:10,marginLeft:10};
}},"radio-groupbox":"groupbox","radio-groupbox/legend":{alias:"radiobutton",include:"radiobutton",style:function(states){return {backgroundColor:"background",textColor:states.invalid?"invalid":undefined,paddingRight:3,paddingLeft:3,marginRight:10,marginLeft:10};
}},"toolbar":{style:function(states){return {backgroundColor:"background"};
}},"toolbar/part":{},"toolbar/part/container":{},"toolbar/part/handle":{style:function(states){return {decorator:"toolbar-part-handle",backgroundColor:"background",padding:[0,1],margin:[3,2],allowGrowY:true};
}},"toolbar-separator":{style:function(states){return {margin:[3,2],decorator:"toolbar-separator"};
}},"toolbar-button":{alias:"atom",style:function(states){if(states.pressed||states.checked||states.abandoned){var border="inset-thin";
var padding=[3,2,1,4];
}else if(states.hovered){var border="outset-thin";
var padding=[2,3];
}else{var border=undefined;
var padding=[3,4];
}return {cursor:"default",decorator:border,padding:padding,backgroundColor:states.abandoned?"button-abandoned":states.checked?"background-light":"button"};
}},"toolbar-menubutton":{alias:"toolbar-button",include:"toolbar-button",style:function(states){return {showArrow:true};
}},"toolbar-menubutton/arrow":{alias:"image",include:"image",style:function(states){return {source:"decoration/arrows/down-small.gif"};
}},"toolbar-splitbutton":{},"toolbar-splitbutton/button":"toolbar-button","toolbar-splitbutton/arrow":{alias:"toolbar-button",include:"toolbar-button",style:function(states){return {icon:"decoration/arrows/down.gif"};
}},"slidebar":{},"slidebar/scrollpane":{},"slidebar/content":{},"slidebar/button-forward":{alias:"button",include:"button",style:function(states){return {icon:states.vertical?"decoration/arrows/down.gif":"decoration/arrows/next.gif"};
}},"slidebar/button-backward":{alias:"button",include:"button",style:function(states){return {icon:states.vertical?"decoration/arrows/up.gif":"decoration/arrows/left.gif"};
}},"tabview":{},"tabview/bar":{alias:"slidebar",style:function(states){var marginTop=0,marginRight=0,marginBottom=0,marginLeft=0;

if(states.barTop){marginBottom=-2;
}else if(states.barBottom){marginTop=-2;
}else if(states.barRight){marginLeft=-2;
}else{marginRight=-2;
}return {marginBottom:marginBottom,marginTop:marginTop,marginLeft:marginLeft,marginRight:marginRight};
}},"tabview/bar/button-forward":{include:"slidebar/button-forward",alias:"slidebar/button-forward",style:function(states){if(states.barTop||states.barBottom){return {marginTop:2,marginBottom:2};
}else{return {marginLeft:2,marginRight:2};
}}},"tabview/bar/button-backward":{include:"slidebar/button-backward",alias:"slidebar/button-backward",style:function(states){if(states.barTop||states.barBottom){return {marginTop:2,marginBottom:2};
}else{return {marginLeft:2,marginRight:2};
}}},"tabview/pane":{style:function(states){return {backgroundColor:"background",decorator:"outset",padding:10};
}},"tabview-page":"widget","tabview-page/button":{style:function(states){var decorator;
var marginTop=0,marginRight=0,marginBottom=0,marginLeft=0;

if(states.barTop||states.barBottom){var paddingTop=2,paddingBottom=2,paddingLeft=6,paddingRight=6;
}else{var paddingTop=6,paddingBottom=6,paddingLeft=6,paddingRight=6;
}
if(states.barTop){decorator="tabview-page-button-top";
}else if(states.barRight){decorator="tabview-page-button-right";
}else if(states.barBottom){decorator="tabview-page-button-bottom";
}else{decorator="tabview-page-button-left";
}
if(states.checked){if(states.barTop||states.barBottom){paddingLeft+=2;
paddingRight+=2;
}else{paddingTop+=2;
paddingBottom+=2;
}}else{if(states.barTop||states.barBottom){marginBottom+=2;
marginTop+=2;
}else if(states.barLeft||states.barRight){marginRight+=2;
marginLeft+=2;
}}
if(states.checked){if(!states.firstTab){if(states.barTop||states.barBottom){marginLeft=-4;
}else{marginTop=-4;
}}
if(!states.lastTab){if(states.barTop||states.barBottom){marginRight=-4;
}else{marginBottom=-4;
}}}return {zIndex:states.checked?10:5,decorator:decorator,backgroundColor:"background",padding:[paddingTop,paddingRight,paddingBottom,paddingLeft],margin:[marginTop,marginRight,marginBottom,marginLeft]};
}},"tabview-page/button/label":{alias:"label",style:function(states){return {padding:[0,1,0,1],margin:states.focused?0:1,decorator:states.focused?"keyboard-focus":undefined};
}},"tabview-page/button/icon":"image","tabview-page/button/close-button":{alias:"atom",style:function(states){return {icon:"qx/icon/Oxygen/16/actions/window-close.png"};
}},"scrollbar":{},"scrollbar/slider":{alias:"slider",style:function(states){return {backgroundColor:"background-light"};
}},"scrollbar/slider/knob":{include:"button-frame",style:function(states){return {height:14,width:14,minHeight:states.horizontal?undefined:9,minWidth:states.horizontal?9:undefined};
}},"scrollbar/button":{alias:"button",include:"button",style:function(states){var padding;

if(states.up||states.down){if(states.pressed||states.abandoned||states.checked){padding=[5,2,3,4];
}else{padding=[4,3];
}}else{if(states.pressed||states.abandoned||states.checked){padding=[4,3,2,5];
}else{padding=[3,4];
}}var icon="decoration/arrows/";

if(states.left){icon+="left.gif";
}else if(states.right){icon+="right.gif";
}else if(states.up){icon+="up.gif";
}else{icon+="down.gif";
}return {padding:padding,icon:icon};
}},"scrollbar/button-begin":"scrollbar/button","scrollbar/button-end":"scrollbar/button","slider":{style:function(states){var backgroundColor;

if(states.disabled){backgroundColor="background-disabled";
}else if(states.invalid){backgroundColor="background-invalid";
}else if(states.focused){backgroundColor="background-light";
}else{backgroundColor="background-field";
}return {backgroundColor:backgroundColor,decorator:states.focused?"focused-inset":"inset"};
}},"slider/knob":{include:"button-frame",style:function(states){return {width:14,height:14,decorator:"outset"};
}},"tree-folder/open":{style:function(states){return {source:states.opened?"decoration/tree/minus.gif":"decoration/tree/plus.gif"};
}},"tree-folder":{style:function(states){return {padding:[2,3,2,0],icon:states.opened?"icon/16/places/folder-open.png":"icon/16/places/folder.png"};
}},"tree-folder/icon":{style:function(states){return {padding:[0,4,0,0]};
}},"tree-folder/label":{style:function(states){return {padding:[1,2],backgroundColor:states.selected?"background-selected":undefined,textColor:states.selected?"text-selected":undefined};
}},"tree-file":{include:"tree-folder",alias:"tree-folder",style:function(states){return {icon:"icon/16/mimetypes/text-plain.png"};
}},"tree":{include:"list",alias:"list",style:function(states){return {contentPadding:[4,4,4,4]};
}},"treevirtual":{style:function(states){return {decorator:"main"};
}},"treevirtual-folder":{style:function(states){return {icon:(states.opened?"icon/16/places/folder-open.png":"icon/16/places/folder.png")};
}},"treevirtual-file":{include:"treevirtual-folder",alias:"treevirtual-folder",style:function(states){return {icon:"icon/16/mimetypes/text-plain.png"};
}},"treevirtual-line":{style:function(states){return {icon:"decoration/treevirtual/line.gif"};
}},"treevirtual-contract":{style:function(states){return {icon:"decoration/tree/minus.gif"};
}},"treevirtual-expand":{style:function(states){return {icon:"decoration/tree/plus.gif"};
}},"treevirtual-only-contract":{style:function(states){return {icon:"decoration/treevirtual/only_minus.gif"};
}},"treevirtual-only-expand":{style:function(states){return {icon:"decoration/treevirtual/only_plus.gif"};
}},"treevirtual-start-contract":{style:function(states){return {icon:"decoration/treevirtual/start_minus.gif"};
}},"treevirtual-start-expand":{style:function(states){return {icon:"decoration/treevirtual/start_plus.gif"};
}},"treevirtual-end-contract":{style:function(states){return {icon:"decoration/treevirtual/end_minus.gif"};
}},"treevirtual-end-expand":{style:function(states){return {icon:"decoration/treevirtual/end_plus.gif"};
}},"treevirtual-cross-contract":{style:function(states){return {icon:"decoration/treevirtual/cross_minus.gif"};
}},"treevirtual-cross-expand":{style:function(states){return {icon:"decoration/treevirtual/cross_plus.gif"};
}},"treevirtual-end":{style:function(states){return {icon:"decoration/treevirtual/end.gif"};
}},"treevirtual-cross":{style:function(states){return {icon:"decoration/treevirtual/cross.gif"};
}},"window":{style:function(states){return {contentPadding:[10,10,10,10],backgroundColor:"background",decorator:states.maximized?undefined:"outset",shadow:states.maximized?undefined:"shadow-small"};
}},"window/pane":{},"window/captionbar":{style:function(states){return {padding:1,backgroundColor:states.active?"window-active-caption":"window-inactive-caption",textColor:states.active?"window-active-caption-text":"window-inactive-caption-text"};
}},"window/icon":{style:function(states){return {marginRight:4};
}},"window/title":{style:function(states){return {cursor:"default",font:"bold",marginRight:20,alignY:"middle"};
}},"window/minimize-button":{include:"button",alias:"button",style:function(states){return {icon:"decoration/window/minimize.gif",padding:states.pressed||states.abandoned?[2,1,0,3]:[1,2]};
}},"window/restore-button":{include:"button",alias:"button",style:function(states){return {icon:"decoration/window/restore.gif",padding:states.pressed||states.abandoned?[2,1,0,3]:[1,2]};
}},"window/maximize-button":{include:"button",alias:"button",style:function(states){return {icon:"decoration/window/maximize.gif",padding:states.pressed||states.abandoned?[2,1,0,3]:[1,2]};
}},"window/close-button":{include:"button",alias:"button",style:function(states){return {marginLeft:2,icon:"decoration/window/close.gif",padding:states.pressed||states.abandoned?[2,1,0,3]:[1,2]};
}},"window/statusbar":{style:function(states){return {decorator:"inset-thin",padding:[2,6]};
}},"window/statusbar-text":"label","resizer":{style:function(states){return {decorator:"outset"};
}},"splitpane":{},"splitpane/splitter":{style:function(states){return {backgroundColor:"background"};
}},"splitpane/splitter/knob":{style:function(states){return {source:states.horizontal?"decoration/splitpane/knob-horizontal.png":"decoration/splitpane/knob-vertical.png",padding:2};
}},"splitpane/slider":{style:function(states){return {backgroundColor:"border-dark",opacity:0.3};
}},"selectbox":{include:"button-frame",style:function(states){var background="button";

if(states.invalid&&!states.disabled){background="background-invalid";
}else if(states.abandoned){background="button-abandoned";
}else if(!states.abandoned&&states.hovered){background="button-hovered";
}else if(!states.abandoned&&!states.hovered&&states.checked){background="button-checked";
}return {backgroundColor:background};
}},"selectbox/atom":"atom","selectbox/popup":"popup","selectbox/list":"list","selectbox/arrow":{style:function(states){return {source:"decoration/arrows/down.gif",paddingRight:4,paddingLeft:5};
}},"datechooser":{style:function(states){return {decorator:"outset"};
}},"datechooser/navigation-bar":{style:function(states){return {backgroundColor:"date-chooser",textColor:states.disabled?"text-disabled":states.invalid?"invalid":undefined,padding:[2,10]};
}},"datechooser/last-year-button-tooltip":"tooltip","datechooser/last-month-button-tooltip":"tooltip","datechooser/next-year-button-tooltip":"tooltip","datechooser/next-month-button-tooltip":"tooltip","datechooser/last-year-button":"datechooser/button","datechooser/last-month-button":"datechooser/button","datechooser/next-year-button":"datechooser/button","datechooser/next-month-button":"datechooser/button","datechooser/button/icon":{},"datechooser/button":{style:function(states){var result={width:17,show:"icon"};

if(states.lastYear){result.icon="decoration/arrows/rewind.gif";
}else if(states.lastMonth){result.icon="decoration/arrows/left.gif";
}else if(states.nextYear){result.icon="decoration/arrows/forward.gif";
}else if(states.nextMonth){result.icon="decoration/arrows/right.gif";
}
if(states.pressed||states.checked||states.abandoned){result.decorator="inset-thin";
}else if(states.hovered){result.decorator="outset-thin";
}else{result.decorator=undefined;
}
if(states.pressed||states.checked||states.abandoned){result.padding=[2,0,0,2];
}else if(states.hovered){result.padding=1;
}else{result.padding=2;
}return result;
}},"datechooser/month-year-label":{style:function(states){return {font:"bold",textAlign:"center"};
}},"datechooser/date-pane":{style:function(states){return {decorator:"datechooser-date-pane",backgroundColor:"date-chooser"};
}},"datechooser/weekday":{style:function(states){return {decorator:"datechooser-weekday",font:"bold",textAlign:"center",textColor:states.disabled?"text-disabled":states.weekend?"date-chooser-title":"date-chooser",backgroundColor:states.weekend?"date-chooser":"date-chooser-title"};
}},"datechooser/day":{style:function(states){return {textAlign:"center",decorator:states.today?"main":undefined,textColor:states.disabled?"text-disabled":states.selected?"text-selected":states.otherMonth?"text-disabled":undefined,backgroundColor:states.disabled?undefined:states.selected?"date-chooser-selected":undefined,padding:[2,4]};
}},"datechooser/week":{style:function(states){return {textAlign:"center",textColor:"date-chooser-title",padding:[2,4],decorator:states.header?"datechooser-week-header":"datechooser-week"};
}},"combobox":{style:function(states){var backgroundColor;

if(states.disabled){backgroundColor="background-disabled";
}else if(states.invalid){backgroundColor="background-invalid";
}else if(states.focused){backgroundColor="background-light";
}else{backgroundColor="background-field";
}return {decorator:states.focused?"focused-inset":"inset",textColor:states.disabled?"text-disabled":undefined,backgroundColor:backgroundColor};
}},"combobox/button":{alias:"button",include:"button",style:function(states){return {icon:"decoration/arrows/down.gif",backgroundColor:states.hovered?"button-hovered":"button"};
}},"combobox/popup":"popup","combobox/list":"list","combobox/textfield":{include:"textfield",style:function(states){return {decorator:undefined,padding:[2,3],backgroundColor:undefined};
}},"menu":{style:function(states){var result={backgroundColor:"background",shadow:"shadow-small",decorator:"outset",spacingX:6,spacingY:1,iconColumnWidth:16,arrowColumnWidth:4,padding:1,placementModeY:states.submenu||states.contextmenu?"best-fit":"keep-align"};

if(states.submenu){result.position="right-top";
result.offset=[-2,-3];
}
if(states.contextmenu){result.offset=4;
}return result;
}},"menu/slidebar":"menu-slidebar","menu-slidebar":"widget","menu-slidebar-button":{style:function(states){return {backgroundColor:states.hovered?"background-selected":undefined,padding:6,center:true};
}},"menu-slidebar/button-backward":{include:"menu-slidebar-button",style:function(states){return {icon:states.hovered?"decoration/arrows/up-invert.gif":"decoration/arrows/up.gif"};
}},"menu-slidebar/button-forward":{include:"menu-slidebar-button",style:function(states){return {icon:states.hovered?"decoration/arrows/down-invert.gif":"decoration/arrows/down.gif"};
}},"menu-separator":{style:function(states){return {height:0,decorator:"menu-separator",marginTop:4,marginBottom:4,marginLeft:2,marginRight:2};
}},"menu-button":{alias:"atom",style:function(states){return {backgroundColor:states.selected?"background-selected":undefined,textColor:states.selected?"text-selected":undefined,padding:[2,6]};
}},"menu-button/icon":{include:"image",style:function(states){return {alignY:"middle"};
}},"menu-button/label":{include:"label",style:function(states){return {alignY:"middle",padding:1};
}},"menu-button/shortcut":{include:"label",style:function(states){return {alignY:"middle",marginLeft:14,padding:1};
}},"menu-button/arrow":{include:"image",style:function(states){return {source:states.selected?"decoration/arrows/right-invert.gif":"decoration/arrows/right.gif",alignY:"middle"};
}},"menu-checkbox":{alias:"menu-button",include:"menu-button",style:function(states){return {icon:!states.checked?undefined:states.selected?"decoration/menu/checkbox-invert.gif":"decoration/menu/checkbox.gif"};
}},"menu-radiobutton":{alias:"menu-button",include:"menu-button",style:function(states){return {icon:!states.checked?undefined:states.selected?"decoration/menu/radiobutton-invert.gif":"decoration/menu/radiobutton.gif"};
}},"menubar":{style:function(states){return {backgroundColor:"background",decorator:"outset"};
}},"menubar-button":{alias:"atom",style:function(states){return {padding:[2,6],backgroundColor:states.pressed||states.hovered?"background-selected":undefined,textColor:states.pressed||states.hovered?"text-selected":undefined};
}},"colorselector":"widget","colorselector/control-bar":"widget","colorselector/visual-pane":"groupbox","colorselector/control-pane":"widget","colorselector/preset-grid":"widget","colorselector/colorbucket":{style:function(states){return {decorator:"inset-thin",width:16,height:16};
}},"colorselector/preset-field-set":"groupbox","colorselector/input-field-set":"groupbox","colorselector/preview-field-set":"groupbox","colorselector/hex-field-composite":"widget","colorselector/hex-field":"textfield","colorselector/rgb-spinner-composite":"widget","colorselector/rgb-spinner-red":"spinner","colorselector/rgb-spinner-green":"spinner","colorselector/rgb-spinner-blue":"spinner","colorselector/hsb-spinner-composite":"widget","colorselector/hsb-spinner-hue":"spinner","colorselector/hsb-spinner-saturation":"spinner","colorselector/hsb-spinner-brightness":"spinner","colorselector/preview-content-old":{style:function(states){return {decorator:"inset-thin",width:50,height:10};
}},"colorselector/preview-content-new":{style:function(states){return {decorator:"inset-thin",backgroundColor:"white",width:50,height:10};
}},"colorselector/hue-saturation-field":{style:function(states){return {decorator:"inset-thin",margin:5};
}},"colorselector/brightness-field":{style:function(states){return {decorator:"inset-thin",margin:[5,7]};
}},"colorselector/hue-saturation-pane":"widget","colorselector/hue-saturation-handle":"widget","colorselector/brightness-pane":"widget","colorselector/brightness-handle":"widget","table":"widget","table/statusbar":{style:function(states){return {decorator:"table-statusbar",paddingLeft:2,paddingRight:2};
}},"table/column-button":{alias:"button",style:function(states){var border,padding;

if(states.pressed||states.checked||states.abandoned){border="inset-thin";
padding=[3,2,1,4];
}else if(states.hovered){border="outset-thin";
padding=[2,3];
}else{border=undefined;
padding=[3,4];
}return {decorator:border,padding:padding,backgroundColor:states.abandoned?"button-abandoned":"button",icon:"decoration/table/select-column-order.png"};
}},"table-column-reset-button":{extend:"menu-button",alias:"menu-button",style:function(){return {icon:"icon/16/actions/view-refresh.png"};
}},"table-scroller/scrollbar-x":"scrollbar","table-scroller/scrollbar-y":"scrollbar","table-scroller":"widget","table-scroller/header":{style:function(states){return {decorator:"table-scroller-header",backgroundColor:"table-header"};
}},"table-scroller/pane":{style:function(states){return {backgroundColor:"table-pane"};
}},"table-scroller/focus-indicator":{style:function(states){return {decorator:"table-scroller-focus-indicator"};
}},"table-scroller/resize-line":{style:function(states){return {backgroundColor:"table-header-border",width:3};
}},"table-header-cell":{alias:"atom",style:function(states){return {minWidth:13,paddingLeft:2,paddingRight:2,paddingBottom:states.hovered?0:2,decorator:states.hovered?"table-header-cell-hovered":"table-header-cell",backgroundColor:states.hovered?"table-header-cell-hover":"table-header-cell",sortIcon:states.sorted?(states.sortedAscending?"decoration/table/ascending.png":"decoration/table/descending.png"):undefined};
}},"table-header-cell/sort-icon":{style:function(states){return {alignY:"middle"};
}},"table-editor-textfield":{include:"textfield",style:function(states){return {decorator:undefined,padding:[2,2]};
}},"table-editor-selectbox":{include:"selectbox",alias:"selectbox",style:function(states){return {padding:[0,2]};
}},"table-editor-combobox":{include:"combobox",alias:"combobox",style:function(states){return {decorator:undefined};
}},"colorpopup":{alias:"popup",include:"popup",style:function(states){return {decorator:"outset",padding:5,backgroundColor:"background"};
}},"colorpopup/field":{style:function(states){return {decorator:"inset-thin",margin:2,width:14,height:14,backgroundColor:"background"};
}},"colorpopup/selector-button":"button","colorpopup/auto-button":"button","colorpopup/preview-pane":"groupbox","colorpopup/current-preview":{style:function(state){return {height:20,padding:4,marginLeft:4,decorator:"inset-thin",allowGrowX:true};
}},"colorpopup/selected-preview":{style:function(state){return {height:20,padding:4,marginRight:4,decorator:"inset-thin",allowGrowX:true};
}},"colorpopup/colorselector-okbutton":{alias:"button",include:"button",style:function(states){return {icon:"icon/16/actions/dialog-ok.png"};
}},"colorpopup/colorselector-cancelbutton":{alias:"button",include:"button",style:function(states){return {icon:"icon/16/actions/dialog-cancel.png"};
}},"virtual-list":"list","virtual-list/row-layer":"row-layer","row-layer":"widget","column-layer":"widget","cell":{style:function(states){return {backgroundColor:states.selected?"table-row-background-selected":"table-row-background-even",textColor:states.selected?"text-selected":"text",padding:[3,6]};
}},"cell-string":"cell","cell-number":{include:"cell",style:function(states){return {textAlign:"right"};
}},"cell-image":"cell","cell-boolean":"cell","cell-atom":"cell","cell-date":"cell","cell-html":"cell","htmlarea":{"include":"widget",style:function(states){return {backgroundColor:"white"};
}}}});
qx.Theme.define("qx.theme.icon.Oxygen",{title:"Oxygen",aliases:{"icon":"qx/icon/Oxygen"},icons:{}});
qx.Theme.define("qx.theme.Classic",{title:"Classic Windows",meta:{color:qx.theme.classic.Color,decoration:qx.theme.classic.Decoration,font:qx.theme.classic.Font,appearance:qx.theme.classic.Appearance,icon:qx.theme.icon.Oxygen}});
qx.Class.define("qx.ui.treevirtual.SimpleTreeDataCellRenderer",{extend:qx.ui.table.cellrenderer.Abstract,construct:function(){var STDCR=qx.ui.treevirtual.SimpleTreeDataCellRenderer;
if(STDCR.__bVirgin){STDCR.__preloadImages();
STDCR.__bVirgin=false;
}this.base(arguments);
this.__am=qx.util.AliasManager.getInstance();
this.__rm=qx.util.ResourceManager.getInstance();
this.__tm=qx.theme.manager.Appearance.getInstance();
this.BLANK=this.__rm.toUri(this.__am.resolve("static/blank.gif"));
},statics:{__icon:{},__bVirgin:true,__preloadImages:function(){qx.theme.manager.Meta.getInstance().initialize();
var STDCR=qx.ui.treevirtual.SimpleTreeDataCellRenderer;
var ImageLoader=qx.io.ImageLoader;
var am=qx.util.AliasManager.getInstance();
var rm=qx.util.ResourceManager.getInstance();
var tm=qx.theme.manager.Appearance.getInstance();
var loadImage=function(f){ImageLoader.load(rm.toUri(am.resolve(f)));
};
STDCR.__icon.line=tm.styleFrom("treevirtual-line");
loadImage(STDCR.__icon.line.icon);
STDCR.__icon.contract=tm.styleFrom("treevirtual-contract");
loadImage(STDCR.__icon.contract.icon);
STDCR.__icon.expand=tm.styleFrom("treevirtual-expand");
loadImage(STDCR.__icon.expand.icon);
STDCR.__icon.onlyContract=tm.styleFrom("treevirtual-only-contract");
loadImage(STDCR.__icon.onlyContract.icon);
STDCR.__icon.onlyExpand=tm.styleFrom("treevirtual-only-expand");
loadImage(STDCR.__icon.onlyExpand.icon);
STDCR.__icon.startContract=tm.styleFrom("treevirtual-start-contract");
loadImage(STDCR.__icon.startContract.icon);
STDCR.__icon.startExpand=tm.styleFrom("treevirtual-start-expand");
loadImage(STDCR.__icon.startExpand.icon);
STDCR.__icon.endContract=tm.styleFrom("treevirtual-end-contract");
loadImage(STDCR.__icon.endContract.icon);
STDCR.__icon.endExpand=tm.styleFrom("treevirtual-end-expand");
loadImage(STDCR.__icon.endExpand.icon);
STDCR.__icon.crossContract=tm.styleFrom("treevirtual-cross-contract");
loadImage(STDCR.__icon.crossContract.icon);
STDCR.__icon.crossExpand=tm.styleFrom("treevirtual-cross-expand");
loadImage(STDCR.__icon.crossExpand.icon);
STDCR.__icon.end=tm.styleFrom("treevirtual-end");
loadImage(STDCR.__icon.end.icon);
STDCR.__icon.cross=tm.styleFrom("treevirtual-cross");
loadImage(STDCR.__icon.cross.icon);
}},properties:{useTreeLines:{check:"Boolean",init:true},excludeFirstLevelTreeLines:{check:"Boolean",init:false},alwaysShowOpenCloseSymbol:{check:"Boolean",init:false}},members:{__am:null,__tm:null,__rm:null,_getCellStyle:function(cellInfo){var node=cellInfo.value;
var html=this.base(arguments,cellInfo)+(node.cellStyle?node.cellStyle+";":"");
return html;
},_getContentHtml:function(cellInfo){var html="";
var pos=0;
var extra=this._addExtraContentBeforeIndentation(cellInfo,pos);
html+=extra.html;
pos=extra.pos;
var indentation=this._addIndentation(cellInfo,pos);
html+=indentation.html;
pos=indentation.pos;
extra=this._addExtraContentBeforeIcon(cellInfo,pos);
html+=extra.html;
pos=extra.pos;
var icon=this._addIcon(cellInfo,pos);
html+=icon.html;
pos=icon.pos;
extra=this._addExtraContentBeforeLabel(cellInfo,pos);
html+=extra.html;
pos=extra.pos;
html+=this._addLabel(cellInfo,pos);
return html;
},_addImage:function(imageInfo){var html=[];
var source=this.__rm.toUri(this.__am.resolve(imageInfo.url));
if(imageInfo.position){var pos=imageInfo.position;
html.push('<div style="position:absolute;');

if(!qx.core.Variant.isSet("qx.client","mshtml")){html.push(qx.bom.element.BoxSizing.compile("content-box"));
}
if(pos.top!==undefined){html.push('top:'+pos.top+'px;');
}
if(pos.right!==undefined){html.push('right:'+pos.right+'px;');
}
if(pos.bottom!==undefined){html.push('bottom:'+pos.bottom+'px;');
}
if(pos.left!==undefined){html.push('left:'+pos.left+'px;');
}
if(pos.width!==undefined){html.push('width:'+pos.width+'px;');
}
if(pos.height!==undefined){html.push('height:'+pos.height+'px;');
}html.push('">');
}html.push('<div style="');
html.push('background-image:url('+source+');');
html.push('background-repeat:no-repeat;');

if(imageInfo.imageWidth&&imageInfo.imageHeight){html.push(';width:'+imageInfo.imageWidth+'px'+';height:'+imageInfo.imageHeight+'px');
}var tooltip=imageInfo.tooltip;

if(tooltip!=null){html.push('" title="'+tooltip);
}html.push('">&nbsp;</div>');

if(imageInfo.position){html.push('</div>');
}return html.join("");
},_addIndentation:function(cellInfo,pos){var node=cellInfo.value;
var imageData;
var html="";
var bUseTreeLines=this.getUseTreeLines();
var bExcludeFirstLevelTreeLines=this.getExcludeFirstLevelTreeLines();
var bAlwaysShowOpenCloseSymbol=this.getAlwaysShowOpenCloseSymbol();

for(var i=0;i<node.level;i++){imageData=this._getIndentSymbol(i,node,bUseTreeLines,bAlwaysShowOpenCloseSymbol,bExcludeFirstLevelTreeLines);
html+=this._addImage({url:imageData.icon,position:{top:0+(imageData.paddingTop||0),left:pos+(imageData.paddingLeft||0),width:19,height:16}});
pos+=19;
}return ({html:html,pos:pos});
},_addIcon:function(cellInfo,pos){var node=cellInfo.value;
var imageUrl=(node.bSelected?node.iconSelected:node.icon);

if(!imageUrl){if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){var o=this.__tm.styleFrom("treevirtual-file");
}else{var states={opened:node.bOpened};
var o=this.__tm.styleFrom("treevirtual-folder",states);
}imageUrl=o.icon;
}var html=this._addImage({url:imageUrl,position:{top:0,left:pos,width:19,height:16}});
return ({html:html,pos:pos+19});
},_addLabel:function(cellInfo,pos){var node=cellInfo.value;
var html='<div style="position:absolute;'+'left:'+pos+'px;'+'top:0;'+(node.labelStyle?node.labelStyle+";":"")+'">'+'<span'+(cellInfo.labelSpanStyle?'style="'+cellInfo.labelSpanStyle+';"':"")+'>'+node.label+'</span>'+'</div>';
return html;
},_addExtraContentBeforeIndentation:function(cellInfo,pos){return {html:'',pos:pos};
},_addExtraContentBeforeIcon:function(cellInfo,pos){return {html:'',pos:pos};
},_addExtraContentBeforeLabel:function(cellInfo,pos){return {html:'',pos:pos};
},_getIndentSymbol:function(column,node,bUseTreeLines,bAlwaysShowOpenCloseSymbol,bExcludeFirstLevelTreeLines){var STDCR=qx.ui.treevirtual.SimpleTreeDataCellRenderer;
if(column==0&&bExcludeFirstLevelTreeLines){bUseTreeLines=false;
}if(column<node.level-1){return (bUseTreeLines&&!node.lastChild[column]?STDCR.__icon.line:{icon:this.BLANK});
}var bLastChild=node.lastChild[node.lastChild.length-1];
if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH&&!node.bHideOpenClose){if(node.children.length>0||bAlwaysShowOpenCloseSymbol){if(!bUseTreeLines){return (node.bOpened?STDCR.__icon.contract:STDCR.__icon.expand);
}if(column==0&&node.bFirstChild){if(bLastChild){return (node.bOpened?STDCR.__icon.onlyContract:STDCR.__icon.onlyExpand);
}else{return (node.bOpened?STDCR.__icon.startContract:STDCR.__icon.startExpand);
}}if(bLastChild){return (node.bOpened?STDCR.__icon.endContract:STDCR.__icon.endExpand);
}return (node.bOpened?STDCR.__icon.crossContract:STDCR.__icon.crossExpand);
}}if(bUseTreeLines){if(node.parentNodeId==0){if(bLastChild&&node.bFirstChild){return {icon:this.BLANK};
}if(bLastChild){return STDCR.__icon.end;
}if(node.bFirstChild){return (node.bOpened?STDCR.__icon.startContract:STDCR.__icon.startExpand);
}}return (bLastChild?STDCR.__icon.end:STDCR.__icon.cross);
}return {icon:this.BLANK};
}},destruct:function(){this.__am=this.__rm=this.__tm=null;
}});
qx.Class.define("qx.ui.treevirtual.SimpleTreeDataModel",{extend:qx.ui.table.model.Abstract,construct:function(){this.base(arguments);
this._rowArr=[];
this._nodeArr=[];
this._nodeRowMap=[];
this._treeColumn=0;
this._selections={};
this._nodeArr.push(this.self(arguments).__getEmptyTree());
this.__editableColArr=null;
},statics:{__getEmptyTree:function(){return {label:"<virtual root>",nodeId:0,bOpened:true,children:[]};
},Type:{LEAF:1,BRANCH:2}},members:{__tree:null,__editableColArr:null,_rowArr:null,_nodeArr:null,_nodeRowMap:null,_treeColumn:null,_selections:null,setTree:function(tree){this.__tree=tree;
},getTree:function(){return this.__tree;
},setEditable:function(editable){this.__editableColArr=[];

for(var col=0;col<this.getColumnCount();col++){this.__editableColArr[col]=editable;
}this.fireEvent(qx.ui.table.ITableModel.EVENT_TYPE_META_DATA_CHANGED);
},setColumnEditable:function(columnIndex,editable){if(editable!=this.isColumnEditable(columnIndex)){if(this.__editableColArr==null){this.__editableColArr=[];
}this.__editableColArr[columnIndex]=editable;
this.fireEvent(qx.ui.table.ITableModel.EVENT_TYPE_META_DATA_CHANGED);
}},isColumnEditable:function(columnIndex){return (this.__editableColArr?this.__editableColArr[columnIndex]==true:false);
},isColumnSortable:function(columnIndex){return false;
},sortByColumn:function(columnIndex,ascending){throw new Error("Trees can not be sorted by column");
},getSortColumnIndex:function(){return -1;
},setTreeColumn:function(columnIndex){this._treeColumn=columnIndex;
},getTreeColumn:function(){return this._treeColumn;
},getRowCount:function(){return this._rowArr.length;
},getRowData:function(rowIndex){return this._rowArr[rowIndex];
},getValue:function(columnIndex,rowIndex){if(rowIndex<0||rowIndex>=this._rowArr.length){throw new Error("this._rowArr row "+"("+rowIndex+") out of bounds: "+this._rowArr+" (0.."+(this._rowArr.length-1)+")");
}
if(columnIndex<0||columnIndex>=this._rowArr[rowIndex].length){throw new Error("this._rowArr column "+"("+columnIndex+") out of bounds: "+this._rowArr[rowIndex]+" (0.."+(this._rowArr[rowIndex].length-1)+")");
}return this._rowArr[rowIndex][columnIndex];
},setValue:function(columnIndex,rowIndex,value){if(columnIndex==this._treeColumn){return ;
}var node=this.getNodeFromRow(rowIndex);

if(node.columnData[columnIndex]!=value){node.columnData[columnIndex]=value;
this.setData();
if(this.hasListener("dataChanged")){var data={firstRow:node.nodeId,lastRow:node.nodeId,firstColumn:columnIndex,lastColumn:columnIndex};
this.fireDataEvent("dataChanged",data);
}}},_addNode:function(parentNodeId,label,bOpened,bHideOpenCloseButton,type,icon,iconSelected){var parentNode;
if(parentNodeId){parentNode=this._nodeArr[parentNodeId];

if(!parentNode){throw new Error("Request to add a child to a non-existent parent");
}if(parentNode.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){throw new Error("Sorry, a LEAF may not have children.");
}}else{parentNode=this._nodeArr[0];
parentNodeId=0;
}if(type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){bOpened=false;
bHideOpenCloseButton=false;
}var nodeId=this._nodeArr.length;
var node={type:type,nodeId:nodeId,parentNodeId:parentNodeId,label:label,bSelected:false,bOpened:bOpened,bHideOpenClose:bHideOpenCloseButton,icon:icon,iconSelected:iconSelected,children:[],columnData:[]};
this._nodeArr.push(node);
parentNode.children.push(nodeId);
return nodeId;
},addBranch:function(parentNodeId,label,bOpened,bHideOpenCloseButton,icon,iconSelected){return this._addNode(parentNodeId,label,bOpened,bHideOpenCloseButton,qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH,icon,iconSelected);
},addLeaf:function(parentNodeId,label,icon,iconSelected){return this._addNode(parentNodeId,label,false,false,qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF,icon,iconSelected);
},prune:function(nodeReference,bSelfAlso){var node;
var nodeId;

if(typeof (nodeReference)=="object"){node=nodeReference;
nodeId=node.nodeId;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
}else{throw new Error("Expected node object or node id");
}for(var i=this._nodeArr[nodeId].children.length-1;i>=0;i--){this.prune(this._nodeArr[nodeId].children[i],true);
}if(bSelfAlso&&nodeId!=0){node=this._nodeArr[nodeId];
qx.lang.Array.remove(this._nodeArr[node.parentNodeId].children,nodeId);
if(this._selections[nodeId]){delete this._selections[nodeId];
}this._nodeArr[nodeId]=null;
}},move:function(moveNodeReference,parentNodeReference){var moveNode;
var moveNodeId;
var parentNode;
var parentNodeId;
parentNodeReference=parentNodeReference||0;

if(typeof (moveNodeReference)=="object"){moveNode=moveNodeReference;
moveNodeId=moveNode.nodeId;
}else if(typeof (moveNodeReference)=="number"){moveNodeId=moveNodeReference;
moveNode=this._nodeArr[moveNodeId];
}else{throw new Error("Expected move node object or node id");
}
if(typeof (parentNodeReference)=="object"){parentNode=parentNodeReference;
parentNodeId=parentNode.nodeId;
}else if(typeof (parentNodeReference)=="number"){parentNodeId=parentNodeReference;
parentNode=this._nodeArr[parentNodeId];
}else{throw new Error("Expected parent node object or node id");
}if(parentNode.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){throw new Error("Sorry, a LEAF may not have children.");
}var oldParent=this._nodeArr[moveNode.parentNodeId];
qx.lang.Array.remove(oldParent.children,moveNodeId);
parentNode.children.push(moveNodeId);
this._nodeArr[moveNodeId].parentNodeId=parentNodeId;
},setData:function(nodeArr){var _this=this;
function render(){var inorder=function(nodeId,level){var child=null;
var childNodeId;
var numChildren=_this._nodeArr[nodeId].children.length;

for(var i=0;i<numChildren;i++){childNodeId=_this._nodeArr[nodeId].children[i];
child=_this._nodeArr[childNodeId];
if(child==null){continue;
}child.level=level;
child.bFirstChild=(i==0);
child.lastChild=[i==numChildren-1];
var parent=_this._nodeArr[child.parentNodeId];
while(parent.nodeId){var bLast=parent.lastChild[parent.lastChild.length-1];
child.lastChild.unshift(bLast);
parent=_this._nodeArr[parent.parentNodeId];
}if(!child.columnData){child.columnData=[];
}
if(child.columnData.length<_this.getColumnCount()){child.columnData[_this.getColumnCount()-1]=null;
}var rowData=[];
if(child.columnData){for(var j=0;j<child.columnData.length;j++){if(j==_this._treeColumn){rowData.push(child);
}else{rowData.push(child.columnData[j]);
}}}else{rowData.push(child);
}if(child.bSelected){rowData.selected=true;
}_this._nodeRowMap[child.nodeId]=_this._rowArr.length;
_this._rowArr.push(rowData);
if(child.bOpened){inorder(childNodeId,level+1);
}}};
_this._rowArr=[];
_this._nodeRowMap=[];
inorder(0,1);
if(_this.hasListener("dataChanged")){var data={firstRow:0,lastRow:_this._rowArr.length-1,firstColumn:0,lastColumn:_this.getColumnCount()-1};
_this.fireDataEvent("dataChanged",data);
}}
if(nodeArr instanceof Array){for(var i=0;i<nodeArr.length;i++){if(nodeArr[i].selected){this._selections[i]=true;
}}this._nodeArr=nodeArr;
}else if(nodeArr!==null&&nodeArr!==undefined){throw new Error("Expected array of node objects or null/undefined; "+"got "+typeof (nodeArr));
}render();
},getData:function(){return this._nodeArr;
},clearData:function(){this._clearSelections();
this.setData([this.self(arguments).__getEmptyTree()]);
},setColumnData:function(nodeId,columnIndex,data){this._nodeArr[nodeId].columnData[columnIndex]=data;
},getColumnData:function(nodeId,columnIndex){return this._nodeArr[nodeId].columnData[columnIndex];
},setState:function(nodeReference,attributes){var node;
var nodeId;

if(typeof (nodeReference)=="object"){node=nodeReference;
nodeId=node.nodeId;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
node=this._nodeArr[nodeId];
}else{throw new Error("Expected node object or node id");
}
for(var attribute in attributes){switch(attribute){case "bSelected":var nRowIndex=this.getRowFromNodeId(nodeId);
var selectionModel=this.getTree().getSelectionModel();
var TV=qx.ui.treevirtual.TreeVirtual;
var bChangeSelection=(typeof (nRowIndex)==="number"&&this.getTree().getSelectionMode()!=TV.SelectionMode.NONE);
if(attributes[attribute]){this._selections[nodeId]=true;
if(bChangeSelection&&!selectionModel.isSelectedIndex(nRowIndex)){selectionModel.setSelectionInterval(nRowIndex,nRowIndex);
}}else{delete this._selections[nodeId];
if(bChangeSelection&&selectionModel.isSelectedIndex(nRowIndex)){selectionModel.removeSelectionInterval(nRowIndex,nRowIndex);
}}break;
case "bOpened":if(attributes[attribute]==node.bOpened){break;
}var tree=this.__tree;
if(node.bOpened){tree.fireDataEvent("treeClose",node);
}else{if(node.children.length>0){tree.fireDataEvent("treeOpenWithContent",node);
}else{tree.fireDataEvent("treeOpenWhileEmpty",node);
}}if(!node.bHideOpenClose){node.bOpened=!node.bOpened;
tree.getSelectionModel()._resetSelection();
}this.setData();
break;
default:break;
}node[attribute]=attributes[attribute];
}},getNodeRowMap:function(){return this._nodeRowMap;
},getRowFromNodeId:function(nodeId){return this._nodeRowMap[nodeId];
},getNodeFromRow:function(rowIndex){return this._nodeArr[this._rowArr[rowIndex][this._treeColumn].nodeId];
},_clearSelections:function(){for(var selection in this._selections){this._nodeArr[selection].bSelected=false;
}this._selections={};
},getSelectedNodes:function(){var nodes=[];

for(var nodeId in this._selections){nodes.push(this._nodeArr[nodeId]);
}return nodes;
}},destruct:function(){this._rowArr=this._nodeArr=this._nodeRowMap=this._selections=this.__tree=null;
}});
qx.Class.define("qx.ui.table.Table",{extend:qx.ui.core.Widget,construct:function(tableModel,custom){this.base(arguments);
if(!custom){custom={};
}
if(custom.selectionManager){this.setNewSelectionManager(custom.selectionManager);
}
if(custom.selectionModel){this.setNewSelectionModel(custom.selectionModel);
}
if(custom.tableColumnModel){this.setNewTableColumnModel(custom.tableColumnModel);
}
if(custom.tablePane){this.setNewTablePane(custom.tablePane);
}
if(custom.tablePaneHeader){this.setNewTablePaneHeader(custom.tablePaneHeader);
}
if(custom.tablePaneScroller){this.setNewTablePaneScroller(custom.tablePaneScroller);
}
if(custom.tablePaneModel){this.setNewTablePaneModel(custom.tablePaneModel);
}
if(custom.columnMenu){this.setNewColumnMenu(custom.columnMenu);
}this._setLayout(new qx.ui.layout.VBox());
this.__scrollerParent=new qx.ui.container.Composite(new qx.ui.layout.HBox());
this._add(this.__scrollerParent,{flex:1});
this.setDataRowRenderer(new qx.ui.table.rowrenderer.Default(this));
this.__selectionManager=this.getNewSelectionManager()(this);
this.setSelectionModel(this.getNewSelectionModel()(this));
this.setTableModel(tableModel||this.getEmptyTableModel());
this.setMetaColumnCounts([-1]);
this.setTabIndex(1);
this.addListener("keypress",this._onKeyPress);
this.addListener("focus",this._onFocusChanged);
this.addListener("blur",this._onFocusChanged);
var spacer=new qx.ui.core.Widget().set({height:0});
this._add(spacer);
spacer.addListener("resize",this._onResize,this);
this.__focusedCol=null;
this.__focusedRow=null;
{};
this.initStatusBarVisible();
},events:{"columnVisibilityMenuCreateStart":"qx.event.type.Data","columnVisibilityMenuCreateEnd":"qx.event.type.Data","tableWidthChanged":"qx.event.type.Event","verticalScrollBarChanged":"qx.event.type.Data","cellClick":"qx.ui.table.pane.CellEvent","cellDblclick":"qx.ui.table.pane.CellEvent","cellContextmenu":"qx.ui.table.pane.CellEvent","dataEdited":"qx.event.type.Data"},statics:{__redirectEvents:{cellClick:1,cellDblclick:1,cellContextmenu:1}},properties:{appearance:{refine:true,init:"table"},focusable:{refine:true,init:true},minWidth:{refine:true,init:50},selectable:{refine:true,init:false},selectionModel:{check:"qx.ui.table.selection.Model",apply:"_applySelectionModel",event:"changeSelectionModel"},tableModel:{check:"qx.ui.table.ITableModel",apply:"_applyTableModel",event:"changeTableModel"},rowHeight:{check:"Number",init:20,apply:"_applyRowHeight",event:"changeRowHeight"},forceLineHeight:{check:"Boolean",init:true},headerCellHeight:{check:"Integer",init:16,apply:"_applyHeaderCellHeight",event:"changeHeaderCellHeight",nullable:true},statusBarVisible:{check:"Boolean",init:true,apply:"_applyStatusBarVisible"},additionalStatusBarText:{nullable:true,init:null,apply:"_applyAdditionalStatusBarText"},columnVisibilityButtonVisible:{check:"Boolean",init:true,apply:"_applyColumnVisibilityButtonVisible"},metaColumnCounts:{check:"Object",apply:"_applyMetaColumnCounts"},focusCellOnMouseMove:{check:"Boolean",init:false,apply:"_applyFocusCellOnMouseMove"},rowFocusChangeModifiesSelection:{check:"Boolean",init:true},showCellFocusIndicator:{check:"Boolean",init:true,apply:"_applyShowCellFocusIndicator"},keepFirstVisibleRowComplete:{check:"Boolean",init:true,apply:"_applyKeepFirstVisibleRowComplete"},alwaysUpdateCells:{check:"Boolean",init:false},dataRowRenderer:{check:"qx.ui.table.IRowRenderer",init:null,nullable:true,event:"changeDataRowRenderer"},modalCellEditorPreOpenFunction:{check:"Function",init:null,nullable:true},newColumnMenu:{check:"Function",init:function(){return new qx.ui.table.columnmenu.Button();
}},newSelectionManager:{check:"Function",init:function(obj){return new qx.ui.table.selection.Manager(obj);
}},newSelectionModel:{check:"Function",init:function(obj){return new qx.ui.table.selection.Model(obj);
}},newTableColumnModel:{check:"Function",init:function(table){return new qx.ui.table.columnmodel.Basic(table);
}},newTablePane:{check:"Function",init:function(obj){return new qx.ui.table.pane.Pane(obj);
}},newTablePaneHeader:{check:"Function",init:function(obj){return new qx.ui.table.pane.Header(obj);
}},newTablePaneScroller:{check:"Function",init:function(obj){return new qx.ui.table.pane.Scroller(obj);
}},newTablePaneModel:{check:"Function",init:function(columnModel){return new qx.ui.table.pane.Model(columnModel);
}}},members:{__focusedCol:null,__focusedRow:null,__scrollerParent:null,__selectionManager:null,__additionalStatusBarText:null,__lastRowCount:null,__internalChange:null,__columnMenuButtons:null,__columnModel:null,__emptyTableModel:null,_createChildControlImpl:function(id){var control;

switch(id){case "statusbar":control=new qx.ui.basic.Label();
control.set({allowGrowX:true});
this._add(control);
break;
case "column-button":control=this.getNewColumnMenu()();
control.set({focusable:false});
var menu=control.factory("menu",{table:this});
menu.addListener("appear",this._initColumnMenu,this);
break;
}return control||this.base(arguments,id);
},_applySelectionModel:function(value,old){this.__selectionManager.setSelectionModel(value);

if(old!=null){old.removeListener("changeSelection",this._onSelectionChanged,this);
}value.addListener("changeSelection",this._onSelectionChanged,this);
},_applyRowHeight:function(value,old){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].updateVerScrollBarMaximum();
}},_applyHeaderCellHeight:function(value,old){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].getHeader().setHeight(value);
}},getEmptyTableModel:function(){if(!this.__emptyTableModel){this.__emptyTableModel=new qx.ui.table.model.Simple();
this.__emptyTableModel.setColumns([]);
this.__emptyTableModel.setData([]);
}return this.__emptyTableModel;
},_applyTableModel:function(value,old){this.getTableColumnModel().init(value.getColumnCount(),this);

if(old!=null){old.removeListener("metaDataChanged",this._onTableModelMetaDataChanged,this);
old.removeListener("dataChanged",this._onTableModelDataChanged,this);
}value.addListener("metaDataChanged",this._onTableModelMetaDataChanged,this);
value.addListener("dataChanged",this._onTableModelDataChanged,this);
this._updateStatusBar();
this._updateTableData(0,value.getRowCount(),0,value.getColumnCount());
this._onTableModelMetaDataChanged();
},getTableColumnModel:function(){if(!this.__columnModel){var columnModel=this.__columnModel=this.getNewTableColumnModel()(this);
columnModel.addListener("visibilityChanged",this._onColVisibilityChanged,this);
columnModel.addListener("widthChanged",this._onColWidthChanged,this);
columnModel.addListener("orderChanged",this._onColOrderChanged,this);
var tableModel=this.getTableModel();
columnModel.init(tableModel.getColumnCount(),this);
var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var paneModel=paneScroller.getTablePaneModel();
paneModel.setTableColumnModel(columnModel);
}}return this.__columnModel;
},_applyStatusBarVisible:function(value,old){if(value){this._showChildControl("statusbar");
}else{this._excludeChildControl("statusbar");
}
if(value){this._updateStatusBar();
}},_applyAdditionalStatusBarText:function(value,old){this.__additionalStatusBarText=value;
this._updateStatusBar();
},_applyColumnVisibilityButtonVisible:function(value,old){if(value){this._showChildControl("column-button");
}else{this._excludeChildControl("column-button");
}},_applyMetaColumnCounts:function(value,old){var metaColumnCounts=value;
var scrollerArr=this._getPaneScrollerArr();
var handlers={};

if(value>old){var manager=qx.event.Registration.getManager(scrollerArr[0]);

for(var evName in qx.ui.table.Table.__redirectEvents){handlers[evName]={};
handlers[evName].capture=manager.getListeners(scrollerArr[0],evName,true);
handlers[evName].bubble=manager.getListeners(scrollerArr[0],evName,false);
}}this._cleanUpMetaColumns(metaColumnCounts.length);
var leftX=0;

for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var paneModel=paneScroller.getTablePaneModel();
paneModel.setFirstColumnX(leftX);
paneModel.setMaxColumnCount(metaColumnCounts[i]);
leftX+=metaColumnCounts[i];
}if(metaColumnCounts.length>scrollerArr.length){var columnModel=this.getTableColumnModel();

for(var i=scrollerArr.length;i<metaColumnCounts.length;i++){var paneModel=this.getNewTablePaneModel()(columnModel);
paneModel.setFirstColumnX(leftX);
paneModel.setMaxColumnCount(metaColumnCounts[i]);
leftX+=metaColumnCounts[i];
var paneScroller=this.getNewTablePaneScroller()(this);
paneScroller.setTablePaneModel(paneModel);
paneScroller.addListener("changeScrollY",this._onScrollY,this);
for(evName in qx.ui.table.Table.__redirectEvents){if(!handlers[evName]){break;
}
if(handlers[evName].capture&&handlers[evName].capture.length>0){var capture=handlers[evName].capture;

for(var i=0;i<capture.length;i++){var context=capture[i].context;

if(!context){context=this;
}else if(context==scrollerArr[0]){context=paneScroller;
}paneScroller.addListener(evName,capture[i].handler,context,true);
}}
if(handlers[evName].bubble&&handlers[evName].bubble.length>0){var bubble=handlers[evName].bubble;

for(var i=0;i<bubble.length;i++){var context=bubble[i].context;

if(!context){context=this;
}else if(context==scrollerArr[0]){context=paneScroller;
}paneScroller.addListener(evName,bubble[i].handler,context,false);
}}}var flex=(i==metaColumnCounts.length-1)?1:0;
this.__scrollerParent.add(paneScroller,{flex:flex});
scrollerArr=this._getPaneScrollerArr();
}}for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var isLast=(i==(scrollerArr.length-1));
paneScroller.getHeader().setHeight(this.getHeaderCellHeight());
paneScroller.setTopRightWidget(isLast?this.getChildControl("column-button"):null);
}
if(!this.isColumnVisibilityButtonVisible()){this._excludeChildControl("column-button");
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
},_applyFocusCellOnMouseMove:function(value,old){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setFocusCellOnMouseMove(value);
}},_applyShowCellFocusIndicator:function(value,old){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setShowCellFocusIndicator(value);
}},_applyKeepFirstVisibleRowComplete:function(value,old){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onKeepFirstVisibleRowCompleteChanged();
}},getSelectionManager:function(){return this.__selectionManager;
},_getPaneScrollerArr:function(){return this.__scrollerParent.getChildren();
},getPaneScroller:function(metaColumn){return this._getPaneScrollerArr()[metaColumn];
},_cleanUpMetaColumns:function(fromMetaColumn){var scrollerArr=this._getPaneScrollerArr();

if(scrollerArr!=null){for(var i=scrollerArr.length-1;i>=fromMetaColumn;i--){scrollerArr[i].destroy();
}}},_onChangeLocale:function(evt){this.updateContent();
this._updateStatusBar();
},_onSelectionChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onSelectionChanged();
}this._updateStatusBar();
},_onTableModelMetaDataChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onTableModelMetaDataChanged();
}this._updateStatusBar();
},_onTableModelDataChanged:function(evt){var data=evt.getData();
this._updateTableData(data.firstRow,data.lastRow,data.firstColumn,data.lastColumn,data.removeStart,data.removeCount);
},_updateTableData:function(firstRow,lastRow,firstColumn,lastColumn,removeStart,removeCount){var scrollerArr=this._getPaneScrollerArr();
if(removeCount){this.getSelectionModel().removeSelectionInterval(removeStart,removeStart+removeCount);
}
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onTableModelDataChanged(firstRow,lastRow,firstColumn,lastColumn);
}var rowCount=this.getTableModel().getRowCount();

if(rowCount!=this.__lastRowCount){this.__lastRowCount=rowCount;
this._updateScrollBarVisibility();
this._updateStatusBar();
}},_onScrollY:function(evt){if(!this.__internalChange){this.__internalChange=true;
var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setScrollY(evt.getData());
}this.__internalChange=false;
}},_onKeyPress:function(evt){if(!this.getEnabled()){return;
}var oldFocusedRow=this.__focusedRow;
var consumed=true;
var identifier=evt.getKeyIdentifier();

if(this.isEditing()){if(evt.getModifiers()==0){switch(identifier){case "Enter":this.stopEditing();
var oldFocusedRow=this.__focusedRow;
this.moveFocusedCell(0,1);

if(this.__focusedRow!=oldFocusedRow){consumed=this.startEditing();
}break;
case "Escape":this.cancelEditing();
this.focus();
break;
default:consumed=false;
break;
}}}else{if(evt.isCtrlPressed()){consumed=true;

switch(identifier){case "A":var rowCount=this.getTableModel().getRowCount();

if(rowCount>0){this.getSelectionModel().setSelectionInterval(0,rowCount-1);
}break;
default:consumed=false;
break;
}}else{switch(identifier){case "Space":this.__selectionManager.handleSelectKeyDown(this.__focusedRow,evt);
break;
case "F2":case "Enter":this.startEditing();
consumed=true;
break;
case "Home":this.setFocusedCell(this.__focusedCol,0,true);
break;
case "End":var rowCount=this.getTableModel().getRowCount();
this.setFocusedCell(this.__focusedCol,rowCount-1,true);
break;
case "Left":this.moveFocusedCell(-1,0);
break;
case "Right":this.moveFocusedCell(1,0);
break;
case "Up":this.moveFocusedCell(0,-1);
break;
case "Down":this.moveFocusedCell(0,1);
break;
case "PageUp":case "PageDown":var scroller=this.getPaneScroller(0);
var pane=scroller.getTablePane();
var rowCount=pane.getVisibleRowCount()-1;
var rowHeight=this.getRowHeight();
var direction=(identifier=="PageUp")?-1:1;
scroller.setScrollY(scroller.getScrollY()+direction*rowCount*rowHeight);
this.moveFocusedCell(0,direction*rowCount);
break;
default:consumed=false;
}}}
if(oldFocusedRow!=this.__focusedRow&&this.getRowFocusChangeModifiesSelection()){this.__selectionManager.handleMoveKeyDown(this.__focusedRow,evt);
}
if(consumed){evt.preventDefault();
evt.stopPropagation();
}},_onFocusChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onFocusChanged();
}},_onColVisibilityChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onColVisibilityChanged();
}var data=evt.getData();

if(this.__columnMenuButtons!=null&&data.col!=null&&data.visible!=null){this.__columnMenuButtons[data.col].setVisible(data.visible);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
},_onColWidthChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){var data=evt.getData();
scrollerArr[i].setColumnWidth(data.col,data.newWidth);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
},_onColOrderChanged:function(evt){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onColOrderChanged();
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
},getTablePaneScrollerAtPageX:function(pageX){var metaCol=this._getMetaColumnAtPageX(pageX);
return (metaCol!=-1)?this.getPaneScroller(metaCol):null;
},setFocusedCell:function(col,row,scrollVisible){if(!this.isEditing()&&(col!=this.__focusedCol||row!=this.__focusedRow)){if(col===null){col=0;
}this.__focusedCol=col;
this.__focusedRow=row;
var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setFocusedCell(col,row);
}
if(col!==null&&scrollVisible){this.scrollCellVisible(col,row);
}}},resetSelection:function(){this.getSelectionModel().resetSelection();
},clearSelection:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'resetSelection' instead.");
this.resetSelection();
},resetCellFocus:function(){this.setFocusedCell(null,null,false);
},getFocusedColumn:function(){return this.__focusedCol;
},getFocusedRow:function(){return this.__focusedRow;
},highlightFocusedRow:function(bHighlight){this.getDataRowRenderer().setHighlightFocusRow(bHighlight);
},clearFocusedRowHighlight:function(){this.resetCellFocus();
var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].onFocusChanged();
}},moveFocusedCell:function(deltaX,deltaY){var col=this.__focusedCol;
var row=this.__focusedRow;

if(col===null||row===null){return;
}
if(deltaX!=0){var columnModel=this.getTableColumnModel();
var x=columnModel.getVisibleX(col);
var colCount=columnModel.getVisibleColumnCount();
x=qx.lang.Number.limit(x+deltaX,0,colCount-1);
col=columnModel.getVisibleColumnAtX(x);
}
if(deltaY!=0){var tableModel=this.getTableModel();
row=qx.lang.Number.limit(row+deltaY,0,tableModel.getRowCount()-1);
}this.setFocusedCell(col,row,true);
},scrollCellVisible:function(col,row){var columnModel=this.getTableColumnModel();
var x=columnModel.getVisibleX(col);
var metaColumn=this._getMetaColumnAtColumnX(x);

if(metaColumn!=-1){this.getPaneScroller(metaColumn).scrollCellVisible(col,row);
}},isEditing:function(){if(this.__focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this.__focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
return this.getPaneScroller(metaColumn).isEditing();
}return false;
},startEditing:function(){if(this.__focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this.__focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
var started=this.getPaneScroller(metaColumn).startEditing();
return started;
}return false;
},stopEditing:function(){if(this.__focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this.__focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
this.getPaneScroller(metaColumn).stopEditing();
}},cancelEditing:function(){if(this.__focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this.__focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
this.getPaneScroller(metaColumn).cancelEditing();
}},updateContent:function(){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].getTablePane().updateContent();
}},blockHeaderElements:function(){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].getHeader().getBlocker().blockContent(20);
}this.getChildControl("column-button").getBlocker().blockContent(20);
},unblockHeaderElements:function(){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].getHeader().getBlocker().unblockContent();
}this.getChildControl("column-button").getBlocker().unblockContent();
},_getMetaColumnAtPageX:function(pageX){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){var pos=scrollerArr[i].getContainerLocation();

if(pageX>=pos.left&&pageX<=pos.right){return i;
}}return -1;
},_getMetaColumnAtColumnX:function(visXPos){var metaColumnCounts=this.getMetaColumnCounts();
var rightXPos=0;

for(var i=0;i<metaColumnCounts.length;i++){var counts=metaColumnCounts[i];
rightXPos+=counts;

if(counts==-1||visXPos<rightXPos){return i;
}}return -1;
},_updateStatusBar:function(){var tableModel=this.getTableModel();

if(this.getStatusBarVisible()){var selectedRowCount=this.getSelectionModel().getSelectedCount();
var rowCount=tableModel.getRowCount();
var text;

if(rowCount>=0){if(selectedRowCount==0){text=this.trn("one row","%1 rows",rowCount,rowCount);
}else{text=this.trn("one of one row","%1 of %2 rows",rowCount,selectedRowCount,rowCount);
}}
if(this.__additionalStatusBarText){if(text){text+=this.__additionalStatusBarText;
}else{text=this.__additionalStatusBarText;
}}
if(text){this.getChildControl("statusbar").setValue(text);
}}},_updateScrollerWidths:function(){var scrollerArr=this._getPaneScrollerArr();

for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var width=scrollerArr[i].getTablePaneModel().getTotalWidth();
scrollerArr[i].setPaneWidth(width);
var flex=isLast?1:0;
scrollerArr[i].setLayoutProperties({flex:flex});
}},_updateScrollBarVisibility:function(){if(!this.getBounds()){return;
}var horBar=qx.ui.table.pane.Scroller.HORIZONTAL_SCROLLBAR;
var verBar=qx.ui.table.pane.Scroller.VERTICAL_SCROLLBAR;
var scrollerArr=this._getPaneScrollerArr();
var horNeeded=false;
var verNeeded=false;

for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var bars=scrollerArr[i].getNeededScrollBars(horNeeded,!isLast);

if(bars&horBar){horNeeded=true;
}
if(isLast&&(bars&verBar)){verNeeded=true;
}}for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var bHadVerticalScrollBar;
scrollerArr[i].setHorizontalScrollBarVisible(horNeeded);
if(isLast){bHadVerticalScrollBar=scrollerArr[i].getVerticalScrollBarVisible();
}scrollerArr[i].setVerticalScrollBarVisible(isLast&&verNeeded);
if(isLast&&verNeeded!=bHadVerticalScrollBar){this.fireDataEvent("verticalScrollBarChanged",verNeeded);
}}},_initColumnMenu:function(){var tableModel=this.getTableModel();
var columnModel=this.getTableColumnModel();
var columnButton=this.getChildControl("column-button");
columnButton.empty();
var menu=columnButton.getMenu();
var data={table:this,menu:menu,columnButton:columnButton};
this.fireDataEvent("columnVisibilityMenuCreateStart",data);
this.__columnMenuButtons={};

for(var col=0,l=tableModel.getColumnCount();col<l;col++){var menuButton=columnButton.factory("menu-button",{text:tableModel.getColumnName(col),column:col,bVisible:columnModel.isColumnVisible(col)});
qx.core.Assert.assertInterface(menuButton,qx.ui.table.IColumnMenuItem);
menuButton.addListener("changeVisible",this._createColumnVisibilityCheckBoxHandler(col),this);
this.__columnMenuButtons[col]=menuButton;
}var data={table:this,menu:menu,columnButton:columnButton};
this.fireDataEvent("columnVisibilityMenuCreateEnd",data);
},_createColumnVisibilityCheckBoxHandler:function(col){return function(evt){var columnModel=this.getTableColumnModel();
columnModel.setColumnVisible(col,evt.getData());
};
},setColumnWidth:function(col,width){this.getTableColumnModel().setColumnWidth(col,width);
},_onResize:function(){this.fireEvent("tableWidthChanged");
this._updateScrollerWidths();
this._updateScrollBarVisibility();
},addListener:function(type,listener,self,capture){if(this.self(arguments).__redirectEvents[type]){var id=[type];

for(var i=0,arr=this._getPaneScrollerArr();i<arr.length;i++){id.push(arr[i].addListener.apply(arr[i],arguments));
}return id.join('"');
}else{return this.base(arguments,type,listener,self,capture);
}},removeListener:function(type,listener,self,capture){if(this.self(arguments).__redirectEvents[type]){for(var i=0,arr=this._getPaneScrollerArr();i<arr.length;i++){arr[i].removeListener.apply(arr[i],arguments);
}}else{this.base(arguments,type,listener,self,capture);
}},removeListenerById:function(id){var ids=id.split('"');
var type=ids.shift();

if(this.self(arguments).__redirectEvents[type]){var removed=true;

for(var i=0,arr=this._getPaneScrollerArr();i<arr.length;i++){removed=arr[i].removeListenerById.call(arr[i],ids[i])&&removed;
}return removed;
}else{return this.base(arguments,id);
}},destroy:function(){this.getChildControl("column-button").getMenu().destroy();
this.base(arguments);
}},destruct:function(){{};
var selectionModel=this.getSelectionModel();

if(selectionModel){selectionModel.dispose();
}var dataRowRenderer=this.getDataRowRenderer();

if(dataRowRenderer){dataRowRenderer.dispose();
}this._cleanUpMetaColumns(0);
this.getTableColumnModel().dispose();
this._disposeObjects("__selectionManager","__scrollerParent","__emptyTableModel","__emptyTableModel","__columnModel");
this._disposeMap("__columnMenuButtons");
}});
qx.Class.define("qx.ui.table.selection.Model",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__selectedRangeArr=[];
this.__anchorSelectionIndex=-1;
this.__leadSelectionIndex=-1;
this.hasBatchModeRefCount=0;
this.__hadChangeEventInBatchMode=false;
},events:{"changeSelection":"qx.event.type.Event"},statics:{NO_SELECTION:1,SINGLE_SELECTION:2,SINGLE_INTERVAL_SELECTION:3,MULTIPLE_INTERVAL_SELECTION:4,MULTIPLE_INTERVAL_SELECTION_TOGGLE:5},properties:{selectionMode:{init:2,check:[1,2,3,4,5],apply:"_applySelectionMode"}},members:{__hadChangeEventInBatchMode:null,__anchorSelectionIndex:null,__leadSelectionIndex:null,__selectedRangeArr:null,_applySelectionMode:function(selectionMode){this.resetSelection();
},setBatchMode:function(batchMode){if(batchMode){this.hasBatchModeRefCount+=1;
}else{if(this.hasBatchModeRefCount==0){throw new Error("Try to turn off batch mode althoug it was not turned on.");
}this.hasBatchModeRefCount-=1;

if(this.__hadChangeEventInBatchMode){this.__hadChangeEventInBatchMode=false;
this._fireChangeSelection();
}}return this.hasBatchMode();
},hasBatchMode:function(){return this.hasBatchModeRefCount>0;
},getAnchorSelectionIndex:function(){return this.__anchorSelectionIndex;
},_setAnchorSelectionIndex:function(index){this.__anchorSelectionIndex=index;
},getLeadSelectionIndex:function(){return this.__leadSelectionIndex;
},_setLeadSelectionIndex:function(index){this.__leadSelectionIndex=index;
},_getSelectedRangeArr:function(){return this.__selectedRangeArr;
},resetSelection:function(){if(!this.isSelectionEmpty()){this._resetSelection();
this._fireChangeSelection();
}},clearSelection:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use 'resetSelection' instead");
this.resetSelection();
},isSelectionEmpty:function(){return this.__selectedRangeArr.length==0;
},getSelectedCount:function(){var selectedCount=0;

for(var i=0;i<this.__selectedRangeArr.length;i++){var range=this.__selectedRangeArr[i];
selectedCount+=range.maxIndex-range.minIndex+1;
}return selectedCount;
},isSelectedIndex:function(index){for(var i=0;i<this.__selectedRangeArr.length;i++){var range=this.__selectedRangeArr[i];

if(index>=range.minIndex&&index<=range.maxIndex){return true;
}}return false;
},getSelectedRanges:function(){var retVal=[];

for(var i=0;i<this.__selectedRangeArr.length;i++){retVal.push({minIndex:this.__selectedRangeArr[i].minIndex,maxIndex:this.__selectedRangeArr[i].maxIndex});
}return retVal;
},iterateSelection:function(iterator,object){for(var i=0;i<this.__selectedRangeArr.length;i++){for(var j=this.__selectedRangeArr[i].minIndex;j<=this.__selectedRangeArr[i].maxIndex;j++){iterator.call(object,j);
}}},setSelectionInterval:function(fromIndex,toIndex){var me=this.self(arguments);

switch(this.getSelectionMode()){case me.NO_SELECTION:return;
case me.SINGLE_SELECTION:if(this.isSelectedIndex(toIndex)){return;
}fromIndex=toIndex;
break;
case me.MULTIPLE_INTERVAL_SELECTION_TOGGLE:this.setBatchMode(true);

try{for(var i=fromIndex;i<=toIndex;i++){if(!this.isSelectedIndex(i)){this._addSelectionInterval(i,i);
}else{this.removeSelectionInterval(i,i);
}}}catch(e){throw e;
}finally{this.setBatchMode(false);
}this._fireChangeSelection();
return;
}this._resetSelection();
this._addSelectionInterval(fromIndex,toIndex);
this._fireChangeSelection();
},addSelectionInterval:function(fromIndex,toIndex){var SelectionModel=qx.ui.table.selection.Model;

switch(this.getSelectionMode()){case SelectionModel.NO_SELECTION:return;
case SelectionModel.MULTIPLE_INTERVAL_SELECTION:case SelectionModel.MULTIPLE_INTERVAL_SELECTION_TOGGLE:this._addSelectionInterval(fromIndex,toIndex);
this._fireChangeSelection();
break;
default:this.setSelectionInterval(fromIndex,toIndex);
break;
}},removeSelectionInterval:function(fromIndex,toIndex){this.__anchorSelectionIndex=fromIndex;
this.__leadSelectionIndex=toIndex;
var minIndex=Math.min(fromIndex,toIndex);
var maxIndex=Math.max(fromIndex,toIndex);
for(var i=0;i<this.__selectedRangeArr.length;i++){var range=this.__selectedRangeArr[i];

if(range.minIndex>maxIndex){break;
}else if(range.maxIndex>=minIndex){var minIsIn=(range.minIndex>=minIndex)&&(range.minIndex<=maxIndex);
var maxIsIn=(range.maxIndex>=minIndex)&&(range.maxIndex<=maxIndex);

if(minIsIn&&maxIsIn){this.__selectedRangeArr.splice(i,1);
i--;
}else if(minIsIn){range.minIndex=maxIndex+1;
}else if(maxIsIn){range.maxIndex=minIndex-1;
}else{var newRange={minIndex:maxIndex+1,maxIndex:range.maxIndex};
this.__selectedRangeArr.splice(i+1,0,newRange);
range.maxIndex=minIndex-1;
break;
}}}this._fireChangeSelection();
},_resetSelection:function(){this.__selectedRangeArr=[];
this.__anchorSelectionIndex=-1;
this.__leadSelectionIndex=-1;
},_clearSelection:function(){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Use '_resetSelection' instead.");
this._resetSelection();
},_addSelectionInterval:function(fromIndex,toIndex){this.__anchorSelectionIndex=fromIndex;
this.__leadSelectionIndex=toIndex;
var minIndex=Math.min(fromIndex,toIndex);
var maxIndex=Math.max(fromIndex,toIndex);
var newRangeIndex=0;

for(;newRangeIndex<this.__selectedRangeArr.length;newRangeIndex++){var range=this.__selectedRangeArr[newRangeIndex];

if(range.minIndex>minIndex){break;
}}this.__selectedRangeArr.splice(newRangeIndex,0,{minIndex:minIndex,maxIndex:maxIndex});
var lastRange=this.__selectedRangeArr[0];

for(var i=1;i<this.__selectedRangeArr.length;i++){var range=this.__selectedRangeArr[i];

if(lastRange.maxIndex+1>=range.minIndex){lastRange.maxIndex=Math.max(lastRange.maxIndex,range.maxIndex);
this.__selectedRangeArr.splice(i,1);
i--;
}else{lastRange=range;
}}},_dumpRanges:function(){var text="Ranges:";

for(var i=0;i<this.__selectedRangeArr.length;i++){var range=this.__selectedRangeArr[i];
text+=" ["+range.minIndex+".."+range.maxIndex+"]";
}this.debug(text);
},_fireChangeSelection:function(){if(this.hasBatchMode()){this.__hadChangeEventInBatchMode=true;
}else{this.fireEvent("changeSelection");
}}},destruct:function(){this.__selectedRangeArr=null;
}});
qx.Class.define("qx.ui.treevirtual.TreeVirtual",{extend:qx.ui.table.Table,construct:function(headings,custom){if(!custom){custom={};
}
if(!custom.dataModel){custom.dataModel=new qx.ui.treevirtual.SimpleTreeDataModel();
}
if(custom.treeColumn===undefined){custom.treeColumn=0;
custom.dataModel.setTreeColumn(custom.treeColumn);
}
if(!custom.treeDataCellRenderer){custom.treeDataCellRenderer=new qx.ui.treevirtual.SimpleTreeDataCellRenderer();
}
if(!custom.defaultDataCellRenderer){custom.defaultDataCellRenderer=new qx.ui.treevirtual.DefaultDataCellRenderer();
}
if(!custom.dataRowRenderer){custom.dataRowRenderer=new qx.ui.treevirtual.SimpleTreeDataRowRenderer();
}
if(!custom.selectionManager){custom.selectionManager=function(obj){return new qx.ui.treevirtual.SelectionManager(obj);
};
}
if(!custom.tableColumnModel){custom.tableColumnModel=function(obj){return new qx.ui.table.columnmodel.Resize(obj);
};
}if(typeof (headings)=="string"){headings=[headings];
}custom.dataModel.setColumns(headings);
custom.dataModel.setTreeColumn(custom.treeColumn);
custom.dataModel.setTree(this);
this.base(arguments,custom.dataModel,custom);
this.addListener("dataEdited",function(e){this.getDataModel().setData();
},this);
this.setColumnVisibilityButtonVisible(headings.length>1);
this.setRowHeight(16);
this.setMetaColumnCounts(headings.length>1?[1,-1]:[1]);
this.setOverflow("hidden");
var stdcr=custom.treeDataCellRenderer;
var ddcr=custom.defaultDataCellRenderer;
var tcm=this.getTableColumnModel();
var treeCol=this.getDataModel().getTreeColumn();

for(var i=0;i<headings.length;i++){tcm.setDataCellRenderer(i,i==treeCol?stdcr:ddcr);
}this.setDataRowRenderer(custom.dataRowRenderer);
this.setFocusCellOnMouseMove(true);
this.setShowCellFocusIndicator(false);
var scrollers=this._getPaneScrollerArr();
for(var i=0;i<scrollers.length;i++){scrollers[i].setSelectBeforeFocus(true);
}},events:{"treeOpenWithContent":"qx.event.type.Data","treeOpenWhileEmpty":"qx.event.type.Data","treeClose":"qx.event.type.Data","changeSelection":"qx.event.type.Data"},statics:{SelectionMode:{NONE:qx.ui.table.selection.Model.NO_SELECTION,SINGLE:qx.ui.table.selection.Model.SINGLE_SELECTION,SINGLE_INTERVAL:qx.ui.table.selection.Model.SINGLE_INTERVAL_SELECTION,MULTIPLE_INTERVAL:qx.ui.table.selection.Model.MULTIPLE_INTERVAL_SELECTION,MULTIPLE_INTERVAL_TOGGLE:qx.ui.table.selection.Model.MULTIPLE_INTERVAL_SELECTION_TOGGLE}},properties:{openCloseClickSelectsRow:{check:"Boolean",init:false},appearance:{refine:true,init:"treevirtual"}},members:{getDataModel:function(){return this.getTableModel();
},setUseTreeLines:function(b){var dataModel=this.getDataModel();
var treeCol=dataModel.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setUseTreeLines(b);
if(dataModel.hasListener("dataChanged")){var data={firstRow:0,lastRow:dataModel.getRowCount()-1,firstColumn:0,lastColumn:dataModel.getColumnCount()-1};
dataModel.fireDataEvent("dataChanged",data);
}},getUseTreeLines:function(){var treeCol=this.getDataModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getUseTreeLines();
},setAlwaysShowOpenCloseSymbol:function(b){var dataModel=this.getDataModel();
var treeCol=dataModel.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setAlwaysShowOpenCloseSymbol(b);
if(dataModel.hasListener("dataChanged")){var data={firstRow:0,lastRow:dataModel.getRowCount()-1,firstColumn:0,lastColumn:dataModel.getColumnCount()-1};
dataModel.fireDataEvent("dataChanged",data);
}},setExcludeFirstLevelTreeLines:function(b){var dataModel=this.getDataModel();
var treeCol=dataModel.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setExcludeFirstLevelTreeLines(b);
if(dataModel.hasListener("dataChanged")){var data={firstRow:0,lastRow:dataModel.getRowCount()-1,firstColumn:0,lastColumn:dataModel.getColumnCount()-1};
dataModel.fireDataEvent("dataChanged",data);
}},getExcludeFirstLevelTreeLines:function(){var treeCol=this.getDataModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getExcludeFirstLevelTreeLines();
},getAlwaysShowOpenCloseSymbol:function(){var treeCol=this.getDataModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getAlwaysShowOpenCloseSymbol();
},setSelectionMode:function(mode){this.getSelectionModel().setSelectionMode(mode);
},getSelectionMode:function(){return this.getSelectionModel().getSelectionMode();
},getHierarchy:function(nodeReference){var _this=this;
var components=[];
var node;
var nodeId;

if(typeof (nodeReference)=="object"){node=nodeReference;
nodeId=node.nodeId;
}else if(typeof (nodeReference)=="number"){nodeId=nodeReference;
}else{throw new Error("Expected node object or node id");
}function addHierarchy(nodeId){if(!nodeId){return ;
}var node=_this.getDataModel().getData()[nodeId];
components.unshift(node.label);
addHierarchy(node.parentNodeId);
}addHierarchy(nodeId);
return components;
},getSelectedNodes:function(){return this.getDataModel().getSelectedNodes();
},_onKeyPress:function(evt){if(!this.getEnabled()){return;
}var identifier=evt.getKeyIdentifier();
var consumed=false;
var modifiers=evt.getModifiers();

if(modifiers==0){switch(identifier){case "Enter":var dm=this.getDataModel();
var focusedCol=this.getFocusedColumn();
var treeCol=dm.getTreeColumn();

if(focusedCol==treeCol){var focusedRow=this.getFocusedRow();
var node=dm.getValue(treeCol,focusedRow);

if(!node.bHideOpenClose){dm.setState(node,{bOpened:!node.bOpened});
}consumed=true;
}break;
case "Left":this.moveFocusedCell(-1,0);
break;
case "Right":this.moveFocusedCell(1,0);
break;
}}else if(modifiers==qx.event.type.Dom.CTRL_MASK){switch(identifier){case "Left":var dm=this.getDataModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if((node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH)&&!node.bHideOpenClose&&node.bOpened){dm.setState(node,{bOpened:!node.bOpened});
}this.setFocusedCell(treeCol,focusedRow,true);
consumed=true;
break;
case "Right":var dm=this.getDataModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if((node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH)&&!node.bHideOpenClose&&!node.bOpened){dm.setState(node,{bOpened:!node.bOpened});
}this.setFocusedCell(treeCol,focusedRow,true);
consumed=true;
break;
}}else if(modifiers==qx.event.type.Dom.SHIFT_MASK){switch(identifier){case "Left":var dm=this.getDataModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(node.parentNodeId){var rowIndex=dm.getRowFromNodeId(node.parentNodeId);
this.setFocusedCell(this._focusedCol,rowIndex,true);
}consumed=true;
break;
case "Right":var dm=this.getDataModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if((node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH)&&!node.bHideOpenClose){if(!node.bOpened){dm.setState(node,{bOpened:!node.bOpened});
}if(node.children.length>0){this.moveFocusedCell(0,1);
}}consumed=true;
break;
}}if(consumed){evt.preventDefault();
evt.stopPropagation();
}else{this.base(arguments,evt);
}},_onSelectionChanged:function(evt){this.getDataModel()._clearSelections();
if(this.getSelectionMode()!=qx.ui.treevirtual.TreeVirtual.SelectionMode.NONE){var selectedNodes=this._calculateSelectedNodes();
this.fireDataEvent("changeSelection",selectedNodes);
}this.base(arguments,evt);
},_calculateSelectedNodes:function(){var stdcm=this.getDataModel();
var selectedRanges=this.getSelectionModel().getSelectedRanges();
var selectedNodes=[];
var node;

for(var i=0;i<selectedRanges.length;i++){for(var j=selectedRanges[i].minIndex;j<=selectedRanges[i].maxIndex;j++){node=stdcm.getValue(stdcm.getTreeColumn(),j);
stdcm.setState(node,{bSelected:true});
selectedNodes.push(node);
}}return selectedNodes;
},setOverflow:function(s){if(s!="hidden"){throw new Error("Tree overflow must be hidden.  "+"The internal elements of it will scroll.");
}}}});
qx.Interface.define("qx.ui.table.IRowRenderer",{members:{updateDataRowElement:function(rowInfo,rowElement){},getRowHeightStyle:function(height){},createRowStyle:function(rowInfo){},getRowClass:function(rowInfo){}}});
qx.Class.define("qx.ui.table.rowrenderer.Default",{extend:qx.core.Object,implement:qx.ui.table.IRowRenderer,construct:function(){this.base(arguments);
this.__fontStyleString="";
this.__fontStyleString={};
this.__colors={};
this._renderFont(qx.theme.manager.Font.getInstance().resolve("default"));
var colorMgr=qx.theme.manager.Color.getInstance();
this.__colors.bgcolFocusedSelected=colorMgr.resolve("table-row-background-focused-selected");
this.__colors.bgcolFocused=colorMgr.resolve("table-row-background-focused");
this.__colors.bgcolSelected=colorMgr.resolve("table-row-background-selected");
this.__colors.bgcolEven=colorMgr.resolve("table-row-background-even");
this.__colors.bgcolOdd=colorMgr.resolve("table-row-background-odd");
this.__colors.colSelected=colorMgr.resolve("table-row-selected");
this.__colors.colNormal=colorMgr.resolve("table-row");
this.__colors.horLine=colorMgr.resolve("table-row-line");
},properties:{highlightFocusRow:{check:"Boolean",init:true}},members:{__colors:null,__fontStyle:null,__fontStyleString:null,_insetY:1,_renderFont:function(font){if(font){this.__fontStyle=font.getStyles();
this.__fontStyleString=qx.bom.element.Style.compile(this.__fontStyle);
this.__fontStyleString=this.__fontStyleString.replace(/"/g,"'");
}else{this.__fontStyleString="";
this.__fontStyle=qx.bom.Font.getDefaultStyles();
}},updateDataRowElement:function(rowInfo,rowElem){var fontStyle=this.__fontStyle;
var style=rowElem.style;
qx.bom.element.Style.setStyles(rowElem,fontStyle);

if(rowInfo.focusedRow&&this.getHighlightFocusRow()){style.backgroundColor=rowInfo.selected?this.__colors.bgcolFocusedSelected:this.__colors.bgcolFocused;
}else{if(rowInfo.selected){style.backgroundColor=this.__colors.bgcolSelected;
}else{style.backgroundColor=(rowInfo.row%2==0)?this.__colors.bgcolEven:this.__colors.bgcolOdd;
}}style.color=rowInfo.selected?this.__colors.colSelected:this.__colors.colNormal;
style.borderBottom="1px solid "+this.__colors.horLine;
},getRowHeightStyle:function(height){if(qx.bom.client.Feature.CONTENT_BOX){height-=this._insetY;
}return "height:"+height+"px;";
},createRowStyle:function(rowInfo){var rowStyle=[];
rowStyle.push(";");
rowStyle.push(this.__fontStyleString);
rowStyle.push("background-color:");

if(rowInfo.focusedRow&&this.getHighlightFocusRow()){rowStyle.push(rowInfo.selected?this.__colors.bgcolFocusedSelected:this.__colors.bgcolFocused);
}else{if(rowInfo.selected){rowStyle.push(this.__colors.bgcolSelected);
}else{rowStyle.push((rowInfo.row%2==0)?this.__colors.bgcolEven:this.__colors.bgcolOdd);
}}rowStyle.push(';color:');
rowStyle.push(rowInfo.selected?this.__colors.colSelected:this.__colors.colNormal);
rowStyle.push(';border-bottom: 1px solid ',this.__colors.horLine);
return rowStyle.join("");
},getRowClass:function(rowInfo){return "";
}},destruct:function(){this.__colors=this.__fontStyle=this.__fontStyleString=null;
}});
qx.Interface.define("qx.ui.table.IColumnMenuButton",{properties:{menu:{}},members:{factory:function(item,options){return true;
},empty:function(){return true;
}}});
qx.Class.define("qx.ui.table.columnmenu.Button",{extend:qx.ui.form.MenuButton,implement:qx.ui.table.IColumnMenuButton,construct:function(){this.base(arguments);
this.__blocker=new qx.ui.core.Blocker(this);
},members:{__columnMenuButtons:null,__blocker:null,factory:function(item,options){switch(item){case "menu":var menu=new qx.ui.menu.Menu();
this.setMenu(menu);
return menu;
case "menu-button":var menuButton=new qx.ui.table.columnmenu.MenuItem(options.text);
menuButton.setVisible(options.bVisible);
this.getMenu().add(menuButton);
return menuButton;
case "user-button":var button=new qx.ui.menu.Button(options.text);
button.set({appearance:"table-column-reset-button"});
return button;
case "separator":return new qx.ui.menu.Separator();
default:throw new Error("Unrecognized factory request: "+item);
}},getBlocker:function(){return this.__blocker;
},empty:function(){var menu=this.getMenu();
var entries=menu.getChildren();

for(var i=0,l=entries.length;i<l;i++){entries[0].destroy();
}}},destruct:function(){this.__blocker.dispose();
}});
qx.Class.define("qx.ui.menu.CheckBox",{extend:qx.ui.menu.AbstractButton,implement:[qx.ui.form.IBooleanForm],construct:function(label,menu){this.base(arguments);
if(label!=null){if(label.translate){this.setLabel(label.translate());
}else{this.setLabel(label);
}}
if(menu!=null){this.setMenu(menu);
}this.addListener("execute",this._onExecute,this);
},properties:{appearance:{refine:true,init:"menu-checkbox"},value:{check:"Boolean",init:false,apply:"_applyValue",event:"changeValue",nullable:true}},members:{_applyValue:function(value,old){value?this.addState("checked"):this.removeState("checked");
},_onExecute:function(e){this.toggleValue();
},_onMouseUp:function(e){if(e.isLeftPressed()){this.execute();
}qx.ui.menu.Manager.getInstance().hideAll();
},_onKeyPress:function(e){this.execute();
}}});
qx.Class.define("qx.ui.table.columnmenu.MenuItem",{extend:qx.ui.menu.CheckBox,implement:qx.ui.table.IColumnMenuItem,properties:{visible:{check:"Boolean",init:true,apply:"_applyVisible",event:"changeVisible"}},construct:function(text){this.base(arguments,text);
this.addListener("changeValue",function(e){this.bInListener=true;
this.setVisible(e.getData());
this.bInListener=false;
});
},members:{__bInListener:false,_applyVisible:function(value,old){if(!this.bInListener){this.setValue(value);
}}}});
qx.Class.define("qx.ui.table.pane.Pane",{extend:qx.ui.core.Widget,construct:function(paneScroller){this.base(arguments);
this.__paneScroller=paneScroller;
this.__lastColCount=0;
this.__lastRowCount=0;
this.__rowCache=[];
},events:{"paneReloadsData":"qx.event.type.Data","paneUpdated":"qx.event.type.Event"},properties:{firstVisibleRow:{check:"Number",init:0,apply:"_applyFirstVisibleRow"},visibleRowCount:{check:"Number",init:0,apply:"_applyVisibleRowCount"},maxCacheLines:{check:"Number",init:1000,apply:"_applyMaxCacheLines"},allowShrinkX:{refine:true,init:false}},members:{__lastRowCount:null,__lastColCount:null,__paneScroller:null,__tableContainer:null,__focusedRow:null,__focusedCol:null,__rowCache:null,__rowCacheCount:0,_applyFirstVisibleRow:function(value,old){this.updateContent(false,value-old);
},_applyVisibleRowCount:function(value,old){this.updateContent(true);
},_getContentHint:function(){return {width:this.getPaneScroller().getTablePaneModel().getTotalWidth(),height:400};
},getPaneScroller:function(){return this.__paneScroller;
},getTable:function(){return this.__paneScroller.getTable();
},setFocusedCell:function(col,row,massUpdate){if(col!=this.__focusedCol||row!=this.__focusedRow){var oldRow=this.__focusedRow;
this.__focusedCol=col;
this.__focusedRow=row;
if(row!=oldRow&&!massUpdate){if(oldRow!==null){this.updateContent(false,null,oldRow,true);
}
if(row!==null){this.updateContent(false,null,row,true);
}}}},onSelectionChanged:function(){this.updateContent(false,null,null,true);
},onFocusChanged:function(){this.updateContent(false,null,null,true);
},setColumnWidth:function(col,width){this.updateContent(true);
},onColOrderChanged:function(){this.updateContent(true);
},onPaneModelChanged:function(){this.updateContent(true);
},onTableModelDataChanged:function(firstRow,lastRow,firstColumn,lastColumn){this.__rowCacheClear();
var paneFirstRow=this.getFirstVisibleRow();
var rowCount=this.getVisibleRowCount();

if(lastRow==-1||lastRow>=paneFirstRow&&firstRow<paneFirstRow+rowCount){this.updateContent();
}},onTableModelMetaDataChanged:function(){this.updateContent(true);
},_applyMaxCacheLines:function(value,old){if(this.__rowCacheCount>=value&&value!==-1){this.__rowCacheClear();
}},__rowCacheClear:function(){this.__rowCache=[];
this.__rowCacheCount=0;
},__rowCacheGet:function(row,selected,focused){if(!selected&&!focused&&this.__rowCache[row]){return this.__rowCache[row];
}else{return null;
}},__rowCacheSet:function(row,rowString,selected,focused){var maxCacheLines=this.getMaxCacheLines();

if(!selected&&!focused&&!this.__rowCache[row]&&maxCacheLines>0){this._applyMaxCacheLines(maxCacheLines);
this.__rowCache[row]=rowString;
this.__rowCacheCount+=1;
}},updateContent:function(completeUpdate,scrollOffset,onlyRow,onlySelectionOrFocusChanged){if(completeUpdate){this.__rowCacheClear();
}if(scrollOffset&&Math.abs(scrollOffset)<=Math.min(10,this.getVisibleRowCount())){this._scrollContent(scrollOffset);
}else if(onlySelectionOrFocusChanged&&!this.getTable().getAlwaysUpdateCells()){this._updateRowStyles(onlyRow);
}else{this._updateAllRows();
}},_updateRowStyles:function(onlyRow){var elem=this.getContentElement().getDomElement();

if(!elem||!elem.firstChild){this._updateAllRows();
return;
}var table=this.getTable();
var selectionModel=table.getSelectionModel();
var tableModel=table.getTableModel();
var rowRenderer=table.getDataRowRenderer();
var rowNodes=elem.firstChild.childNodes;
var cellInfo={table:table};
var row=this.getFirstVisibleRow();
var y=0;
var end=rowNodes.length;

if(onlyRow!=null){var offset=onlyRow-row;

if(offset>=0&&offset<end){row=onlyRow;
y=offset;
end=offset+1;
}else{return;
}}
for(;y<end;y++,row++){cellInfo.row=row;
cellInfo.selected=selectionModel.isSelectedIndex(row);
cellInfo.focusedRow=(this.__focusedRow==row);
cellInfo.rowData=tableModel.getRowData(row);
rowRenderer.updateDataRowElement(cellInfo,rowNodes[y]);
}},_getRowsHtml:function(firstRow,rowCount){var table=this.getTable();
var selectionModel=table.getSelectionModel();
var tableModel=table.getTableModel();
var columnModel=table.getTableColumnModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var rowRenderer=table.getDataRowRenderer();
tableModel.prefetchRows(firstRow,firstRow+rowCount-1);
var rowHeight=table.getRowHeight();
var colCount=paneModel.getColumnCount();
var left=0;
var cols=[];
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var cellWidth=columnModel.getColumnWidth(col);
cols.push({col:col,xPos:x,editable:tableModel.isColumnEditable(col),focusedCol:this.__focusedCol==col,styleLeft:left,styleWidth:cellWidth});
left+=cellWidth;
}var rowsArr=[];
var paneReloadsData=false;

for(var row=firstRow;row<firstRow+rowCount;row++){var selected=selectionModel.isSelectedIndex(row);
var focusedRow=(this.__focusedRow==row);
var cachedRow=this.__rowCacheGet(row,selected,focusedRow);

if(cachedRow){rowsArr.push(cachedRow);
continue;
}var rowHtml=[];
var cellInfo={table:table};
cellInfo.styleHeight=rowHeight;
cellInfo.row=row;
cellInfo.selected=selected;
cellInfo.focusedRow=focusedRow;
cellInfo.rowData=tableModel.getRowData(row);

if(!cellInfo.rowData){paneReloadsData=true;
}rowHtml.push('<div ');
var rowClass=rowRenderer.getRowClass(cellInfo);

if(rowClass){rowHtml.push('class="',rowClass,'" ');
}var rowStyle=rowRenderer.createRowStyle(cellInfo);
rowStyle+=";position:relative;"+rowRenderer.getRowHeightStyle(rowHeight)+"width:100%;";

if(rowStyle){rowHtml.push('style="',rowStyle,'" ');
}rowHtml.push('>');

for(var x=0;x<colCount;x++){var col_def=cols[x];

for(var attr in col_def){cellInfo[attr]=col_def[attr];
}var col=cellInfo.col;
cellInfo.value=tableModel.getValue(col,row);
var cellRenderer=columnModel.getDataCellRenderer(col);
cellRenderer.createDataCellHtml(cellInfo,rowHtml);
}rowHtml.push('</div>');
var rowString=rowHtml.join("");
this.__rowCacheSet(row,rowString,selected,focusedRow);
rowsArr.push(rowString);
}this.fireDataEvent("paneReloadsData",paneReloadsData);
return rowsArr.join("");
},_scrollContent:function(rowOffset){var el=this.getContentElement().getDomElement();

if(!(el&&el.firstChild)){this._updateAllRows();
return;
}var tableBody=el.firstChild;
var tableChildNodes=tableBody.childNodes;
var rowCount=this.getVisibleRowCount();
var firstRow=this.getFirstVisibleRow();
var tabelModel=this.getTable().getTableModel();
var modelRowCount=0;
modelRowCount=tabelModel.getRowCount();
if(firstRow+rowCount>modelRowCount){this._updateAllRows();
return;
}var removeRowBase=rowOffset<0?rowCount+rowOffset:0;
var addRowBase=rowOffset<0?0:rowCount-rowOffset;

for(i=Math.abs(rowOffset)-1;i>=0;i--){var rowElem=tableChildNodes[removeRowBase];

try{tableBody.removeChild(rowElem);
}catch(exp){break;
}}if(!this.__tableContainer){this.__tableContainer=document.createElement("div");
}var tableDummy='<div>';
tableDummy+=this._getRowsHtml(firstRow+addRowBase,Math.abs(rowOffset));
tableDummy+='</div>';
this.__tableContainer.innerHTML=tableDummy;
var newTableRows=this.__tableContainer.firstChild.childNodes;
if(rowOffset>0){for(var i=newTableRows.length-1;i>=0;i--){var rowElem=newTableRows[0];
tableBody.appendChild(rowElem);
}}else{for(var i=newTableRows.length-1;i>=0;i--){var rowElem=newTableRows[newTableRows.length-1];
tableBody.insertBefore(rowElem,tableBody.firstChild);
}}if(this.__focusedRow!==null){this._updateRowStyles(this.__focusedRow-rowOffset);
this._updateRowStyles(this.__focusedRow);
}this.fireEvent("paneUpdated");
},_updateAllRows:function(){var elem=this.getContentElement().getDomElement();

if(!elem){this.addListenerOnce("appear",arguments.callee,this);
return;
}var table=this.getTable();
var tableModel=table.getTableModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var colCount=paneModel.getColumnCount();
var rowHeight=table.getRowHeight();
var firstRow=this.getFirstVisibleRow();
var rowCount=this.getVisibleRowCount();
var modelRowCount=tableModel.getRowCount();

if(firstRow+rowCount>modelRowCount){rowCount=Math.max(0,modelRowCount-firstRow);
}var rowWidth=paneModel.getTotalWidth();
var htmlArr;
if(rowCount>0){htmlArr=["<div style='","width: 100%;",(table.getForceLineHeight()?"line-height: "+rowHeight+"px;":""),"overflow: hidden;","'>",this._getRowsHtml(firstRow,rowCount),"</div>"];
}else{htmlArr=[];
}var data=htmlArr.join("");
elem.innerHTML=data;
this.setWidth(rowWidth);
this.__lastColCount=colCount;
this.__lastRowCount=rowCount;
this.fireEvent("paneUpdated");
}},destruct:function(){this.__tableContainer=this.__paneScroller=this.__rowCache=null;
}});
qx.Class.define("qx.ui.table.pane.Header",{extend:qx.ui.core.Widget,construct:function(paneScroller){this.base(arguments);
this._setLayout(new qx.ui.layout.HBox());
this.__blocker=new qx.ui.core.Blocker(this);
this.__paneScroller=paneScroller;
},members:{__paneScroller:null,__moveFeedback:null,__lastMouseOverColumn:null,__blocker:null,getPaneScroller:function(){return this.__paneScroller;
},getTable:function(){return this.__paneScroller.getTable();
},getBlocker:function(){return this.__blocker;
},onColOrderChanged:function(){this._updateContent(true);
},onPaneModelChanged:function(){this._updateContent(true);
},onTableModelMetaDataChanged:function(){this._updateContent();
},setColumnWidth:function(col,width){var child=this.getHeaderWidgetAtColumn(col);

if(child!=null){child.setWidth(width);
}},setMouseOverColumn:function(col){if(col!=this.__lastMouseOverColumn){if(this.__lastMouseOverColumn!=null){var widget=this.getHeaderWidgetAtColumn(this.__lastMouseOverColumn);

if(widget!=null){widget.removeState("hovered");
}}
if(col!=null){this.getHeaderWidgetAtColumn(col).addState("hovered");
}this.__lastMouseOverColumn=col;
}},getHeaderWidgetAtColumn:function(col){var xPos=this.getPaneScroller().getTablePaneModel().getX(col);
return this._getChildren()[xPos];
},showColumnMoveFeedback:function(col,x){var pos=this.getContainerLocation();

if(this.__moveFeedback==null){var xPos=this.getPaneScroller().getTablePaneModel().getX(col);
var cellWidget=this._getChildren()[xPos];
var tableModel=this.getTable().getTableModel();
var columnModel=this.getTable().getTableColumnModel();
var cellInfo={xPos:xPos,col:col,name:tableModel.getColumnName(col)};
var cellRenderer=columnModel.getHeaderCellRenderer(col);
var feedback=cellRenderer.createHeaderCell(cellInfo);
var size=cellWidget.getBounds();
feedback.setWidth(size.width);
feedback.setHeight(size.height);
feedback.setZIndex(1000000);
feedback.setOpacity(0.8);
feedback.setLayoutProperties({top:pos.top});
this.getApplicationRoot().add(feedback);
this.__moveFeedback=feedback;
}this.__moveFeedback.setLayoutProperties({left:pos.left+x});
this.__moveFeedback.show();
},hideColumnMoveFeedback:function(){if(this.__moveFeedback!=null){this.__moveFeedback.destroy();
this.__moveFeedback=null;
}},isShowingColumnMoveFeedback:function(){return this.__moveFeedback!=null;
},_updateContent:function(completeUpdate){var tableModel=this.getTable().getTableModel();
var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var children=this._getChildren();
var colCount=paneModel.getColumnCount();
var sortedColum=tableModel.getSortColumnIndex();
if(completeUpdate){this._cleanUpCells();
}var cellInfo={};
cellInfo.sortedAscending=tableModel.isSortAscending();

for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);

if(col===undefined){continue;
}var colWidth=columnModel.getColumnWidth(col);
var cellRenderer=columnModel.getHeaderCellRenderer(col);
cellInfo.xPos=x;
cellInfo.col=col;
cellInfo.name=tableModel.getColumnName(col);
cellInfo.editable=tableModel.isColumnEditable(col);
cellInfo.sorted=(col==sortedColum);
var cachedWidget=children[x];
if(cachedWidget==null){cachedWidget=cellRenderer.createHeaderCell(cellInfo);
cachedWidget.set({width:colWidth});
this._add(cachedWidget);
}else{cellRenderer.updateHeaderCell(cellInfo,cachedWidget);
}}},_cleanUpCells:function(){var children=this._getChildren();

for(var x=children.length-1;x>=0;x--){var cellWidget=children[x];
cellWidget.destroy();
}}},destruct:function(){this.__blocker.dispose();
this._disposeObjects("__paneScroller");
}});
qx.Class.define("qx.ui.table.pane.Scroller",{extend:qx.ui.core.Widget,include:qx.ui.core.scroll.MScrollBarFactory,construct:function(table){this.base(arguments);
this.__table=table;
var grid=new qx.ui.layout.Grid();
grid.setColumnFlex(0,1);
grid.setRowFlex(1,1);
this._setLayout(grid);
this.__horScrollBar=this._showChildControl("scrollbar-x");
this.__verScrollBar=this._showChildControl("scrollbar-y");
this.__header=this._showChildControl("header");
this.__tablePane=this._showChildControl("pane");
this.__top=new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({minWidth:0});
this._add(this.__top,{row:0,column:0,colSpan:2});
this.__headerClipper=new qx.ui.table.pane.Clipper();
this.__headerClipper.add(this.__header);
this.__headerClipper.addListener("losecapture",this._onChangeCaptureHeader,this);
this.__headerClipper.addListener("mousemove",this._onMousemoveHeader,this);
this.__headerClipper.addListener("mousedown",this._onMousedownHeader,this);
this.__headerClipper.addListener("mouseup",this._onMouseupHeader,this);
this.__headerClipper.addListener("click",this._onClickHeader,this);
this.__top.add(this.__headerClipper,{flex:1});
this.__paneClipper=new qx.ui.table.pane.Clipper();
this.__paneClipper.add(this.__tablePane);
this.__paneClipper.addListener("mousewheel",this._onMousewheel,this);
this.__paneClipper.addListener("mousemove",this._onMousemovePane,this);
this.__paneClipper.addListener("mousedown",this._onMousedownPane,this);
this.__paneClipper.addListener("mouseup",this._onMouseupPane,this);
this.__paneClipper.addListener("click",this._onClickPane,this);
this.__paneClipper.addListener("contextmenu",this._onContextMenu,this);
this.__paneClipper.addListener("dblclick",this._onDblclickPane,this);
this.__paneClipper.addListener("resize",this._onResizePane,this);
this._add(this.__paneClipper,{row:1,column:0});
this.__focusIndicator=this.getChildControl("focus-indicator");
this.getChildControl("resize-line").hide();
this.addListener("mouseout",this._onMouseout,this);
this.addListener("appear",this._onAppear,this);
this.addListener("disappear",this._onDisappear,this);
this.__timer=new qx.event.Timer();
this.__timer.addListener("interval",this._oninterval,this);
this.initScrollTimeout();
},statics:{MIN_COLUMN_WIDTH:10,RESIZE_REGION_RADIUS:5,CLICK_TOLERANCE:5,HORIZONTAL_SCROLLBAR:1,VERTICAL_SCROLLBAR:2},events:{"changeScrollY":"qx.event.type.Data","changeScrollX":"qx.event.type.Data","cellClick":"qx.ui.table.pane.CellEvent","cellDblclick":"qx.ui.table.pane.CellEvent","cellContextmenu":"qx.ui.table.pane.CellEvent","beforeSort":"qx.event.type.Data"},properties:{horizontalScrollBarVisible:{check:"Boolean",init:true,apply:"_applyHorizontalScrollBarVisible",event:"changeHorizontalScrollBarVisible"},verticalScrollBarVisible:{check:"Boolean",init:true,apply:"_applyVerticalScrollBarVisible",event:"changeVerticalScrollBarVisible"},tablePaneModel:{check:"qx.ui.table.pane.Model",apply:"_applyTablePaneModel",event:"changeTablePaneModel"},liveResize:{check:"Boolean",init:false},focusCellOnMouseMove:{check:"Boolean",init:false},selectBeforeFocus:{check:"Boolean",init:false},showCellFocusIndicator:{check:"Boolean",init:true,apply:"_applyShowCellFocusIndicator"},scrollTimeout:{check:"Integer",init:100,apply:"_applyScrollTimeout"},appearance:{refine:true,init:"table-scroller"}},members:{__lastRowCount:null,__table:null,__updateInterval:null,__updateContentPlanned:null,__onintervalWrapper:null,__moveColumn:null,__lastMoveColPos:null,__lastMoveTargetX:null,__lastMoveTargetScroller:null,__lastMoveMousePageX:null,__resizeColumn:null,__lastResizeMousePageX:null,__lastResizeWidth:null,__lastMouseDownCell:null,__ignoreClick:null,__lastMousePageX:null,__lastMousePageY:null,__focusedCol:null,__focusedRow:null,__cellEditor:null,__cellEditorFactory:null,__topRightWidget:null,__horScrollBar:null,__verScrollBar:null,__header:null,__headerClipper:null,__tablePane:null,__paneClipper:null,__focusIndicator:null,__top:null,__timer:null,getPaneInsetRight:function(){var topRight=this.getTopRightWidget();
var topRightWidth=topRight&&topRight.isVisible()&&topRight.getBounds()?topRight.getBounds().width:0;
var scrollBarWidth=this.getVerticalScrollBarVisible()?this.getVerticalScrollBarWidth():0;
return Math.max(topRightWidth,scrollBarWidth);
},setPaneWidth:function(width){if(this.isVerticalScrollBarVisible()){width+=this.getPaneInsetRight();
}this.setWidth(width);
},_createChildControlImpl:function(id){var control;

switch(id){case "header":control=(this.getTable().getNewTablePaneHeader())(this);
break;
case "pane":control=(this.getTable().getNewTablePane())(this);
break;
case "focus-indicator":control=new qx.ui.table.pane.FocusIndicator(this);
control.setUserBounds(0,0,0,0);
control.setZIndex(1000);
control.addListener("mouseup",this._onMouseupFocusIndicator,this);
this.__paneClipper.add(control);
control.exclude();
break;
case "resize-line":control=new qx.ui.core.Widget();
control.setUserBounds(0,0,0,0);
control.setZIndex(1000);
this.__paneClipper.add(control);
break;
case "scrollbar-x":control=this._createScrollBar("horizontal").set({minWidth:0,alignY:"bottom"});
control.addListener("scroll",this._onScrollX,this);
this._add(control,{row:2,column:0});
break;
case "scrollbar-y":control=this._createScrollBar("vertical");
control.addListener("scroll",this._onScrollY,this);
this._add(control,{row:1,column:1});
break;
}return control||this.base(arguments,id);
},_applyHorizontalScrollBarVisible:function(value,old){this.__horScrollBar.setVisibility(value?"visible":"excluded");

if(!value){this.setScrollY(0,true);
}},_applyVerticalScrollBarVisible:function(value,old){this.__verScrollBar.setVisibility(value?"visible":"excluded");

if(!value){this.setScrollX(0);
}},_applyTablePaneModel:function(value,old){if(old!=null){old.removeListener("modelChanged",this._onPaneModelChanged,this);
}value.addListener("modelChanged",this._onPaneModelChanged,this);
},_applyShowCellFocusIndicator:function(value,old){if(value){this._updateFocusIndicator();
}else{if(this.__focusIndicator){this.__focusIndicator.hide();
}}},getScrollY:function(){return this.__verScrollBar.getPosition();
},setScrollY:function(scrollY,renderSync){this.__verScrollBar.scrollTo(scrollY);

if(renderSync){this._updateContent();
}},getScrollX:function(){return this.__horScrollBar.getPosition();
},setScrollX:function(scrollX){this.__horScrollBar.scrollTo(scrollX);
},getTable:function(){return this.__table;
},onColVisibilityChanged:function(){this.updateHorScrollBarMaximum();
this._updateFocusIndicator();
},setColumnWidth:function(col,width){this.__header.setColumnWidth(col,width);
this.__tablePane.setColumnWidth(col,width);
var paneModel=this.getTablePaneModel();
var x=paneModel.getX(col);

if(x!=-1){this.updateHorScrollBarMaximum();
this._updateFocusIndicator();
}},onColOrderChanged:function(){this.__header.onColOrderChanged();
this.__tablePane.onColOrderChanged();
this.updateHorScrollBarMaximum();
},onTableModelDataChanged:function(firstRow,lastRow,firstColumn,lastColumn){this.__tablePane.onTableModelDataChanged(firstRow,lastRow,firstColumn,lastColumn);
var rowCount=this.getTable().getTableModel().getRowCount();

if(rowCount!=this.__lastRowCount){this.updateVerScrollBarMaximum();

if(this.getFocusedRow()>=rowCount){if(rowCount==0){this.setFocusedCell(null,null);
}else{this.setFocusedCell(this.getFocusedColumn(),rowCount-1);
}}this.__lastRowCount=rowCount;
}},onSelectionChanged:function(){this.__tablePane.onSelectionChanged();
},onFocusChanged:function(){this.__tablePane.onFocusChanged();
},onTableModelMetaDataChanged:function(){this.__header.onTableModelMetaDataChanged();
this.__tablePane.onTableModelMetaDataChanged();
},_onPaneModelChanged:function(){this.__header.onPaneModelChanged();
this.__tablePane.onPaneModelChanged();
},_onResizePane:function(){this.updateHorScrollBarMaximum();
this.updateVerScrollBarMaximum();
this._updateContent();
this.__header._updateContent();
this.__table._updateScrollBarVisibility();
},updateHorScrollBarMaximum:function(){var paneSize=this.__paneClipper.getInnerSize();

if(!paneSize){return ;
}var scrollSize=this.getTablePaneModel().getTotalWidth();
var scrollBar=this.__horScrollBar;

if(paneSize.width<scrollSize){var max=Math.max(0,scrollSize-paneSize.width);
scrollBar.setMaximum(max);
scrollBar.setKnobFactor(paneSize.width/scrollSize);
var pos=scrollBar.getPosition();
scrollBar.setPosition(Math.min(pos,max));
}else{scrollBar.setMaximum(0);
scrollBar.setKnobFactor(1);
scrollBar.setPosition(0);
}},updateVerScrollBarMaximum:function(){var paneSize=this.__paneClipper.getInnerSize();

if(!paneSize){return ;
}var tableModel=this.getTable().getTableModel();
var rowCount=tableModel.getRowCount();

if(this.getTable().getKeepFirstVisibleRowComplete()){rowCount+=1;
}var rowHeight=this.getTable().getRowHeight();
var scrollSize=rowCount*rowHeight;
var scrollBar=this.__verScrollBar;

if(paneSize.height<scrollSize){var max=Math.max(0,scrollSize-paneSize.height);
scrollBar.setMaximum(max);
scrollBar.setKnobFactor(paneSize.height/scrollSize);
var pos=scrollBar.getPosition();
scrollBar.setPosition(Math.min(pos,max));
}else{scrollBar.setMaximum(0);
scrollBar.setKnobFactor(1);
scrollBar.setPosition(0);
}},onKeepFirstVisibleRowCompleteChanged:function(){this.updateVerScrollBarMaximum();
this._updateContent();
},_onAppear:function(){this._startInterval(this.getScrollTimeout());
},_onDisappear:function(){this._stopInterval();
},_onScrollX:function(e){var scrollLeft=e.getData();
this.fireDataEvent("changeScrollX",scrollLeft,e.getOldData());
this.__headerClipper.scrollToX(scrollLeft);
this.__paneClipper.scrollToX(scrollLeft);
},_onScrollY:function(e){this.fireDataEvent("changeScrollY",e.getData(),e.getOldData());
this._postponedUpdateContent();
},_onMousewheel:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}var factor=qx.bom.client.Engine.GECKO?1:3;
var value=this.__verScrollBar.getPosition()+((e.getWheelDelta()*factor)*table.getRowHeight());
this.__verScrollBar.scrollTo(value);
if(this.__lastMousePageX&&this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(this.__lastMousePageX,this.__lastMousePageY);
}e.stop();
},__handleResizeColumn:function(pageX){var table=this.getTable();
var headerCell=this.__header.getHeaderWidgetAtColumn(this.__resizeColumn);
var minColumnWidth=headerCell.getSizeHint().minWidth;
var newWidth=Math.max(minColumnWidth,this.__lastResizeWidth+pageX-this.__lastResizeMousePageX);

if(this.getLiveResize()){var columnModel=table.getTableColumnModel();
columnModel.setColumnWidth(this.__resizeColumn,newWidth);
}else{this.__header.setColumnWidth(this.__resizeColumn,newWidth);
var paneModel=this.getTablePaneModel();
this._showResizeLine(paneModel.getColumnLeft(this.__resizeColumn)+newWidth);
}this.__lastResizeMousePageX+=newWidth-this.__lastResizeWidth;
this.__lastResizeWidth=newWidth;
},__handleMoveColumn:function(pageX){var clickTolerance=qx.ui.table.pane.Scroller.CLICK_TOLERANCE;

if(this.__header.isShowingColumnMoveFeedback()||pageX>this.__lastMoveMousePageX+clickTolerance||pageX<this.__lastMoveMousePageX-clickTolerance){this.__lastMoveColPos+=pageX-this.__lastMoveMousePageX;
this.__header.showColumnMoveFeedback(this.__moveColumn,this.__lastMoveColPos);
var targetScroller=this.__table.getTablePaneScrollerAtPageX(pageX);

if(this.__lastMoveTargetScroller&&this.__lastMoveTargetScroller!=targetScroller){this.__lastMoveTargetScroller.hideColumnMoveFeedback();
}
if(targetScroller!=null){this.__lastMoveTargetX=targetScroller.showColumnMoveFeedback(pageX);
}else{this.__lastMoveTargetX=null;
}this.__lastMoveTargetScroller=targetScroller;
this.__lastMoveMousePageX=pageX;
}},_onMousemoveHeader:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}var useResizeCursor=false;
var mouseOverColumn=null;
var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
this.__lastMousePageX=pageX;
this.__lastMousePageY=pageY;

if(this.__resizeColumn!=null){this.__handleResizeColumn(pageX);
useResizeCursor=true;
e.stopPropagation();
}else if(this.__moveColumn!=null){this.__handleMoveColumn(pageX);
e.stopPropagation();
}else{var resizeCol=this._getResizeColumnForPageX(pageX);

if(resizeCol!=-1){useResizeCursor=true;
}else{var tableModel=table.getTableModel();
var col=this._getColumnForPageX(pageX);

if(col!=null&&tableModel.isColumnSortable(col)){mouseOverColumn=col;
}}}var cursor=useResizeCursor?"col-resize":null;
this.getApplicationRoot().setGlobalCursor(cursor);
this.setCursor(cursor);
this.__header.setMouseOverColumn(mouseOverColumn);
},_onMousemovePane:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
this.__lastMousePageX=pageX;
this.__lastMousePageY=pageY;
var row=this._getRowForPagePos(pageX,pageY);

if(row!=null&&this._getColumnForPageX(pageX)!=null){if(this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(pageX,pageY);
}}this.__header.setMouseOverColumn(null);
},_onMousedownHeader:function(e){if(!this.getTable().getEnabled()){return;
}var pageX=e.getDocumentLeft();
var resizeCol=this._getResizeColumnForPageX(pageX);

if(resizeCol!=-1){this._startResizeHeader(resizeCol,pageX);
e.stop();
}else{var moveCol=this._getColumnForPageX(pageX);

if(moveCol!=null){this._startMoveHeader(moveCol,pageX);
e.stop();
}}},_startResizeHeader:function(resizeCol,pageX){var columnModel=this.getTable().getTableColumnModel();
this.__resizeColumn=resizeCol;
this.__lastResizeMousePageX=pageX;
this.__lastResizeWidth=columnModel.getColumnWidth(this.__resizeColumn);
this.__headerClipper.capture();
},_startMoveHeader:function(moveCol,pageX){this.__moveColumn=moveCol;
this.__lastMoveMousePageX=pageX;
this.__lastMoveColPos=this.getTablePaneModel().getColumnLeft(moveCol);
this.__headerClipper.capture();
},_onMousedownPane:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}
if(this.isEditing()){this.stopEditing();
}var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
var row=this._getRowForPagePos(pageX,pageY);
var col=this._getColumnForPageX(pageX);

if(row!==null){this.__lastMouseDownCell={row:row,col:col};
var selectBeforeFocus=this.getSelectBeforeFocus();

if(selectBeforeFocus){table.getSelectionManager().handleMouseDown(row,e);
}if(!this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(pageX,pageY);
}
if(!selectBeforeFocus){table.getSelectionManager().handleMouseDown(row,e);
}}},_onMouseupFocusIndicator:function(e){if(this.__lastMouseDownCell&&!this.isEditing()&&this.__focusIndicator.getRow()==this.__lastMouseDownCell.row&&this.__focusIndicator.getColumn()==this.__lastMouseDownCell.col){this.__lastMouseDownCell={};
this.fireEvent("cellClick",qx.ui.table.pane.CellEvent,[this,e,this.__lastMouseDownCell.row,this.__lastMouseDownCell.col],true);
}},_onChangeCaptureHeader:function(e){if(this.__resizeColumn!=null){this._stopResizeHeader();
}
if(this.__moveColumn!=null){this._stopMoveHeader();
}},_stopResizeHeader:function(){var columnModel=this.getTable().getTableColumnModel();
if(!this.getLiveResize()){this._hideResizeLine();
columnModel.setColumnWidth(this.__resizeColumn,this.__lastResizeWidth);
}this.__resizeColumn=null;
this.__headerClipper.releaseCapture();
this.getApplicationRoot().setGlobalCursor(null);
this.setCursor(null);
},_stopMoveHeader:function(){var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getTablePaneModel();
this.__header.hideColumnMoveFeedback();

if(this.__lastMoveTargetScroller){this.__lastMoveTargetScroller.hideColumnMoveFeedback();
}
if(this.__lastMoveTargetX!=null){var fromVisXPos=paneModel.getFirstColumnX()+paneModel.getX(this.__moveColumn);
var toVisXPos=this.__lastMoveTargetX;

if(toVisXPos!=fromVisXPos&&toVisXPos!=fromVisXPos+1){var fromCol=columnModel.getVisibleColumnAtX(fromVisXPos);
var toCol=columnModel.getVisibleColumnAtX(toVisXPos);
var fromOverXPos=columnModel.getOverallX(fromCol);
var toOverXPos=(toCol!=null)?columnModel.getOverallX(toCol):columnModel.getOverallColumnCount();

if(toOverXPos>fromOverXPos){toOverXPos--;
}columnModel.moveColumn(fromOverXPos,toOverXPos);
}}this.__moveColumn=null;
this.__lastMoveTargetX=null;
this.__headerClipper.releaseCapture();
},_onMouseupPane:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}var row=this._getRowForPagePos(e.getDocumentLeft(),e.getDocumentTop());

if(row!=-1&&row!=null&&this._getColumnForPageX(e.getDocumentLeft())!=null){table.getSelectionManager().handleMouseUp(row,e);
}},_onMouseupHeader:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}
if(this.__resizeColumn!=null){this._stopResizeHeader();
this.__ignoreClick=true;
e.stop();
}else if(this.__moveColumn!=null){this._stopMoveHeader();
e.stop();
}},_onClickHeader:function(e){if(this.__ignoreClick){this.__ignoreClick=false;
return;
}var table=this.getTable();

if(!table.getEnabled()){return;
}var tableModel=table.getTableModel();
var pageX=e.getDocumentLeft();
var resizeCol=this._getResizeColumnForPageX(pageX);

if(resizeCol==-1){var col=this._getColumnForPageX(pageX);

if(col!=null&&tableModel.isColumnSortable(col)){var sortCol=tableModel.getSortColumnIndex();
var ascending=(col!=sortCol)?true:!tableModel.isSortAscending();
var data={column:col,ascending:ascending};

if(this.fireDataEvent("beforeSort",data)){tableModel.sortByColumn(col,ascending);
table.getSelectionModel().resetSelection();
}}}e.stop();
},_onClickPane:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
var row=this._getRowForPagePos(pageX,pageY);
var col=this._getColumnForPageX(pageX);

if(row!=null&&col!=null){table.getSelectionManager().handleClick(row,e);

if(this.__focusIndicator.isHidden()||(this.__lastMouseDownCell&&!this.isEditing()&&row==this.__lastMouseDownCell.row&&col==this.__lastMouseDownCell.col)){this.__lastMouseDownCell={};
this.fireEvent("cellClick",qx.ui.table.pane.CellEvent,[this,e,row,col],true);
}}},_onContextMenu:function(e){var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
var row=this._getRowForPagePos(pageX,pageY);
var col=this._getColumnForPageX(pageX);

if(this.__focusIndicator.isHidden()||(this.__lastMouseDownCell&&row==this.__lastMouseDownCell.row&&col==this.__lastMouseDownCell.col)){this.__lastMouseDownCell={};
this.fireEvent("cellContextmenu",qx.ui.table.pane.CellEvent,[this,e,row,col],true);
var menu=this.getTable().getContextMenu();

if(menu){if(menu.getChildren().length>0){menu.openAtMouse(e);
}else{menu.exclude();
}e.preventDefault();
}}},_onContextMenuOpen:function(e){},_onDblclickPane:function(e){var pageX=e.getDocumentLeft();
var pageY=e.getDocumentTop();
this._focusCellAtPagePos(pageX,pageY);
this.startEditing();
var row=this._getRowForPagePos(pageX,pageY);

if(row!=-1&&row!=null){this.fireEvent("cellDblclick",qx.ui.table.pane.CellEvent,[this,e,row],true);
}},_onMouseout:function(e){var table=this.getTable();

if(!table.getEnabled()){return;
}if(this.__resizeColumn==null){this.setCursor(null);
this.getApplicationRoot().setGlobalCursor(null);
}this.__header.setMouseOverColumn(null);
},_showResizeLine:function(x){var resizeLine=this._showChildControl("resize-line");
var width=resizeLine.getWidth();
var paneBounds=this.__paneClipper.getBounds();
resizeLine.setUserBounds(x-Math.round(width/2),0,width,paneBounds.height);
},_hideResizeLine:function(){this._excludeChildControl("resize-line");
},showColumnMoveFeedback:function(pageX){var paneModel=this.getTablePaneModel();
var columnModel=this.getTable().getTableColumnModel();
var paneLeft=this.__tablePane.getContainerLocation().left;
var colCount=paneModel.getColumnCount();
var targetXPos=0;
var targetX=0;
var currX=paneLeft;

for(var xPos=0;xPos<colCount;xPos++){var col=paneModel.getColumnAtX(xPos);
var colWidth=columnModel.getColumnWidth(col);

if(pageX<currX+colWidth/2){break;
}currX+=colWidth;
targetXPos=xPos+1;
targetX=currX-paneLeft;
}var scrollerLeft=this.__paneClipper.getContainerLocation().left;
var scrollerWidth=this.__paneClipper.getBounds().width;
var scrollX=scrollerLeft-paneLeft;
targetX=qx.lang.Number.limit(targetX,scrollX+2,scrollX+scrollerWidth-1);
this._showResizeLine(targetX);
return paneModel.getFirstColumnX()+targetXPos;
},hideColumnMoveFeedback:function(){this._hideResizeLine();
},_focusCellAtPagePos:function(pageX,pageY){var row=this._getRowForPagePos(pageX,pageY);

if(row!=-1&&row!=null){var col=this._getColumnForPageX(pageX);
this.__table.setFocusedCell(col,row);
}},setFocusedCell:function(col,row){if(!this.isEditing()){this.__tablePane.setFocusedCell(col,row,this.__updateContentPlanned);
this.__focusedCol=col;
this.__focusedRow=row;
this._updateFocusIndicator();
}},getFocusedColumn:function(){return this.__focusedCol;
},getFocusedRow:function(){return this.__focusedRow;
},scrollCellVisible:function(col,row){var paneModel=this.getTablePaneModel();
var xPos=paneModel.getX(col);

if(xPos!=-1){var clipperSize=this.__paneClipper.getInnerSize();

if(!clipperSize){return;
}var columnModel=this.getTable().getTableColumnModel();
var colLeft=paneModel.getColumnLeft(col);
var colWidth=columnModel.getColumnWidth(col);
var rowHeight=this.getTable().getRowHeight();
var rowTop=row*rowHeight;
var scrollX=this.getScrollX();
var scrollY=this.getScrollY();
var minScrollX=Math.min(colLeft,colLeft+colWidth-clipperSize.width);
var maxScrollX=colLeft;
this.setScrollX(Math.max(minScrollX,Math.min(maxScrollX,scrollX)));
var minScrollY=rowTop+rowHeight-clipperSize.height;

if(this.getTable().getKeepFirstVisibleRowComplete()){minScrollY+=rowHeight;
}var maxScrollY=rowTop;
this.setScrollY(Math.max(minScrollY,Math.min(maxScrollY,scrollY)),true);
}},isEditing:function(){return this.__cellEditor!=null;
},startEditing:function(){var table=this.getTable();
var tableModel=table.getTableModel();
var col=this.__focusedCol;

if(!this.isEditing()&&(col!=null)&&tableModel.isColumnEditable(col)){var row=this.__focusedRow;
var xPos=this.getTablePaneModel().getX(col);
var value=tableModel.getValue(col,row);
table.blockHeaderElements();
this.__cellEditorFactory=table.getTableColumnModel().getCellEditorFactory(col);
var cellInfo={col:col,row:row,xPos:xPos,value:value,table:table};
this.__cellEditor=this.__cellEditorFactory.createCellEditor(cellInfo);
if(this.__cellEditor===null){return false;
}else if(this.__cellEditor instanceof qx.ui.window.Window){this.__cellEditor.setModal(true);
this.__cellEditor.setShowClose(false);
this.__cellEditor.addListener("close",this._onCellEditorModalWindowClose,this);
var f=table.getModalCellEditorPreOpenFunction();

if(f!=null){f(this.__cellEditor,cellInfo);
}this.__cellEditor.open();
}else{var size=this.__focusIndicator.getInnerSize();
this.__cellEditor.setUserBounds(0,0,size.width,size.height);
this.__focusIndicator.addListener("mousedown",function(e){this.__lastMouseDownCell={row:this.__focusedRow,col:this.__focusedCol};
e.stopPropagation();
},this);
this.__focusIndicator.add(this.__cellEditor);
this.__focusIndicator.addState("editing");
this.__focusIndicator.setKeepActive(false);
this.__cellEditor.focus();
this.__cellEditor.activate();
}return true;
}return false;
},stopEditing:function(){this.flushEditor();
this.cancelEditing();
},flushEditor:function(){if(this.isEditing()){var value=this.__cellEditorFactory.getCellEditorValue(this.__cellEditor);
var oldValue=this.getTable().getTableModel().getValue(this.__focusedCol,this.__focusedRow);
this.getTable().getTableModel().setValue(this.__focusedCol,this.__focusedRow,value);
this.__table.focus();
this.__table.fireDataEvent("dataEdited",{row:this.__focusedRow,col:this.__focusedCol,oldValue:oldValue,value:value});
}},cancelEditing:function(){if(this.isEditing()&&!this.__cellEditor.pendingDispose){this.getTable().unblockHeaderElements();

if(this._cellEditorIsModalWindow){this.__cellEditor.destroy();
this.__cellEditor=null;
this.__cellEditorFactory=null;
this.__cellEditor.pendingDispose=true;
}else{this.__focusIndicator.removeState("editing");
this.__focusIndicator.setKeepActive(true);
this.__cellEditor.destroy();
this.__cellEditor=null;
this.__cellEditorFactory=null;
}}},_onCellEditorModalWindowClose:function(e){this.stopEditing();
},_getColumnForPageX:function(pageX){var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getTablePaneModel();
var colCount=paneModel.getColumnCount();
var currX=this.__header.getContainerLocation().left;

for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var colWidth=columnModel.getColumnWidth(col);
currX+=colWidth;

if(pageX<currX){return col;
}}return null;
},_getResizeColumnForPageX:function(pageX){var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getTablePaneModel();
var colCount=paneModel.getColumnCount();
var currX=this.__header.getContainerLocation().left;
var regionRadius=qx.ui.table.pane.Scroller.RESIZE_REGION_RADIUS;

for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var colWidth=columnModel.getColumnWidth(col);
currX+=colWidth;

if(pageX>=(currX-regionRadius)&&pageX<=(currX+regionRadius)){return col;
}}return -1;
},_getRowForPagePos:function(pageX,pageY){var panePos=this.__tablePane.getContentLocation();

if(pageX<panePos.left||pageX>panePos.right){return null;
}
if(pageY>=panePos.top&&pageY<=panePos.bottom){var rowHeight=this.getTable().getRowHeight();
var scrollY=this.__verScrollBar.getPosition();

if(this.getTable().getKeepFirstVisibleRowComplete()){scrollY=Math.floor(scrollY/rowHeight)*rowHeight;
}var tableY=scrollY+pageY-panePos.top;
var row=Math.floor(tableY/rowHeight);
var tableModel=this.getTable().getTableModel();
var rowCount=tableModel.getRowCount();
return (row<rowCount)?row:null;
}var headerPos=this.__header.getContainerLocation();

if(pageY>=headerPos.top&&pageY<=headerPos.bottom&&pageX<=headerPos.right){return -1;
}return null;
},setTopRightWidget:function(widget){var oldWidget=this.__topRightWidget;

if(oldWidget!=null){this.__top.remove(oldWidget);
}
if(widget!=null){this.__top.add(widget);
}this.__topRightWidget=widget;
},getTopRightWidget:function(){return this.__topRightWidget;
},getHeader:function(){return this.__header;
},getTablePane:function(){return this.__tablePane;
},getVerticalScrollBarWidth:function(){var scrollBar=this.__verScrollBar;
return scrollBar.isVisible()?(scrollBar.getSizeHint().width||0):0;
},getNeededScrollBars:function(forceHorizontal,preventVertical){var barWidth=this.__verScrollBar.getSizeHint().width;
var clipperSize=this.__paneClipper.getInnerSize();
var viewWidth=clipperSize?clipperSize.width:0;

if(this.getVerticalScrollBarVisible()){viewWidth+=barWidth;
}var viewHeight=clipperSize?clipperSize.height:0;

if(this.getHorizontalScrollBarVisible()){viewHeight+=barWidth;
}var tableModel=this.getTable().getTableModel();
var rowCount=tableModel.getRowCount();
var paneWidth=this.getTablePaneModel().getTotalWidth();
var paneHeight=this.getTable().getRowHeight()*rowCount;
var horNeeded=false;
var verNeeded=false;

if(paneWidth>viewWidth){horNeeded=true;

if(paneHeight>viewHeight-barWidth){verNeeded=true;
}}else if(paneHeight>viewHeight){verNeeded=true;

if(!preventVertical&&(paneWidth>viewWidth-barWidth)){horNeeded=true;
}}var horBar=qx.ui.table.pane.Scroller.HORIZONTAL_SCROLLBAR;
var verBar=qx.ui.table.pane.Scroller.VERTICAL_SCROLLBAR;
return ((forceHorizontal||horNeeded)?horBar:0)|((preventVertical||!verNeeded)?0:verBar);
},_applyScrollTimeout:function(value,old){this._startInterval(value);
},_startInterval:function(timeout){this.__timer.setInterval(timeout);
this.__timer.start();
},_stopInterval:function(){this.__timer.stop();
},_postponedUpdateContent:function(){this._updateContent();
},_oninterval:qx.event.GlobalError.observeMethod(function(){if(this.__updateContentPlanned&&!this.__tablePane._layoutPending){this.__updateContentPlanned=false;
this._updateContent();
}}),_updateContent:function(){var paneSize=this.__paneClipper.getInnerSize();

if(!paneSize){return;
}var paneHeight=paneSize.height;
var scrollX=this.__horScrollBar.getPosition();
var scrollY=this.__verScrollBar.getPosition();
var rowHeight=this.getTable().getRowHeight();
var firstRow=Math.floor(scrollY/rowHeight);
var oldFirstRow=this.__tablePane.getFirstVisibleRow();
this.__tablePane.setFirstVisibleRow(firstRow);
var visibleRowCount=Math.ceil(paneHeight/rowHeight);
var paneOffset=0;
var firstVisibleRowComplete=this.getTable().getKeepFirstVisibleRowComplete();

if(!firstVisibleRowComplete){visibleRowCount++;
paneOffset=scrollY%rowHeight;
}this.__tablePane.setVisibleRowCount(visibleRowCount);

if(firstRow!=oldFirstRow){this._updateFocusIndicator();
}this.__paneClipper.scrollToX(scrollX);
if(!firstVisibleRowComplete){this.__paneClipper.scrollToY(paneOffset);
}},_updateFocusIndicator:function(){if(!this.getShowCellFocusIndicator()){return;
}var table=this.getTable();

if(!table.getEnabled()){return;
}this.__focusIndicator.moveToCell(this.__focusedCol,this.__focusedRow);
}},destruct:function(){this._stopInterval();
var tablePaneModel=this.getTablePaneModel();

if(tablePaneModel){tablePaneModel.dispose();
}this.__lastMouseDownCell=this.__topRightWidget=this.__table=null;
this._disposeObjects("__horScrollBar","__verScrollBar","__headerClipper","__paneClipper","__focusIndicator","__header","__tablePane","__top","__timer");
}});
qx.Class.define("qx.ui.table.pane.Clipper",{extend:qx.ui.container.Composite,construct:function(){this.base(arguments,new qx.ui.layout.Grow());
this.setMinWidth(0);
},members:{scrollToX:function(value){this.getContentElement().scrollToX(value,false);
},scrollToY:function(value){this.getContentElement().scrollToY(value,true);
}}});
qx.Class.define("qx.ui.table.pane.Model",{extend:qx.core.Object,construct:function(tableColumnModel){this.base(arguments);
tableColumnModel.addListener("visibilityChangedPre",this._onColVisibilityChanged,this);
this.__tableColumnModel=tableColumnModel;
},events:{"modelChanged":"qx.event.type.Event"},statics:{EVENT_TYPE_MODEL_CHANGED:"modelChanged"},properties:{firstColumnX:{check:"Integer",init:0,apply:"_applyFirstColumnX"},maxColumnCount:{check:"Number",init:-1,apply:"_applyMaxColumnCount"}},members:{__columnCount:null,__tableColumnModel:null,_applyFirstColumnX:function(value,old){this.__columnCount=null;
this.fireEvent(qx.ui.table.pane.Model.EVENT_TYPE_MODEL_CHANGED);
},_applyMaxColumnCount:function(value,old){this.__columnCount=null;
this.fireEvent(qx.ui.table.pane.Model.EVENT_TYPE_MODEL_CHANGED);
},setTableColumnModel:function(tableColumnModel){this.__tableColumnModel=tableColumnModel;
this.__columnCount=null;
},_onColVisibilityChanged:function(evt){this.__columnCount=null;
this.fireEvent(qx.ui.table.pane.Model.EVENT_TYPE_MODEL_CHANGED);
},getColumnCount:function(){if(this.__columnCount==null){var firstX=this.getFirstColumnX();
var maxColCount=this.getMaxColumnCount();
var totalColCount=this.__tableColumnModel.getVisibleColumnCount();

if(maxColCount==-1||(firstX+maxColCount)>totalColCount){this.__columnCount=totalColCount-firstX;
}else{this.__columnCount=maxColCount;
}}return this.__columnCount;
},getColumnAtX:function(xPos){var firstX=this.getFirstColumnX();
return this.__tableColumnModel.getVisibleColumnAtX(firstX+xPos);
},getX:function(col){var firstX=this.getFirstColumnX();
var maxColCount=this.getMaxColumnCount();
var x=this.__tableColumnModel.getVisibleX(col)-firstX;

if(x>=0&&(maxColCount==-1||x<maxColCount)){return x;
}else{return -1;
}},getColumnLeft:function(col){var left=0;
var colCount=this.getColumnCount();

for(var x=0;x<colCount;x++){var currCol=this.getColumnAtX(x);

if(currCol==col){return left;
}left+=this.__tableColumnModel.getColumnWidth(currCol);
}return -1;
},getTotalWidth:function(){var totalWidth=0;
var colCount=this.getColumnCount();

for(var x=0;x<colCount;x++){var col=this.getColumnAtX(x);
totalWidth+=this.__tableColumnModel.getColumnWidth(col);
}return totalWidth;
}},destruct:function(){this.__tableColumnModel=null;
}});
qx.Class.define("qx.ui.treevirtual.DefaultDataCellRenderer",{extend:qx.ui.table.cellrenderer.Default,construct:function(){this.base(arguments);
},members:{_getCellStyle:function(cellInfo){var html=this.base(arguments,cellInfo)+qx.ui.treevirtual.SimpleTreeDataCellRenderer.MAIN_DIV_STYLE;
return html;
}}});
qx.Class.define("qx.ui.treevirtual.SimpleTreeDataRowRenderer",{extend:qx.ui.table.rowrenderer.Default,construct:function(){this.base(arguments);
},members:{updateDataRowElement:function(rowInfo,rowElem){var tree=rowInfo.table;
var rowData=rowInfo.rowData;
var tableModel=tree.getTableModel();
var treeCol=tableModel.getTreeColumn();
var node=rowData[treeCol];
rowInfo.selected=node.bSelected;

if(node.bSelected){var row=rowInfo.row;
tree.getSelectionModel()._addSelectionInterval(row,row);
}this.base(arguments,rowInfo,rowElem);
}}});
qx.Class.define("qx.ui.virtual.cell.Html",{extend:qx.ui.virtual.cell.Cell,properties:{appearance:{refine:true,init:"cell-html"}},members:{getContent:function(value,states){return value;
}}});
qx.Class.define("qx.ui.virtual.cell.AbstractImage",{extend:qx.ui.virtual.cell.Cell,type:"abstract",construct:function(){this.base(arguments);
this._aliasManager=qx.util.AliasManager.getInstance();
},members:{__defaultWidth:16,__defaultHeight:16,_aliasManager:null,__getImageSize:function(source){var ResourceManager=qx.util.ResourceManager.getInstance();
var ImageLoader=qx.io.ImageLoader;
var width,height;
if(ResourceManager.has(source)){width=ResourceManager.getImageWidth(source),height=ResourceManager.getImageHeight(source);
}else if(ImageLoader.isLoaded(source)){width=ImageLoader.getWidth(source);
height=ImageLoader.getHeight(source);
}else{width=this.__defaultWidth;
height=this.__defaultHeight;
}return {width:width,height:height};
},__createImage:function(imageData){if(typeof (imageData)=="string"){imageData={url:imageData};
}var url=this._aliasManager.resolve(imageData.url||null);
var sizes;

if(imageData.width&&imageData.height){sizes={width:imageData.width,height:imageData.height};
}else{sizes=this.__getImageSize(url);
}return {width:sizes.width,height:sizes.height,url:url,tooltip:imageData.tooltip};
},_identifyImage:function(value){throw new Error("_identifyImage is abstract");
},getContent:function(value,states){if(value===null){return "";
}var content="";
var imageData=this.__createImage(this._identifyImage(value));
var isOldFireFox=qx.bom.client.Engine.GECKO&&qx.bom.client.Engine.VERSION<1.9;
var tooltip=imageData.tooltip?'title="'+imageData.tooltip+'"':"";
var styles={width:imageData.width+"px",height:imageData.height+"px",display:isOldFireFox?"-moz-inline-box":"inline-block",verticalAlign:"top",position:"static"};
var tag=qx.bom.element.Decoration.getTagName("no-repeat",imageData.url);
var ret=qx.bom.element.Decoration.getAttributes(imageData.url,"no-repeat",styles);
var css=qx.bom.element.Style.compile(ret.style);

if(tag==="img"){content='<img src="'+ret.src+'" style="'+css+'" ';
content+=tooltip+'/>';
}else{content='<div style="'+css+'" ';
content+=tooltip+'></div>';
}return content;
}}});
qx.Class.define("qx.ui.virtual.cell.Boolean",{extend:qx.ui.virtual.cell.AbstractImage,construct:function(){this.base(arguments);
this.__aliasManager=qx.util.AliasManager.getInstance();
},properties:{appearance:{refine:true,init:"cell-boolean"},iconTrue:{check:"String",themeable:true,apply:"_applyIconTrue"},iconFalse:{check:"String",themeable:true,apply:"_applyIconFalse"}},members:{__imageTrue:null,__imageFalse:null,__aliasManager:null,_applyIconTrue:function(value){this.__imageTrue=this.__aliasManager.resolve(value);
},_applyIconFalse:function(value){this.__imageFalse=this.__aliasManager.resolve(value);
},_identifyImage:function(value){return value==true?this.__imageTrue:this.__imageFalse;
}}});
qx.Class.define("qx.ui.progressive.headfoot.TableHeading",{extend:qx.ui.progressive.headfoot.Abstract,construct:function(columnWidths,labelArr){this.base(arguments);
this.__columnWidths=columnWidths;
var columnData=columnWidths.getData();
this.__labels=[];
for(var i=0;i<columnData.length;i++){var label=new qx.ui.basic.Atom(labelArr[i]);
label.setAppearance("progressive-table-header-cell");
this.add(label);
this.__labels[i]=label;
}var spacer=new qx.ui.core.Widget();
spacer.set({height:16,appearance:"progressive-table-header-cell",minWidth:0,width:0});
this.add(spacer,{flex:1});
this.addListener("resize",this._resizeColumns,this);
this.__layout=new qx.ui.layout.HBox();
this.__layout.connectToWidget(this);
},properties:{appearance:{refine:true,init:"progressive-table-header"}},members:{__columnWidths:null,__bCalculateWidths:null,__labels:null,__layout:null,join:function(progressive){this.base(arguments,progressive);
},getLayoutChildren:function(){if(this.__bCalculateWidths){return this.__columnWidths.getData();
}else{return this.base(arguments);
}},_resizeColumns:function(e){var width=this.getBounds().width-qx.bom.element.Overflow.getScrollbarWidth();
this.__bCalculateWidths=true;
this.__layout.renderLayout(width,100);
this.__bCalculateWidths=false;
var columnData=this.__columnWidths.getData();
for(var i=0;i<columnData.length;i++){this.__labels[i].setWidth(columnData[i].getComputedWidth());
}}},destruct:function(){this.__columnWidths=this.__labels=null;
this._disposeObjects("_layout");
}});
qx.Mixin.define("qx.ui.table.MTableContextMenu",{construct:function(){this.addListener("cellContextmenu",function(e){if(this._contextMenuTimer){this._contextMenuTimer.dispose();
this._contextMenuTimer=null;
}if(this._contextMenu){this._contextMenu.hide();
this.setContextMenu(null);
this.getApplicationRoot().remove(this._contextMenu);
this._contextMenu.dispose();
this._contextMenu=null;
}var col=e.getColumn();
var contextMenuHandler=this.getContextMenuHandler(col);
if(contextMenuHandler==null){return;
}var tableModel=this.getTableModel();
this._contextMenu=new qx.ui.menu.Menu();
this._contextMenu.addListener("contextmenu",function(e){e.preventDefault();
});
var bShowContextMenu=contextMenuHandler(col,e.getRow(),this,tableModel,this._contextMenu);
if(!bShowContextMenu){this._contextMenu.dispose();
return;
}this.setContextMenu(this._contextMenu);
},this);
this.__contextMenuHandler=[];
},members:{__contextMenuHandler:null,setContextMenuHandler:function(col,handler){this.__contextMenuHandler[col]=handler;
},getContextMenuHandler:function(col){return this.__contextMenuHandler[col];
}},destruct:function(){this.__contextMenuHandler=null;
}});
qx.Class.define("qx.ui.embed.Flash",{extend:qx.ui.core.Widget,construct:function(source,id){this.base(arguments);
{qx.core.Assert.assertString(source,"Invalid parameter 'source'.");

if(id){qx.core.Assert.assertString(id,"Invalid parameter 'id'.");
}};
this.setSource(source);

if(id){this.setId(id);
}else{this.setId("flash"+this.toHashCode());
}this.initQuality();
this.initWmode();
this.initAllowScriptAccess();
this.initLiveConnect();
this.addListenerOnce("appear",function(){this.getContentElement().createFlash();
},this);
},properties:{source:{check:"String",apply:"_applySource"},id:{check:"String",apply:"_applyId"},quality:{check:["low","autolow","autohigh","medium","high","best"],init:"best",nullable:true,apply:"_applyQuality"},scale:{check:["showall","noborder","excactfit","noscale"],nullable:true,apply:"_applyScale"},wmode:{check:["window","opaque","transparent"],init:"opaque",nullable:true,apply:"_applyWmode"},play:{check:"Boolean",nullable:true,apply:"_applyPlay"},loop:{check:"Boolean",nullable:true,apply:"_applyLoop"},mayScript:{check:"Boolean",nullable:false,apply:"_applyMayScript"},menu:{check:"Boolean",nullable:true,apply:"_applyMenu"},allowScriptAccess:{check:["sameDomain","always","never"],init:"sameDomain",nullable:true,apply:"_applyAllowScriptAccess"},liveConnect:{check:"Boolean",init:true,nullable:true,apply:"_applyLiveConnect"},variables:{init:{},check:"Map",apply:"_applyVariables"}},members:{getFlashElement:function(){var element=this.getContentElement();

if(element){return element.getFlashElement();
}else{return null;
}},_createContentElement:function(){return new qx.html.Flash();
},_applySource:function(value,old){var source=qx.util.ResourceManager.getInstance().toUri(value);
this.getContentElement().setSource(source);
qx.ui.core.queue.Layout.add(this);
},_applyId:function(value,old){this.getContentElement().setId(value);
qx.ui.core.queue.Layout.add(this);
},_applyVariables:function(value,old){this.getContentElement().setVariables(value);
qx.ui.core.queue.Layout.add(this);
},_applyMayScript:function(value,old){this.getContentElement().setAttribute("mayscript",value?"":false);
qx.ui.core.queue.Layout.add(this);
},_applyQuality:function(value,old){this.__flashParamHelper("quality",value);
},_applyScale:function(value,old){this.__flashParamHelper("scale",value);
},_applyWmode:function(value,old){this.__flashParamHelper("wmode",value);
},_applyPlay:function(value,old){this.__flashParamHelper("play",value);
},_applyLoop:function(value,old){this.__flashParamHelper("loop",value);
},_applyMenu:function(value,old){this.__flashParamHelper("menu",value);
},_applyAllowScriptAccess:function(value,old){this.__flashParamHelper("allowScriptAccess",value);
},_applyLiveConnect:function(value,old){this.__flashParamHelper("swLiveConnect",value);
},__flashParamHelper:function(key,value){this.getContentElement().setParam(key,value);
qx.ui.core.queue.Layout.add(this);
}}});
qx.Class.define("qx.ui.core.ScrollSlider",{extend:qx.ui.core.scroll.ScrollSlider,construct:function(orientation){this.base(arguments,orientation);
qx.log.Logger.deprecatedClassWarning(qx.ui.core.ScrollSlider,"This class has been moved to qx.ui.core.scroll.ScrollSlider");
}});
qx.Class.define("qx.ui.virtual.form.ListController",{extend:qx.core.Object,construct:function(model,target){this.base(arguments);
this.setSelection(new qx.data.Array());

if(model!=null){this.setModel(model);
}
if(target!=null){this.setTarget(target);
}},properties:{target:{check:"qx.ui.virtual.form.List",event:"changeTarget",nullable:true,init:null,apply:"_applyTarget"},model:{check:"qx.data.IListData",event:"changeModel",nullable:true,init:null,apply:"_applyModel"},selection:{check:"qx.data.IListData",event:"changeSelection",apply:"_applySelection"},delegate:{apply:"_applyDelegate",event:"changeDelegate",init:null,nullable:true}},members:{__changeLengthListenerId:null,__changeListenerId:null,__changeBubbleListenerId:null,__changeSelectionListenerId:null,__changeSelectionModelListenerId:null,__changeSelectionLengthModelListenerId:null,__lookupTable:null,_validDelegates:["sorter","filter"],_getRowData:function(row){var model=this.getModel();
return model?model.getItem(this.__lookup(row)):null;
},_getModelRow:function(modelItem){return this.getModel().indexOf(modelItem);
},getRowCount:function(){return this.__lookupTable.length;
},update:function(){this.__buildUpLookupTable();
this._syncViewSelectionToModel();
},__buildUpLookupTable:function(){var model=this.getModel();

if(model==null){return;
}this.__lookupTable=[];
this._runDelegateFilter(model);
this._runDelegateSorter(model);

if(this.getTarget()!=null){this._syncRowCount();
}},_runDelegateSorter:function(model){if(!this._containsDelegateMethod(this.getDelegate(),"sorter")||qx.lang.Type.isObject(model)){return;
}
if(this.__lookupTable.length==0){return;
}var sorter=this._getDelegate("sorter");

if(sorter!=null){this.__lookupTable.sort(function(a,b){return sorter(model.getItem(a),model.getItem(b));
});
}},_runDelegateFilter:function(model){if(typeof model!=="object"){return;
}var filter=this._getDelegate("filter");

for(var i=0,l=model.length;i<l;++i){if(filter==null||filter(model.getItem(i))){this.__lookupTable.push(i);
}}},_containsDelegateMethod:function(delegate,specificMethod){var Type=qx.lang.Type;

if(Type.isObject(delegate)){if(Type.isString(specificMethod)){return Type.isFunction(delegate[specificMethod]);
}else{for(var methodName in this._validDelegates){if(Type.isFunction(delegate[methodName])){return true;
}}}}return false;
},_getDelegate:function(method){var delegate=this.getDelegate();

if(this._containsDelegateMethod(delegate,method)){return delegate[method];
}return null;
},__lookup:function(index){return this.__lookupTable[index];
},_applyDelegate:function(value,old){if(this.getTarget()==null||this.getModel()==null){return;
}
if(this._containsDelegateMethod(value)){this.__buildUpLookupTable();
}},_applyTarget:function(value,old){if(value!=null){value.setDelegate(this);
this.__changeSelectionListenerId=value.getSelectionManager().addListener("changeSelection",this._onChangeSelectionView,this);
}
if(old!=null){old.setDelegate(null);
old.getSelectionManager().removeListenerById(this.__changeSelectionListenerId);
}
if(this.getModel()==null){return;
}this.__buildUpLookupTable();
this._syncRowCount();
},_applyModel:function(value,old){if(old!=null){old.removeListenerById(this.__changeLengthListenerId);
old.removeListenerById(this.__changeListenerId);
old.removeListenerById(this.__changeBubbleListenerId);
}
if(value!=null){this.__buildUpLookupTable();
this.__changeLengthListenerId=value.addListener("changeLength",this._onChangeLengthModel,this);
this.__changeListenerId=value.addListener("change",this._onChangeModel,this);
this.__changeBubbleListenerId=value.addListener("changeBubble",this._onChangeBubbleModel,this);
}
if(this.getTarget()!=null){this._syncRowCount();
}},_applySelection:function(value,old){if(value!=null){this.__changeSelectionModelListenerId=value.addListener("change",this._onChangeSelectionModel,this);
this.__changeSelectionLengthModelListenerId=value.addListener("changeLength",this._onChangeSelectionModel,this);
this._syncModelSelectionToView();
}
if(old!=null){old.removeListenerById(this.__changeSelectionModelListenerId);
old.removeListenerById(this.__changeSelectionLengthModelListenerId);
}},_onChangeSelectionView:function(e){this._syncViewSelectionToModel();
},_onChangeSelectionModel:function(e){this._syncModelSelectionToView();
},_onChangeLengthModel:function(e){this.__buildUpLookupTable();
this._syncRowCount();
},_onChangeModel:function(e){var target=this.getTarget();

if(target!=null){this.__buildUpLookupTable();
target.update();
}},_onChangeBubbleModel:function(e){var target=this.getTarget();

if(target!=null){this.__buildUpLookupTable();
target.update();
}},_syncViewSelectionToModel:function(){if(this._ignoreSelectionChange){return;
}var target=this.getTarget();

if(!target){this.getSelection().removaeAll();
return;
}var targetSelection=target.getSelectionManager().getSelection();
var selection=[];

for(var i=0;i<targetSelection.length;i++){var modelItem=this._getRowData(targetSelection[i]);
selection.push(modelItem);
}selection.unshift(this.getSelection().length);
selection.unshift(0);
this._ignoreSelectionChange=true;
this.getSelection().splice.apply(this.getSelection(),selection);
this._ignoreSelectionChange=false;
},_syncModelSelectionToView:function(){if(this._ignoreSelectionChange){return;
}var target=this.getTarget();

if(!target){return;
}this._ignoreSelectionChange=true;
var modelSelection=this.getSelection();
var selection=[];

for(var i=modelSelection.length;i>=0;i--){var row=this._getModelRow(modelSelection.getItem(i));

if(row!==-1){selection.push(row);
}else{modelSelection.removeAt(i);
}}target.getSelectionManager().replaceSelection(selection);
this._ignoreSelectionChange=false;
},_syncRowCount:function(){var length=this.getRowCount();
this.getTarget().setRowCount(length);
},getCellData:function(row){return this._getRowData(row)||"";
}},destruct:function(){this.__lookupTable=null;
}});
qx.Class.define("qx.ui.table.model.Remote",{extend:qx.ui.table.model.Abstract,construct:function(){this.base(arguments);
this.__sortColumnIndex=-1;
this.__sortAscending=true;
this.__rowCount=-1;
this.__lruCounter=0;
this.__firstLoadingBlock=-1;
this.__firstRowToLoad=-1;
this.__lastRowToLoad=-1;
this.__ignoreCurrentRequest=false;
this.__rowBlockCache={};
this.__rowBlockCount=0;
this.__sortableColArr=null;
this.__editableColArr=null;
},properties:{blockSize:{check:"Integer",init:50},maxCachedBlockCount:{check:"Integer",init:15},clearCacheOnRemove:{check:"Boolean",init:false},blockConcurrentLoadRowCount:{check:"Boolean",init:true}},members:{__rowCount:null,__ignoreCurrentRequest:null,__lruCounter:null,__firstLoadingBlock:null,__firstRowToLoad:null,__lastRowToLoad:null,__rowBlockCache:null,__rowBlockCount:null,__sortColumnIndex:null,__sortAscending:null,__editableColArr:null,__sortableColArr:null,__loadRowCountRequestRunning:false,_getIgnoreCurrentRequest:function(){return this.__ignoreCurrentRequest;
},getRowCount:function(){if(this.__rowCount==-1){if(!this.__loadRowCountRequestRunning||!this.getBlockConcurrentLoadRowCount()){this.__loadRowCountRequestRunning=true;
this._loadRowCount();
}return (this.__rowCount==-1)?0:this.__rowCount;
}else{return this.__rowCount;
}},_loadRowCount:function(){throw new Error("_loadRowCount is abstract");
},_onRowCountLoaded:function(rowCount){if(this.getBlockConcurrentLoadRowCount()){this.__loadRowCountRequestRunning=false;
}if(rowCount==null||rowCount<0){rowCount=0;
}this.__rowCount=Number(rowCount);
var data={firstRow:0,lastRow:rowCount-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
},reloadData:function(){this.clearCache();
if(this.__firstLoadingBlock!=-1){var cancelingSuceed=this._cancelCurrentRequest();

if(cancelingSuceed){this.__firstLoadingBlock=-1;
this.__ignoreCurrentRequest=false;
}else{this.__ignoreCurrentRequest=true;
}}this.__firstRowToLoad=-1;
this.__lastRowToLoad=-1;
if(!this.__loadRowCountRequestRunning||!this.getBlockConcurrentLoadRowCount()){this.__loadRowCountRequestRunning=true;
this._loadRowCount();
}},clearCache:function(){this.__rowBlockCache={};
this.__rowBlockCount=0;
},getCacheContent:function(){return {sortColumnIndex:this.__sortColumnIndex,sortAscending:this.__sortAscending,rowCount:this.__rowCount,lruCounter:this.__lruCounter,rowBlockCache:this.__rowBlockCache,rowBlockCount:this.__rowBlockCount};
},restoreCacheContent:function(cacheContent){if(this.__firstLoadingBlock!=-1){var cancelingSuceed=this._cancelCurrentRequest();

if(cancelingSuceed){this.__firstLoadingBlock=-1;
this.__ignoreCurrentRequest=false;
}else{this.__ignoreCurrentRequest=true;
}}this.__sortColumnIndex=cacheContent.sortColumnIndex;
this.__sortAscending=cacheContent.sortAscending;
this.__rowCount=cacheContent.rowCount;
this.__lruCounter=cacheContent.lruCounter;
this.__rowBlockCache=cacheContent.rowBlockCache;
this.__rowBlockCount=cacheContent.rowBlockCount;
var data={firstRow:0,lastRow:this.__rowCount-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
},_cancelCurrentRequest:function(){return false;
},iterateCachedRows:function(iterator,object){var blockSize=this.getBlockSize();
var blockCount=Math.ceil(this.getRowCount()/blockSize);
for(var block=0;block<=blockCount;block++){var blockData=this.__rowBlockCache[block];

if(blockData!=null){var rowOffset=block*blockSize;
var rowDataArr=blockData.rowDataArr;

for(var relRow=0;relRow<rowDataArr.length;relRow++){var rowData=rowDataArr[relRow];
var newRowData=iterator.call(object,rowOffset+relRow,rowData);

if(newRowData!=null){rowDataArr[relRow]=newRowData;
}}}}},prefetchRows:function(firstRowIndex,lastRowIndex){if(this.__firstLoadingBlock==-1){var blockSize=this.getBlockSize();
var totalBlockCount=Math.ceil(this.__rowCount/blockSize);
var firstBlock=parseInt(firstRowIndex/blockSize)-1;

if(firstBlock<0){firstBlock=0;
}var lastBlock=parseInt(lastRowIndex/blockSize)+1;

if(lastBlock>=totalBlockCount){lastBlock=totalBlockCount-1;
}var firstBlockToLoad=-1;
var lastBlockToLoad=-1;

for(var block=firstBlock;block<=lastBlock;block++){if(this.__rowBlockCache[block]==null||this.__rowBlockCache[block].isDirty){if(firstBlockToLoad==-1){firstBlockToLoad=block;
}lastBlockToLoad=block;
}}if(firstBlockToLoad!=-1){this.__firstRowToLoad=-1;
this.__lastRowToLoad=-1;
this.__firstLoadingBlock=firstBlockToLoad;
this._loadRowData(firstBlockToLoad*blockSize,(lastBlockToLoad+1)*blockSize-1);
}}else{this.__firstRowToLoad=firstRowIndex;
this.__lastRowToLoad=lastRowIndex;
}},_loadRowData:function(firstRow,lastRow){throw new Error("_loadRowCount is abstract");
},_onRowDataLoaded:function(rowDataArr){if(rowDataArr!=null&&!this.__ignoreCurrentRequest){var blockSize=this.getBlockSize();
var blockCount=Math.ceil(rowDataArr.length/blockSize);

if(blockCount==1){this._setRowBlockData(this.__firstLoadingBlock,rowDataArr);
}else{for(var i=0;i<blockCount;i++){var rowOffset=i*blockSize;
var blockRowData=[];
var mailCount=Math.min(blockSize,rowDataArr.length-rowOffset);

for(var row=0;row<mailCount;row++){blockRowData.push(rowDataArr[rowOffset+row]);
}this._setRowBlockData(this.__firstLoadingBlock+i,blockRowData);
}}var data={firstRow:this.__firstLoadingBlock*blockSize,lastRow:(this.__firstLoadingBlock+blockCount+1)*blockSize-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
}this.__firstLoadingBlock=-1;
this.__ignoreCurrentRequest=false;
if(this.__firstRowToLoad!=-1){this.prefetchRows(this.__firstRowToLoad,this.__lastRowToLoad);
}},_setRowBlockData:function(block,rowDataArr){if(this.__rowBlockCache[block]==null){this.__rowBlockCount++;

while(this.__rowBlockCount>this.getMaxCachedBlockCount()){var lruBlock;
var minLru=this.__lruCounter;

for(var currBlock in this.__rowBlockCache){var currLru=this.__rowBlockCache[currBlock].lru;

if(currLru<minLru&&currBlock>1){minLru=currLru;
lruBlock=currBlock;
}}delete this.__rowBlockCache[lruBlock];
this.__rowBlockCount--;
}}this.__rowBlockCache[block]={lru:++this.__lruCounter,rowDataArr:rowDataArr};
},removeRow:function(rowIndex){if(this.getClearCacheOnRemove()){this.clearCache();
var data={firstRow:0,lastRow:this.getRowCount()-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
}else{var blockSize=this.getBlockSize();
var blockCount=Math.ceil(this.getRowCount()/blockSize);
var startBlock=parseInt(rowIndex/blockSize);
for(var block=startBlock;block<=blockCount;block++){var blockData=this.__rowBlockCache[block];

if(blockData!=null){var removeIndex=0;

if(block==startBlock){removeIndex=rowIndex-block*blockSize;
}blockData.rowDataArr.splice(removeIndex,1);

if(block==blockCount-1){if(blockData.rowDataArr.length==0){delete this.__rowBlockCache[block];
}}else{var nextBlockData=this.__rowBlockCache[block+1];

if(nextBlockData!=null){blockData.rowDataArr.push(nextBlockData.rowDataArr[0]);
}else{blockData.isDirty=true;
}}}}
if(this.__rowCount!=-1){this.__rowCount--;
}if(this.hasListener("dataChanged")){var data={firstRow:rowIndex,lastRow:this.getRowCount()-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.fireDataEvent("dataChanged",data);
}}},getRowData:function(rowIndex){var blockSize=this.getBlockSize();
var block=parseInt(rowIndex/blockSize);
var blockData=this.__rowBlockCache[block];

if(blockData==null){return null;
}else{var rowData=blockData.rowDataArr[rowIndex-(block*blockSize)];
if(blockData.lru!=this.__lruCounter){blockData.lru=++this.__lruCounter;
}return rowData;
}},getValue:function(columnIndex,rowIndex){var rowData=this.getRowData(rowIndex);

if(rowData==null){return null;
}else{var columnId=this.getColumnId(columnIndex);
return rowData[columnId];
}},setValue:function(columnIndex,rowIndex,value){var rowData=this.getRowData(rowIndex);

if(rowData==null){return ;
}else{var columnId=this.getColumnId(columnIndex);
rowData[columnId]=value;
if(this.hasListener("dataChanged")){var data={firstRow:rowIndex,lastRow:rowIndex,firstColumn:columnIndex,lastColumn:columnIndex};
this.fireDataEvent("dataChanged",data);
}}},setEditable:function(editable){this.__editableColArr=[];

for(var col=0;col<this.getColumnCount();col++){this.__editableColArr[col]=editable;
}this.fireEvent("metaDataChanged");
},setColumnEditable:function(columnIndex,editable){if(editable!=this.isColumnEditable(columnIndex)){if(this.__editableColArr==null){this.__editableColArr=[];
}this.__editableColArr[columnIndex]=editable;
this.fireEvent("metaDataChanged");
}},isColumnEditable:function(columnIndex){return (this.__editableColArr?(this.__editableColArr[columnIndex]==true):false);
},setColumnSortable:function(columnIndex,sortable){if(sortable!=this.isColumnSortable(columnIndex)){if(this.__sortableColArr==null){this.__sortableColArr=[];
}this.__sortableColArr[columnIndex]=sortable;
this.fireEvent("metaDataChanged");
}},isColumnSortable:function(columnIndex){return (this.__sortableColArr?(this.__sortableColArr[columnIndex]!==false):true);
},sortByColumn:function(columnIndex,ascending){if(this.__sortColumnIndex!=columnIndex||this.__sortAscending!=ascending){this.__sortColumnIndex=columnIndex;
this.__sortAscending=ascending;
this.clearCache();
this.fireEvent("metaDataChanged");
}},getSortColumnIndex:function(){return this.__sortColumnIndex;
},isSortAscending:function(){return this.__sortAscending;
},setSortColumnIndexWithoutSortingData:function(sortColumnIndex){this.__sortColumnIndex=sortColumnIndex;
},setSortAscendingWithoutSortingData:function(sortAscending){this.__sortAscending=sortAscending;
}},destruct:function(){this.__sortableColArr=this.__editableColArr=this.__rowBlockCache=null;
}});
qx.Class.define("qx.ui.form.CheckBox",{extend:qx.ui.form.ToggleButton,include:[qx.ui.form.MForm,qx.ui.form.MModelProperty],implement:[qx.ui.form.IForm,qx.ui.form.IModel],construct:function(label){{this.assertArgumentsCount(arguments,0,1);
};
this.base(arguments,label);
this.setValue(false);
},properties:{appearance:{refine:true,init:"checkbox"},allowGrowX:{refine:true,init:false}}});
qx.Class.define("qx.ui.embed.Html",{extend:qx.ui.core.Widget,include:[qx.ui.core.MNativeOverflow],construct:function(html){this.base(arguments);

if(html!=null){this.setHtml(html);
}},properties:{html:{check:"String",apply:"_applyHtml",event:"changeHtml",nullable:true},cssClass:{check:"String",init:"",apply:"_applyCssClass"},selectable:{refine:true,init:true},focusable:{refine:true,init:true}},members:{getFocusElement:function(){return this.getContentElement();
},_applyHtml:function(value,old){var elem=this.getContentElement();
elem.setAttribute("html",value||"");
elem.setStyles({"padding":"0px","border":"none"});
},_applyCssClass:function(value,old){this.getContentElement().setAttribute("class",value);
},_applySelectable:function(value){this.base(arguments,value);
if(qx.core.Variant.isSet("qx.client","webkit")){this.getContainerElement().setStyle("userSelect",value?"text":"none");
this.getContentElement().setStyle("userSelect",value?"text":"none");
}},_applyFont:function(value,old){var styles=value?qx.theme.manager.Font.getInstance().resolve(value).getStyles():qx.bom.Font.getDefaultStyles();
this.getContentElement().setStyles(styles);
},_applyTextColor:function(value,old){if(value){this.getContentElement().setStyle("color",qx.theme.manager.Color.getInstance().resolve(value));
}else{this.getContentElement().removeStyle("color");
}}}});
qx.Class.define("qx.ui.layout.Flow",{extend:qx.ui.layout.Abstract,construct:function(spacingX,spacingY,alignX){this.base(arguments);

if(spacingX){this.setSpacingX(spacingX);
}
if(spacingY){this.setSpacingY(spacingY);
}
if(alignX){this.setAlignX(alignX);
}},properties:{alignX:{check:["left","center","right"],init:"left",apply:"_applyLayoutChange"},alignY:{check:["top","middle","bottom"],init:"top",apply:"_applyLayoutChange"},spacingX:{check:"Integer",init:0,apply:"_applyLayoutChange"},spacingY:{check:"Integer",init:0,apply:"_applyLayoutChange"},reversed:{check:"Boolean",init:false,apply:"_applyLayoutChange"}},members:{verifyLayoutProperty:function(item,name,value){this.assertEquals("lineBreak",name,"The property '"+name+"' is not supported by the flow layout!");
},renderLayout:function(availWidth,availHeight){var children=this._getLayoutChildren();

if(this.getReversed()){children=children.concat().reverse();
}var lineCalculator=new qx.ui.layout.LineSizeIterator(children,this.getSpacingX());
var lineTop=0;

while(lineCalculator.hasMoreLines()){var line=lineCalculator.computeNextLine(availWidth);
this.__renderLine(line,lineTop,availWidth);
lineTop+=line.height+this.getSpacingY();
}},__renderLine:function(line,lineTop,availWidth){var util=qx.ui.layout.Util;
var left=0;

if(this.getAlignX()!="left"){left=availWidth-line.width;

if(this.getAlignX()=="center"){left=Math.round(left/2);
}}
for(var i=0;i<line.children.length;i++){var child=line.children[i];
var size=child.getSizeHint();
var marginTop=child.getMarginTop();
var marginBottom=child.getMarginBottom();
var top=util.computeVerticalAlignOffset(child.getAlignY()||this.getAlignY(),marginTop+size.height+marginBottom,line.height,marginTop,marginBottom);
child.renderLayout(left+line.gapsBefore[i],lineTop+top,size.width,size.height);
left+=line.gapsBefore[i]+size.width;
}},_computeSizeHint:function(){return this.__computeSize(Infinity);
},hasHeightForWidth:function(){return true;
},getHeightForWidth:function(width){return this.__computeSize(width).height;
},__computeSize:function(availWidth){var lineCalculator=new qx.ui.layout.LineSizeIterator(this._getLayoutChildren(),this.getSpacingX());
var height=0;
var width=0;
var lineCount=0;

while(lineCalculator.hasMoreLines()){var line=lineCalculator.computeNextLine(availWidth);
lineCount+=1;
width=Math.max(width,line.width);
height+=line.height;
}return {width:width,height:height+this.getSpacingY()*(lineCount-1)};
}}});
qx.Class.define("qx.ui.menubar.MenuBar",{extend:qx.ui.toolbar.ToolBar,properties:{appearance:{refine:true,init:"menubar"}}});
qx.Class.define("qx.ui.progressive.renderer.table.Row",{extend:qx.ui.progressive.renderer.Abstract,construct:function(columnWidths){this.base(arguments);
this.__columnWidths=columnWidths;
this.__renderers={};
this.__defaultCellRenderer=new qx.ui.progressive.renderer.table.cell.Default();
this.__progressive=null;
this.__colors={};
var colorMgr=qx.theme.manager.Color.getInstance();
this.__colors.bgcol=[];
this.__colors.bgcol[0]=colorMgr.resolve("progressive-table-row-background-even");
this.__colors.bgcol[1]=colorMgr.resolve("progressive-table-row-background-odd");
this.__layout=new qx.ui.layout.HBox();
this.__layout.connectToWidget(this);
},statics:{__clazz:null,__padding:6,__tableCellStyleSheet:"  position: absolute;"+"  top: 0px;"+"  height: 100%;"+"  overflow:hidden;"+"  text-overflow:ellipsis;"+"  -o-text-overflow: ellipsis;"+"  white-space:nowrap;"+"  border-right:1px solid #f2f2f2;"+"  border-bottom:1px solid #eeeeee;"+"  padding : 0px 6px 0px 6px;"+"  cursor:default;"+"  font-size: 11px;"+"  font-family: 'Segoe UI', Corbel, Calibri, Tahoma, 'Lucida Sans Unicode', sans-serif;"+(qx.core.Variant.isSet("qx.client","mshtml")?'':';-moz-user-select:none;')},properties:{defaultRowHeight:{init:16}},members:{__progressive:null,__name:null,__hash:null,__columnWidths:null,__renderers:null,__defaultCellRenderer:null,__colors:null,__layout:null,join:function(progressive,name){if(this.__progressive){throw new Error("Renderer is already joined to a Progressive.");
}this.__progressive=progressive;
this.__name=name;
var tr=qx.ui.progressive.renderer.table.Row;

if(!tr.__clazz){tr.__clazz={};
}var hash=progressive.toHashCode();

if(!tr.__clazz[hash]){tr.__clazz[hash]={rowstylesheet:null,cellstylesheet:[]};
var stylesheet=".qx-progressive-"+hash+"-row {"+"  width : 100%;"+"}";
tr.__clazz[hash].rowstylesheet=qx.bom.Stylesheet.createElement(stylesheet);
var columnData=this.__columnWidths.getData();

for(var i=0;i<columnData.length;i++){var stylesheet=".qx-progressive-"+hash+"-col-"+i+" {"+tr.__tableCellStyleSheet+"}";
tr.__clazz[hash].cellstylesheet[i]=qx.bom.Stylesheet.createElement(stylesheet);
}this.__hash=hash;
var pane=progressive.getStructure().getPane();
pane.addListener("resize",this._resizeColumns,this);
}},addRenderer:function(column,renderer){var columnData=this.__columnWidths.getData();

if(column<0||column>=columnData.length){throw new Error("Column "+column+" out of range (max: "+(columnData.length-1)+")");
}this.__renderers[column]=renderer;
},removeRenderer:function(column){var columnData=this.__columnWidths.getData();

if(column<0||column>=columnData.length){throw new Error("Column "+column+" out of range (max: "+(columnData.length-1)+")");
}
if(!this.__renderers[column]){throw new Error("No existing renderer for column "+column);
}delete this.__renderers[column];
},render:function(state,element){var data=element.data;
var html=[];
var cellInfo;
var renderer;
var height=0;
if(state.getRendererData()[this.__name].end===undefined){state.getRendererData()[this.__name]={end:0,start:1,rows:0,totalHeight:0};
}var div=document.createElement("div");
for(var i=0;i<data.length;i++){var stylesheet="qx-progressive-"+this.__hash+"-col-"+i;
renderer=this.__renderers[i]||this.__defaultCellRenderer;
cellInfo={state:state,rowDiv:div,stylesheet:stylesheet,element:element,dataIndex:i,cellData:data[i],height:height};
html.push(renderer.render(cellInfo));
if(cellInfo.height>height){height=cellInfo.height;
}}height=(height>0?height:this.getDefaultRowHeight());
var rendererData=state.getRendererData()[this.__name];
rendererData.totalHeight+=height;
div.style.position="relative";
div.style.height=height+"px";
div.className="qx-progressive-"+this.__hash+"-row";
div.innerHTML=html.join("");
switch(element.location){case "end":var index=rendererData.end||0;
div.style.backgroundColor=this.__colors.bgcol[index];
rendererData.end=(index==0?1:0);
state.getPane().getContentElement().getDomElement().appendChild(div);
break;
case "start":var elem=state.getPane().getContentElement().getDomElement();
var children=elem.childNodes;
if(children.length>0){var index=rendererData.start;
div.style.backgroundColor=this.__colors.bgcol[index];
rendererData.start=(index==0?1:0);
elem.insertBefore(div,children[0]);
break;
}else{elem.appendChild(div);
}break;
default:throw new Error("Invalid location: "+element.location);
}++rendererData.rows;
},getLayoutChildren:function(){return this.__columnWidths.getData();
},_resizeColumns:function(e){var pane=this.__progressive.getStructure().getPane();
var width=pane.getBounds().width-qx.bom.element.Overflow.getScrollbarWidth();
var stylesheet=".qx-progressive-"+this.__hash+"-row";
var tr=qx.ui.progressive.renderer.table.Row;
qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].rowstylesheet,stylesheet);
var rule="width: "+width+"px;";
qx.bom.Stylesheet.addRule(tr.__clazz[this.__hash].rowstylesheet,stylesheet,rule);
this.__layout.renderLayout(width,100);
var columnData=this.__columnWidths.getData();
for(var i=0,left=0;i<columnData.length;i++,left+=width){var stylesheet=".qx-progressive-"+this.__hash+"-col-"+i;
var tr=qx.ui.progressive.renderer.table.Row;
qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].cellstylesheet[i],stylesheet);
width=columnData[i].getComputedWidth();
{if(qx.core.Setting.get("qx.tableResizeDebug")){this.debug("col "+i+": width="+width);
}};
var inset;

if(qx.bom.client.Feature.CONTENT_BOX){inset=qx.ui.progressive.renderer.table.Row.__padding*2;
}else{inset=-1;
}var widthRule=(width-inset)+"px;";
var paddingRule="0px "+qx.ui.progressive.renderer.table.Row.__padding+"px "+"0px "+qx.ui.progressive.renderer.table.Row.__padding+"px;";
var leftRule=left+"px;";
var rule=tr.__tableCellStyleSheet+"width: "+widthRule+"left: "+leftRule+"padding: "+paddingRule;
qx.bom.Stylesheet.addRule(tr.__clazz[this.__hash].cellstylesheet[i],stylesheet,rule);
}}},destruct:function(){var name;

for(name in this.__renderers){this.__renderers[name]=null;
}var tr=qx.ui.progressive.renderer.table.Row;
var hash=this.__progressive.toHashCode();

if(tr.__clazz&&tr.__clazz[hash]){if(tr.__clazz[hash].rowstylesheet){var stylesheet=".qx-progressive-"+this.__hash+"-row";
var tr=qx.ui.progressive.renderer.table.Row;
qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].rowstylesheet,stylesheet);
}if(tr.__clazz[hash].cellstylesheet){for(var i=tr.__clazz[hash].cellstylesheet.length-1;i>=0;i--){var stylesheet=".qx-progressive-"+this.__hash+"-col-"+i;
var rule=tr.__clazz[this.__hash].cellstylesheet[i];
var tr=qx.ui.progressive.renderer.table.Row;
qx.bom.Stylesheet.removeRule(rule,stylesheet);
}}}
if(this.__progressive&&this.__progressive.getRendererData){var rendererData=this.__progressive.getRendererData();

if(rendererData&&rendererData[this.__name]&&rendererData[this.__name].end!==undefined){rendererData[this.__name]=null;
}}this.__colors=this.__renderers=this.__progressive=this.__columnWidths=null;
this._disposeObjects("__layout","__defaultCellRenderer","__columnData");
}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Default",{extend:qx.ui.progressive.renderer.table.cell.Abstract,construct:function(){this.base(arguments);
},members:{_getContentHtml:function(cellInfo){return qx.bom.String.escape(this._formatValue(cellInfo.cellData));
},_formatValue:function(value){var ret;

if(value==null){return "";
}
if(typeof value=="string"){return value;
}else if(typeof value=="number"){if(!qx.ui.progressive.renderer.table.Row._numberFormat){var numberFormat=new qx.util.format.NumberFormat();
numberFormat.setMaximumFractionDigits(2);
qx.ui.progressive.renderer.table.Row._numberFormat=numberFormat;
}ret=qx.ui.progressive.renderer.table.Row._numberFormat.format(value);
}else if(value instanceof Date){ret=qx.util.format.DateFormat.getDateInstance().format(value);
}else{ret=value;
}return ret;
}}});
qx.Class.define("qx.ui.progressive.Progressive",{extend:qx.ui.container.Composite,construct:function(structure){this.base(arguments,new qx.ui.layout.VBox());
this.__renderer={};
this.set({backgroundColor:"white"});
if(!structure){structure=new qx.ui.progressive.structure.Default();
}this.__structure=structure;
structure.applyStructure(this);
this.__bInitialRenderComplete=false;
this.__bRendering=false;
this.__initialNumElements=0;
},events:{"renderStart":"qx.event.type.Data","renderEnd":"qx.event.type.Data","progress":"qx.event.type.Data","progressDetail":"qx.event.type.Data"},properties:{dataModel:{check:"qx.ui.progressive.model.Abstract",apply:"_applyDataModel"},batchSize:{check:"Integer",init:20},flushWidgetQueueAfterBatch:{check:"Boolean",init:false},interElementTimeout:{check:"Integer",init:0}},members:{__renderer:null,__bRendering:null,__t1:null,__initialNumElements:null,__bInitialRenderComplete:null,__structure:null,getStructure:function(){return this.__structure;
},addRenderer:function(name,renderer){this.__renderer[name]=renderer;
renderer.join(this,name);
},removeRenderer:function(name){if(!this.__renderer[name]){throw new Error("No existing renderer named "+name);
}delete this.__renderer[name];
},render:function(){if(this.__bRendering){return;
}this.__bRendering=true;
var state=new qx.ui.progressive.State({progressive:this,model:this.getDataModel(),pane:this.__structure.getPane(),batchSize:this.getBatchSize(),rendererData:this.__createStateRendererData(),userData:{}});
this.__t1=new Date();
if(this.__bInitialRenderComplete){this.__initialNumElements=state.getModel().getElementCount();
this.fireDataEvent("renderStart",{state:state,initial:this.__initialNumElements});
this.__renderElementBatch(state);
}else{qx.event.Timer.once(function(){this.__initialNumElements=state.getModel().getElementCount();
this.fireDataEvent("renderStart",{state:state,initial:this.__initialNumElements});
this.__renderElementBatch(state);
this.__bInitialRenderComplete=true;
},this,10);
}},_applyDataModel:function(value,old){if(old){old.removeListener("dataAvailable",this.__dataAvailable,this);
old.dispose();
}value.addListener("dataAvailable",this.__dataAvailable,this);
},__renderElementBatch:function(state){var current;
var element;
var renderer;

for(var i=state.getBatchSize();i>0;i--){current=state.getModel().getNextElement();

if(!current){this.debug("Render time: "+(new Date()-this.__t1)+"ms");
this.__bRendering=false;
this.fireDataEvent("renderEnd",state);
state.dispose();
return ;
}element=current.element;
renderer=this.__renderer[element.renderer];
renderer.render(state,element);
this.fireDataEvent("progressDetail",{initial:this.__initialNumElements,remaining:current.remaining,element:element});
}this.fireDataEvent("progress",{initial:this.__initialNumElements,remaining:current.remaining});
if(this.getFlushWidgetQueueAfterBatch()){qx.ui.core.queue.Manager.flush();
}qx.event.Timer.once(function(){this.__renderElementBatch(state);
},this,this.getInterElementTimeout());
},__createStateRendererData:function(){var rendererData={};

for(var name in this.__renderer){rendererData[name]={};
}return rendererData;
},__dataAvailable:function(e){this.__initialNumElements=e.getData();
this.render();
}},destruct:function(){for(var name in this.__renderer){this.__renderer[name].dispose();
}this.__t1=this.__renderer=this.__structure=null;
}});
qx.Class.define("qx.ui.progressive.State",{extend:qx.core.Object,construct:function(initialState){this.base(arguments);
this.setProgressive(initialState.progressive);
this.setModel(initialState.model);
this.setPane(initialState.pane);
this.setBatchSize(initialState.batchSize);
this.setRendererData(initialState.rendererData);
this.setUserData(initialState.userData);
},properties:{progressive:{nullable:true},model:{nullable:true},pane:{nullable:true},batchSize:{},rendererData:{},userData:{}},destruct:function(){this.setProgressive(null);
this.setModel(null);
this.setPane(null);
}});
qx.Class.define("qx.ui.virtual.layer.HtmlCellSpan",{extend:qx.ui.virtual.layer.HtmlCell,construct:function(htmlCellProvider,rowConfig,columnConfig){this.base(arguments,htmlCellProvider);
this._spanManager=new qx.ui.virtual.layer.CellSpanManager(rowConfig,columnConfig);
},members:{setCellSpan:function(row,column,rowSpan,columnSpan){var id=row+"x"+column;
this._spanManager.removeCell(id);

if(rowSpan>1||columnSpan>1){this._spanManager.addCell(id,row,column,rowSpan,columnSpan);
}qx.ui.core.queue.Widget.add(this);
},__renderCell:function(htmlArr,row,column,left,top,width,height){var cellProperties=this._cellProvider.getCellProperties(row,column);
var insets=cellProperties.insets||[0,0];
htmlArr.push("<div ","style='","left:",left,"px;","top:",top,"px;",this._getCellSizeStyle(width,height,insets[0],insets[1]),cellProperties.style||"","' ","class='",cellProperties.classes||"","' ",cellProperties.attributes||"",">",cellProperties.content||"","</div>");
},_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var html=[];
var cells=this._spanManager.findCellsInWindow(firstRow,firstColumn,rowSizes.length,columnSizes.length);

if(cells.length>0){var bounds=this._spanManager.getCellBounds(cells,firstRow,firstColumn);
var spanMap=this._spanManager.computeCellSpanMap(cells,firstRow,firstColumn,rowSizes.length,columnSizes.length);
for(var i=0,l=cells.length;i<l;i++){var cell=cells[i];
var cellBounds=bounds[i];
this.__renderCell(html,cell.firstRow,cell.firstColumn,cellBounds.left,cellBounds.top,cellBounds.width,cellBounds.height);
}}else{spanMap=[];

for(var i=0;i<rowSizes.length;i++){spanMap[firstRow+i]=[];
}}var left=0;
var top=0;
var row=firstRow;
var column=firstColumn;

for(var x=0;x<rowSizes.length;x++){var left=0;
var column=firstColumn;
var height=rowSizes[x];

for(var y=0;y<columnSizes.length;y++){var width=columnSizes[y];

if(!spanMap[row][column]){this.__renderCell(html,row,column,left,top,width,height);
}column++;
left+=width;
}top+=height;
row++;
}this.getContentElement().setAttribute("html",html.join(""));
}},destruct:function(){this._disposeObjects("_spanManager");
}});
qx.Class.define("qx.ui.control.ColorPopup",{extend:qx.ui.popup.Popup,implement:[qx.ui.form.IColorForm],construct:function(){this.base(arguments);
this.setLayout(new qx.ui.layout.VBox(5));
this._createChildControl("auto-button");
this._createBoxes();
this._createChildControl("preview-pane");
this._createChildControl("selector-button");
this.addListener("changeVisibility",this._onChangeVisibility,this);
},properties:{appearance:{refine:true,init:"colorpopup"},value:{nullable:true,apply:"_applyValue",event:"changeValue"},red:{check:"Number",init:null,nullable:true,event:"changeRed"},green:{check:"Number",init:null,nullable:true,event:"changeGreen"},blue:{check:"Number",init:null,nullable:true,event:"changeBlue"}},members:{__minZIndex:1e5,__boxes:null,__colorSelectorWindow:null,__colorSelector:null,__recentTableId:"recent",__fieldNumber:12,_createChildControlImpl:function(id){var control;

switch(id){case "field":control=new qx.ui.core.Widget;
control.addListener("mousedown",this._onFieldMouseDown,this);
control.addListener("mouseover",this._onFieldMouseOver,this);
control.addListener("mouseout",this._onFieldMouseOut,this);
break;
case "auto-button":control=new qx.ui.form.Button(this.tr("Automatic"));
control.setAllowStretchX(true);
control.addListener("execute",this._onAutomaticBtnExecute,this);
this.add(control);
break;
case "selector-button":control=new qx.ui.form.Button(this.tr("Open ColorSelector"));
control.addListener("execute",this._onSelectorButtonExecute,this);
this.add(control);
break;
case "preview-pane":control=new qx.ui.groupbox.GroupBox(this.tr("Preview (Old/New)"));
control.setLayout(new qx.ui.layout.HBox);
control.add(this._createChildControl("selected-preview",true),{flex:1});
control.add(this._createChildControl("current-preview",true),{flex:1});
this.add(control);
break;
case "selected-preview":control=new qx.ui.container.Composite(new qx.ui.layout.Basic);
break;
case "current-preview":control=new qx.ui.container.Composite(new qx.ui.layout.Basic);
break;
case "colorselector-okbutton":control=new qx.ui.form.Button(this.tr("OK"));
control.addListener("execute",this._onColorSelectorOk,this);
break;
case "colorselector-cancelbutton":control=new qx.ui.form.Button(this.tr("Cancel"));
control.addListener("execute",this._onColorSelectorCancel,this);
break;
}return control||this.base(arguments,id);
},_createBoxes:function(){this.__boxes={};
var tables=this._tables;
var table,box,field;
var j=0;

for(var tableId in tables){table=tables[tableId];
box=new qx.ui.groupbox.GroupBox(table.label);
box.setLayout(new qx.ui.layout.HBox);
this.__boxes[tableId]=box;
this.add(box);

for(var i=0;i<this.__fieldNumber;i++){field=this.getChildControl("field#"+(j++));
field.setBackgroundColor(table.values[i]||null);
box.add(field);
}}},_createColorSelector:function(){if(this.__colorSelector){return;
}var win=new qx.ui.window.Window(this.tr("Color Selector"));
this.__colorSelectorWindow=win;
win.setLayout(new qx.ui.layout.VBox(16));
win.setResizable(false);
win.moveTo(20,20);
this.__colorSelector=new qx.ui.control.ColorSelector;
win.add(this.__colorSelector);
var buttonBar=new qx.ui.container.Composite(new qx.ui.layout.HBox(8,"right"));
win.add(buttonBar);
var btnCancel=this._createChildControl("colorselector-cancelbutton");
var btnOk=this._createChildControl("colorselector-okbutton");
buttonBar.add(btnCancel);
buttonBar.add(btnOk);
},_applyValue:function(value,old){if(value===null){this.setRed(null);
this.setGreen(null);
this.setBlue(null);
}else{var rgb=qx.util.ColorUtil.stringToRgb(value);
this.setRed(rgb[0]);
this.setGreen(rgb[1]);
this.setBlue(rgb[2]);
}this.getChildControl("selected-preview").setBackgroundColor(value);
this._rotatePreviousColors();
},_rotatePreviousColors:function(){if(!this._tables){return;
}var vRecentTable=this._tables[this.__recentTableId].values;
var vRecentBox=this.__boxes[this.__recentTableId];

if(!vRecentTable){return;
}var newValue=this.getValue();

if(!newValue){return;
}var vIndex=vRecentTable.indexOf(newValue);

if(vIndex!=-1){qx.lang.Array.removeAt(vRecentTable,vIndex);
}else if(vRecentTable.length==this.__fieldNumber){vRecentTable.shift();
}vRecentTable.push(newValue);
var vFields=vRecentBox.getChildren();

for(var i=0;i<vFields.length;i++){vFields[i].setBackgroundColor(vRecentTable[i]||null);
}},_onFieldMouseDown:function(e){var vValue=this.getChildControl("current-preview").getBackgroundColor();
this.setValue(vValue);

if(vValue){this.hide();
}},_onFieldMouseOver:function(e){this.getChildControl("current-preview").setBackgroundColor(e.getTarget().getBackgroundColor());
},_onFieldMouseOut:function(e){var red=this.getRed();
var green=this.getGreen();
var blue=this.getBlue();
var color=null;

if(red!==null||green!==null||blue!==null){var color=qx.util.ColorUtil.rgbToRgbString([red,green,blue]);
}this.getChildControl("current-preview").setBackgroundColor(color);
},_onAutomaticBtnExecute:function(){this.setValue(null);
this.hide();
},_onSelectorButtonExecute:function(){this._createColorSelector();
this.exclude();
var red=this.getRed();
var green=this.getGreen();
var blue=this.getBlue();

if(red===null||green===null||blue===null){red=255;
green=255;
blue=255;
}this.__colorSelector.setRed(red);
this.__colorSelector.setGreen(green);
this.__colorSelector.setBlue(blue);
this.__colorSelectorWindow.open();
},_onColorSelectorOk:function(){var sel=this.__colorSelector;
this.setValue(qx.util.ColorUtil.rgbToRgbString([sel.getRed(),sel.getGreen(),sel.getBlue()]));
this.__colorSelectorWindow.close();
},_onColorSelectorCancel:function(){this.__colorSelectorWindow.close();
},_onChangeVisibility:function(e){if(this.getVisibility()=="visible"){var red=this.getRed();
var green=this.getGreen();
var blue=this.getBlue();
var color=null;

if(red!==null||green!==null||blue!==null){var color=qx.util.ColorUtil.rgbToRgbString([red,green,blue]);
}this.getChildControl("selected-preview").setBackgroundColor(color);
this.getChildControl("current-preview").setBackgroundColor(color);
}},_tables:{core:{label:"Basic Colors",values:["#000","#333","#666","#999","#CCC","#FFF","red","green","blue","yellow","teal","maroon"]},recent:{label:"Recent Colors",values:[]}}},destruct:function(){this._disposeObjects("__colorSelectorWindow","__colorSelector");
this._tables=this.__boxes=null;
}});
qx.Class.define("qx.ui.window.Desktop",{extend:qx.ui.core.Widget,include:[qx.ui.core.MChildrenHandling,qx.ui.window.MDesktop,qx.ui.core.MBlocker],implement:qx.ui.window.IDesktop,construct:function(windowManager){this.base(arguments);
this.getContentElement().disableScrolling();
this._setLayout(new qx.ui.layout.Canvas());
this.setWindowManager(windowManager);
}});
qx.Class.define("qx.ui.form.DateField",{extend:qx.ui.form.ComboBox,implement:[qx.ui.form.IDateForm],construct:function(){this.base(arguments);
this.setDateFormat(qx.ui.form.DateField.getDefaultDateFormatter());
{};
},properties:{appearance:{refine:true,init:"datefield"},dateFormat:{check:"qx.util.format.DateFormat",apply:"_applyDateFormat"}},statics:{__dateFormat:null,__formatter:null,getDefaultDateFormatter:function(){var format=qx.locale.Date.getDateFormat("medium").toString();

if(format==this.__dateFormat){return this.__formatter;
}
if(this.__formatter){this.__formatter.dispose();
}this.__formatter=new qx.util.format.DateFormat(format,qx.locale.Manager.getInstance().getLocale());
this.__dateFormat=format;
return this.__formatter;
}},members:{setValue:function(value){var textField=this.getChildControl("textfield");
textField.setValue(this.getDateFormat().format(value));
var dateChooser=this.getChildControl("list");
dateChooser.setValue(value);
},getValue:function(){var textfieldValue=this.getChildControl("textfield").getValue();
try{return this.getDateFormat().parse(textfieldValue);
}catch(ex){return null;
}},resetValue:function(){var textField=this.getChildControl("textfield");
textField.setValue("");
var dateChooser=this.getChildControl("list");
dateChooser.setValue(null);
},_applyDateFormat:function(value,old){try{var textfield=this.getChildControl("textfield");
var dateStr=textfield.getValue();
var currentDate=old.parse(dateStr);
textfield.setValue(value.format(currentDate));
}catch(ex){}},_createChildControlImpl:function(id){var control;

switch(id){case "list":control=new qx.ui.control.DateChooser();
control.setFocusable(false);
control.setKeepFocus(true);
control.addListener("execute",this._onChangeDate,this);
break;
case "popup":control=new qx.ui.popup.Popup(new qx.ui.layout.VBox);
control.setAutoHide(false);
control.add(this.getChildControl("list"));
control.addListener("mouseup",this._onChangeDate,this);
control.addListener("changeVisibility",this._onPopupChangeVisibility,this);
break;
}return control||this.base(arguments,id);
},_onChangeDate:function(e){var textField=this.getChildControl("textfield");
var selectedDate=this.getChildControl("list").getValue();
textField.setValue(this.getDateFormat().format(selectedDate));
this.close();
},_onKeyPress:function(e){var iden=e.getKeyIdentifier();

if(iden=="Down"&&e.isAltPressed()){this.toggle();
e.stopPropagation();
return;
}var popup=this.getChildControl("popup");

if(popup.getVisibility()=="hidden"){return;
}if(iden=="Escape"){this.close();
e.stopPropagation();
return;
}if(iden==="Left"||iden==="Right"||iden==="Down"||iden==="Up"){e.preventDefault();
}this.getChildControl("list").handleKeyPress(e);
},_onPopupChangeVisibility:function(e){var popup=this.getChildControl("popup");

if(popup.isVisible()){var chooser=this.getChildControl("list");
var date=this.getValue();
chooser.setValue(date);
}},_onTextFieldChangeValue:function(e){var date=this.getValue();

if(date!=null){var list=this.getChildControl("list");
list.setValue(date);
}this.fireDataEvent("changeValue",this.getValue());
},isEmpty:function(){var value=this.getChildControl("textfield").getValue();
return value==null||value=="";
}}});
qx.Class.define("qx.ui.toolbar.CheckBox",{extend:qx.ui.form.ToggleButton,construct:function(label,icon){this.base(arguments,label,icon);
this.removeListener("keydown",this._onKeyDown);
this.removeListener("keyup",this._onKeyUp);
},properties:{appearance:{refine:true,init:"toolbar-button"},show:{refine:true,init:"inherit"},focusable:{refine:true,init:false}}});
qx.Class.define("qx.ui.progressive.headfoot.Progress",{extend:qx.ui.progressive.headfoot.Abstract,construct:function(columnWidths,labelArr){this.base(arguments);
this.setHeight(16);
this.setPadding(0);
this.__colors={};
var colorMgr=qx.theme.manager.Color.getInstance();
this.__colors.background=colorMgr.resolve("progressive-progressbar-background");
this.__colors.indicatorDone=colorMgr.resolve("progressive-progressbar-indicator-done");
this.__colors.indicatorUndone=colorMgr.resolve("progressive-progressbar-indicator-undone");
this.__colors.percentBackground=colorMgr.resolve("progressive-progressbar-percent-background");
this.__colors.percentText=colorMgr.resolve("progressive-progressbar-percent-text");
this.set({backgroundColor:this.__colors.background});
this.__progressBar=new qx.ui.core.Widget();
this.__progressBar.set({width:0,backgroundColor:this.__colors.indicatorDone});
this.add(this.__progressBar);
var spacer=new qx.ui.core.Widget();
spacer.set({backgroundColor:this.__colors.indicatorUndone});
this.add(spacer,{flex:1});
this.__percentDone=new qx.ui.basic.Atom("0%");
this.__percentDone.set({width:100,backgroundColor:this.__colors.percentBackground,textColor:this.__colors.percentText});
this.add(this.__percentDone);
this.exclude();
},members:{__total:null,__colors:null,__progressBar:null,__percentDone:null,join:function(progressive){this.base(arguments,progressive);
progressive.addListener("renderStart",function(e){this.__total=e.getData().initial;
this.show();
},this);
progressive.addListener("progress",function(e){var complete=1.0-(e.getData().remaining/this.__total);
var mySize=this.getBounds();

if(mySize){var barWidth=Math.floor((mySize.width-this.__percentDone.getBounds().width)*complete);
var percent=Math.floor(complete*100)+"%";

if(!isNaN(barWidth)){this.__progressBar.setMinWidth(barWidth);
this.__percentDone.setLabel(percent);
}}},this);
progressive.addListener("renderEnd",function(e){this.exclude();
},this);
}},destruct:function(){this.__colors=null;
this._disposeObjects("__progressBar","__percentDone");
}});
qx.Class.define("qx.ui.table.cellrenderer.String",{extend:qx.ui.table.cellrenderer.Conditional,members:{_getContentHtml:function(cellInfo){return qx.bom.String.escape(cellInfo.value||"");
},_getCellClass:function(cellInfo){return "qooxdoo-table-cell";
}}});
qx.Class.define("qx.ui.core.AbstractScrollArea",{extend:qx.ui.core.scroll.AbstractScrollArea,construct:function(){this.base(arguments);
qx.log.Logger.deprecatedClassWarning(qx.ui.core.AbstractScrollArea,"This class has been moved to qx.ui.core.scroll.AbstractScrollArea");
}});
qx.Class.define("qx.ui.tree.Tree",{extend:qx.ui.core.scroll.AbstractScrollArea,implement:[qx.ui.core.IMultiSelection,qx.ui.form.IModelSelection],include:[qx.ui.core.MMultiSelectionHandling,qx.ui.core.MContentPadding,qx.ui.form.MModelSelection],construct:function(){this.base(arguments);
this.__content=new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({allowShrinkY:false,allowGrowX:true});
this.getChildControl("pane").add(this.__content);
this.initOpenMode();
this.initRootOpenClose();
this.addListener("changeSelection",this._onChangeSelection,this);
this.addListener("keypress",this._onKeyPress,this);
},events:{addItem:"qx.event.type.Data",removeItem:"qx.event.type.Data"},properties:{openMode:{check:["click","dblclick","none"],init:"dblclick",apply:"_applyOpenMode",event:"changeOpenMode",themeable:true},root:{check:"qx.ui.tree.AbstractTreeItem",init:null,nullable:true,event:"changeRoot",apply:"_applyRoot"},hideRoot:{check:"Boolean",init:false,apply:"_applyHideRoot"},rootOpenClose:{check:"Boolean",init:false,apply:"_applyRootOpenClose"},appearance:{refine:true,init:"tree"},focusable:{refine:true,init:true}},members:{__content:null,SELECTION_MANAGER:qx.ui.tree.SelectionManager,getChildrenContainer:function(){return this.__content;
},_applyRoot:function(value,old){var container=this.getChildrenContainer();

if(old){container.remove(old);

if(old.hasChildren()){container.remove(old.getChildrenContainer());
}}
if(value){container.add(value);

if(value.hasChildren()){container.add(value.getChildrenContainer());
}value.setVisibility(this.getHideRoot()?"excluded":"visible");
value.recursiveAddToWidgetQueue();
}},_applyHideRoot:function(value,old){var root=this.getRoot();

if(!root){return;
}root.setVisibility(value?"excluded":"visible");
root.recursiveAddToWidgetQueue();
},_applyRootOpenClose:function(value,old){var root=this.getRoot();

if(!root){return;
}root.recursiveAddToWidgetQueue();
},_getContentPaddingTarget:function(){return this.__content;
},getNextNodeOf:function(treeItem,invisible){if((invisible!==false||treeItem.isOpen())&&treeItem.hasChildren()){return treeItem.getChildren()[0];
}
while(treeItem){var parent=treeItem.getParent();

if(!parent){return null;
}var parentChildren=parent.getChildren();
var index=parentChildren.indexOf(treeItem);

if(index>-1&&index<parentChildren.length-1){return parentChildren[index+1];
}treeItem=parent;
}return null;
},getPreviousNodeOf:function(treeItem,invisible){var parent=treeItem.getParent();

if(!parent){return null;
}
if(this.getHideRoot()){if(parent==this.getRoot()){if(parent.getChildren()[0]==treeItem){return null;
}}}else{if(treeItem==this.getRoot()){return null;
}}var parentChildren=parent.getChildren();
var index=parentChildren.indexOf(treeItem);

if(index>0){var folder=parentChildren[index-1];

while((invisible!==false||folder.isOpen())&&folder.hasChildren()){var children=folder.getChildren();
folder=children[children.length-1];
}return folder;
}else{return parent;
}},getNextSiblingOf:function(treeItem,invisible,stayInSameNestLevel){if(typeof (invisible)!=="undefined"){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The invisible and stayInSameNestLevel parameters are deprecated: Use"+" getNextNodeOf() instead.");

if(!stayInSameNestLevel){return this.getNextNodeOf(treeItem,invisible);
}}
if(treeItem==this.getRoot()){return null;
}var parent=treeItem.getParent();
var siblings=parent.getChildren();
var index=siblings.indexOf(treeItem);

if(index<siblings.length-1){return siblings[index+1];
}return null;
},getPreviousSiblingOf:function(treeItem,invisible,stayInSameNestLevel){if(typeof (invisible)!=="undefined"){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"The invisible and stayInSameNestLevel parameters are deprecated: Use"+" getPreviousNodeOf() instead.");

if(!stayInSameNestLevel){return this.getPreviousNodeOf(treeItem,invisible);
}}
if(treeItem==this.getRoot()){return null;
}var parent=treeItem.getParent();
var siblings=parent.getChildren();
var index=siblings.indexOf(treeItem);

if(index>0){return siblings[index-1];
}return null;
},getItems:function(recursive,invisible){if(this.getRoot()!=null){return this.getRoot().getItems(recursive,invisible,this.getHideRoot());
}else{return [];
}},getChildren:function(){if(this.getRoot()!=null){return [this.getRoot()];
}else{return [];
}},getTreeItem:function(widget){while(widget){if(widget==this){return null;
}
if(widget instanceof qx.ui.tree.AbstractTreeItem){return widget;
}widget=widget.getLayoutParent();
}return null;
},_applyOpenMode:function(value,old){if(old=="click"){this.removeListener("click",this._onOpen,this);
}else if(old=="dblclick"){this.removeListener("dblclick",this._onOpen,this);
}
if(value=="click"){this.addListener("click",this._onOpen,this);
}else if(value=="dblclick"){this.addListener("dblclick",this._onOpen,this);
}},_onOpen:function(e){var treeItem=this.getTreeItem(e.getTarget());

if(!treeItem||!treeItem.isOpenable()){return;
}treeItem.setOpen(!treeItem.isOpen());
e.stopPropagation();
},_onChangeSelection:function(e){var selection=e.getData();
for(var i=0;i<selection.length;i++){var folder=selection[i];
while(folder.getParent()!=null){folder=folder.getParent();
folder.setOpen(true);
}}},_onKeyPress:function(e){var item=this._getLeadItem();

if(item!==null){switch(e.getKeyIdentifier()){case "Left":if(item.isOpenable()&&item.isOpen()){item.setOpen(false);
}break;
case "Right":if(item.isOpenable()&&!item.isOpen()){item.setOpen(true);
}break;
case "Enter":case "Space":if(item.isOpenable()){item.toggleOpen();
}break;
}}}},destruct:function(){this._disposeObjects("__content");
}});
qx.Class.define("qx.ui.table.celleditor.ComboBox",{extend:qx.core.Object,implement:qx.ui.table.ICellEditorFactory,properties:{validationFunction:{check:"Function",nullable:true,init:null},listData:{check:"Array",init:null,nullable:true}},members:{createCellEditor:function(cellInfo){var cellEditor=new qx.ui.form.ComboBox().set({appearance:"table-editor-combobox"});
var value=cellInfo.value;
cellEditor.originalValue=value;
var cellRenderer=cellInfo.table.getTableColumnModel().getDataCellRenderer(cellInfo.col);
var label=cellRenderer._getContentHtml(cellInfo);

if(value!=label){value=label;
}if(value===null||value===undefined){value="";
}var list=this.getListData();

if(list){var item;

for(var i=0,l=list.length;i<l;i++){var row=list[i];

if(row instanceof Array){item=new qx.ui.form.ListItem(row[0],row[1]);
}else{item=new qx.ui.form.ListItem(row,null);
}cellEditor.add(item);
}}cellEditor.setValue(""+value);
cellEditor.addListener("appear",function(){cellEditor.selectAllText();
});
return cellEditor;
},getCellEditorValue:function(cellEditor){var value=cellEditor.getValue()||"";
var validationFunc=this.getValidationFunction();

if(validationFunc){value=validationFunc(value,cellEditor.originalValue);
}
if(typeof cellEditor.originalValue=="number"){value=parseFloat(value);
}return value;
}}});
qx.Class.define("qx.ui.decoration.AbstractBox",{extend:qx.ui.decoration.Abstract,implement:[qx.ui.decoration.IDecorator],construct:function(baseImage,insets,orientation){this.base(arguments);
this._setOrientation(orientation);

if(qx.ui.decoration.css3.BorderImage.IS_SUPPORTED){this.__impl=new qx.ui.decoration.css3.BorderImage();

if(baseImage){this.__setBorderImage(baseImage,orientation);
}if(insets!=null){this.__impl.setInsets(insets);
}}else{this.__impl=new qx.ui.decoration.BoxDiv(baseImage,insets,orientation);
}},properties:{baseImage:{check:"String",nullable:true,apply:"_applyBaseImage"}},members:{__impl:null,_isHorizontal:null,_setOrientation:function(orientation){this._isHorizontal=orientation=="horizontal";
},getMarkup:function(){return this.__impl.getMarkup();
},resize:function(element,width,height){this.__impl.resize(element,width,height);
},tint:function(element,bgcolor){},getInsets:function(){return this.__impl.getInsets();
},_applyInsets:function(value,old,name){var setter="set"+qx.lang.String.firstUp(name);
this.__impl[setter](value);
},_applyBaseImage:function(value,old){if(this.__impl instanceof qx.ui.decoration.BoxDiv){this.__impl.setBaseImage(value);
}else{this.__setBorderImage(value);
}},__setBorderImage:function(baseImage){this.__impl.setBorderImage(baseImage);
var base=qx.util.AliasManager.getInstance().resolve(baseImage);
var split=/(.*)(\.[a-z]+)$/.exec(base);
var prefix=split[1];
var ext=split[2];
var ResourceManager=qx.util.ResourceManager.getInstance();

if(this._isHorizontal){var leftSlice=ResourceManager.getImageWidth(prefix+"-l"+ext);
var rightSlice=ResourceManager.getImageWidth(prefix+"-r"+ext);
this.__impl.setSlice([0,rightSlice,0,leftSlice]);
}else{var bottomSlice=ResourceManager.getImageHeight(prefix+"-b"+ext);
var topSlice=ResourceManager.getImageHeight(prefix+"-t"+ext);
this.__impl.setSlice([topSlice,0,bottomSlice,0]);
}}},destruct:function(){this.__markup=this.__images=this.__edges=null;
}});
qx.Class.define("qx.ui.decoration.HBox",{extend:qx.ui.decoration.AbstractBox,construct:function(baseImage,insets){this.base(arguments,baseImage,insets,"horizontal");
}});
qx.Class.define("qx.ui.virtual.selection.CellRectangle",{extend:qx.ui.virtual.selection.Abstract,members:{_getItemCount:function(){return this._pane.getRowConfig().getItemCount()*this._pane.getColumnConfig().getItemCount();
},_getSelectableFromMouseEvent:function(event){var cell=this._pane.getCellAtPosition(event.getDocumentLeft(),event.getDocumentTop());

if(!cell){return null;
}return this._isSelectable(cell)?cell:null;
},getSelectables:function(){var selectables=[];
var rowCount=this._pane.getRowConfig().getItemCount();
var columnCount=this._pane.getColumnConfig().getItemCount();

for(var row=0;row<rowCount;row++){for(var column=0;column<columnCount;column++){var cell={row:row,column:column};

if(this._isSelectable(cell)){selectables.push(cell);
}}}return selectables;
},_getSelectableRange:function(item1,item2){var selectables=[];
var minRow=Math.min(item1.row,item2.row);
var maxRow=Math.max(item1.row,item2.row);
var minColumn=Math.min(item1.column,item2.column);
var maxColumn=Math.max(item1.column,item2.column);

for(var row=minRow;row<=maxRow;row++){for(var column=minColumn;column<=maxColumn;column++){var cell={row:row,column:column};

if(this._isSelectable(cell)){selectables.push(cell);
}}}return selectables;
},_getFirstSelectable:function(){var rowCount=this._pane.getRowConfig().getItemCount();
var columnCount=this._pane.getColumnConfig().getItemCount();

for(var row=0;row<rowCount;row++){for(var column=0;column<columnCount;column++){var cell={row:row,column:column};

if(this._isSelectable(cell)){return cell;
}}}return null;
},_getLastSelectable:function(){var rowCount=this._pane.getRowConfig().getItemCount();
var columnCount=this._pane.getColumnConfig().getItemCount();

for(var column=columnCount-1;column>=0;column--){for(var row=rowCount-1;row>=0;row--){var cell={row:row,column:column};

if(this._isSelectable(cell)){return cell;
}}}return null;
},_getRelatedSelectable:function(item,relation){var cell={row:item.row,column:item.column};

switch(relation){case "above":for(var row=item.row-1;row>=0;row--){cell.row=row;

if(this._isSelectable(cell)){return cell;
}}break;
case "under":var rowCount=this._pane.getRowConfig().getItemCount();

for(var row=item.row+1;row<rowCount;row++){cell.row=row;

if(this._isSelectable(cell)){return cell;
}}break;
case "left":for(var column=item.column-1;column>=0;column--){cell.column=column;

if(this._isSelectable(cell)){return cell;
}}break;
case "right":var columnCount=this._pane.getColumnConfig().getItemCount();

for(var column=item.column+1;column<columnCount;column++){cell.column=column;

if(this._isSelectable(cell)){return cell;
}}break;
}return null;
},_getPage:function(lead,up){if(up){return this._getFirstSelectable();
}else{return this._getLastSelectable();
}},_selectableToHashCode:function(item){return item.column+"x"+item.row;
},_scrollItemIntoView:function(item){this._pane.scrollCellIntoView(item.column,item.row);
},_getSelectableLocationX:function(item){var columnConfig=this._pane.getColumnConfig();
var itemLeft=columnConfig.getItemPosition(item.column);
var itemRight=itemLeft+columnConfig.getItemSize(item.column)-1;
return {left:itemLeft,right:itemRight};
},_getSelectableLocationY:function(item){var rowConfig=this._pane.getRowConfig();
var itemTop=rowConfig.getItemPosition(item.row);
var itemBottom=itemTop+rowConfig.getItemSize(item.row)-1;
return {top:itemTop,bottom:itemBottom};
}}});
qx.Class.define("qx.ui.virtual.selection.CellLines",{extend:qx.ui.virtual.selection.CellRectangle,members:{_getSelectableRange:function(item1,item2){var selectables=[];
var columnCount=this._pane.getColumnConfig().getItemCount();

if(item1.row<item2.row||item1.row==item2.row&&item1.column<item2.column){var start=item1.row*columnCount+item1.column;
var end=item2.row*columnCount+item2.column;
}else{var start=item2.row*columnCount+item2.column;
var end=item1.row*columnCount+item1.column;
}
for(var i=start;i<=end;i++){var cell={row:Math.floor(i/columnCount),column:i%columnCount};

if(this._isSelectable(cell)){selectables.push(cell);
}}return selectables;
}}});
qx.Class.define("qx.ui.table.cellrenderer.Image",{extend:qx.ui.table.cellrenderer.AbstractImage,construct:function(width,height){this.base(arguments);

if(width){this.__imageWidth=width;
}
if(height){this.__imageHeight=height;
}this.__am=qx.util.AliasManager.getInstance();
},members:{__am:null,__imageHeight:16,__imageWidth:16,_identifyImage:function(cellInfo){var imageHints={imageWidth:this.__imageWidth,imageHeight:this.__imageHeight};

if(cellInfo.value==""){imageHints.url=null;
}else{imageHints.url=this.__am.resolve(cellInfo.value);
}imageHints.tooltip=cellInfo.tooltip;
return imageHints;
}},destruct:function(){this.__am=null;
}});
qx.Class.define("qx.ui.container.Resizer",{extend:qx.ui.container.Composite,include:qx.ui.core.MResizable,properties:{appearance:{refine:true,init:"resizer"}}});
qx.Class.define("qx.ui.progressive.model.Default",{extend:qx.ui.progressive.model.Abstract,construct:function(){this.base(arguments);
this.__elements=[];
},members:{__elements:null,addElements:function(elems){this.__elements=this.__elements.concat(elems);
this.fireDataEvent("dataAvailable",this.__elements.length);
},addElement:function(elem){this.__elements.push(elem);
this.fireDataEvent("dataAvailable",this.__elements.length);
},getElementCount:function(){return this.__elements.length;
},getNextElement:function(){if(this.__elements.length>0){return ({element:this.__elements.shift(),remaining:this.__elements.length});
}return null;
}},destruct:function(){this.__elements=null;
}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Boolean",{extend:qx.ui.progressive.renderer.table.cell.Icon,construct:function(){this.base(arguments);
var aliasManager=qx.util.AliasManager.getInstance();
var resourceManager=qx.util.ResourceManager.getInstance();
var boolTrueImg=aliasManager.resolve("decoration/table/boolean-true.png");
var boolFalseImg=aliasManager.resolve("decoration/table/boolean-false.png");
this.__iconUrlTrue=resourceManager.toUri(boolTrueImg);
this.__iconUrlFalse=resourceManager.toUri(boolFalseImg);
},properties:{allowToggle:{check:"Boolean",init:false}},members:{__iconUrlTrue:null,__iconUrlFalse:null,__numericAllowed:null,__conditions:null,__defaultTextAlign:null,__defaultColor:null,__defaultFontStyle:null,__defaultFontWeight:null,_identifyImage:function(cellInfo){var imageData={imageWidth:11,imageHeight:11};

switch(cellInfo.cellData){case true:imageData.url=this.__iconUrlTrue;
imageData.extras="celldata='1' ";
break;
case false:imageData.url=this.__iconUrlFalse;
imageData.extras="celldata='0' ";
break;
default:imageData.url=null;
break;
}
if(this.getAllowToggle()){imageData.extras+="onclick=\""+"var node = this.attributes.getNamedItem('celldata'); "+"var value = node.nodeValue; "+"var src; "+"if (value == '0') "+"{";

if(qx.core.Variant.isSet("qx.client","mshtml")&&/\.png$/i.test(this.__iconUrlTrue)){imageData.extras+="  this.src='"+this.getBlankImage()+"'; "+"  var loader = 'DXImageTransform.Microsoft.AlphaImageLoader'; "+"  var filters = this.filters.item(loader); "+"  filters.src='"+this.__iconUrlTrue+"'; "+"  filters.sizingMethod = 'scale'; ";
}else{imageData.extras+="  this.src='"+this.__iconUrlTrue+"'; ";
}imageData.extras+="  node.nodeValue='1'; "+"} "+"else "+"{";

if(qx.core.Variant.isSet("qx.client","mshtml")&&/\.png$/i.test(this.__iconUrlFalse)){imageData.extras+="  this.src='"+this.getBlankImage()+"'; "+"  var loader = 'DXImageTransform.Microsoft.AlphaImageLoader'; "+"  var filters = this.filters.item(loader); "+"  filters.src='"+this.__iconUrlFalse+"'; "+"  filters.sizingMethod = 'scale'; ";
}else{imageData.extras+="  this.src='"+this.__iconUrlFalse+"'; ";
}imageData.extras+="  node.nodeValue='0'; "+"}";
imageData.extras+="try { "+"  this.attributes.setNamedItem(node); "+"} catch (e) { "+"  var namedItem = document.createAttribute('celldata'); "+"  namedItem.value = node.nodeValue; "+"  this.attributes.setNamedItem(namedItem); "+"}"+"\"";
}return imageData;
},_getCellStyle:function(cellInfo){var ret=this.base(arguments,cellInfo);
return ret;
}},destruct:function(){this.__iconUrlTrue=this.__iconUrlFalse=null;
}});
qx.Class.define("qx.ui.toolbar.RadioButton",{extend:qx.ui.toolbar.CheckBox,include:[qx.ui.form.MModelProperty],implement:[qx.ui.form.IModel,qx.ui.form.IRadioItem],properties:{group:{check:"qx.ui.form.RadioGroup",apply:"_applyGroup",nullable:true}},members:{_applyValue:function(value,old){this.base(arguments,value,old);

if(value){var grp=this.getGroup();

if(grp){grp.setSelection([this]);
}}},_applyGroup:function(value,old){if(old){old.remove(this);
}
if(value){value.add(this);
}}}});
qx.Class.define("qx.ui.core.ScrollPane",{extend:qx.ui.core.scroll.ScrollPane,construct:function(){this.base(arguments);
qx.log.Logger.deprecatedClassWarning(qx.ui.core.ScrollPane,"This class has been moved to qx.ui.core.scroll.ScrollPane");
}});
qx.Class.define("qx.ui.layout.Dock",{extend:qx.ui.layout.Abstract,construct:function(spacingX,spacingY,separatorX,separatorY){this.base(arguments);

if(spacingX){this.setSpacingX(spacingX);
}
if(spacingY){this.setSpacingY(spacingY);
}
if(separatorX){this.setSeparatorX(separatorX);
}
if(separatorY){this.setSeparatorY(separatorY);
}},properties:{sort:{check:["auto","y","x"],init:"auto",apply:"_applySort"},separatorX:{check:"Decorator",nullable:true,apply:"_applyLayoutChange"},separatorY:{check:"Decorator",nullable:true,apply:"_applyLayoutChange"},connectSeparators:{check:"Boolean",init:false,apply:"_applyLayoutChange"},spacingX:{check:"Integer",init:0,apply:"_applyLayoutChange"},spacingY:{check:"Integer",init:0,apply:"_applyLayoutChange"}},members:{__children:null,__edges:null,verifyLayoutProperty:function(item,name,value){this.assertInArray(name,["flex","edge","height","width"],"The property '"+name+"' is not supported by the Dock layout!");

if(name==="edge"){this.assertInArray(value,["north","south","west","east","center"]);
}else if(name==="flex"){this.assertNumber(value);
this.assert(value>=0);
}else{this.assertMatch(value,qx.ui.layout.Util.PERCENT_VALUE);
}},_applySort:function(){this._invalidChildrenCache=true;
this._applyLayoutChange();
},__edgeMap:{north:1,south:2,west:3,east:4,center:5},__alignMap:{1:"top",2:"bottom",3:"left",4:"right"},__rebuildCache:function(){var all=this._getLayoutChildren();
var child,center;
var length=all.length;
var high=[];
var low=[];
var edge=[];
var yfirst=this.getSort()==="y";
var xfirst=this.getSort()==="x";

for(var i=0;i<length;i++){child=all[i];
edge=child.getLayoutProperties().edge;

if(edge==="center"){if(center){throw new Error("It is not allowed to have more than one child aligned to 'center'!");
}center=child;
}else if(xfirst||yfirst){if(edge==="north"||edge==="south"){yfirst?high.push(child):low.push(child);
}else if(edge==="west"||edge==="east"){yfirst?low.push(child):high.push(child);
}}else{high.push(child);
}}var result=high.concat(low);

if(center){result.push(center);
}this.__children=result;
var edges=[];

for(var i=0;i<length;i++){edge=result[i].getLayoutProperties().edge;
edges[i]=this.__edgeMap[edge]||5;
}this.__edges=edges;
delete this._invalidChildrenCache;
},renderLayout:function(availWidth,availHeight){if(this._invalidChildrenCache){this.__rebuildCache();
}var util=qx.ui.layout.Util;
var children=this.__children;
var edges=this.__edges;
var length=children.length;
var flexibles,child,hint,props,flex,grow,width,height,offset;
var widths=[];
var heights=[];
var separatorWidths=this._getSeparatorWidths();
var spacingX=this.getSpacingX();
var spacingY=this.getSpacingY();
var allocatedWidth=-spacingX;
var allocatedHeight=-spacingY;

if(separatorWidths.x){allocatedWidth-=separatorWidths.x+spacingX;
}
if(separatorWidths.y){allocatedHeight-=separatorWidths.y+spacingY;
}
for(var i=0;i<length;i++){child=children[i];
props=child.getLayoutProperties();
hint=child.getSizeHint();
width=hint.width;
height=hint.height;

if(props.width!=null){width=Math.floor(availWidth*parseFloat(props.width)/100);

if(width<hint.minWidth){width=hint.minWidth;
}else if(width>hint.maxWidth){width=hint.maxWidth;
}}
if(props.height!=null){height=Math.floor(availHeight*parseFloat(props.height)/100);

if(height<hint.minHeight){height=hint.minHeight;
}else if(height>hint.maxHeight){height=hint.maxHeight;
}}widths[i]=width;
heights[i]=height;
switch(edges[i]){case 1:case 2:allocatedHeight+=height+child.getMarginTop()+child.getMarginBottom()+spacingY;

if(separatorWidths.y){allocatedHeight+=separatorWidths.y+spacingY;
}break;
case 3:case 4:allocatedWidth+=width+child.getMarginLeft()+child.getMarginRight()+spacingX;

if(separatorWidths.x){allocatedWidth+=separatorWidths.x+spacingX;
}break;
default:allocatedWidth+=width+child.getMarginLeft()+child.getMarginRight()+spacingX;
allocatedHeight+=height+child.getMarginTop()+child.getMarginBottom()+spacingY;

if(separatorWidths.x){allocatedWidth+=separatorWidths.x+spacingX;
}
if(separatorWidths.y){allocatedHeight+=separatorWidths.y+spacingY;
}}}if(allocatedWidth!=availWidth){flexibles={};
grow=allocatedWidth<availWidth;

for(var i=0;i<length;i++){child=children[i];

switch(edges[i]){case 3:case 4:case 5:flex=child.getLayoutProperties().flex;
if(flex==null&&edges[i]==5){flex=1;
}
if(flex>0){hint=child.getSizeHint();
flexibles[i]={min:hint.minWidth,value:widths[i],max:hint.maxWidth,flex:flex};
}}}var result=util.computeFlexOffsets(flexibles,availWidth,allocatedWidth);

for(var i in result){offset=result[i].offset;
widths[i]+=offset;
allocatedWidth+=offset;
}}if(allocatedHeight!=availHeight){flexibles=[];
grow=allocatedHeight<availHeight;

for(var i=0;i<length;i++){child=children[i];

switch(edges[i]){case 1:case 2:case 5:flex=child.getLayoutProperties().flex;
if(flex==null&&edges[i]==5){flex=1;
}
if(flex>0){hint=child.getSizeHint();
flexibles[i]={min:hint.minHeight,value:heights[i],max:hint.maxHeight,flex:flex};
}}}var result=util.computeFlexOffsets(flexibles,availHeight,allocatedHeight);

for(var i in result){offset=result[i].offset;
heights[i]+=offset;
allocatedHeight+=offset;
}}this._clearSeparators();
var separatorX=this.getSeparatorX(),separatorY=this.getSeparatorY();
var connectSeparators=this.getConnectSeparators();
var nextTop=0,nextLeft=0;
var left,top,width,height,used,edge;
var separatorLeft,separatorTop,separatorWidth,separatorHeight;
var marginTop,marginBottom,marginLeft,marginRight;
var alignMap=this.__alignMap;

for(var i=0;i<length;i++){child=children[i];
edge=edges[i];
hint=child.getSizeHint();
marginTop=child.getMarginTop();
marginBottom=child.getMarginBottom();
marginLeft=child.getMarginLeft();
marginRight=child.getMarginRight();
switch(edge){case 1:case 2:width=availWidth-marginLeft-marginRight;
if(width<hint.minWidth){width=hint.minWidth;
}else if(width>hint.maxWidth){width=hint.maxWidth;
}height=heights[i];
top=nextTop+util.computeVerticalAlignOffset(alignMap[edge],height,availHeight,marginTop,marginBottom);
left=nextLeft+util.computeHorizontalAlignOffset(child.getAlignX()||"left",width,availWidth,marginLeft,marginRight);
if(separatorWidths.y){if(edge==1){separatorTop=nextTop+height+marginTop+spacingY+marginBottom;
}else{separatorTop=nextTop+availHeight-height-marginTop-spacingY-marginBottom-separatorWidths.y;
}separatorLeft=left;
separatorWidth=availWidth;

if(connectSeparators&&separatorLeft>0){separatorLeft-=spacingX+marginLeft;
separatorWidth+=(spacingX)*2;
}else{separatorLeft-=marginLeft;
}this._renderSeparator(separatorY,{left:separatorLeft,top:separatorTop,width:separatorWidth,height:separatorWidths.y});
}used=height+marginTop+marginBottom+spacingY;

if(separatorWidths.y){used+=separatorWidths.y+spacingY;
}availHeight-=used;
if(edge==1){nextTop+=used;
}break;
case 3:case 4:height=availHeight-marginTop-marginBottom;
if(height<hint.minHeight){height=hint.minHeight;
}else if(height>hint.maxHeight){height=hint.maxHeight;
}width=widths[i];
left=nextLeft+util.computeHorizontalAlignOffset(alignMap[edge],width,availWidth,marginLeft,marginRight);
top=nextTop+util.computeVerticalAlignOffset(child.getAlignY()||"top",height,availHeight,marginTop,marginBottom);
if(separatorWidths.x){if(edge==3){separatorLeft=nextLeft+width+marginLeft+spacingX+marginRight;
}else{separatorLeft=nextLeft+availWidth-width-marginLeft-spacingX-marginRight-separatorWidths.x;
}separatorTop=top;
separatorHeight=availHeight;

if(connectSeparators&&separatorTop>0){separatorTop-=spacingY+marginTop;
separatorHeight+=(spacingY)*2;
}else{separatorTop-=marginTop;
}this._renderSeparator(separatorX,{left:separatorLeft,top:separatorTop,width:separatorWidths.x,height:separatorHeight});
}used=width+marginLeft+marginRight+spacingX;

if(separatorWidths.x){used+=separatorWidths.x+spacingX;
}availWidth-=used;
if(edge==3){nextLeft+=used;
}break;
default:width=availWidth-marginLeft-marginRight;
height=availHeight-marginTop-marginBottom;
if(width<hint.minWidth){width=hint.minWidth;
}else if(width>hint.maxWidth){width=hint.maxWidth;
}if(height<hint.minHeight){height=hint.minHeight;
}else if(height>hint.maxHeight){height=hint.maxHeight;
}left=nextLeft+util.computeHorizontalAlignOffset(child.getAlignX()||"left",width,availWidth,marginLeft,marginRight);
top=nextTop+util.computeVerticalAlignOffset(child.getAlignY()||"top",height,availHeight,marginTop,marginBottom);
}child.renderLayout(left,top,width,height);
}},_getSeparatorWidths:function(){var separatorX=this.getSeparatorX(),separatorY=this.getSeparatorY();

if(separatorX||separatorY){var decorationManager=qx.theme.manager.Decoration.getInstance();
}
if(separatorX){var separatorInstanceX=decorationManager.resolve(separatorX);
var separatorInsetsX=separatorInstanceX.getInsets();
var separatorWidthX=separatorInsetsX.left+separatorInsetsX.right;
}
if(separatorY){var separatorInstanceY=decorationManager.resolve(separatorY);
var separatorInsetsY=separatorInstanceY.getInsets();
var separatorWidthY=separatorInsetsY.top+separatorInsetsY.bottom;
}return {x:separatorWidthX||0,y:separatorWidthY||0};
},_computeSizeHint:function(){if(this._invalidChildrenCache){this.__rebuildCache();
}var children=this.__children;
var edges=this.__edges;
var length=children.length;
var hint,child;
var marginX,marginY;
var widthX=0,minWidthX=0;
var heightX=0,minHeightX=0;
var widthY=0,minWidthY=0;
var heightY=0,minHeightY=0;
var separatorWidths=this._getSeparatorWidths();
var spacingX=this.getSpacingX(),spacingY=this.getSpacingY();
var spacingSumX=-spacingX,spacingSumY=-spacingY;

if(separatorWidths.x){spacingSumX-=separatorWidths.x+spacingX;
}
if(separatorWidths.y){spacingSumY-=separatorWidths.y+spacingY;
}for(var i=0;i<length;i++){child=children[i];
hint=child.getSizeHint();
marginX=child.getMarginLeft()+child.getMarginRight();
marginY=child.getMarginTop()+child.getMarginBottom();
switch(edges[i]){case 1:case 2:widthY=Math.max(widthY,hint.width+widthX+marginX);
minWidthY=Math.max(minWidthY,hint.minWidth+minWidthX+marginX);
heightY+=hint.height+marginY;
minHeightY+=hint.minHeight+marginY;
spacingSumY+=spacingY;

if(separatorWidths.y){spacingSumY+=separatorWidths.y+spacingY;
}break;
case 3:case 4:heightX=Math.max(heightX,hint.height+heightY+marginY);
minHeightX=Math.max(minHeightX,hint.minHeight+minHeightY+marginY);
widthX+=hint.width+marginX;
minWidthX+=hint.minWidth+marginX;
spacingSumX+=spacingX;

if(separatorWidths.x){spacingSumX+=separatorWidths.x+spacingX;
}break;
default:widthX+=hint.width+marginX;
minWidthX+=hint.minWidth+marginX;
heightY+=hint.height+marginY;
minHeightY+=hint.minHeight+marginY;
spacingSumX+=spacingX;

if(separatorWidths.x){spacingSumX+=separatorWidths.x+spacingX;
}spacingSumY+=spacingY;

if(separatorWidths.y){spacingSumY+=separatorWidths.y+spacingY;
}}}var minWidth=Math.max(minWidthX,minWidthY)+spacingSumX;
var width=Math.max(widthX,widthY)+spacingSumX;
var minHeight=Math.max(minHeightX,minHeightY)+spacingSumY;
var height=Math.max(heightX,heightY)+spacingSumY;
return {minWidth:minWidth,width:width,minHeight:minHeight,height:height};
}},destruct:function(){this.__edges=this.__children=null;
}});
qx.Class.define("qx.ui.core.ScrollBar",{extend:qx.ui.core.scroll.ScrollBar,construct:function(orientation){this.base(arguments,orientation);
qx.log.Logger.deprecatedClassWarning(qx.ui.core.ScrollBar,"This class has been moved to qx.ui.core.scroll.ScrollBar");
}});
qx.Class.define("qx.ui.table.cellrenderer.Number",{extend:qx.ui.table.cellrenderer.Conditional,properties:{numberFormat:{check:"qx.util.format.NumberFormat",init:null,nullable:true}},members:{_getContentHtml:function(cellInfo){var nf=this.getNumberFormat();

if(nf){if(cellInfo.value||cellInfo.value==0){return nf.format(cellInfo.value);
}else{return "";
}}else{return cellInfo.value==0?"0":(cellInfo.value||"");
}},_getCellClass:function(cellInfo){return "qooxdoo-table-cell qooxdoo-table-cell-right";
}}});
qx.Class.define("qx.ui.table.cellrenderer.Dynamic",{extend:qx.ui.table.cellrenderer.Default,construct:function(cellRendererFactoryFunction){this.base(arguments);

if(cellRendererFactoryFunction){this.setCellRendererFactoryFunction(cellRendererFactoryFunction);
}},properties:{cellRendererFactoryFunction:{check:"Function",nullable:true,init:null}},members:{createDataCellHtml:function(cellInfo,htmlArr){var cellRendererFactoryFunction=this.getCellRendererFactoryFunction();

if(!cellRendererFactoryFunction){throw new Error("No function provided! Aborting.");
}var cellRenderer=cellRendererFactoryFunction(cellInfo);
return cellRenderer.createDataCellHtml(cellInfo,htmlArr);
}}});
qx.Class.define("qx.ui.groupbox.CheckGroupBox",{extend:qx.ui.groupbox.GroupBox,implement:[qx.ui.form.IExecutable,qx.ui.form.IBooleanForm],properties:{appearance:{refine:true,init:"check-groupbox"}},events:{"changeValue":"qx.event.type.Data","execute":"qx.event.type.Event"},members:{_createChildControlImpl:function(id){var control;

switch(id){case "legend":control=new qx.ui.form.CheckBox();
control.setValue(true);
control.addListener("changeValue",this._onRadioChangeValue,this);
control.addListener("resize",this._repositionFrame,this);
control.addListener("execute",this._onExecute,this);
this._add(control);
}return control||this.base(arguments,id);
},_onExecute:function(e){this.fireEvent("execute");
},_onRadioChangeValue:function(e){var checked=e.getData()?true:false;
this.getChildrenContainer().setEnabled(checked);
this.fireDataEvent("changeValue",checked,e.getOldData());
},execute:function(){this.getChildControl("legend").execute();
},setCommand:function(command){this.getChildControl("legend").setCommand(command);
},getCommand:function(){return this.getChildControl("legend").getCommand();
},getValue:function(){return this.getChildControl("legend").getValue();
},setValue:function(value){this.getChildControl("legend").setValue(value);
},resetValue:function(){this.getChildControl("legend").resetValue();
}}});
qx.Class.define("qx.ui.progressive.renderer.table.cell.Html",{extend:qx.ui.progressive.renderer.table.cell.Abstract});
qx.Class.define("qx.ui.form.TextArea",{extend:qx.ui.form.AbstractField,construct:function(value){this.base(arguments,value);
this.initWrap();
},properties:{wrap:{check:"Boolean",init:true,apply:"_applyWrap"},appearance:{refine:true,init:"textarea"}},members:{_createInputElement:function(){return new qx.html.Input("textarea");
},_applyWrap:function(value,old){this.getContentElement().setWrap(value);
},_getContentHint:function(){var hint=this.base(arguments);
hint.height=hint.height*4;
hint.width=this._getTextSize().width*20;
return hint;
}}});
qx.Class.define("qx.ui.tree.TreeFile",{extend:qx.ui.tree.AbstractTreeItem,construct:function(label){this.base(arguments);

if(label){this.setLabel(label);
}},properties:{appearance:{refine:true,init:"tree-file"}},members:{_addWidgets:function(){this.addSpacer();
this.addIcon();
this.addLabel();
}}});
qx.Class.define("qx.ui.virtual.cell.Image",{extend:qx.ui.virtual.cell.AbstractImage,properties:{appearance:{refine:true,init:"cell-image"}},members:{_identifyImage:function(value){return value;
}}});
qx.Class.define("qx.ui.virtual.behavior.Prefetch",{extend:qx.core.Object,construct:function(scroller,minLeft,maxLeft,minRight,maxRight,minAbove,maxAbove,minBelow,maxBelow){this.base(arguments);
this.setPrefetchX(minLeft,maxLeft,minRight,maxRight);
this.setPrefetchY(minAbove,maxAbove,minBelow,maxBelow);
this.__timer=new qx.event.Timer(this.getInterval());
this.__timer.addListener("interval",this._onInterval,this);

if(scroller){this.setScroller(scroller);
}},properties:{scroller:{check:"qx.ui.virtual.core.Scroller",nullable:true,init:null,apply:"_applyScroller"},interval:{check:"Integer",init:200,apply:"_applyInterval"}},members:{__prefetchX:null,__prefetchY:null,__timer:null,__onScrollXId:null,__onScrollYId:null,setPrefetchX:function(minLeft,maxLeft,minRight,maxRight){this.__prefetchX=[minLeft,maxLeft,minRight,maxRight];
},setPrefetchY:function(minAbove,maxAbove,minBelow,maxBelow){this.__prefetchY=[minAbove,maxAbove,minBelow,maxBelow];
},_onInterval:function(){var px=this.__prefetchX;

if(px[1]&&px[3]){this.getScroller().getPane().prefetchX(px[0],px[1],px[2],px[3]);
qx.ui.core.queue.Manager.flush();
}var py=this.__prefetchY;

if(py[1]&&py[3]){this.getScroller().getPane().prefetchY(py[0],py[1],py[2],py[3]);
qx.ui.core.queue.Manager.flush();
}},_applyScroller:function(value,old){if(old){if(this.__onScrollXId){old.getChildControl("scrollbar-x").removeListenerById(this.__onScrollXId);
}
if(this.__onScrollYId){old.getChildControl("scrollbar-y").removeListenerById(this.__onScrollYId);
}}
if(value){if(!value.getContainerElement().getDomElement()){this.__timer.stop();
value.addListenerOnce("appear",this.__timer.start,this.__timer);
}else{this.__timer.restart();
}this.__onScrollXId=value.getChildControl("scrollbar-x").addListener("scroll",this.__timer.restart,this.__timer);
this.__onScrollYId=value.getChildControl("scrollbar-y").addListener("scroll",this.__timer.restart,this.__timer);
}else{this.__timer.stop();
}},_applyInterval:function(value,old){this.__timer.setInterval(value);
}},destruct:function(){this.setScroller(null);
this.__prefetchX=this.__prefetchY=null;
this._disposeObjects("__timer");
}});
qx.Class.define("qx.ui.table.celleditor.Dynamic",{extend:qx.core.Object,implement:qx.ui.table.ICellEditorFactory,construct:function(cellEditorFactoryFunction){this.base(arguments);

if(cellEditorFactoryFunction){this.setCellEditorFactoryFunction(cellEditorFactoryFunction);
}},properties:{cellEditorFactoryFunction:{check:"Function",nullable:true,init:null}},members:{__cellEditorFactory:null,createCellEditor:function(cellInfo){var cellEditorFactoryFunction=this.getCellEditorFactoryFunction();
{this.assertFunction(cellEditorFactoryFunction,"No function provided! Aborting.");
};
this.__cellEditorFactory=cellEditorFactoryFunction(cellInfo);
var cellEditor=this.__cellEditorFactory.createCellEditor(cellInfo);
return cellEditor;
},getCellEditorValue:function(cellEditor){var cellEditorFactoryFunction=this.getCellEditorFactoryFunction();
{this.assertFunction(cellEditorFactoryFunction,"No function provided! Aborting.");
};
var value=this.__cellEditorFactory.getCellEditorValue(cellEditor);
return value;
}},destruct:function(){this.__cellEditorFactory=null;
}});
qx.Class.define("qx.ui.form.Form",{extend:qx.core.Object,construct:function(){this.base(arguments);
this.__groups=[];
this.__buttons=[];
this.__validationManager=new qx.ui.form.validation.Manager();
this.__resetter=new qx.ui.form.Resetter();
},members:{__groups:null,__validationManager:null,__groupCounter:0,__buttons:null,__resetter:null,add:function(item,label,validator,name){if(this.__isFirstAdd()){this.__groups.push({title:null,items:[],labels:[],names:[]});
}this.__groups[this.__groupCounter].items.push(item);
this.__groups[this.__groupCounter].labels.push(label);
if(name==null){name=label.replace(/\s+/g,"");
}this.__groups[this.__groupCounter].names.push(name);
this.__validationManager.add(item,validator);
this.__resetter.add(item);
},addGroupHeader:function(title){if(!this.__isFirstAdd()){this.__groupCounter++;
}this.__groups.push({title:title,items:[],labels:[],names:[]});
},addButton:function(button){this.__buttons.push(button);
},__isFirstAdd:function(){return this.__groups.length===0;
},reset:function(){this.__resetter.reset();
this.__validationManager.reset();
},redefineResetter:function(){this.__resetter.redefine();
},validate:function(){return this.__validationManager.validate();
},getValidationManager:function(){return this.__validationManager;
},getGroups:function(){return this.__groups;
},getButtons:function(){return this.__buttons;
},createView:function(rendererClass){qx.log.Logger.deprecatedMethodWarning(arguments.callee,"This message will removed. Use new rendererClass(form) instead.");

if(rendererClass==null){rendererClass=qx.ui.form.renderer.Single;
}return new rendererClass(this);
},getItems:function(){var items={};
for(var i=0;i<this.__groups.length;i++){var group=this.__groups[i];
for(var j=0;j<group.names.length;j++){var name=group.names[j];
items[name]=group.items[j];
}}return items;
}}});
qx.Class.define("qx.ui.virtual.cell.String",{extend:qx.ui.virtual.cell.Cell,construct:function(){this.base(arguments);
},properties:{appearance:{refine:true,init:"cell-string"}},members:{getContent:function(value,states){return value?qx.bom.String.escape(value):"";
}}});
qx.Class.define("qx.ui.form.renderer.Double",{extend:qx.ui.form.renderer.AbstractRenderer,construct:function(form){var layout=new qx.ui.layout.Grid();
layout.setSpacing(6);
layout.setColumnAlign(0,"left","top");
layout.setColumnAlign(1,"left","top");
layout.setColumnAlign(2,"left","top");
layout.setColumnAlign(3,"left","top");
this._setLayout(layout);
this.base(arguments,form);
},members:{_row:0,_buttonRow:null,addItems:function(items,names,title){if(title!=null){this._add(this._createHeader(title),{row:this._row,column:0,colSpan:4});
this._row++;
}for(var i=0;i<items.length;i++){var label=this._createLabel(names[i],items[i]);
this._add(label,{row:this._row,column:(i*2)%4});
var item=items[i];
label.setBuddy(item);
this._add(item,{row:this._row,column:((i*2)%4)+1});

if(i%2==1){this._row++;
}{};
}
if(i%2==1){this._row++;
}},addButton:function(button){if(this._buttonRow==null){this._buttonRow=new qx.ui.container.Composite();
this._buttonRow.setMarginTop(5);
var hbox=new qx.ui.layout.HBox();
hbox.setAlignX("right");
hbox.setSpacing(5);
this._buttonRow.setLayout(hbox);
this._add(this._buttonRow,{row:this._row,column:0,colSpan:4});
this._row++;
}this._buttonRow.add(button);
},getLayout:function(){return this._getLayout();
},_createLabel:function(name,item){var label=new qx.ui.basic.Label(this._createLabelText(name,item));
label.setRich(true);
return label;
},_createHeader:function(title){var header=new qx.ui.basic.Label(title);
header.setFont("bold");

if(this._row!=0){header.setMarginTop(10);
}return header;
}},destruct:function(){if(this._buttonRow){this._buttonRow.removeAll();
this._disposeObjects("_buttonRow");
}}});
qx.Class.define("qx.ui.table.celleditor.CheckBox",{extend:qx.core.Object,implement:qx.ui.table.ICellEditorFactory,members:{createCellEditor:function(cellInfo){var editor=new qx.ui.container.Composite(new qx.ui.layout.HBox().set({alignX:"center",alignY:"middle"})).set({focusable:true});
var checkbox=new qx.ui.form.CheckBox().set({value:cellInfo.value});
editor.add(checkbox);
editor.addListener("focus",function(){checkbox.focus();
});
editor.addListener("activate",function(){checkbox.activate();
});
checkbox.addListener("keydown",function(e){if(e.getKeyIdentifier()=="Enter"){var clone=qx.event.Pool.getInstance().getObject(qx.event.type.KeySequence);
var target=editor.getContainerElement().getDomElement();
clone.init(e.getNativeEvent(),target,e.getKeyIdentifier());
clone.setType("keypress");
qx.event.Registration.dispatchEvent(target,clone);
}},this);
return editor;
},getCellEditorValue:function(cellEditor){return cellEditor.getChildren()[0].getValue();
}}});
qx.Class.define("qx.ui.virtual.layer.Column",{extend:qx.ui.virtual.layer.AbstractBackground,properties:{appearance:{refine:true,init:"column-layer"}},members:{_fullUpdate:function(firstRow,firstColumn,rowSizes,columnSizes){var html=[];
var height=qx.lang.Array.sum(rowSizes);
var decorations=[];
var left=0;
var column=firstColumn;
var childIndex=0;

for(var x=0;x<columnSizes.length;x++){var decorator=this.getBackground(column);

if(decorator){decorations.push({childIndex:childIndex,decorator:decorator,width:columnSizes[x],height:height});
html.push("<div style='","position: absolute;","top: 0;","left:",left,"px;","'>",decorator.getMarkup(),"</div>");
childIndex++;
}else{var color=this.getColor(column);

if(color){html.push("<div style='","position: absolute;","top: 0;","left:",left,"px;","width:",columnSizes[x],"px;","height:",height,"px;","background-color:",color,"'>","</div>");
childIndex++;
}}left+=columnSizes[x];
column+=1;
}var el=this.getContentElement().getDomElement();
el.style.display="none";
el.innerHTML=html.join("");
for(var i=0,l=decorations.length;i<l;i++){var deco=decorations[i];
deco.decorator.resize(el.childNodes[deco.childIndex].firstChild,deco.width,deco.height);
}el.style.display="block";
this._height=height;
},updateLayerWindow:function(firstRow,firstColumn,rowSizes,columnSizes){if(firstColumn!==this.getFirstColumn()||columnSizes.length!==this.getColumnSizes().length||this._height<qx.lang.Array.sum(rowSizes)){this._fullUpdate(firstRow,firstColumn,rowSizes,columnSizes);
}},setColor:function(index,color){this.base(arguments,index,color);
var firstColumn=this.getFirstColumn();
var lastColumn=firstColumn+this.getColumnSizes().length-1;

if(index>=firstColumn&&index<=lastColumn){this.updateLayerData();
}}}});
qx.Class.define("qx.ui.progressive.renderer.FunctionCaller",{extend:qx.ui.progressive.renderer.Abstract,members:{render:function(state,element){element.data(state.getUserData());
}}});
qx.Class.define("qx.ui.decoration.VBox",{extend:qx.ui.decoration.AbstractBox,construct:function(baseImage,insets){this.base(arguments,baseImage,insets,"vertical");
}});
qx.Class.define("qx.ui.table.celleditor.PasswordField",{extend:qx.ui.table.celleditor.AbstractField,members:{_createEditor:function(){var cellEditor=new qx.ui.form.PasswordField();
cellEditor.setAppearance("table-editor-textfield");
return cellEditor;
}}});
qx.Class.define("qx.ui.form.PasswordField",{extend:qx.ui.form.TextField,members:{_createInputElement:function(){var input=new qx.html.Input("password");
input.addListener("input",this._onHtmlInput,this);
return input;
}}});
qx.Class.define("qx.ui.progressive.renderer.table.Widths",{extend:qx.core.Object,construct:function(numColumns){this.base(arguments);
this.__columnData=[];

for(var i=0;i<numColumns;i++){this.__columnData[i]=new qx.ui.core.ColumnData();
}},members:{__columnData:null,getData:function(){return this.__columnData;
},set:function(column,map){for(var key in map){switch(key){case "width":this.setWidth(column,map[key]);
break;
case "minWidth":this.setMinWidth(column,map[key]);
break;
case "maxWidth":this.setMaxWidth(column,map[key]);
break;
default:throw new Error("Unrecognized key: "+key);
}}},setWidth:function(column,width){if(column>this.__columnData.length-1||column<0){throw new Error("Column number out of range");
}this.__columnData[column].setColumnWidth(width);
},setMinWidth:function(column,width){if(column>this.__columnData.length-1||column<0){throw new Error("Column number out of range");
}this.__columnData[column].setMinWidth(width);
},setMaxWidth:function(column,width){if(column>this.__columnData.length-1||column<0){throw new Error("Column number out of range");
}this.__columnData[column].setMaxWidth(width);
}}});
qx.Interface.define("qx.ui.virtual.selection.ISelectionDelegate",{members:{isItemSelectable:function(item){},styleSelectable:function(item,type,wasAdded){}}});
qx.Class.define("qx.ui.table.cellrenderer.Debug",{extend:qx.ui.table.cellrenderer.Abstract,members:{_getContentHtml:function(cellInfo){var html="<div style='height:"+cellInfo.styleHeight+"px;overflow:auto;'>"+qx.dev.Debug.debugObjectToString(cellInfo.value,"row="+cellInfo.row+", col="+cellInfo.col,10,true)+"</div>";
return html;
}}});
qx.Class.define("qx.dev.Debug",{statics:{debugObject:function(obj,initialMessage,maxLevel){qx.log.Logger.debug(this,qx.dev.Debug.debugObjectToString(obj,initialMessage,maxLevel,false));
},debugObjectToString:function(obj,initialMessage,maxLevel,bHtml){if(!maxLevel){maxLevel=10;
}var eol=(bHtml?"</span><br>":"\n");
var sol=function(currentLevel){var indentStr;

if(!bHtml){indentStr="";

for(var i=0;i<currentLevel;i++){indentStr+="  ";
}}else{indentStr="<span style='padding-left:"+(currentLevel*8)+"px;'>";
}return indentStr;
};
var message="";
var displayObj=function(obj,level,maxLevel){if(level>maxLevel){message+=(sol(level)+"*** TOO MUCH RECURSION: not displaying ***"+eol);
return;
}if(typeof (obj)!="object"){message+=sol(level)+obj+eol;
return;
}for(var prop in obj){if(typeof (obj[prop])=="object"){if(obj[prop] instanceof Array){message+=sol(level)+prop+": "+"Array"+eol;
}else if(obj[prop]===null){message+=sol(level)+prop+": "+"null"+eol;
continue;
}else if(obj[prop]===undefined){message+=sol(level)+prop+": "+"undefined"+eol;
continue;
}else{message+=sol(level)+prop+": "+"Object"+eol;
}displayObj(obj[prop],level+1,maxLevel);
}else{message+=sol(level)+prop+": "+obj[prop]+eol;
}}};
if(initialMessage){message+=sol(0)+initialMessage+eol;
}
if(obj instanceof Array){message+=sol(0)+"Array, length="+obj.length+":"+eol;
}else if(typeof (obj)=="object"){var count=0;

for(var prop in obj){count++;
}message+=sol(0)+"Object, count="+count+":"+eol;
}message+=sol(0)+"------------------------------------------------------------"+eol;

try{displayObj(obj,0,maxLevel);
}catch(ex){message+=sol(0)+"*** EXCEPTION ("+ex+") ***"+eol;
}message+=sol(0)+"============================================================"+eol;
return message;
},getFunctionName:function(func,functionType){var clazz=func.self;

if(!clazz){return null;
}while(func.wrapper){func=func.wrapper;
}
switch(functionType){case "construct":return func==clazz?"construct":null;
case "members":return qx.lang.Object.getKeyFromValue(clazz,func);
case "statics":return qx.lang.Object.getKeyFromValue(clazz.prototype,func);
default:if(func==clazz){return "construct";
}return (qx.lang.Object.getKeyFromValue(clazz.prototype,func)||qx.lang.Object.getKeyFromValue(clazz,func)||null);
}},debugProperties:function(model,maxLevel,html,indent){if(maxLevel==null){maxLevel=10;
}if(indent==null){indent=1;
}var newLine="";
html?newLine="<br>":newLine="\r\n";
var message="";

if(qx.lang.Type.isNumber(model)||qx.lang.Type.isString(model)||qx.lang.Type.isBoolean(model)||model==null||maxLevel<=0){return model;
}else if(qx.Class.hasInterface(model.constructor,qx.data.IListData)){for(var i=0;i<model.length;i++){for(var j=0;j<indent;j++){message+="-";
}message+="index("+i+"): "+this.debugProperties(model.getItem(i),maxLevel-1,html,indent+1)+newLine;
}return message+newLine;
}else if(model.constructor!=null){var properties=model.constructor.$$properties;

for(var key in properties){message+=newLine;
for(var j=0;j<indent;j++){message+="-";
}message+=" "+key+": "+this.debugProperties(model["get"+qx.lang.String.firstUp(key)](),maxLevel-1,html,indent+1);
}return message;
}return "";
}}});
qx.Class.define("qx.ui.table.cellrenderer.Password",{extend:qx.ui.table.cellrenderer.Default,members:{_getContentHtml:function(cellInfo){var value=cellInfo.value;

if(value===null){value="";
}cellInfo.value=value.replace(/./g,"*");
return qx.bom.String.escape(this._formatValue(cellInfo));
}}});
qx.Class.define("qx.ui.table.celleditor.SelectBox",{extend:qx.core.Object,implement:qx.ui.table.ICellEditorFactory,properties:{validationFunction:{check:"Function",nullable:true,init:null},listData:{check:"Array",init:null,nullable:true}},members:{createCellEditor:function(cellInfo){var cellEditor=new qx.ui.form.SelectBox().set({appearance:"table-editor-selectbox"});
var value=cellInfo.value;
cellEditor.originalValue=value;
var cellRenderer=cellInfo.table.getTableColumnModel().getDataCellRenderer(cellInfo.col);
var label=cellRenderer._getContentHtml(cellInfo);

if(value!=label){value=label;
}if(value===null){value="";
}var list=this.getListData();

if(list){var item;

for(var i=0,l=list.length;i<l;i++){var row=list[i];

if(row instanceof Array){item=new qx.ui.form.ListItem(row[0],row[1]);
item.setUserData("row",row[2]);
}else{item=new qx.ui.form.ListItem(row,null);
item.setUserData("row",row);
}cellEditor.add(item);
}}var itemToSelect=cellEditor.getChildrenContainer().findItem(""+value);

if(itemToSelect){cellEditor.setSelection([itemToSelect]);
}else{cellEditor.resetSelection();
}cellEditor.addListener("appear",function(){cellEditor.open();
});
return cellEditor;
},getCellEditorValue:function(cellEditor){var selection=cellEditor.getSelection();
var value="";

if(selection&&selection[0]){value=selection[0].getUserData("row")||selection[0].getLabel();
}var validationFunc=this.getValidationFunction();

if(validationFunc){value=validationFunc(value,cellEditor.originalValue);
}
if(typeof cellEditor.originalValue=="number"){value=parseFloat(value);
}return value;
}}});
qx.Class.define("qx.util.TimerManager",{extend:qx.core.Object,type:"singleton",statics:{__timerQueue:[],__timerData:{},__timerId:0},members:{start:function(callback,recurTime,context,userData,initialTime){if(!initialTime){initialTime=recurTime||0;
}var expireAt=(new Date()).getTime()+initialTime;
this.self(arguments).__timerData[++this.self(arguments).__timerId]={callback:callback,userData:userData||null,expireAt:expireAt,recurTime:recurTime,context:context||this};
this.__insertNewTimer(expireAt,this.self(arguments).__timerId);
return this.self(arguments).__timerId;
},stop:function(timerId){var timerQueue=this.self(arguments).__timerQueue;
var length=timerQueue.length;

for(var i=0;i<length;i++){if(timerQueue[i]==timerId){timerQueue.splice(i,1);
break;
}}delete this.self(arguments).__timerData[timerId];
if(timerQueue.length==0){qx.event.Idle.getInstance().removeListener("interval",this.__processQueue);
}},__insertNewTimer:function(expireAt,timerId){var timerQueue=this.self(arguments).__timerQueue;
var timerData=this.self(arguments).__timerData;
var length=timerQueue.length;

for(var i=0;i<length;i++){if(timerData[timerQueue[i]].expireAt>expireAt){timerQueue.splice(i,0,timerId);
break;
}}if(timerQueue.length==length){timerQueue.push(timerId);
}if(timerQueue.length==1){qx.event.Idle.getInstance().addListener("interval",this.__processQueue,this);
}},__processQueue:function(){var timeNow=(new Date()).getTime();
var timerQueue=this.self(arguments).__timerQueue;
var timerData=this.self(arguments).__timerData;
while(timerQueue.length>0&&timerData[timerQueue[0]].expireAt<=timeNow){var expiredTimerId=(timerQueue.splice(0,1))[0];
var expiredTimerData=timerData[expiredTimerId];
expiredTimerData.callback.call(expiredTimerData.context,expiredTimerData.userData,expiredTimerId);
if(expiredTimerData.recurTime&&timerData[expiredTimerId]){var now=(new Date()).getTime();
expiredTimerData.expireAt=now+expiredTimerData.recurTime;
this.__insertNewTimer(expiredTimerData.expireAt,expiredTimerId);
}else{delete timerData[expiredTimerId];
}}if(timerQueue.length==0){qx.event.Idle.getInstance().removeListener("interval",this.__processQueue);
}}}});
qx.Class.define("qx.util.fsm.State",{extend:qx.core.Object,construct:function(stateName,stateInfo){this.base(arguments);
this.setName(stateName);
if(typeof (stateInfo)!="object"){throw new Error("State info must be an object");
}for(var field in stateInfo){switch(field){case "onentry":this.setOnentry(stateInfo[field]);
break;
case "onexit":this.setOnexit(stateInfo[field]);
break;
case "autoActionsBeforeOnentry":this.setAutoActionsBeforeOnentry(stateInfo[field]);
break;
case "autoActionsAfterOnentry":this.setAutoActionsAfterOnentry(stateInfo[field]);
break;
case "autoActionsBeforeOnexit":this.setAutoActionsBeforeOnexit(stateInfo[field]);
break;
case "autoActionsAfterOnexit":this.setAutoActionsAfterOnexit(stateInfo[field]);
break;
case "events":this.setEvents(stateInfo[field]);
break;
default:this.setUserData(field,stateInfo[field]);
this.debug("State "+stateName+": "+"Adding user-provided field to state: "+field);
break;
}}if(!this.getEvents()){throw new Error("The events object must be provided in new state info");
}this.transitions={};
},statics:{_commonTransformAutoActions:function(actionType,value){if(typeof (value)!="object"){throw new Error("Invalid "+actionType+" value: "+typeof (value));
}var funcFragment;
var func="try"+"{";
var param;
var objectAndGroupList;
for(var f in value){var functionRequest=value[f];
if(!functionRequest instanceof Array){throw new Error("Invalid function request type: "+"expected array, found "+typeof (functionRequest));
}for(var i=0;i<functionRequest.length;i++){objectAndGroupList=functionRequest[i];
if(typeof (objectAndGroupList)!="object"){throw new Error("Invalid function request parameter type: "+"expected object, found "+typeof (functionRequest[param]));
}var params=objectAndGroupList["parameters"];
if(!params){params=[];
}else{if(!params instanceof Array){throw new Error("Invalid function parameters: "+"expected array, found "+typeof (params));
}}funcFragment=f+"(";
for(var j=0;j<params.length;j++){if(j!=0){funcFragment+=",";
}
if(typeof (params[j])=="function"){funcFragment+="("+params[j]+")(fsm)";
}else if(typeof (params[j])=="string"){funcFragment+='"'+params[j]+'"';
}else{funcFragment+=params[j];
}}funcFragment+=")";
var a=objectAndGroupList["objects"];
if(!a){a=[];
}else if(!a instanceof Array){throw new Error("Invalid 'objects' list: expected array, got "+typeof (a));
}
for(var j=0;j<a.length;j++){if(typeof (a[j])!="string"){throw new Error("Invalid friendly name in 'objects' list: "+a[j]);
}func+=" fsm.getObject('"+a[j]+"')."+funcFragment+";";
}var g=objectAndGroupList["groups"];
if(g){if(!g instanceof Array){throw new Error("Invalid 'groups' list: expected array, got "+typeof (g));
}
for(j=0;j<g.length;j++){func+="  var groupObjects = "+"    fsm.getGroupObjects('"+g[j]+"');"+"  for (var i = 0; i < groupObjects.length; i++)"+"  {"+"    var objName = groupObjects[i];"+"    fsm.getObject(objName)."+funcFragment+";"+"  }";
}}}}func+="}"+"catch(ex)"+"{"+"  fsm.debug(ex);"+"}";
return new Function("fsm",func);
}},properties:{name:{transform:"__transformName",nullable:true},onentry:{transform:"__transformOnentry",nullable:true,init:function(fsm,event){}},onexit:{transform:"__transformOnexit",nullable:true,init:function(fsm,event){}},autoActionsBeforeOnentry:{transform:"__transformAutoActionsBeforeOnentry",nullable:true,init:function(fsm,event){}},autoActionsAfterOnentry:{transform:"__transformAutoActionsAfterOnentry",nullable:true,init:function(fsm,event){}},autoActionsBeforeOnexit:{transform:"__transformAutoActionsBeforeOnexit",nullable:true,init:function(fsm,event){}},autoActionsAfterOnexit:{transform:"__transformAutoActionsAfterOnexit",nullable:true,init:function(fsm,event){}},events:{transform:"__transformEvents",nullable:true}},members:{__transformName:function(value){if(typeof (value)!="string"||value.length<1){throw new Error("Invalid state name");
}return value;
},__transformOnentry:function(value){switch(typeof (value)){case "undefined":return function(fsm,event){};
case "function":return value;
default:throw new Error("Invalid onentry type: "+typeof (value));
}},__transformOnexit:function(value){switch(typeof (value)){case "undefined":return function(fsm,event){};
case "function":return value;
default:throw new Error("Invalid onexit type: "+typeof (value));
return null;
}},__transformEvents:function(value){if(typeof (value)!="object"){throw new Error("events must be an object");
}for(var e in value){var action=value[e];

if(typeof (action)=="number"&&action!=qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE&&action!=qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED){throw new Error("Invalid numeric value in events object: "+e+": "+action);
}else if(typeof (action)=="object"){for(var action_e in action){if(typeof (action[action_e])=="number"&&action[action_e]!=qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE&&action[action_e]!=qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED){throw new Error("Invalid numeric value in events object "+"("+e+"): "+action_e+": "+action[action_e]);
}else if(typeof (action[action_e])!="string"&&typeof (action[action_e])!="number"){throw new Error("Invalid value in events object "+"("+e+"): "+action_e+": "+action[action_e]);
}}}else if(typeof (action)!="string"&&typeof (action)!="number"){throw new Error("Invalid value in events object: "+e+": "+value[e]);
}}return value;
},__transformAutoActionsBeforeOnentry:function(value){return qx.util.fsm.State._commonTransformAutoActions("autoActionsBeforeOnentry",value);
},__transformAutoActionsAfterOnentry:function(value){return qx.util.fsm.State._commonTransformAutoActions("autoActionsAfterOnentry",value);
},__transformAutoActionsBeforeOnexit:function(value){return qx.util.fsm.State._commonTransformAutoActions("autoActionsBeforeOnexit",value);
},__transformAutoActionsAfterOnexit:function(value){return qx.util.fsm.State._commonTransformAutoActions("autoActionsAfterOnexit",value);
},addTransition:function(trans){if(!trans instanceof qx.util.fsm.Transition){throw new Error("Invalid transition: not an instance of "+"qx.util.fsm.Transition");
}this.transitions[trans.getName()]=trans;
}}});
qx.Class.define("qx.util.fsm.FiniteStateMachine",{extend:qx.core.Object,construct:function(machineName){this.base(arguments);
this.setName(machineName);
this.__states={};
this.__startState=null;
this.__savedStates=[];
this.__eventQueue=[];
this.__blockedEvents=[];
this.__friendlyToObject={};
this.__friendlyToHash={};
this.__hashToFriendly={};
this.__groupToFriendly={};
this.__friendlyToGroups={};
},statics:{StateChange:{CURRENT_STATE:1,POP_STATE_STACK:2,TERMINATE:3},EventHandling:{PREDICATE:1,BLOCKED:2},DebugFlags:{EVENTS:1,TRANSITIONS:2,FUNCTION_DETAIL:4,OBJECT_NOT_FOUND:8}},properties:{name:{check:"String",nullable:true},state:{check:"String",nullable:true},previousState:{check:"String",nullable:true},nextState:{check:"String",nullable:true},maxSavedStates:{check:"Number",init:2},debugFlags:{check:"Number",init:7}},members:{__states:null,__startState:null,__eventQueue:null,__blockedEvents:null,__savedStates:null,__friendlyToObject:null,__friendlyToHash:null,__hashToFriendly:null,__groupToFriendly:null,__friendlyToGroups:null,__bEventProcessingInProgress:false,addState:function(state){if(!state instanceof qx.util.fsm.State){throw new Error("Invalid state: not an instance of "+"qx.util.fsm.State");
}var stateName=state.getName();
if(stateName in this.__states){throw new Error("State "+stateName+" already exists");
}if(this.__startState==null){this.__startState=stateName;
}this.__states[stateName]=state;
},replaceState:function(state,bDispose){if(!state instanceof qx.util.fsm.State){throw new Error("Invalid state: not an instance of "+"qx.util.fsm.State");
}var stateName=state.getName();
var oldState=this.__states[stateName];
this.__states[stateName]=state;
if(bDispose){oldState._bNeedDispose=true;
}return oldState;
},addObject:function(friendlyName,obj,groupNames){var hash=obj.toHashCode();
this.__friendlyToHash[friendlyName]=hash;
this.__hashToFriendly[hash]=friendlyName;
this.__friendlyToObject[friendlyName]=obj;
if(!groupNames){return;
}if(typeof (groupNames)=="string"){groupNames=[groupNames];
}for(var i=0;i<groupNames.length;i++){var groupName=groupNames[i];
if(!this.__groupToFriendly[groupName]){this.__groupToFriendly[groupName]={};
}this.__groupToFriendly[groupName][friendlyName]=true;
if(!this.__friendlyToGroups[friendlyName]){this.__friendlyToGroups[friendlyName]=[];
}this.__friendlyToGroups[friendlyName]=this.__friendlyToGroups[friendlyName].concat(groupNames);
}},removeObject:function(friendlyName){var hash=this.__friendlyToHash[friendlyName];
if(this.__friendlyToGroups[friendlyName]){for(var groupName in this.__friendlyToGroups[friendlyName]){delete this.__groupToFriendly[groupName];
}delete this.__friendlyToGroups[friendlyName];
}delete this.__hashToFriendly[hash];
delete this.__friendlyToHash[friendlyName];
delete this.__friendlyToObject[friendlyName];
},getObject:function(friendlyName){return this.__friendlyToObject[friendlyName];
},getFriendlyName:function(obj){var hash=obj.toHashCode();
return hash?this.__hashToFriendly[hash]:null;
},getGroupObjects:function(groupName){var a=[];

for(var name in this.__groupToFriendly[groupName]){a.push(name);
}return a;
},displayAllObjects:function(){for(var friendlyName in this.__friendlyToHash){var hash=this.__friendlyToHash[friendlyName];
var obj=this.getObject(friendlyName);
this.debug(friendlyName+" => "+hash);
this.debug("  "+hash+" => "+this.__hashToFriendly[hash]);
this.debug("  "+friendlyName+" => "+this.getObject(friendlyName));
this.debug("  "+this.getObject(friendlyName)+" => "+this.getFriendlyName(obj));
}},start:function(){var stateName=this.__startState;

if(stateName==null){throw new Error("Machine started with no available states");
}this.setState(stateName);
this.setPreviousState(null);
this.setNextState(null);
var debugFunctions=(this.getDebugFlags()&qx.util.fsm.FiniteStateMachine.DebugFlags.FUNCTION_DETAIL);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#actionsBeforeOnentry");
}this.__states[stateName].getAutoActionsBeforeOnentry()(this);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#entry");
}this.__states[stateName].getOnentry()(this,null);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#actionsAfterOnentry");
}this.__states[stateName].getAutoActionsAfterOnentry()(this);
},pushState:function(state){if(this.__savedStates.length>=this.getMaxSavedStates()){throw new Error("Saved-state stack is full");
}
if(state===true){this.__savedStates.push(this.getState());
}else if(state){this.__savedStates.push(state);
}else{this.__savedStates.push(this.getPreviousState());
}},postponeEvent:function(event){this.__blockedEvents.unshift(event);
},enqueueEvent:function(event,bAddAtHead){if(bAddAtHead){this.__eventQueue.push(event);
}else{this.__eventQueue.unshift(event);
}
if(this.getDebugFlags()&qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS){if(bAddAtHead){this.debug(this.getName()+": Pushed event: "+event.getType());
}else{this.debug(this.getName()+": Queued event: "+event.getType());
}}},eventListener:function(event){var e=event.clone();
this.enqueueEvent(e,false);
this.__processEvents();
},fireImmediateEvent:function(type,target,data){if(data){var event=qx.event.Registration.createEvent(type,qx.event.type.Data,[data,null,false]);
}else{var event=qx.event.Registration.createEvent(type,qx.event.type.Event,[false,false]);
}event.setTarget(target);
this.eventListener(event);
},scheduleEvent:function(type,target,data,timeout){qx.event.Timer.once(function(){this.fireImmediateEvent(type,target,data);
},this,timeout||20);
},__processEvents:function(){if(this.__bEventProcessingInProgress){return ;
}this.__bEventProcessingInProgress=true;
while(this.__eventQueue.length>0){var event=this.__eventQueue.pop();
var bDispose=this.__run(event);
if(bDispose){event.dispose();
}}this.__bEventProcessingInProgress=false;
},__run:function(event){var thisState;
var nextState;
var prevState;
var currentState;
var transitions;
var e;
var action;
var debugFlags=this.getDebugFlags();
var debugEvents=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS;
var debugTransitions=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.TRANSITIONS;
var debugFunctions=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.FUNCTION_DETAIL;
var debugObjectNotFound=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.OBJECT_NOT_FOUND;

if(debugEvents){this.debug(this.getName()+": Process event: "+event.getType());
}thisState=this.getState();
currentState=this.__states[thisState];
transitions=currentState.transitions;
e=currentState.getEvents()[event.getType()];
if(!e){if(debugEvents){this.debug(this.getName()+": Event '"+event.getType()+"'"+" not handled.  Ignoring.");
}return true;
}if(typeof (e)=="object"){var friendly=this.getFriendlyName(event.getTarget());

if(!friendly){if(debugObjectNotFound){this.debug(this.getName()+": Could not find friendly name for '"+event.getType()+"' on '"+event.getTarget()+"'");
}return true;
}action=e[friendly];
if(!action){if(debugEvents){this.debug(this.getName()+": Event '"+event.getType()+"'"+" not handled for target "+friendly+".  Ignoring.");
}return true;
}}else{action=e;
}
switch(action){case qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE:break;
case qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED:if(debugEvents){this.debug(this.getName()+": Event '"+event.getType()+"'"+" blocked.  Re-queuing.");
}this.__blockedEvents.unshift(event);
return false;
default:if(typeof (action)=="string"){if(transitions[action]){var trans=transitions[action];
transitions={};
transitions[action]=trans;
}else{throw new Error("Explicit transition "+action+" does not exist");
}break;
}}for(var t in transitions){var trans=transitions[t];
switch(trans.getPredicate()(this,event)){case true:break;
case false:continue;
case null:return true;
default:throw new Error("Transition "+thisState+":"+t+" returned a value other than "+"true, false, or null.");
}nextState=trans.getNextState();

if(typeof (nextState)=="string"){if(!nextState in this.__states){throw new Error("Attempt to transition to nonexistent state "+nextState);
}this.setNextState(nextState);
}else{switch(nextState){case qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE:nextState=thisState;
this.setNextState(nextState);
break;
case qx.util.fsm.FiniteStateMachine.StateChange.POP_STATE_STACK:if(this.__savedStates.length==0){throw new Error("Attempt to transition to POP_STATE_STACK "+"while state stack is empty.");
}nextState=this.__savedStates.pop();
this.setNextState(nextState);
break;
default:throw new Error("Internal error: invalid nextState");
break;
}}if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#autoActionsBeforeOntransition");
}trans.getAutoActionsBeforeOntransition()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#ontransition");
}trans.getOntransition()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#autoActionsAfterOntransition");
}trans.getAutoActionsAfterOntransition()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsBeforeOnexit");
}currentState.getAutoActionsBeforeOnexit()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#exit");
}currentState.getOnexit()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsAfterOnexit");
}currentState.getAutoActionsAfterOnexit()(this);
if(currentState._bNeedDispose){currentState.dispose();
}currentState=this.__states[this.getNextState()];
this.setPreviousState(thisState);
this.setState(this.getNextState());
this.setNextState(null);
prevState=thisState;
thisState=nextState;
nextState=undefined;
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsBeforeOnentry");
}currentState.getAutoActionsBeforeOnentry()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#entry");
}currentState.getOnentry()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsAfterOnentry");
}currentState.getAutoActionsAfterOnentry()(this);
var e;

for(var i=0;i<this.__blockedEvents.length;i++){e=this.__blockedEvents.pop();
this.__eventQueue.unshift(e);
}
if(debugTransitions){this.debug(this.getName()+"#"+prevState+" => "+this.getName()+"#"+thisState);
}return true;
}
if(debugTransitions){this.debug(this.getName()+"#"+thisState+": event '"+event.getType()+"'"+": no transition found.  No state change.");
}return true;
}},destruct:function(){this._disposeArray("__eventQueue");
this._disposeArray("__blockedEvents");
this.__savedStates=this.__states=null;
}});
qx.Class.define("qx.util.fsm.Transition",{extend:qx.core.Object,construct:function(transitionName,transitionInfo){this.base(arguments);
this.setName(transitionName);
for(var field in transitionInfo){switch(field){case "predicate":this.setPredicate(transitionInfo[field]);
break;
case "nextState":this.setNextState(transitionInfo[field]);
break;
case "autoActionsBeforeOntransition":this.setAutoActionsBeforeOntransition(transitionInfo[field]);
break;
case "autoActionsAfterOntransition":this.setAutoActionsAfterOntransition(transitionInfo[field]);
break;
case "ontransition":this.setOntransition(transitionInfo[field]);
break;
default:this.setUserData(field,transitionInfo[field]);
this.debug("Transition "+transitionName+": "+"Adding user-provided field to transition: "+field);
break;
}}},properties:{name:{check:"String",nullable:true},predicate:{init:function(fsm,event){return true;
},transform:"__transformPredicate"},nextState:{init:qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE,transform:"__transformNextState"},autoActionsBeforeOntransition:{init:function(fsm,event){}},autoActionsAfterOntransition:{init:function(fsm,event){}},ontransition:{init:function(fsm,event){},transform:"__transformOntransition"}},members:{__transformPredicate:function(value){switch(typeof (value)){case "undefined":return function(fsm,event){return true;
};
case "boolean":return function(fsm,event){return value;
};
case "function":return value;
default:throw new Error("Invalid transition predicate type: "+typeof (value));
break;
}},__transformNextState:function(value){switch(typeof (value)){case "string":return value;
case "number":switch(value){case qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE:case qx.util.fsm.FiniteStateMachine.StateChange.POP_STATE_STACK:case qx.util.fsm.FiniteStateMachine.StateChange.TERMINATE:return value;
default:throw new Error("Invalid transition nextState value: "+value+": "+"nextState must be an explicit state name, "+"or one of the Fsm.StateChange constants");
}break;
default:throw new Error("Invalid transition nextState type: "+typeof (value));
break;
}},__transformOntransition:function(value){switch(typeof (value)){case "undefined":return function(fsm,event){};
case "function":return value;
default:throw new Error("Invalid ontransition type: "+typeof (value));
break;
}}}});
qx.Class.define("qx.util.ExtendedColor",{statics:{EXTENDED:{transparent:[-1,-1,-1],aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},isExtendedColor:function(value){return this.EXTENDED[value]!==undefined;
},toRgb:function(value){var ret=this.EXTENDED[value];

if(ret){return ret;
}throw new Error("Could not convert other than extended colors to RGB: "+value);
},toRgbString:function(value){return qx.util.ColorUtil.rgbToRgbString(this.toRgb(value));
}}});
qx.Class.define("qx.util.StringBuilder",{extend:qx.type.BaseArray,members:{clear:function(){this.length=0;
},get:function(){return this.join("");
},add:null,isEmpty:function(){return this.length===0;
},size:function(){return this.join("").length;
}},defer:function(statics,members){members.add=members.push;
members.toString=members.get;
members.valueOf=members.get;
}});
qx.Class.define("qx.util.PlaceUtil",{statics:{compute:function(size,area,target,position,smart,offsets){{qx.log.Logger.deprecatedMethodWarning(arguments.callee,"Please use 'qx.util.placement.Placement.compute'");
};
var mode=smart?"keep-align":"direct";
var offsets=offsets||this.__defaultOffsets;
return qx.util.placement.Placement.compute(size,area,target,offsets,position,mode,mode);
},__defaultOffsets:{left:0,top:0,bottom:0,right:0}}});
qx.Class.define("qx.util.Serializer",{statics:{toUriParameter:function(object,qxSerializer){var result="";
var properties=qx.util.PropertyUtil.getProperties(object.constructor);

for(var name in properties){var value=object["get"+qx.lang.String.firstUp(name)]();
if(qx.lang.Type.isArray(value)){for(var i=0;i<value.length;i++){result+=this.__toUriParameter(name,value[i],qxSerializer);
}}else{result+=this.__toUriParameter(name,value,qxSerializer);
}}return result.substring(0,result.length-1);
},__toUriParameter:function(name,value,qxSerializer){if(value instanceof qx.core.Object&&qxSerializer!=null){var encValue=encodeURIComponent(qxSerializer(value));

if(encValue===undefined){var encValue=encodeURIComponent(value);
}}else{var encValue=encodeURIComponent(value);
}return encodeURIComponent(name)+"="+encValue+"&";
},toNativeObject:function(object,qxSerializer){var result;
if(object==null){return null;
}if(qx.Class.hasInterface(object.constructor,qx.data.IListData)){result=[];

for(var i=0;i<object.getLength();i++){result.push(qx.util.Serializer.toNativeObject(object.getItem(i),qxSerializer));
}return result;
}if(qx.lang.Type.isArray(object)){result=[];

for(var i=0;i<object.length;i++){result.push(qx.util.Serializer.toNativeObject(object[i],qxSerializer));
}return result;
}if(object instanceof qx.core.Object){if(qxSerializer!=null){var returnValue=qxSerializer(object);
if(returnValue!=undefined){return returnValue;
}}result={};
var properties=qx.util.PropertyUtil.getProperties(object.constructor);

for(var name in properties){if(properties[name].group!=undefined){continue;
}var value=object["get"+qx.lang.String.firstUp(name)]();
result[name]=qx.util.Serializer.toNativeObject(value,qxSerializer);
}return result;
}if(qx.lang.Type.isObject(object)){result={};

for(var key in object){result[key]=qx.util.Serializer.toNativeObject(object[key],qxSerializer);
}return result;
}return object;
},toJson:function(object,qxSerializer){var result="";
if(object==null){return "null";
}else if(qx.Class.hasInterface(object.constructor,qx.data.IListData)){result+="[";

for(var i=0;i<object.getLength();i++){result+=qx.util.Serializer.toJson(object.getItem(i),qxSerializer)+",";
}
if(result!="["){result=result.substring(0,result.length-1);
}return result+"]";
}else if(qx.lang.Type.isArray(object)){result+="[";

for(var i=0;i<object.length;i++){result+=qx.util.Serializer.toJson(object[i],qxSerializer)+",";
}
if(result!="["){result=result.substring(0,result.length-1);
}return result+"]";
}else if(object instanceof qx.core.Object){if(qxSerializer!=null){var returnValue=qxSerializer(object);
if(returnValue!=undefined){return '"'+returnValue+'"';
}}result+="{";
var properties=qx.util.PropertyUtil.getProperties(object.constructor);

for(var name in properties){if(properties[name].group!=undefined){continue;
}var value=object["get"+qx.lang.String.firstUp(name)]();
result+='"'+name+'":'+qx.util.Serializer.toJson(value,qxSerializer)+",";
}
if(result!="{"){result=result.substring(0,result.length-1);
}return result+"}";
}else if(qx.lang.Type.isObject(object)){result+="{";

for(var key in object){result+='"'+key+'":'+qx.util.Serializer.toJson(object[key],qxSerializer)+",";
}
if(result!="{"){result=result.substring(0,result.length-1);
}return result+"}";
}else if(qx.lang.Type.isString(object)){object=object.replace(/([\\])/g,'\\\\');
object=object.replace(/(["])/g,'\\"');
object=object.replace(/([\r])/g,'\\r');
object=object.replace(/([\f])/g,'\\f');
object=object.replace(/([\n])/g,'\\n');
object=object.replace(/([\t])/g,'\\t');
object=object.replace(/([\b])/g,'\\b');
return '"'+object+'"';
}else if(qx.lang.Type.isDate(object)||qx.lang.Type.isRegExp(object)){return '"'+object+'"';
}return object+"";
}}});
qx.Class.define("qx.util.Validate",{statics:{number:function(){return qx.util.Validate.checkNumber;
},checkNumber:function(value){if((typeof value!=="number"&&(!(value instanceof Number)))||(!(isFinite(value)))){throw new qx.core.ValidationError("Validation Error: ",qx.locale.Manager.tr("%1 is not a number.",value));
}},email:function(){return qx.util.Validate.checkEmail;
},checkEmail:function(value){var reg=/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;

if(reg.test(value)===false){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("'%1' is not an email address.",(value||"")));
}},string:function(){return qx.util.Validate.checkString;
},checkString:function(value){if(typeof value!=="string"&&(!(value instanceof String))){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 is not a string.",value));
}},url:function(){return qx.util.Validate.checkUrl;
},checkUrl:function(value){var reg=/([A-Za-z0-9])+:\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;

if(reg.test(value)===false){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 is not an url.",value));
}},color:function(){return qx.util.Validate.checkColor;
},checkColor:function(value){try{qx.util.ColorUtil.stringToRgb(value);
}catch(e){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 is not a color! %2",value,e));
}},range:function(from,to){return function(value){if(value<from||value>to){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 is not in the range from [%2, %3].",value,from,to));
}};
},inArray:function(array){return function(value){if(array.indexOf(value)===-1){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 is not in %2",value,array));
}};
},regExp:function(reg){return function(value){if(reg.test(value)===false){throw new qx.core.ValidationError("Validation Error",qx.locale.Manager.tr("%1 does not fit %2.",value,reg));
}};
}}});
qx.Class.define("qx.util.EditDistance",{statics:{OPERATION_DELETE:1,OPERATION_INSERT:2,OPERATION_REPLACE:3,__computeLevenshteinDistance:function(dataA,dataB){var distance=[];
var posA,posB,cost;

for(posA=0;posA<=dataA.length;posA++){distance[posA]=[];
distance[posA][0]=posA;
}
for(posB=1;posB<=dataB.length;posB++){distance[0][posB]=posB;
}
for(posA=1;posA<=dataA.length;posA++){for(posB=1;posB<=dataB.length;posB++){cost=dataA[posA-1]===dataB[posB-1]?0:1;

if(distance[posA]===undefined){distance[posA]=[];
}distance[posA][posB]=Math.min(distance[posA-1][posB]+1,distance[posA][posB-1]+1,distance[posA-1][posB-1]+
cost);
}}return distance;
},__computeEditOperations:function(distance,dataA,dataB){var operations=[];
var posA=dataA.length;
var posB=dataB.length;

if(posA===0){for(var i=0;i<posB;i++){operations.push({operation:this.OPERATION_INSERT,pos:i,old:null,value:dataB[i]});
}return operations;
}
if(posB===0){for(var i=posA-1;i>=0;i--){operations.push({operation:this.OPERATION_DELETE,pos:i,old:dataA[i],value:null});
}return operations;
}
while(posA!==0||posB!==0){if(posA!=0&&distance[posA][posB]==distance[posA-1][posB]+1){operations.push({operation:this.OPERATION_DELETE,pos:posA-1,old:dataA[posA-1],value:null});
posA-=1;
}else if(posB!=0&&distance[posA][posB]==distance[posA][posB-1]+1){operations.push({operation:this.OPERATION_INSERT,pos:posA,old:null,value:dataB[posB-1]});
posB-=1;
}else{if(dataA[posA-1]!==dataB[posB-1]){operations.push({operation:this.OPERATION_REPLACE,pos:posA-1,old:dataA[posA-1],value:dataB[posB-1]});
}posA-=1;
posB-=1;
}}return operations;
},getEditOperations:function(dataA,dataB){var distance=this.__computeLevenshteinDistance(dataA,dataB);
var operations=this.__computeEditOperations(distance,dataA,dataB);
return operations;
}}});
qx.Class.define("qx.util.Template",{extend:qx.core.Object,construct:function(content){this.base(arguments);

if(content!=null){this.setContent(content);
}},properties:{content:{check:"String",nullable:true,apply:"_applyContent"}},members:{_applyContent:function(value,old){if(value){this.run=new Function("values","return ['"+value.replace(this.__reg,this.__replace)+"'].join('')");
}else{delete this.run;
}},run:function(values){throw new Error("Please define any content first!");
},__replace:function(match,name){return "',(values."+name+" === undefined ? '' : values."+name+"),'";
},__reg:/\{([\w-]+)}/g}});
qx.Class.define("qx.util.Permutation",{statics:{permute:function(options,callback,context){var keys=qx.lang.Object.getKeys(options);
var map={};
var indices=[];

for(var i=0;i<keys.length;i++){indices[i]=0;
var key=keys[i];
map[key]=options[key][0];
}var _perm=function(index,ignore){if(index>=keys.length){return;
}var key=keys[index];
var values=options[key];

for(var i=0;i<values.length;i++){if(ignore!==i){indices[index]=i;
map[key]=values[i];
callback.call(context||window,map);
}_perm(index+1,indices[index+1]);
}};
_perm(0,-1);
}}});
qx.Class.define("qx.xml.String",{statics:{TO_CHARCODE:{"quot":34,"amp":38,"lt":60,"gt":62,"apos":39},FROM_CHARCODE:{34:"quot",38:"amp",60:"lt",62:"gt",39:"apos"},escape:function(str){return qx.util.StringEscape.escape(str,this.FROM_CHARCODE);
},unescape:function(str){return qx.util.StringEscape.unescape(str,this.TO_CHARCODE);
}}});
qx.Class.define("qx.xml.Element",{statics:{serialize:function(element){if(qx.dom.Node.isDocument(element)){element=element.documentElement;
}
if(window.XMLSerializer){return (new XMLSerializer()).serializeToString(element);
}else{return element.xml||element.outerHTML;
}},selectSingleNode:qx.core.Variant.select("qx.client",{"mshtml":function(element,query,namespaces){if(namespaces){var namespaceString="";

for(var prefix in namespaces){namespaceString+="xmlns:"+prefix+"='"+namespaces[prefix]+"' ";
}if(element.ownerDocument){element.ownerDocument.setProperty("SelectionNamespaces",namespaceString);
}else{element.setProperty("SelectionNamespaces",namespaceString);
}}return element.selectSingleNode(query);
},"default":function(element,query,namespaces){if(!this.__xpe){this.__xpe=new XPathEvaluator();
}var xpe=this.__xpe;
var resolver;

if(namespaces){resolver=function(prefix){return namespaces[prefix]||null;
};
}else{resolver=xpe.createNSResolver(element);
}
try{return xpe.evaluate(query,element,resolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;
}catch(err){throw new Error("selectSingleNode: query: "+query+", element: "+element+", error: "+err);
}}}),selectNodes:qx.core.Variant.select("qx.client",{"mshtml":function(element,query,namespaces){if(namespaces){var namespaceString="";

for(var prefix in namespaces){namespaceString+="xmlns:"+prefix+"='"+namespaces[prefix]+"' ";
}if(element.ownerDocument){element.ownerDocument.setProperty("SelectionNamespaces",namespaceString);
}else{element.setProperty("SelectionNamespaces",namespaceString);
}}return element.selectNodes(query);
},"default":function(element,query,namespaces){var xpe=this.__xpe;

if(!xpe){this.__xpe=xpe=new XPathEvaluator();
}var resolver;

if(namespaces){resolver=function(prefix){return namespaces[prefix]||null;
};
}else{resolver=xpe.createNSResolver(element);
}
try{var result=xpe.evaluate(query,element,resolver,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);
}catch(err){throw new Error("selectNodes: query: "+query+", element: "+element+", error: "+err);
}var nodes=[];

for(var i=0;i<result.snapshotLength;i++){nodes[i]=result.snapshotItem(i);
}return nodes;
}}),getElementsByTagNameNS:qx.core.Variant.select("qx.client",{"mshtml":function(element,namespaceURI,tagname){var doc=element.ownerDocument||element;
doc.setProperty("SelectionLanguage","XPath");
doc.setProperty("SelectionNamespaces","xmlns:ns='"+namespaceURI+"'");
return qx.xml.Element.selectNodes(element,'descendant-or-self::ns:'+tagname);
},"default":function(element,namespaceURI,tagname){return element.getElementsByTagNameNS(namespaceURI,tagname);
}}),getSingleNodeText:function(element,query){var node=this.selectSingleNode(element,query);
return qx.dom.Node.getText(node);
}}});


qx.$$loader.init();

